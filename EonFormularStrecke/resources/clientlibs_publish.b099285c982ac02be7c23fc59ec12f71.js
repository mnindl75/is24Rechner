/*! jQuery UI - v1.9.2 - 2014-07-26
* http://jqueryui.com
* Includes: jquery.ui.core.js, jquery.ui.widget.js, jquery.ui.mouse.js, jquery.ui.position.js, jquery.ui.selectable.js, jquery.ui.autocomplete.js, jquery.ui.button.js, jquery.ui.datepicker.js, jquery.ui.menu.js, jquery.ui.slider.js, jquery.ui.tabs.js, jquery.ui.tooltip.js, jquery.ui.effect.js, jquery.ui.effect-drop.js, jquery.ui.effect-fade.js, jquery.ui.effect-scale.js, jquery.ui.effect-slide.js
* Copyright 2014 jQuery Foundation and other contributors; Licensed MIT */

(function( $, undefined ) {

var uuid = 0,
	runiqueId = /^ui-id-\d+$/;

// prevent duplicate loading
// this is only a problem because we proxy existing functions
// and we don't want to double proxy them
$.ui = $.ui || {};
if ( $.ui.version ) {
	return;
}

$.extend( $.ui, {
	version: "1.9.2",

	keyCode: {
		BACKSPACE: 8,
		COMMA: 188,
		DELETE: 46,
		DOWN: 40,
		END: 35,
		ENTER: 13,
		ESCAPE: 27,
		HOME: 36,
		LEFT: 37,
		NUMPAD_ADD: 107,
		NUMPAD_DECIMAL: 110,
		NUMPAD_DIVIDE: 111,
		NUMPAD_ENTER: 108,
		NUMPAD_MULTIPLY: 106,
		NUMPAD_SUBTRACT: 109,
		PAGE_DOWN: 34,
		PAGE_UP: 33,
		PERIOD: 190,
		RIGHT: 39,
		SPACE: 32,
		TAB: 9,
		UP: 38
	}
});

// plugins
$.fn.extend({
	_focus: $.fn.focus,
	focus: function( delay, fn ) {
		return typeof delay === "number" ?
			this.each(function() {
				var elem = this;
				setTimeout(function() {
					$( elem ).focus();
					if ( fn ) {
						fn.call( elem );
					}
				}, delay );
			}) :
			this._focus.apply( this, arguments );
	},

	scrollParent: function() {
		var scrollParent;
		if (($.ui.ie && (/(static|relative)/).test(this.css('position'))) || (/absolute/).test(this.css('position'))) {
			scrollParent = this.parents().filter(function() {
				return (/(relative|absolute|fixed)/).test($.css(this,'position')) && (/(auto|scroll)/).test($.css(this,'overflow')+$.css(this,'overflow-y')+$.css(this,'overflow-x'));
			}).eq(0);
		} else {
			scrollParent = this.parents().filter(function() {
				return (/(auto|scroll)/).test($.css(this,'overflow')+$.css(this,'overflow-y')+$.css(this,'overflow-x'));
			}).eq(0);
		}

		return (/fixed/).test(this.css('position')) || !scrollParent.length ? $(document) : scrollParent;
	},

	zIndex: function( zIndex ) {
		if ( zIndex !== undefined ) {
			return this.css( "zIndex", zIndex );
		}

		if ( this.length ) {
			var elem = $( this[ 0 ] ), position, value;
			while ( elem.length && elem[ 0 ] !== document ) {
				// Ignore z-index if position is set to a value where z-index is ignored by the browser
				// This makes behavior of this function consistent across browsers
				// WebKit always returns auto if the element is positioned
				position = elem.css( "position" );
				if ( position === "absolute" || position === "relative" || position === "fixed" ) {
					// IE returns 0 when zIndex is not specified
					// other browsers return a string
					// we ignore the case of nested elements with an explicit value of 0
					// <div style="z-index: -10;"><div style="z-index: 0;"></div></div>
					value = parseInt( elem.css( "zIndex" ), 10 );
					if ( !isNaN( value ) && value !== 0 ) {
						return value;
					}
				}
				elem = elem.parent();
			}
		}

		return 0;
	},

	uniqueId: function() {
		return this.each(function() {
			if ( !this.id ) {
				this.id = "ui-id-" + (++uuid);
			}
		});
	},

	removeUniqueId: function() {
		return this.each(function() {
			if ( runiqueId.test( this.id ) ) {
				$( this ).removeAttr( "id" );
			}
		});
	}
});

// selectors
function focusable( element, isTabIndexNotNaN ) {
	var map, mapName, img,
		nodeName = element.nodeName.toLowerCase();
	if ( "area" === nodeName ) {
		map = element.parentNode;
		mapName = map.name;
		if ( !element.href || !mapName || map.nodeName.toLowerCase() !== "map" ) {
			return false;
		}
		img = $( "img[usemap=#" + mapName + "]" )[0];
		return !!img && visible( img );
	}
	return ( /input|select|textarea|button|object/.test( nodeName ) ?
		!element.disabled :
		"a" === nodeName ?
			element.href || isTabIndexNotNaN :
			isTabIndexNotNaN) &&
		// the element and all of its ancestors must be visible
		visible( element );
}

function visible( element ) {
	return $.expr.filters.visible( element ) &&
		!$( element ).parents().andSelf().filter(function() {
			return $.css( this, "visibility" ) === "hidden";
		}).length;
}

$.extend( $.expr[ ":" ], {
	data: $.expr.createPseudo ?
		$.expr.createPseudo(function( dataName ) {
			return function( elem ) {
				return !!$.data( elem, dataName );
			};
		}) :
		// support: jQuery <1.8
		function( elem, i, match ) {
			return !!$.data( elem, match[ 3 ] );
		},

	focusable: function( element ) {
		return focusable( element, !isNaN( $.attr( element, "tabindex" ) ) );
	},

	tabbable: function( element ) {
		var tabIndex = $.attr( element, "tabindex" ),
			isTabIndexNaN = isNaN( tabIndex );
		return ( isTabIndexNaN || tabIndex >= 0 ) && focusable( element, !isTabIndexNaN );
	}
});

// support
$(function() {
	var body = document.body,
		div = body.appendChild( div = document.createElement( "div" ) );

	// access offsetHeight before setting the style to prevent a layout bug
	// in IE 9 which causes the element to continue to take up space even
	// after it is removed from the DOM (#8026)
	div.offsetHeight;

	$.extend( div.style, {
		minHeight: "100px",
		height: "auto",
		padding: 0,
		borderWidth: 0
	});

	$.support.minHeight = div.offsetHeight === 100;
	$.support.selectstart = "onselectstart" in div;

	// set display to none to avoid a layout bug in IE
	// http://dev.jquery.com/ticket/4014
	body.removeChild( div ).style.display = "none";
});

// support: jQuery <1.8
if ( !$( "<a>" ).outerWidth( 1 ).jquery ) {
	$.each( [ "Width", "Height" ], function( i, name ) {
		var side = name === "Width" ? [ "Left", "Right" ] : [ "Top", "Bottom" ],
			type = name.toLowerCase(),
			orig = {
				innerWidth: $.fn.innerWidth,
				innerHeight: $.fn.innerHeight,
				outerWidth: $.fn.outerWidth,
				outerHeight: $.fn.outerHeight
			};

		function reduce( elem, size, border, margin ) {
			$.each( side, function() {
				size -= parseFloat( $.css( elem, "padding" + this ) ) || 0;
				if ( border ) {
					size -= parseFloat( $.css( elem, "border" + this + "Width" ) ) || 0;
				}
				if ( margin ) {
					size -= parseFloat( $.css( elem, "margin" + this ) ) || 0;
				}
			});
			return size;
		}

		$.fn[ "inner" + name ] = function( size ) {
			if ( size === undefined ) {
				return orig[ "inner" + name ].call( this );
			}

			return this.each(function() {
				$( this ).css( type, reduce( this, size ) + "px" );
			});
		};

		$.fn[ "outer" + name] = function( size, margin ) {
			if ( typeof size !== "number" ) {
				return orig[ "outer" + name ].call( this, size );
			}

			return this.each(function() {
				$( this).css( type, reduce( this, size, true, margin ) + "px" );
			});
		};
	});
}

// support: jQuery 1.6.1, 1.6.2 (http://bugs.jquery.com/ticket/9413)
if ( $( "<a>" ).data( "a-b", "a" ).removeData( "a-b" ).data( "a-b" ) ) {
	$.fn.removeData = (function( removeData ) {
		return function( key ) {
			if ( arguments.length ) {
				return removeData.call( this, $.camelCase( key ) );
			} else {
				return removeData.call( this );
			}
		};
	})( $.fn.removeData );
}





// deprecated

(function() {
	var uaMatch = /msie ([\w.]+)/.exec( navigator.userAgent.toLowerCase() ) || [];
	$.ui.ie = uaMatch.length ? true : false;
	$.ui.ie6 = parseFloat( uaMatch[ 1 ], 10 ) === 6;
})();

$.fn.extend({
	disableSelection: function() {
		return this.bind( ( $.support.selectstart ? "selectstart" : "mousedown" ) +
			".ui-disableSelection", function( event ) {
				event.preventDefault();
			});
	},

	enableSelection: function() {
		return this.unbind( ".ui-disableSelection" );
	}
});

$.extend( $.ui, {
	// $.ui.plugin is deprecated.  Use the proxy pattern instead.
	plugin: {
		add: function( module, option, set ) {
			var i,
				proto = $.ui[ module ].prototype;
			for ( i in set ) {
				proto.plugins[ i ] = proto.plugins[ i ] || [];
				proto.plugins[ i ].push( [ option, set[ i ] ] );
			}
		},
		call: function( instance, name, args ) {
			var i,
				set = instance.plugins[ name ];
			if ( !set || !instance.element[ 0 ].parentNode || instance.element[ 0 ].parentNode.nodeType === 11 ) {
				return;
			}

			for ( i = 0; i < set.length; i++ ) {
				if ( instance.options[ set[ i ][ 0 ] ] ) {
					set[ i ][ 1 ].apply( instance.element, args );
				}
			}
		}
	},

	contains: $.contains,

	// only used by resizable
	hasScroll: function( el, a ) {

		//If overflow is hidden, the element might have extra content, but the user wants to hide it
		if ( $( el ).css( "overflow" ) === "hidden") {
			return false;
		}

		var scroll = ( a && a === "left" ) ? "scrollLeft" : "scrollTop",
			has = false;

		if ( el[ scroll ] > 0 ) {
			return true;
		}

		// TODO: determine which cases actually cause this to happen
		// if the element doesn't have the scroll set, see if it's possible to
		// set the scroll
		el[ scroll ] = 1;
		has = ( el[ scroll ] > 0 );
		el[ scroll ] = 0;
		return has;
	},

	// these are odd functions, fix the API or move into individual plugins
	isOverAxis: function( x, reference, size ) {
		//Determines when x coordinate is over "b" element axis
		return ( x > reference ) && ( x < ( reference + size ) );
	},
	isOver: function( y, x, top, left, height, width ) {
		//Determines when x, y coordinates is over "b" element
		return $.ui.isOverAxis( y, top, height ) && $.ui.isOverAxis( x, left, width );
	}
});

})( jQuery );
(function( $, undefined ) {

var uuid = 0,
	slice = Array.prototype.slice,
	_cleanData = $.cleanData;
$.cleanData = function( elems ) {
	for ( var i = 0, elem; (elem = elems[i]) != null; i++ ) {
		try {
			$( elem ).triggerHandler( "remove" );
		// http://bugs.jquery.com/ticket/8235
		} catch( e ) {}
	}
	_cleanData( elems );
};

$.widget = function( name, base, prototype ) {
	var fullName, existingConstructor, constructor, basePrototype,
		namespace = name.split( "." )[ 0 ];

	name = name.split( "." )[ 1 ];
	fullName = namespace + "-" + name;

	if ( !prototype ) {
		prototype = base;
		base = $.Widget;
	}

	// create selector for plugin
	$.expr[ ":" ][ fullName.toLowerCase() ] = function( elem ) {
		return !!$.data( elem, fullName );
	};

	$[ namespace ] = $[ namespace ] || {};
	existingConstructor = $[ namespace ][ name ];
	constructor = $[ namespace ][ name ] = function( options, element ) {
		// allow instantiation without "new" keyword
		if ( !this._createWidget ) {
			return new constructor( options, element );
		}

		// allow instantiation without initializing for simple inheritance
		// must use "new" keyword (the code above always passes args)
		if ( arguments.length ) {
			this._createWidget( options, element );
		}
	};
	// extend with the existing constructor to carry over any static properties
	$.extend( constructor, existingConstructor, {
		version: prototype.version,
		// copy the object used to create the prototype in case we need to
		// redefine the widget later
		_proto: $.extend( {}, prototype ),
		// track widgets that inherit from this widget in case this widget is
		// redefined after a widget inherits from it
		_childConstructors: []
	});

	basePrototype = new base();
	// we need to make the options hash a property directly on the new instance
	// otherwise we'll modify the options hash on the prototype that we're
	// inheriting from
	basePrototype.options = $.widget.extend( {}, basePrototype.options );
	$.each( prototype, function( prop, value ) {
		if ( $.isFunction( value ) ) {
			prototype[ prop ] = (function() {
				var _super = function() {
						return base.prototype[ prop ].apply( this, arguments );
					},
					_superApply = function( args ) {
						return base.prototype[ prop ].apply( this, args );
					};
				return function() {
					var __super = this._super,
						__superApply = this._superApply,
						returnValue;

					this._super = _super;
					this._superApply = _superApply;

					returnValue = value.apply( this, arguments );

					this._super = __super;
					this._superApply = __superApply;

					return returnValue;
				};
			})();
		}
	});
	constructor.prototype = $.widget.extend( basePrototype, {
		// TODO: remove support for widgetEventPrefix
		// always use the name + a colon as the prefix, e.g., draggable:start
		// don't prefix for widgets that aren't DOM-based
		widgetEventPrefix: existingConstructor ? basePrototype.widgetEventPrefix : name
	}, prototype, {
		constructor: constructor,
		namespace: namespace,
		widgetName: name,
		// TODO remove widgetBaseClass, see #8155
		widgetBaseClass: fullName,
		widgetFullName: fullName
	});

	// If this widget is being redefined then we need to find all widgets that
	// are inheriting from it and redefine all of them so that they inherit from
	// the new version of this widget. We're essentially trying to replace one
	// level in the prototype chain.
	if ( existingConstructor ) {
		$.each( existingConstructor._childConstructors, function( i, child ) {
			var childPrototype = child.prototype;

			// redefine the child widget using the same prototype that was
			// originally used, but inherit from the new version of the base
			$.widget( childPrototype.namespace + "." + childPrototype.widgetName, constructor, child._proto );
		});
		// remove the list of existing child constructors from the old constructor
		// so the old child constructors can be garbage collected
		delete existingConstructor._childConstructors;
	} else {
		base._childConstructors.push( constructor );
	}

	$.widget.bridge( name, constructor );
};

$.widget.extend = function( target ) {
	var input = slice.call( arguments, 1 ),
		inputIndex = 0,
		inputLength = input.length,
		key,
		value;
	for ( ; inputIndex < inputLength; inputIndex++ ) {
		for ( key in input[ inputIndex ] ) {
			value = input[ inputIndex ][ key ];
			if ( input[ inputIndex ].hasOwnProperty( key ) && value !== undefined ) {
				// Clone objects
				if ( $.isPlainObject( value ) ) {
					target[ key ] = $.isPlainObject( target[ key ] ) ?
						$.widget.extend( {}, target[ key ], value ) :
						// Don't extend strings, arrays, etc. with objects
						$.widget.extend( {}, value );
				// Copy everything else by reference
				} else {
					target[ key ] = value;
				}
			}
		}
	}
	return target;
};

$.widget.bridge = function( name, object ) {
	var fullName = object.prototype.widgetFullName || name;
	$.fn[ name ] = function( options ) {
		var isMethodCall = typeof options === "string",
			args = slice.call( arguments, 1 ),
			returnValue = this;

		// allow multiple hashes to be passed on init
		options = !isMethodCall && args.length ?
			$.widget.extend.apply( null, [ options ].concat(args) ) :
			options;

		if ( isMethodCall ) {
			this.each(function() {
				var methodValue,
					instance = $.data( this, fullName );
				if ( !instance ) {
					return $.error( "cannot call methods on " + name + " prior to initialization; " +
						"attempted to call method '" + options + "'" );
				}
				if ( !$.isFunction( instance[options] ) || options.charAt( 0 ) === "_" ) {
					return $.error( "no such method '" + options + "' for " + name + " widget instance" );
				}
				methodValue = instance[ options ].apply( instance, args );
				if ( methodValue !== instance && methodValue !== undefined ) {
					returnValue = methodValue && methodValue.jquery ?
						returnValue.pushStack( methodValue.get() ) :
						methodValue;
					return false;
				}
			});
		} else {
			this.each(function() {
				var instance = $.data( this, fullName );
				if ( instance ) {
					instance.option( options || {} )._init();
				} else {
					$.data( this, fullName, new object( options, this ) );
				}
			});
		}

		return returnValue;
	};
};

$.Widget = function( /* options, element */ ) {};
$.Widget._childConstructors = [];

$.Widget.prototype = {
	widgetName: "widget",
	widgetEventPrefix: "",
	defaultElement: "<div>",
	options: {
		disabled: false,

		// callbacks
		create: null
	},
	_createWidget: function( options, element ) {
		element = $( element || this.defaultElement || this )[ 0 ];
		this.element = $( element );
		this.uuid = uuid++;
		this.eventNamespace = "." + this.widgetName + this.uuid;
		this.options = $.widget.extend( {},
			this.options,
			this._getCreateOptions(),
			options );

		this.bindings = $();
		this.hoverable = $();
		this.focusable = $();

		if ( element !== this ) {
			// 1.9 BC for #7810
			// TODO remove dual storage
			$.data( element, this.widgetName, this );
			$.data( element, this.widgetFullName, this );
			this._on( true, this.element, {
				remove: function( event ) {
					if ( event.target === element ) {
						this.destroy();
					}
				}
			});
			this.document = $( element.style ?
				// element within the document
				element.ownerDocument :
				// element is window or document
				element.document || element );
			this.window = $( this.document[0].defaultView || this.document[0].parentWindow );
		}

		this._create();
		this._trigger( "create", null, this._getCreateEventData() );
		this._init();
	},
	_getCreateOptions: $.noop,
	_getCreateEventData: $.noop,
	_create: $.noop,
	_init: $.noop,

	destroy: function() {
		this._destroy();
		// we can probably remove the unbind calls in 2.0
		// all event bindings should go through this._on()
		this.element
			.unbind( this.eventNamespace )
			// 1.9 BC for #7810
			// TODO remove dual storage
			.removeData( this.widgetName )
			.removeData( this.widgetFullName )
			// support: jquery <1.6.3
			// http://bugs.jquery.com/ticket/9413
			.removeData( $.camelCase( this.widgetFullName ) );
		this.widget()
			.unbind( this.eventNamespace )
			.removeAttr( "aria-disabled" )
			.removeClass(
				this.widgetFullName + "-disabled " +
				"ui-state-disabled" );

		// clean up events and states
		this.bindings.unbind( this.eventNamespace );
		this.hoverable.removeClass( "ui-state-hover" );
		this.focusable.removeClass( "ui-state-focus" );
	},
	_destroy: $.noop,

	widget: function() {
		return this.element;
	},

	option: function( key, value ) {
		var options = key,
			parts,
			curOption,
			i;

		if ( arguments.length === 0 ) {
			// don't return a reference to the internal hash
			return $.widget.extend( {}, this.options );
		}

		if ( typeof key === "string" ) {
			// handle nested keys, e.g., "foo.bar" => { foo: { bar: ___ } }
			options = {};
			parts = key.split( "." );
			key = parts.shift();
			if ( parts.length ) {
				curOption = options[ key ] = $.widget.extend( {}, this.options[ key ] );
				for ( i = 0; i < parts.length - 1; i++ ) {
					curOption[ parts[ i ] ] = curOption[ parts[ i ] ] || {};
					curOption = curOption[ parts[ i ] ];
				}
				key = parts.pop();
				if ( value === undefined ) {
					return curOption[ key ] === undefined ? null : curOption[ key ];
				}
				curOption[ key ] = value;
			} else {
				if ( value === undefined ) {
					return this.options[ key ] === undefined ? null : this.options[ key ];
				}
				options[ key ] = value;
			}
		}

		this._setOptions( options );

		return this;
	},
	_setOptions: function( options ) {
		var key;

		for ( key in options ) {
			this._setOption( key, options[ key ] );
		}

		return this;
	},
	_setOption: function( key, value ) {
		this.options[ key ] = value;

		if ( key === "disabled" ) {
			this.widget()
				.toggleClass( this.widgetFullName + "-disabled ui-state-disabled", !!value )
				.attr( "aria-disabled", value );
			this.hoverable.removeClass( "ui-state-hover" );
			this.focusable.removeClass( "ui-state-focus" );
		}

		return this;
	},

	enable: function() {
		return this._setOption( "disabled", false );
	},
	disable: function() {
		return this._setOption( "disabled", true );
	},

	_on: function( suppressDisabledCheck, element, handlers ) {
		var delegateElement,
			instance = this;

		// no suppressDisabledCheck flag, shuffle arguments
		if ( typeof suppressDisabledCheck !== "boolean" ) {
			handlers = element;
			element = suppressDisabledCheck;
			suppressDisabledCheck = false;
		}

		// no element argument, shuffle and use this.element
		if ( !handlers ) {
			handlers = element;
			element = this.element;
			delegateElement = this.widget();
		} else {
			// accept selectors, DOM elements
			element = delegateElement = $( element );
			this.bindings = this.bindings.add( element );
		}

		$.each( handlers, function( event, handler ) {
			function handlerProxy() {
				// allow widgets to customize the disabled handling
				// - disabled as an array instead of boolean
				// - disabled class as method for disabling individual parts
				if ( !suppressDisabledCheck &&
						( instance.options.disabled === true ||
							$( this ).hasClass( "ui-state-disabled" ) ) ) {
					return;
				}
				return ( typeof handler === "string" ? instance[ handler ] : handler )
					.apply( instance, arguments );
			}

			// copy the guid so direct unbinding works
			if ( typeof handler !== "string" ) {
				handlerProxy.guid = handler.guid =
					handler.guid || handlerProxy.guid || $.guid++;
			}

			var match = event.match( /^(\w+)\s*(.*)$/ ),
				eventName = match[1] + instance.eventNamespace,
				selector = match[2];
			if ( selector ) {
				delegateElement.delegate( selector, eventName, handlerProxy );
			} else {
				element.bind( eventName, handlerProxy );
			}
		});
	},

	_off: function( element, eventName ) {
		eventName = (eventName || "").split( " " ).join( this.eventNamespace + " " ) + this.eventNamespace;
		element.unbind( eventName ).undelegate( eventName );
	},

	_delay: function( handler, delay ) {
		function handlerProxy() {
			return ( typeof handler === "string" ? instance[ handler ] : handler )
				.apply( instance, arguments );
		}
		var instance = this;
		return setTimeout( handlerProxy, delay || 0 );
	},

	_hoverable: function( element ) {
		this.hoverable = this.hoverable.add( element );
		this._on( element, {
			mouseenter: function( event ) {
				$( event.currentTarget ).addClass( "ui-state-hover" );
			},
			mouseleave: function( event ) {
				$( event.currentTarget ).removeClass( "ui-state-hover" );
			}
		});
	},

	_focusable: function( element ) {
		this.focusable = this.focusable.add( element );
		this._on( element, {
			focusin: function( event ) {
				$( event.currentTarget ).addClass( "ui-state-focus" );
			},
			focusout: function( event ) {
				$( event.currentTarget ).removeClass( "ui-state-focus" );
			}
		});
	},

	_trigger: function( type, event, data ) {
		var prop, orig,
			callback = this.options[ type ];

		data = data || {};
		event = $.Event( event );
		event.type = ( type === this.widgetEventPrefix ?
			type :
			this.widgetEventPrefix + type ).toLowerCase();
		// the original event may come from any element
		// so we need to reset the target on the new event
		event.target = this.element[ 0 ];

		// copy original event properties over to the new event
		orig = event.originalEvent;
		if ( orig ) {
			for ( prop in orig ) {
				if ( !( prop in event ) ) {
					event[ prop ] = orig[ prop ];
				}
			}
		}

		this.element.trigger( event, data );
		return !( $.isFunction( callback ) &&
			callback.apply( this.element[0], [ event ].concat( data ) ) === false ||
			event.isDefaultPrevented() );
	}
};

$.each( { show: "fadeIn", hide: "fadeOut" }, function( method, defaultEffect ) {
	$.Widget.prototype[ "_" + method ] = function( element, options, callback ) {
		if ( typeof options === "string" ) {
			options = { effect: options };
		}
		var hasOptions,
			effectName = !options ?
				method :
				options === true || typeof options === "number" ?
					defaultEffect :
					options.effect || defaultEffect;
		options = options || {};
		if ( typeof options === "number" ) {
			options = { duration: options };
		}
		hasOptions = !$.isEmptyObject( options );
		options.complete = callback;
		if ( options.delay ) {
			element.delay( options.delay );
		}
		if ( hasOptions && $.effects && ( $.effects.effect[ effectName ] || $.uiBackCompat !== false && $.effects[ effectName ] ) ) {
			element[ method ]( options );
		} else if ( effectName !== method && element[ effectName ] ) {
			element[ effectName ]( options.duration, options.easing, callback );
		} else {
			element.queue(function( next ) {
				$( this )[ method ]();
				if ( callback ) {
					callback.call( element[ 0 ] );
				}
				next();
			});
		}
	};
});

// DEPRECATED
if ( $.uiBackCompat !== false ) {
	$.Widget.prototype._getCreateOptions = function() {
		return $.metadata && $.metadata.get( this.element[0] )[ this.widgetName ];
	};
}

})( jQuery );
(function( $, undefined ) {

var mouseHandled = false;
$( document ).mouseup( function( e ) {
	mouseHandled = false;
});

$.widget("ui.mouse", {
	version: "1.9.2",
	options: {
		cancel: 'input,textarea,button,select,option',
		distance: 1,
		delay: 0
	},
	_mouseInit: function() {
		var that = this;

		this.element
			.bind('mousedown.'+this.widgetName, function(event) {
				return that._mouseDown(event);
			})
			.bind('click.'+this.widgetName, function(event) {
				if (true === $.data(event.target, that.widgetName + '.preventClickEvent')) {
					$.removeData(event.target, that.widgetName + '.preventClickEvent');
					event.stopImmediatePropagation();
					return false;
				}
			});

		this.started = false;
	},

	// TODO: make sure destroying one instance of mouse doesn't mess with
	// other instances of mouse
	_mouseDestroy: function() {
		this.element.unbind('.'+this.widgetName);
		if ( this._mouseMoveDelegate ) {
			$(document)
				.unbind('mousemove.'+this.widgetName, this._mouseMoveDelegate)
				.unbind('mouseup.'+this.widgetName, this._mouseUpDelegate);
		}
	},

	_mouseDown: function(event) {
		// don't let more than one widget handle mouseStart
		if( mouseHandled ) { return; }

		// we may have missed mouseup (out of window)
		(this._mouseStarted && this._mouseUp(event));

		this._mouseDownEvent = event;

		var that = this,
			btnIsLeft = (event.which === 1),
			// event.target.nodeName works around a bug in IE 8 with
			// disabled inputs (#7620)
			elIsCancel = (typeof this.options.cancel === "string" && event.target.nodeName ? $(event.target).closest(this.options.cancel).length : false);
		if (!btnIsLeft || elIsCancel || !this._mouseCapture(event)) {
			return true;
		}

		this.mouseDelayMet = !this.options.delay;
		if (!this.mouseDelayMet) {
			this._mouseDelayTimer = setTimeout(function() {
				that.mouseDelayMet = true;
			}, this.options.delay);
		}

		if (this._mouseDistanceMet(event) && this._mouseDelayMet(event)) {
			this._mouseStarted = (this._mouseStart(event) !== false);
			if (!this._mouseStarted) {
				event.preventDefault();
				return true;
			}
		}

		// Click event may never have fired (Gecko & Opera)
		if (true === $.data(event.target, this.widgetName + '.preventClickEvent')) {
			$.removeData(event.target, this.widgetName + '.preventClickEvent');
		}

		// these delegates are required to keep context
		this._mouseMoveDelegate = function(event) {
			return that._mouseMove(event);
		};
		this._mouseUpDelegate = function(event) {
			return that._mouseUp(event);
		};
		$(document)
			.bind('mousemove.'+this.widgetName, this._mouseMoveDelegate)
			.bind('mouseup.'+this.widgetName, this._mouseUpDelegate);

		event.preventDefault();

		mouseHandled = true;
		return true;
	},

	_mouseMove: function(event) {
		// IE mouseup check - mouseup happened when mouse was out of window
		if ($.ui.ie && !(document.documentMode >= 9) && !event.button) {
			return this._mouseUp(event);
		}

		if (this._mouseStarted) {
			this._mouseDrag(event);
			return event.preventDefault();
		}

		if (this._mouseDistanceMet(event) && this._mouseDelayMet(event)) {
			this._mouseStarted =
				(this._mouseStart(this._mouseDownEvent, event) !== false);
			(this._mouseStarted ? this._mouseDrag(event) : this._mouseUp(event));
		}

		return !this._mouseStarted;
	},

	_mouseUp: function(event) {
		$(document)
			.unbind('mousemove.'+this.widgetName, this._mouseMoveDelegate)
			.unbind('mouseup.'+this.widgetName, this._mouseUpDelegate);

		if (this._mouseStarted) {
			this._mouseStarted = false;

			if (event.target === this._mouseDownEvent.target) {
				$.data(event.target, this.widgetName + '.preventClickEvent', true);
			}

			this._mouseStop(event);
		}

		return false;
	},

	_mouseDistanceMet: function(event) {
		return (Math.max(
				Math.abs(this._mouseDownEvent.pageX - event.pageX),
				Math.abs(this._mouseDownEvent.pageY - event.pageY)
			) >= this.options.distance
		);
	},

	_mouseDelayMet: function(event) {
		return this.mouseDelayMet;
	},

	// These are placeholder methods, to be overriden by extending plugin
	_mouseStart: function(event) {},
	_mouseDrag: function(event) {},
	_mouseStop: function(event) {},
	_mouseCapture: function(event) { return true; }
});

})(jQuery);
(function( $, undefined ) {

$.ui = $.ui || {};

var cachedScrollbarWidth,
	max = Math.max,
	abs = Math.abs,
	round = Math.round,
	rhorizontal = /left|center|right/,
	rvertical = /top|center|bottom/,
	roffset = /[\+\-]\d+%?/,
	rposition = /^\w+/,
	rpercent = /%$/,
	_position = $.fn.position;

function getOffsets( offsets, width, height ) {
	return [
		parseInt( offsets[ 0 ], 10 ) * ( rpercent.test( offsets[ 0 ] ) ? width / 100 : 1 ),
		parseInt( offsets[ 1 ], 10 ) * ( rpercent.test( offsets[ 1 ] ) ? height / 100 : 1 )
	];
}
function parseCss( element, property ) {
	return parseInt( $.css( element, property ), 10 ) || 0;
}

$.position = {
	scrollbarWidth: function() {
		if ( cachedScrollbarWidth !== undefined ) {
			return cachedScrollbarWidth;
		}
		var w1, w2,
			div = $( "<div style='display:block;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>" ),
			innerDiv = div.children()[0];

		$( "body" ).append( div );
		w1 = innerDiv.offsetWidth;
		div.css( "overflow", "scroll" );

		w2 = innerDiv.offsetWidth;

		if ( w1 === w2 ) {
			w2 = div[0].clientWidth;
		}

		div.remove();

		return (cachedScrollbarWidth = w1 - w2);
	},
	getScrollInfo: function( within ) {
		var overflowX = within.isWindow ? "" : within.element.css( "overflow-x" ),
			overflowY = within.isWindow ? "" : within.element.css( "overflow-y" ),
			hasOverflowX = overflowX === "scroll" ||
				( overflowX === "auto" && within.width < within.element[0].scrollWidth ),
			hasOverflowY = overflowY === "scroll" ||
				( overflowY === "auto" && within.height < within.element[0].scrollHeight );
		return {
			width: hasOverflowX ? $.position.scrollbarWidth() : 0,
			height: hasOverflowY ? $.position.scrollbarWidth() : 0
		};
	},
	getWithinInfo: function( element ) {
		var withinElement = $( element || window ),
			isWindow = $.isWindow( withinElement[0] );
		return {
			element: withinElement,
			isWindow: isWindow,
			offset: withinElement.offset() || { left: 0, top: 0 },
			scrollLeft: withinElement.scrollLeft(),
			scrollTop: withinElement.scrollTop(),
			width: isWindow ? withinElement.width() : withinElement.outerWidth(),
			height: isWindow ? withinElement.height() : withinElement.outerHeight()
		};
	}
};

$.fn.position = function( options ) {
	if ( !options || !options.of ) {
		return _position.apply( this, arguments );
	}

	// make a copy, we don't want to modify arguments
	options = $.extend( {}, options );

	var atOffset, targetWidth, targetHeight, targetOffset, basePosition,
		target = $( options.of ),
		within = $.position.getWithinInfo( options.within ),
		scrollInfo = $.position.getScrollInfo( within ),
		targetElem = target[0],
		collision = ( options.collision || "flip" ).split( " " ),
		offsets = {};

	if ( targetElem.nodeType === 9 ) {
		targetWidth = target.width();
		targetHeight = target.height();
		targetOffset = { top: 0, left: 0 };
	} else if ( $.isWindow( targetElem ) ) {
		targetWidth = target.width();
		targetHeight = target.height();
		targetOffset = { top: target.scrollTop(), left: target.scrollLeft() };
	} else if ( targetElem.preventDefault ) {
		// force left top to allow flipping
		options.at = "left top";
		targetWidth = targetHeight = 0;
		targetOffset = { top: targetElem.pageY, left: targetElem.pageX };
	} else {
		targetWidth = target.outerWidth();
		targetHeight = target.outerHeight();
		targetOffset = target.offset();
	}
	// clone to reuse original targetOffset later
	basePosition = $.extend( {}, targetOffset );

	// force my and at to have valid horizontal and vertical positions
	// if a value is missing or invalid, it will be converted to center
	$.each( [ "my", "at" ], function() {
		var pos = ( options[ this ] || "" ).split( " " ),
			horizontalOffset,
			verticalOffset;

		if ( pos.length === 1) {
			pos = rhorizontal.test( pos[ 0 ] ) ?
				pos.concat( [ "center" ] ) :
				rvertical.test( pos[ 0 ] ) ?
					[ "center" ].concat( pos ) :
					[ "center", "center" ];
		}
		pos[ 0 ] = rhorizontal.test( pos[ 0 ] ) ? pos[ 0 ] : "center";
		pos[ 1 ] = rvertical.test( pos[ 1 ] ) ? pos[ 1 ] : "center";

		// calculate offsets
		horizontalOffset = roffset.exec( pos[ 0 ] );
		verticalOffset = roffset.exec( pos[ 1 ] );
		offsets[ this ] = [
			horizontalOffset ? horizontalOffset[ 0 ] : 0,
			verticalOffset ? verticalOffset[ 0 ] : 0
		];

		// reduce to just the positions without the offsets
		options[ this ] = [
			rposition.exec( pos[ 0 ] )[ 0 ],
			rposition.exec( pos[ 1 ] )[ 0 ]
		];
	});

	// normalize collision option
	if ( collision.length === 1 ) {
		collision[ 1 ] = collision[ 0 ];
	}

	if ( options.at[ 0 ] === "right" ) {
		basePosition.left += targetWidth;
	} else if ( options.at[ 0 ] === "center" ) {
		basePosition.left += targetWidth / 2;
	}

	if ( options.at[ 1 ] === "bottom" ) {
		basePosition.top += targetHeight;
	} else if ( options.at[ 1 ] === "center" ) {
		basePosition.top += targetHeight / 2;
	}

	atOffset = getOffsets( offsets.at, targetWidth, targetHeight );
	basePosition.left += atOffset[ 0 ];
	basePosition.top += atOffset[ 1 ];

	return this.each(function() {
		var collisionPosition, using,
			elem = $( this ),
			elemWidth = elem.outerWidth(),
			elemHeight = elem.outerHeight(),
			marginLeft = parseCss( this, "marginLeft" ),
			marginTop = parseCss( this, "marginTop" ),
			collisionWidth = elemWidth + marginLeft + parseCss( this, "marginRight" ) + scrollInfo.width,
			collisionHeight = elemHeight + marginTop + parseCss( this, "marginBottom" ) + scrollInfo.height,
			position = $.extend( {}, basePosition ),
			myOffset = getOffsets( offsets.my, elem.outerWidth(), elem.outerHeight() );

		if ( options.my[ 0 ] === "right" ) {
			position.left -= elemWidth;
		} else if ( options.my[ 0 ] === "center" ) {
			position.left -= elemWidth / 2;
		}

		if ( options.my[ 1 ] === "bottom" ) {
			position.top -= elemHeight;
		} else if ( options.my[ 1 ] === "center" ) {
			position.top -= elemHeight / 2;
		}

		position.left += myOffset[ 0 ];
		position.top += myOffset[ 1 ];

		// if the browser doesn't support fractions, then round for consistent results
		if ( !$.support.offsetFractions ) {
			position.left = round( position.left );
			position.top = round( position.top );
		}

		collisionPosition = {
			marginLeft: marginLeft,
			marginTop: marginTop
		};

		$.each( [ "left", "top" ], function( i, dir ) {
			if ( $.ui.position[ collision[ i ] ] ) {
				$.ui.position[ collision[ i ] ][ dir ]( position, {
					targetWidth: targetWidth,
					targetHeight: targetHeight,
					elemWidth: elemWidth,
					elemHeight: elemHeight,
					collisionPosition: collisionPosition,
					collisionWidth: collisionWidth,
					collisionHeight: collisionHeight,
					offset: [ atOffset[ 0 ] + myOffset[ 0 ], atOffset [ 1 ] + myOffset[ 1 ] ],
					my: options.my,
					at: options.at,
					within: within,
					elem : elem
				});
			}
		});

		if ( $.fn.bgiframe ) {
			elem.bgiframe();
		}

		if ( options.using ) {
			// adds feedback as second argument to using callback, if present
			using = function( props ) {
				var left = targetOffset.left - position.left,
					right = left + targetWidth - elemWidth,
					top = targetOffset.top - position.top,
					bottom = top + targetHeight - elemHeight,
					feedback = {
						target: {
							element: target,
							left: targetOffset.left,
							top: targetOffset.top,
							width: targetWidth,
							height: targetHeight
						},
						element: {
							element: elem,
							left: position.left,
							top: position.top,
							width: elemWidth,
							height: elemHeight
						},
						horizontal: right < 0 ? "left" : left > 0 ? "right" : "center",
						vertical: bottom < 0 ? "top" : top > 0 ? "bottom" : "middle"
					};
				if ( targetWidth < elemWidth && abs( left + right ) < targetWidth ) {
					feedback.horizontal = "center";
				}
				if ( targetHeight < elemHeight && abs( top + bottom ) < targetHeight ) {
					feedback.vertical = "middle";
				}
				if ( max( abs( left ), abs( right ) ) > max( abs( top ), abs( bottom ) ) ) {
					feedback.important = "horizontal";
				} else {
					feedback.important = "vertical";
				}
				options.using.call( this, props, feedback );
			};
		}

		elem.offset( $.extend( position, { using: using } ) );
	});
};

$.ui.position = {
	fit: {
		left: function( position, data ) {
			var within = data.within,
				withinOffset = within.isWindow ? within.scrollLeft : within.offset.left,
				outerWidth = within.width,
				collisionPosLeft = position.left - data.collisionPosition.marginLeft,
				overLeft = withinOffset - collisionPosLeft,
				overRight = collisionPosLeft + data.collisionWidth - outerWidth - withinOffset,
				newOverRight;

			// element is wider than within
			if ( data.collisionWidth > outerWidth ) {
				// element is initially over the left side of within
				if ( overLeft > 0 && overRight <= 0 ) {
					newOverRight = position.left + overLeft + data.collisionWidth - outerWidth - withinOffset;
					position.left += overLeft - newOverRight;
				// element is initially over right side of within
				} else if ( overRight > 0 && overLeft <= 0 ) {
					position.left = withinOffset;
				// element is initially over both left and right sides of within
				} else {
					if ( overLeft > overRight ) {
						position.left = withinOffset + outerWidth - data.collisionWidth;
					} else {
						position.left = withinOffset;
					}
				}
			// too far left -> align with left edge
			} else if ( overLeft > 0 ) {
				position.left += overLeft;
			// too far right -> align with right edge
			} else if ( overRight > 0 ) {
				position.left -= overRight;
			// adjust based on position and margin
			} else {
				position.left = max( position.left - collisionPosLeft, position.left );
			}
		},
		top: function( position, data ) {
			var within = data.within,
				withinOffset = within.isWindow ? within.scrollTop : within.offset.top,
				outerHeight = data.within.height,
				collisionPosTop = position.top - data.collisionPosition.marginTop,
				overTop = withinOffset - collisionPosTop,
				overBottom = collisionPosTop + data.collisionHeight - outerHeight - withinOffset,
				newOverBottom;

			// element is taller than within
			if ( data.collisionHeight > outerHeight ) {
				// element is initially over the top of within
				if ( overTop > 0 && overBottom <= 0 ) {
					newOverBottom = position.top + overTop + data.collisionHeight - outerHeight - withinOffset;
					position.top += overTop - newOverBottom;
				// element is initially over bottom of within
				} else if ( overBottom > 0 && overTop <= 0 ) {
					position.top = withinOffset;
				// element is initially over both top and bottom of within
				} else {
					if ( overTop > overBottom ) {
						position.top = withinOffset + outerHeight - data.collisionHeight;
					} else {
						position.top = withinOffset;
					}
				}
			// too far up -> align with top
			} else if ( overTop > 0 ) {
				position.top += overTop;
			// too far down -> align with bottom edge
			} else if ( overBottom > 0 ) {
				position.top -= overBottom;
			// adjust based on position and margin
			} else {
				position.top = max( position.top - collisionPosTop, position.top );
			}
		}
	},
	flip: {
		left: function( position, data ) {
			var within = data.within,
				withinOffset = within.offset.left + within.scrollLeft,
				outerWidth = within.width,
				offsetLeft = within.isWindow ? within.scrollLeft : within.offset.left,
				collisionPosLeft = position.left - data.collisionPosition.marginLeft,
				overLeft = collisionPosLeft - offsetLeft,
				overRight = collisionPosLeft + data.collisionWidth - outerWidth - offsetLeft,
				myOffset = data.my[ 0 ] === "left" ?
					-data.elemWidth :
					data.my[ 0 ] === "right" ?
						data.elemWidth :
						0,
				atOffset = data.at[ 0 ] === "left" ?
					data.targetWidth :
					data.at[ 0 ] === "right" ?
						-data.targetWidth :
						0,
				offset = -2 * data.offset[ 0 ],
				newOverRight,
				newOverLeft;

			if ( overLeft < 0 ) {
				newOverRight = position.left + myOffset + atOffset + offset + data.collisionWidth - outerWidth - withinOffset;
				if ( newOverRight < 0 || newOverRight < abs( overLeft ) ) {
					position.left += myOffset + atOffset + offset;
				}
			}
			else if ( overRight > 0 ) {
				newOverLeft = position.left - data.collisionPosition.marginLeft + myOffset + atOffset + offset - offsetLeft;
				if ( newOverLeft > 0 || abs( newOverLeft ) < overRight ) {
					position.left += myOffset + atOffset + offset;
				}
			}
		},
		top: function( position, data ) {
			var within = data.within,
				withinOffset = within.offset.top + within.scrollTop,
				outerHeight = within.height,
				offsetTop = within.isWindow ? within.scrollTop : within.offset.top,
				collisionPosTop = position.top - data.collisionPosition.marginTop,
				overTop = collisionPosTop - offsetTop,
				overBottom = collisionPosTop + data.collisionHeight - outerHeight - offsetTop,
				top = data.my[ 1 ] === "top",
				myOffset = top ?
					-data.elemHeight :
					data.my[ 1 ] === "bottom" ?
						data.elemHeight :
						0,
				atOffset = data.at[ 1 ] === "top" ?
					data.targetHeight :
					data.at[ 1 ] === "bottom" ?
						-data.targetHeight :
						0,
				offset = -2 * data.offset[ 1 ],
				newOverTop,
				newOverBottom;
			if ( overTop < 0 ) {
				newOverBottom = position.top + myOffset + atOffset + offset + data.collisionHeight - outerHeight - withinOffset;
				if ( ( position.top + myOffset + atOffset + offset) > overTop && ( newOverBottom < 0 || newOverBottom < abs( overTop ) ) ) {
					position.top += myOffset + atOffset + offset;
				}
			}
			else if ( overBottom > 0 ) {
				newOverTop = position.top -  data.collisionPosition.marginTop + myOffset + atOffset + offset - offsetTop;
				if ( ( position.top + myOffset + atOffset + offset) > overBottom && ( newOverTop > 0 || abs( newOverTop ) < overBottom ) ) {
					position.top += myOffset + atOffset + offset;
				}
			}
		}
	},
	flipfit: {
		left: function() {
			$.ui.position.flip.left.apply( this, arguments );
			$.ui.position.fit.left.apply( this, arguments );
		},
		top: function() {
			$.ui.position.flip.top.apply( this, arguments );
			$.ui.position.fit.top.apply( this, arguments );
		}
	}
};

// fraction support test
(function () {
	var testElement, testElementParent, testElementStyle, offsetLeft, i,
		body = document.getElementsByTagName( "body" )[ 0 ],
		div = document.createElement( "div" );

	//Create a "fake body" for testing based on method used in jQuery.support
	testElement = document.createElement( body ? "div" : "body" );
	testElementStyle = {
		visibility: "hidden",
		width: 0,
		height: 0,
		border: 0,
		margin: 0,
		background: "none"
	};
	if ( body ) {
		$.extend( testElementStyle, {
			position: "absolute",
			left: "-1000px",
			top: "-1000px"
		});
	}
	for ( i in testElementStyle ) {
		testElement.style[ i ] = testElementStyle[ i ];
	}
	testElement.appendChild( div );
	testElementParent = body || document.documentElement;
	testElementParent.insertBefore( testElement, testElementParent.firstChild );

	div.style.cssText = "position: absolute; left: 10.7432222px;";

	offsetLeft = $( div ).offset().left;
	$.support.offsetFractions = offsetLeft > 10 && offsetLeft < 11;

	testElement.innerHTML = "";
	testElementParent.removeChild( testElement );
})();

// DEPRECATED
if ( $.uiBackCompat !== false ) {
	// offset option
	(function( $ ) {
		var _position = $.fn.position;
		$.fn.position = function( options ) {
			if ( !options || !options.offset ) {
				return _position.call( this, options );
			}
			var offset = options.offset.split( " " ),
				at = options.at.split( " " );
			if ( offset.length === 1 ) {
				offset[ 1 ] = offset[ 0 ];
			}
			if ( /^\d/.test( offset[ 0 ] ) ) {
				offset[ 0 ] = "+" + offset[ 0 ];
			}
			if ( /^\d/.test( offset[ 1 ] ) ) {
				offset[ 1 ] = "+" + offset[ 1 ];
			}
			if ( at.length === 1 ) {
				if ( /left|center|right/.test( at[ 0 ] ) ) {
					at[ 1 ] = "center";
				} else {
					at[ 1 ] = at[ 0 ];
					at[ 0 ] = "center";
				}
			}
			return _position.call( this, $.extend( options, {
				at: at[ 0 ] + offset[ 0 ] + " " + at[ 1 ] + offset[ 1 ],
				offset: undefined
			} ) );
		};
	}( jQuery ) );
}

}( jQuery ) );
(function( $, undefined ) {

$.widget("ui.selectable", $.ui.mouse, {
	version: "1.9.2",
	options: {
		appendTo: 'body',
		autoRefresh: true,
		distance: 0,
		filter: '*',
		tolerance: 'touch'
	},
	_create: function() {
		var that = this;

		this.element.addClass("ui-selectable");

		this.dragged = false;

		// cache selectee children based on filter
		var selectees;
		this.refresh = function() {
			selectees = $(that.options.filter, that.element[0]);
			selectees.addClass("ui-selectee");
			selectees.each(function() {
				var $this = $(this);
				var pos = $this.offset();
				$.data(this, "selectable-item", {
					element: this,
					$element: $this,
					left: pos.left,
					top: pos.top,
					right: pos.left + $this.outerWidth(),
					bottom: pos.top + $this.outerHeight(),
					startselected: false,
					selected: $this.hasClass('ui-selected'),
					selecting: $this.hasClass('ui-selecting'),
					unselecting: $this.hasClass('ui-unselecting')
				});
			});
		};
		this.refresh();

		this.selectees = selectees.addClass("ui-selectee");

		this._mouseInit();

		this.helper = $("<div class='ui-selectable-helper'></div>");
	},

	_destroy: function() {
		this.selectees
			.removeClass("ui-selectee")
			.removeData("selectable-item");
		this.element
			.removeClass("ui-selectable ui-selectable-disabled");
		this._mouseDestroy();
	},

	_mouseStart: function(event) {
		var that = this;

		this.opos = [event.pageX, event.pageY];

		if (this.options.disabled)
			return;

		var options = this.options;

		this.selectees = $(options.filter, this.element[0]);

		this._trigger("start", event);

		$(options.appendTo).append(this.helper);
		// position helper (lasso)
		this.helper.css({
			"left": event.clientX,
			"top": event.clientY,
			"width": 0,
			"height": 0
		});

		if (options.autoRefresh) {
			this.refresh();
		}

		this.selectees.filter('.ui-selected').each(function() {
			var selectee = $.data(this, "selectable-item");
			selectee.startselected = true;
			if (!event.metaKey && !event.ctrlKey) {
				selectee.$element.removeClass('ui-selected');
				selectee.selected = false;
				selectee.$element.addClass('ui-unselecting');
				selectee.unselecting = true;
				// selectable UNSELECTING callback
				that._trigger("unselecting", event, {
					unselecting: selectee.element
				});
			}
		});

		$(event.target).parents().andSelf().each(function() {
			var selectee = $.data(this, "selectable-item");
			if (selectee) {
				var doSelect = (!event.metaKey && !event.ctrlKey) || !selectee.$element.hasClass('ui-selected');
				selectee.$element
					.removeClass(doSelect ? "ui-unselecting" : "ui-selected")
					.addClass(doSelect ? "ui-selecting" : "ui-unselecting");
				selectee.unselecting = !doSelect;
				selectee.selecting = doSelect;
				selectee.selected = doSelect;
				// selectable (UN)SELECTING callback
				if (doSelect) {
					that._trigger("selecting", event, {
						selecting: selectee.element
					});
				} else {
					that._trigger("unselecting", event, {
						unselecting: selectee.element
					});
				}
				return false;
			}
		});

	},

	_mouseDrag: function(event) {
		var that = this;
		this.dragged = true;

		if (this.options.disabled)
			return;

		var options = this.options;

		var x1 = this.opos[0], y1 = this.opos[1], x2 = event.pageX, y2 = event.pageY;
		if (x1 > x2) { var tmp = x2; x2 = x1; x1 = tmp; }
		if (y1 > y2) { var tmp = y2; y2 = y1; y1 = tmp; }
		this.helper.css({left: x1, top: y1, width: x2-x1, height: y2-y1});

		this.selectees.each(function() {
			var selectee = $.data(this, "selectable-item");
			//prevent helper from being selected if appendTo: selectable
			if (!selectee || selectee.element == that.element[0])
				return;
			var hit = false;
			if (options.tolerance == 'touch') {
				hit = ( !(selectee.left > x2 || selectee.right < x1 || selectee.top > y2 || selectee.bottom < y1) );
			} else if (options.tolerance == 'fit') {
				hit = (selectee.left > x1 && selectee.right < x2 && selectee.top > y1 && selectee.bottom < y2);
			}

			if (hit) {
				// SELECT
				if (selectee.selected) {
					selectee.$element.removeClass('ui-selected');
					selectee.selected = false;
				}
				if (selectee.unselecting) {
					selectee.$element.removeClass('ui-unselecting');
					selectee.unselecting = false;
				}
				if (!selectee.selecting) {
					selectee.$element.addClass('ui-selecting');
					selectee.selecting = true;
					// selectable SELECTING callback
					that._trigger("selecting", event, {
						selecting: selectee.element
					});
				}
			} else {
				// UNSELECT
				if (selectee.selecting) {
					if ((event.metaKey || event.ctrlKey) && selectee.startselected) {
						selectee.$element.removeClass('ui-selecting');
						selectee.selecting = false;
						selectee.$element.addClass('ui-selected');
						selectee.selected = true;
					} else {
						selectee.$element.removeClass('ui-selecting');
						selectee.selecting = false;
						if (selectee.startselected) {
							selectee.$element.addClass('ui-unselecting');
							selectee.unselecting = true;
						}
						// selectable UNSELECTING callback
						that._trigger("unselecting", event, {
							unselecting: selectee.element
						});
					}
				}
				if (selectee.selected) {
					if (!event.metaKey && !event.ctrlKey && !selectee.startselected) {
						selectee.$element.removeClass('ui-selected');
						selectee.selected = false;

						selectee.$element.addClass('ui-unselecting');
						selectee.unselecting = true;
						// selectable UNSELECTING callback
						that._trigger("unselecting", event, {
							unselecting: selectee.element
						});
					}
				}
			}
		});

		return false;
	},

	_mouseStop: function(event) {
		var that = this;

		this.dragged = false;

		var options = this.options;

		$('.ui-unselecting', this.element[0]).each(function() {
			var selectee = $.data(this, "selectable-item");
			selectee.$element.removeClass('ui-unselecting');
			selectee.unselecting = false;
			selectee.startselected = false;
			that._trigger("unselected", event, {
				unselected: selectee.element
			});
		});
		$('.ui-selecting', this.element[0]).each(function() {
			var selectee = $.data(this, "selectable-item");
			selectee.$element.removeClass('ui-selecting').addClass('ui-selected');
			selectee.selecting = false;
			selectee.selected = true;
			selectee.startselected = true;
			that._trigger("selected", event, {
				selected: selectee.element
			});
		});
		this._trigger("stop", event);

		this.helper.remove();

		return false;
	}

});

})(jQuery);
(function( $, undefined ) {

// used to prevent race conditions with remote data sources
var requestIndex = 0;

$.widget( "ui.autocomplete", {
	version: "1.9.2",
	defaultElement: "<input>",
	options: {
		appendTo: "body",
		autoFocus: false,
		delay: 300,
		minLength: 1,
		position: {
			my: "left top",
			at: "left bottom",
			collision: "none"
		},
		source: null,

		// callbacks
		change: null,
		close: null,
		focus: null,
		open: null,
		response: null,
		search: null,
		select: null
	},

	pending: 0,

	_create: function() {
		// Some browsers only repeat keydown events, not keypress events,
		// so we use the suppressKeyPress flag to determine if we've already
		// handled the keydown event. #7269
		// Unfortunately the code for & in keypress is the same as the up arrow,
		// so we use the suppressKeyPressRepeat flag to avoid handling keypress
		// events when we know the keydown event was used to modify the
		// search term. #7799
		var suppressKeyPress, suppressKeyPressRepeat, suppressInput;

		this.isMultiLine = this._isMultiLine();
		this.valueMethod = this.element[ this.element.is( "input,textarea" ) ? "val" : "text" ];
		this.isNewMenu = true;

		this.element
			.addClass( "ui-autocomplete-input" )
			.attr( "autocomplete", "off" );

		this._on( this.element, {
			keydown: function( event ) {
				if ( this.element.prop( "readOnly" ) ) {
					suppressKeyPress = true;
					suppressInput = true;
					suppressKeyPressRepeat = true;
					return;
				}

				suppressKeyPress = false;
				suppressInput = false;
				suppressKeyPressRepeat = false;
				var keyCode = $.ui.keyCode;
				switch( event.keyCode ) {
				case keyCode.PAGE_UP:
					suppressKeyPress = true;
					this._move( "previousPage", event );
					break;
				case keyCode.PAGE_DOWN:
					suppressKeyPress = true;
					this._move( "nextPage", event );
					break;
				case keyCode.UP:
					suppressKeyPress = true;
					this._keyEvent( "previous", event );
					break;
				case keyCode.DOWN:
					suppressKeyPress = true;
					this._keyEvent( "next", event );
					break;
				case keyCode.ENTER:
				case keyCode.NUMPAD_ENTER:
					// when menu is open and has focus
					if ( this.menu.active ) {
						// #6055 - Opera still allows the keypress to occur
						// which causes forms to submit
						suppressKeyPress = true;
						event.preventDefault();
						this.menu.select( event );
					}
					break;
				case keyCode.TAB:
					if ( this.menu.active ) {
						this.menu.select( event );
					}
					break;
				case keyCode.ESCAPE:
					if ( this.menu.element.is( ":visible" ) ) {
						this._value( this.term );
						this.close( event );
						// Different browsers have different default behavior for escape
						// Single press can mean undo or clear
						// Double press in IE means clear the whole form
						event.preventDefault();
					}
					break;
				default:
					suppressKeyPressRepeat = true;
					// search timeout should be triggered before the input value is changed
					this._searchTimeout( event );
					break;
				}
			},
			keypress: function( event ) {
				if ( suppressKeyPress ) {
					suppressKeyPress = false;
					event.preventDefault();
					return;
				}
				if ( suppressKeyPressRepeat ) {
					return;
				}

				// replicate some key handlers to allow them to repeat in Firefox and Opera
				var keyCode = $.ui.keyCode;
				switch( event.keyCode ) {
				case keyCode.PAGE_UP:
					this._move( "previousPage", event );
					break;
				case keyCode.PAGE_DOWN:
					this._move( "nextPage", event );
					break;
				case keyCode.UP:
					this._keyEvent( "previous", event );
					break;
				case keyCode.DOWN:
					this._keyEvent( "next", event );
					break;
				}
			},
			input: function( event ) {
				if ( suppressInput ) {
					suppressInput = false;
					event.preventDefault();
					return;
				}
				this._searchTimeout( event );
			},
			focus: function() {
				this.selectedItem = null;
				this.previous = this._value();
			},
			blur: function( event ) {
				if ( this.cancelBlur ) {
					delete this.cancelBlur;
					return;
				}

				clearTimeout( this.searching );
				this.close( event );
				this._change( event );
			}
		});

		this._initSource();
		this.menu = $( "<ul>" )
			.addClass( "ui-autocomplete" )
			.appendTo( this.document.find( this.options.appendTo || "body" )[ 0 ] )
			.menu({
				// custom key handling for now
				input: $(),
				// disable ARIA support, the live region takes care of that
				role: null
			})
			.zIndex( this.element.zIndex() + 1 )
			.hide()
			.data( "menu" );

		this._on( this.menu.element, {
			mousedown: function( event ) {
				// prevent moving focus out of the text field
				event.preventDefault();

				// IE doesn't prevent moving focus even with event.preventDefault()
				// so we set a flag to know when we should ignore the blur event
				this.cancelBlur = true;
				this._delay(function() {
					delete this.cancelBlur;
				});

				// clicking on the scrollbar causes focus to shift to the body
				// but we can't detect a mouseup or a click immediately afterward
				// so we have to track the next mousedown and close the menu if
				// the user clicks somewhere outside of the autocomplete
				var menuElement = this.menu.element[ 0 ];
				if ( !$( event.target ).closest( ".ui-menu-item" ).length ) {
					this._delay(function() {
						var that = this;
						this.document.one( "mousedown", function( event ) {
							if ( event.target !== that.element[ 0 ] &&
									event.target !== menuElement &&
									!$.contains( menuElement, event.target ) ) {
								that.close();
							}
						});
					});
				}
			},
			menufocus: function( event, ui ) {
				// #7024 - Prevent accidental activation of menu items in Firefox
				if ( this.isNewMenu ) {
					this.isNewMenu = false;
					if ( event.originalEvent && /^mouse/.test( event.originalEvent.type ) ) {
						this.menu.blur();

						this.document.one( "mousemove", function() {
							$( event.target ).trigger( event.originalEvent );
						});

						return;
					}
				}

				// back compat for _renderItem using item.autocomplete, via #7810
				// TODO remove the fallback, see #8156
				var item = ui.item.data( "ui-autocomplete-item" ) || ui.item.data( "item.autocomplete" );
				if ( false !== this._trigger( "focus", event, { item: item } ) ) {
					// use value to match what will end up in the input, if it was a key event
					if ( event.originalEvent && /^key/.test( event.originalEvent.type ) ) {
						this._value( item.value );
					}
				} else {
					// Normally the input is populated with the item's value as the
					// menu is navigated, causing screen readers to notice a change and
					// announce the item. Since the focus event was canceled, this doesn't
					// happen, so we update the live region so that screen readers can
					// still notice the change and announce it.
					this.liveRegion.text( item.value );
				}
			},
			menuselect: function( event, ui ) {
				// back compat for _renderItem using item.autocomplete, via #7810
				// TODO remove the fallback, see #8156
				var item = ui.item.data( "ui-autocomplete-item" ) || ui.item.data( "item.autocomplete" ),
					previous = this.previous;

				// only trigger when focus was lost (click on menu)
				if ( this.element[0] !== this.document[0].activeElement ) {
					this.element.focus();
					this.previous = previous;
					// #6109 - IE triggers two focus events and the second
					// is asynchronous, so we need to reset the previous
					// term synchronously and asynchronously :-(
					this._delay(function() {
						this.previous = previous;
						this.selectedItem = item;
					});
				}

				if ( false !== this._trigger( "select", event, { item: item } ) ) {
					this._value( item.value );
				}
				// reset the term after the select event
				// this allows custom select handling to work properly
				this.term = this._value();

				this.close( event );
				this.selectedItem = item;
			}
		});

		this.liveRegion = $( "<span>", {
				role: "status",
				"aria-live": "polite"
			})
			.addClass( "ui-helper-hidden-accessible" )
			.insertAfter( this.element );

		if ( $.fn.bgiframe ) {
			this.menu.element.bgiframe();
		}

		// turning off autocomplete prevents the browser from remembering the
		// value when navigating through history, so we re-enable autocomplete
		// if the page is unloaded before the widget is destroyed. #7790
		this._on( this.window, {
			beforeunload: function() {
				this.element.removeAttr( "autocomplete" );
			}
		});
	},

	_destroy: function() {
		clearTimeout( this.searching );
		this.element
			.removeClass( "ui-autocomplete-input" )
			.removeAttr( "autocomplete" );
		this.menu.element.remove();
		this.liveRegion.remove();
	},

	_setOption: function( key, value ) {
		this._super( key, value );
		if ( key === "source" ) {
			this._initSource();
		}
		if ( key === "appendTo" ) {
			this.menu.element.appendTo( this.document.find( value || "body" )[0] );
		}
		if ( key === "disabled" && value && this.xhr ) {
			this.xhr.abort();
		}
	},

	_isMultiLine: function() {
		// Textareas are always multi-line
		if ( this.element.is( "textarea" ) ) {
			return true;
		}
		// Inputs are always single-line, even if inside a contentEditable element
		// IE also treats inputs as contentEditable
		if ( this.element.is( "input" ) ) {
			return false;
		}
		// All other element types are determined by whether or not they're contentEditable
		return this.element.prop( "isContentEditable" );
	},

	_initSource: function() {
		var array, url,
			that = this;
		if ( $.isArray(this.options.source) ) {
			array = this.options.source;
			this.source = function( request, response ) {
				response( $.ui.autocomplete.filter( array, request.term ) );
			};
		} else if ( typeof this.options.source === "string" ) {
			url = this.options.source;
			this.source = function( request, response ) {
				if ( that.xhr ) {
					that.xhr.abort();
				}
				that.xhr = $.ajax({
					url: url,
					data: request,
					dataType: "json",
					success: function( data ) {
						response( data );
					},
					error: function() {
						response( [] );
					}
				});
			};
		} else {
			this.source = this.options.source;
		}
	},

	_searchTimeout: function( event ) {
		clearTimeout( this.searching );
		this.searching = this._delay(function() {
			// only search if the value has changed
			if ( this.term !== this._value() ) {
				this.selectedItem = null;
				this.search( null, event );
			}
		}, this.options.delay );
	},

	search: function( value, event ) {
		value = value != null ? value : this._value();

		// always save the actual value, not the one passed as an argument
		this.term = this._value();

		if ( value.length < this.options.minLength ) {
			return this.close( event );
		}

		if ( this._trigger( "search", event ) === false ) {
			return;
		}

		return this._search( value );
	},

	_search: function( value ) {
		this.pending++;
		this.element.addClass( "ui-autocomplete-loading" );
		this.cancelSearch = false;

		this.source( { term: value }, this._response() );
	},

	_response: function() {
		var that = this,
			index = ++requestIndex;

		return function( content ) {
			if ( index === requestIndex ) {
				that.__response( content );
			}

			that.pending--;
			if ( !that.pending ) {
				that.element.removeClass( "ui-autocomplete-loading" );
			}
		};
	},

	__response: function( content ) {
		if ( content ) {
			content = this._normalize( content );
		}
		this._trigger( "response", null, { content: content } );
		if ( !this.options.disabled && content && content.length && !this.cancelSearch ) {
			this._suggest( content );
			this._trigger( "open" );
		} else {
			// use ._close() instead of .close() so we don't cancel future searches
			this._close();
		}
	},

	close: function( event ) {
		this.cancelSearch = true;
		this._close( event );
	},

	_close: function( event ) {
		if ( this.menu.element.is( ":visible" ) ) {
			this.menu.element.hide();
			this.menu.blur();
			this.isNewMenu = true;
			this._trigger( "close", event );
		}
	},

	_change: function( event ) {
		if ( this.previous !== this._value() ) {
			this._trigger( "change", event, { item: this.selectedItem } );
		}
	},

	_normalize: function( items ) {
		// assume all items have the right format when the first item is complete
		if ( items.length && items[0].label && items[0].value ) {
			return items;
		}
		return $.map( items, function( item ) {
			if ( typeof item === "string" ) {
				return {
					label: item,
					value: item
				};
			}
			return $.extend({
				label: item.label || item.value,
				value: item.value || item.label
			}, item );
		});
	},

	_suggest: function( items ) {
		var ul = this.menu.element
			.empty()
			.zIndex( this.element.zIndex() + 1 );
		this._renderMenu( ul, items );
		this.menu.refresh();

		// size and position menu
		ul.show();
		this._resizeMenu();
		ul.position( $.extend({
			of: this.element
		}, this.options.position ));

		if ( this.options.autoFocus ) {
			this.menu.next();
		}
	},

	_resizeMenu: function() {
		var ul = this.menu.element;
		ul.outerWidth( Math.max(
			// Firefox wraps long text (possibly a rounding bug)
			// so we add 1px to avoid the wrapping (#7513)
			ul.width( "" ).outerWidth() + 1,
			this.element.outerWidth()
		) );
	},

	_renderMenu: function( ul, items ) {
		var that = this;
		$.each( items, function( index, item ) {
			that._renderItemData( ul, item );
		});
	},

	_renderItemData: function( ul, item ) {
		return this._renderItem( ul, item ).data( "ui-autocomplete-item", item );
	},

	_renderItem: function( ul, item ) {
		return $( "<li>" )
			.append( $( "<a>" ).text( item.label ) )
			.appendTo( ul );
	},

	_move: function( direction, event ) {
		if ( !this.menu.element.is( ":visible" ) ) {
			this.search( null, event );
			return;
		}
		if ( this.menu.isFirstItem() && /^previous/.test( direction ) ||
				this.menu.isLastItem() && /^next/.test( direction ) ) {
			this._value( this.term );
			this.menu.blur();
			return;
		}
		this.menu[ direction ]( event );
	},

	widget: function() {
		return this.menu.element;
	},

	_value: function() {
		return this.valueMethod.apply( this.element, arguments );
	},

	_keyEvent: function( keyEvent, event ) {
		if ( !this.isMultiLine || this.menu.element.is( ":visible" ) ) {
			this._move( keyEvent, event );

			// prevents moving cursor to beginning/end of the text field in some browsers
			event.preventDefault();
		}
	}
});

$.extend( $.ui.autocomplete, {
	escapeRegex: function( value ) {
		return value.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&");
	},
	filter: function(array, term) {
		var matcher = new RegExp( $.ui.autocomplete.escapeRegex(term), "i" );
		return $.grep( array, function(value) {
			return matcher.test( value.label || value.value || value );
		});
	}
});


// live region extension, adding a `messages` option
// NOTE: This is an experimental API. We are still investigating
// a full solution for string manipulation and internationalization.
$.widget( "ui.autocomplete", $.ui.autocomplete, {
	options: {
		messages: {
			noResults: "No search results.",
			results: function( amount ) {
				return amount + ( amount > 1 ? " results are" : " result is" ) +
					" available, use up and down arrow keys to navigate.";
			}
		}
	},

	__response: function( content ) {
		var message;
		this._superApply( arguments );
		if ( this.options.disabled || this.cancelSearch ) {
			return;
		}
		if ( content && content.length ) {
			message = this.options.messages.results( content.length );
		} else {
			message = this.options.messages.noResults;
		}
		this.liveRegion.text( message );
	}
});


}( jQuery ));
(function( $, undefined ) {

var lastActive, startXPos, startYPos, clickDragged,
	baseClasses = "ui-button ui-widget ui-state-default ui-corner-all",
	stateClasses = "ui-state-hover ui-state-active ",
	typeClasses = "ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only",
	formResetHandler = function() {
		var buttons = $( this ).find( ":ui-button" );
		setTimeout(function() {
			buttons.button( "refresh" );
		}, 1 );
	},
	radioGroup = function( radio ) {
		var name = radio.name,
			form = radio.form,
			radios = $( [] );
		if ( name ) {
			if ( form ) {
				radios = $( form ).find( "[name='" + name + "']" );
			} else {
				radios = $( "[name='" + name + "']", radio.ownerDocument )
					.filter(function() {
						return !this.form;
					});
			}
		}
		return radios;
	};

$.widget( "ui.button", {
	version: "1.9.2",
	defaultElement: "<button>",
	options: {
		disabled: null,
		text: true,
		label: null,
		icons: {
			primary: null,
			secondary: null
		}
	},
	_create: function() {
		this.element.closest( "form" )
			.unbind( "reset" + this.eventNamespace )
			.bind( "reset" + this.eventNamespace, formResetHandler );

		if ( typeof this.options.disabled !== "boolean" ) {
			this.options.disabled = !!this.element.prop( "disabled" );
		} else {
			this.element.prop( "disabled", this.options.disabled );
		}

		this._determineButtonType();
		this.hasTitle = !!this.buttonElement.attr( "title" );

		var that = this,
			options = this.options,
			toggleButton = this.type === "checkbox" || this.type === "radio",
			activeClass = !toggleButton ? "ui-state-active" : "",
			focusClass = "ui-state-focus";

		if ( options.label === null ) {
			options.label = (this.type === "input" ? this.buttonElement.val() : this.buttonElement.html());
		}

		this._hoverable( this.buttonElement );

		this.buttonElement
			.addClass( baseClasses )
			.attr( "role", "button" )
			.bind( "mouseenter" + this.eventNamespace, function() {
				if ( options.disabled ) {
					return;
				}
				if ( this === lastActive ) {
					$( this ).addClass( "ui-state-active" );
				}
			})
			.bind( "mouseleave" + this.eventNamespace, function() {
				if ( options.disabled ) {
					return;
				}
				$( this ).removeClass( activeClass );
			})
			.bind( "click" + this.eventNamespace, function( event ) {
				if ( options.disabled ) {
					event.preventDefault();
					event.stopImmediatePropagation();
				}
			});

		this.element
			.bind( "focus" + this.eventNamespace, function() {
				// no need to check disabled, focus won't be triggered anyway
				that.buttonElement.addClass( focusClass );
			})
			.bind( "blur" + this.eventNamespace, function() {
				that.buttonElement.removeClass( focusClass );
			});

		if ( toggleButton ) {
			this.element.bind( "change" + this.eventNamespace, function() {
				if ( clickDragged ) {
					return;
				}
				that.refresh();
			});
			// if mouse moves between mousedown and mouseup (drag) set clickDragged flag
			// prevents issue where button state changes but checkbox/radio checked state
			// does not in Firefox (see ticket #6970)
			this.buttonElement
				.bind( "mousedown" + this.eventNamespace, function( event ) {
					if ( options.disabled ) {
						return;
					}
					clickDragged = false;
					startXPos = event.pageX;
					startYPos = event.pageY;
				})
				.bind( "mouseup" + this.eventNamespace, function( event ) {
					if ( options.disabled ) {
						return;
					}
					if ( startXPos !== event.pageX || startYPos !== event.pageY ) {
						clickDragged = true;
					}
			});
		}

		if ( this.type === "checkbox" ) {
			this.buttonElement.bind( "click" + this.eventNamespace, function() {
				if ( options.disabled || clickDragged ) {
					return false;
				}
				$( this ).toggleClass( "ui-state-active" );
				that.buttonElement.attr( "aria-pressed", that.element[0].checked );
			});
		} else if ( this.type === "radio" ) {
			this.buttonElement.bind( "click" + this.eventNamespace, function() {
				if ( options.disabled || clickDragged ) {
					return false;
				}
				$( this ).addClass( "ui-state-active" );
				that.buttonElement.attr( "aria-pressed", "true" );

				var radio = that.element[ 0 ];
				radioGroup( radio )
					.not( radio )
					.map(function() {
						return $( this ).button( "widget" )[ 0 ];
					})
					.removeClass( "ui-state-active" )
					.attr( "aria-pressed", "false" );
			});
		} else {
			this.buttonElement
				.bind( "mousedown" + this.eventNamespace, function() {
					if ( options.disabled ) {
						return false;
					}
					$( this ).addClass( "ui-state-active" );
					lastActive = this;
					that.document.one( "mouseup", function() {
						lastActive = null;
					});
				})
				.bind( "mouseup" + this.eventNamespace, function() {
					if ( options.disabled ) {
						return false;
					}
					$( this ).removeClass( "ui-state-active" );
				})
				.bind( "keydown" + this.eventNamespace, function(event) {
					if ( options.disabled ) {
						return false;
					}
					if ( event.keyCode === $.ui.keyCode.SPACE || event.keyCode === $.ui.keyCode.ENTER ) {
						$( this ).addClass( "ui-state-active" );
					}
				})
				.bind( "keyup" + this.eventNamespace, function() {
					$( this ).removeClass( "ui-state-active" );
				});

			if ( this.buttonElement.is("a") ) {
				this.buttonElement.keyup(function(event) {
					if ( event.keyCode === $.ui.keyCode.SPACE ) {
						// TODO pass through original event correctly (just as 2nd argument doesn't work)
						$( this ).click();
					}
				});
			}
		}

		// TODO: pull out $.Widget's handling for the disabled option into
		// $.Widget.prototype._setOptionDisabled so it's easy to proxy and can
		// be overridden by individual plugins
		this._setOption( "disabled", options.disabled );
		this._resetButton();
	},

	_determineButtonType: function() {
		var ancestor, labelSelector, checked;

		if ( this.element.is("[type=checkbox]") ) {
			this.type = "checkbox";
		} else if ( this.element.is("[type=radio]") ) {
			this.type = "radio";
		} else if ( this.element.is("input") ) {
			this.type = "input";
		} else {
			this.type = "button";
		}

		if ( this.type === "checkbox" || this.type === "radio" ) {
			// we don't search against the document in case the element
			// is disconnected from the DOM
			ancestor = this.element.parents().last();
			labelSelector = "label[for='" + this.element.attr("id") + "']";
			this.buttonElement = ancestor.find( labelSelector );
			if ( !this.buttonElement.length ) {
				ancestor = ancestor.length ? ancestor.siblings() : this.element.siblings();
				this.buttonElement = ancestor.filter( labelSelector );
				if ( !this.buttonElement.length ) {
					this.buttonElement = ancestor.find( labelSelector );
				}
			}
			this.element.addClass( "ui-helper-hidden-accessible" );

			checked = this.element.is( ":checked" );
			if ( checked ) {
				this.buttonElement.addClass( "ui-state-active" );
			}
			this.buttonElement.prop( "aria-pressed", checked );
		} else {
			this.buttonElement = this.element;
		}
	},

	widget: function() {
		return this.buttonElement;
	},

	_destroy: function() {
		this.element
			.removeClass( "ui-helper-hidden-accessible" );
		this.buttonElement
			.removeClass( baseClasses + " " + stateClasses + " " + typeClasses )
			.removeAttr( "role" )
			.removeAttr( "aria-pressed" )
			.html( this.buttonElement.find(".ui-button-text").html() );

		if ( !this.hasTitle ) {
			this.buttonElement.removeAttr( "title" );
		}
	},

	_setOption: function( key, value ) {
		this._super( key, value );
		if ( key === "disabled" ) {
			if ( value ) {
				this.element.prop( "disabled", true );
			} else {
				this.element.prop( "disabled", false );
			}
			return;
		}
		this._resetButton();
	},

	refresh: function() {
		//See #8237 & #8828
		var isDisabled = this.element.is( "input, button" ) ? this.element.is( ":disabled" ) : this.element.hasClass( "ui-button-disabled" );

		if ( isDisabled !== this.options.disabled ) {
			this._setOption( "disabled", isDisabled );
		}
		if ( this.type === "radio" ) {
			radioGroup( this.element[0] ).each(function() {
				if ( $( this ).is( ":checked" ) ) {
					$( this ).button( "widget" )
						.addClass( "ui-state-active" )
						.attr( "aria-pressed", "true" );
				} else {
					$( this ).button( "widget" )
						.removeClass( "ui-state-active" )
						.attr( "aria-pressed", "false" );
				}
			});
		} else if ( this.type === "checkbox" ) {
			if ( this.element.is( ":checked" ) ) {
				this.buttonElement
					.addClass( "ui-state-active" )
					.attr( "aria-pressed", "true" );
			} else {
				this.buttonElement
					.removeClass( "ui-state-active" )
					.attr( "aria-pressed", "false" );
			}
		}
	},

	_resetButton: function() {
		if ( this.type === "input" ) {
			if ( this.options.label ) {
				this.element.val( this.options.label );
			}
			return;
		}
		var buttonElement = this.buttonElement.removeClass( typeClasses ),
			buttonText = $( "<span></span>", this.document[0] )
				.addClass( "ui-button-text" )
				.html( this.options.label )
				.appendTo( buttonElement.empty() )
				.text(),
			icons = this.options.icons,
			multipleIcons = icons.primary && icons.secondary,
			buttonClasses = [];

		if ( icons.primary || icons.secondary ) {
			if ( this.options.text ) {
				buttonClasses.push( "ui-button-text-icon" + ( multipleIcons ? "s" : ( icons.primary ? "-primary" : "-secondary" ) ) );
			}

			if ( icons.primary ) {
				buttonElement.prepend( "<span class='ui-button-icon-primary ui-icon " + icons.primary + "'></span>" );
			}

			if ( icons.secondary ) {
				buttonElement.append( "<span class='ui-button-icon-secondary ui-icon " + icons.secondary + "'></span>" );
			}

			if ( !this.options.text ) {
				buttonClasses.push( multipleIcons ? "ui-button-icons-only" : "ui-button-icon-only" );

				if ( !this.hasTitle ) {
					buttonElement.attr( "title", $.trim( buttonText ) );
				}
			}
		} else {
			buttonClasses.push( "ui-button-text-only" );
		}
		buttonElement.addClass( buttonClasses.join( " " ) );
	}
});

$.widget( "ui.buttonset", {
	version: "1.9.2",
	options: {
		items: "button, input[type=button], input[type=submit], input[type=reset], input[type=checkbox], input[type=radio], a, :data(button)"
	},

	_create: function() {
		this.element.addClass( "ui-buttonset" );
	},

	_init: function() {
		this.refresh();
	},

	_setOption: function( key, value ) {
		if ( key === "disabled" ) {
			this.buttons.button( "option", key, value );
		}

		this._super( key, value );
	},

	refresh: function() {
		var rtl = this.element.css( "direction" ) === "rtl";

		this.buttons = this.element.find( this.options.items )
			.filter( ":ui-button" )
				.button( "refresh" )
			.end()
			.not( ":ui-button" )
				.button()
			.end()
			.map(function() {
				return $( this ).button( "widget" )[ 0 ];
			})
				.removeClass( "ui-corner-all ui-corner-left ui-corner-right" )
				.filter( ":first" )
					.addClass( rtl ? "ui-corner-right" : "ui-corner-left" )
				.end()
				.filter( ":last" )
					.addClass( rtl ? "ui-corner-left" : "ui-corner-right" )
				.end()
			.end();
	},

	_destroy: function() {
		this.element.removeClass( "ui-buttonset" );
		this.buttons
			.map(function() {
				return $( this ).button( "widget" )[ 0 ];
			})
				.removeClass( "ui-corner-left ui-corner-right" )
			.end()
			.button( "destroy" );
	}
});

}( jQuery ) );
(function( $, undefined ) {

$.extend($.ui, { datepicker: { version: "1.9.2" } });

var PROP_NAME = 'datepicker';
var dpuuid = new Date().getTime();
var instActive;

/* Date picker manager.
   Use the singleton instance of this class, $.datepicker, to interact with the date picker.
   Settings for (groups of) date pickers are maintained in an instance object,
   allowing multiple different settings on the same page. */

function Datepicker() {
	this.debug = false; // Change this to true to start debugging
	this._curInst = null; // The current instance in use
	this._keyEvent = false; // If the last event was a key event
	this._disabledInputs = []; // List of date picker inputs that have been disabled
	this._datepickerShowing = false; // True if the popup picker is showing , false if not
	this._inDialog = false; // True if showing within a "dialog", false if not
	this._mainDivId = 'ui-datepicker-div'; // The ID of the main datepicker division
	this._inlineClass = 'ui-datepicker-inline'; // The name of the inline marker class
	this._appendClass = 'ui-datepicker-append'; // The name of the append marker class
	this._triggerClass = 'ui-datepicker-trigger'; // The name of the trigger marker class
	this._dialogClass = 'ui-datepicker-dialog'; // The name of the dialog marker class
	this._disableClass = 'ui-datepicker-disabled'; // The name of the disabled covering marker class
	this._unselectableClass = 'ui-datepicker-unselectable'; // The name of the unselectable cell marker class
	this._currentClass = 'ui-datepicker-current-day'; // The name of the current day marker class
	this._dayOverClass = 'ui-datepicker-days-cell-over'; // The name of the day hover marker class
	this.regional = []; // Available regional settings, indexed by language code
	this.regional[''] = { // Default regional settings
		closeText: 'Done', // Display text for close link
		prevText: 'Prev', // Display text for previous month link
		nextText: 'Next', // Display text for next month link
		currentText: 'Today', // Display text for current month link
		monthNames: ['January','February','March','April','May','June',
			'July','August','September','October','November','December'], // Names of months for drop-down and formatting
		monthNamesShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'], // For formatting
		dayNames: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'], // For formatting
		dayNamesShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'], // For formatting
		dayNamesMin: ['Su','Mo','Tu','We','Th','Fr','Sa'], // Column headings for days starting at Sunday
		weekHeader: 'Wk', // Column header for week of the year
		dateFormat: 'mm/dd/yy', // See format options on parseDate
		firstDay: 0, // The first day of the week, Sun = 0, Mon = 1, ...
		isRTL: false, // True if right-to-left language, false if left-to-right
		showMonthAfterYear: false, // True if the year select precedes month, false for month then year
		yearSuffix: '' // Additional text to append to the year in the month headers
	};
	this._defaults = { // Global defaults for all the date picker instances
		showOn: 'focus', // 'focus' for popup on focus,
			// 'button' for trigger button, or 'both' for either
		showAnim: 'fadeIn', // Name of jQuery animation for popup
		showOptions: {}, // Options for enhanced animations
		defaultDate: null, // Used when field is blank: actual date,
			// +/-number for offset from today, null for today
		appendText: '', // Display text following the input box, e.g. showing the format
		buttonText: '...', // Text for trigger button
		buttonImage: '', // URL for trigger button image
		buttonImageOnly: false, // True if the image appears alone, false if it appears on a button
		hideIfNoPrevNext: false, // True to hide next/previous month links
			// if not applicable, false to just disable them
		navigationAsDateFormat: false, // True if date formatting applied to prev/today/next links
		gotoCurrent: false, // True if today link goes back to current selection instead
		changeMonth: false, // True if month can be selected directly, false if only prev/next
		changeYear: false, // True if year can be selected directly, false if only prev/next
		yearRange: 'c-10:c+10', // Range of years to display in drop-down,
			// either relative to today's year (-nn:+nn), relative to currently displayed year
			// (c-nn:c+nn), absolute (nnnn:nnnn), or a combination of the above (nnnn:-n)
		showOtherMonths: false, // True to show dates in other months, false to leave blank
		selectOtherMonths: false, // True to allow selection of dates in other months, false for unselectable
		showWeek: false, // True to show week of the year, false to not show it
		calculateWeek: this.iso8601Week, // How to calculate the week of the year,
			// takes a Date and returns the number of the week for it
		shortYearCutoff: '+10', // Short year values < this are in the current century,
			// > this are in the previous century,
			// string value starting with '+' for current year + value
		minDate: null, // The earliest selectable date, or null for no limit
		maxDate: null, // The latest selectable date, or null for no limit
		duration: 'fast', // Duration of display/closure
		beforeShowDay: null, // Function that takes a date and returns an array with
			// [0] = true if selectable, false if not, [1] = custom CSS class name(s) or '',
			// [2] = cell title (optional), e.g. $.datepicker.noWeekends
		beforeShow: null, // Function that takes an input field and
			// returns a set of custom settings for the date picker
		onSelect: null, // Define a callback function when a date is selected
		onChangeMonthYear: null, // Define a callback function when the month or year is changed
		onClose: null, // Define a callback function when the datepicker is closed
		numberOfMonths: 1, // Number of months to show at a time
		showCurrentAtPos: 0, // The position in multipe months at which to show the current month (starting at 0)
		stepMonths: 1, // Number of months to step back/forward
		stepBigMonths: 12, // Number of months to step back/forward for the big links
		altField: '', // Selector for an alternate field to store selected dates into
		altFormat: '', // The date format to use for the alternate field
		constrainInput: true, // The input is constrained by the current date format
		showButtonPanel: false, // True to show button panel, false to not show it
		autoSize: false, // True to size the input for the date format, false to leave as is
		disabled: false // The initial disabled state
	};
	$.extend(this._defaults, this.regional['']);
	this.dpDiv = bindHover($('<div id="' + this._mainDivId + '" class="ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>'));
}

$.extend(Datepicker.prototype, {
	/* Class name added to elements to indicate already configured with a date picker. */
	markerClassName: 'hasDatepicker',

	//Keep track of the maximum number of rows displayed (see #7043)
	maxRows: 4,

	/* Debug logging (if enabled). */
	log: function () {
		if (this.debug)
			console.log.apply('', arguments);
	},

	// TODO rename to "widget" when switching to widget factory
	_widgetDatepicker: function() {
		return this.dpDiv;
	},

	/* Override the default settings for all instances of the date picker.
	   @param  settings  object - the new settings to use as defaults (anonymous object)
	   @return the manager object */
	setDefaults: function(settings) {
		extendRemove(this._defaults, settings || {});
		return this;
	},

	/* Attach the date picker to a jQuery selection.
	   @param  target    element - the target input field or division or span
	   @param  settings  object - the new settings to use for this date picker instance (anonymous) */
	_attachDatepicker: function(target, settings) {
		// check for settings on the control itself - in namespace 'date:'
		var inlineSettings = null;
		for (var attrName in this._defaults) {
			var attrValue = target.getAttribute('date:' + attrName);
			if (attrValue) {
				inlineSettings = inlineSettings || {};
				try {
					inlineSettings[attrName] = eval(attrValue);
				} catch (err) {
					inlineSettings[attrName] = attrValue;
				}
			}
		}
		var nodeName = target.nodeName.toLowerCase();
		var inline = (nodeName == 'div' || nodeName == 'span');
		if (!target.id) {
			this.uuid += 1;
			target.id = 'dp' + this.uuid;
		}
		var inst = this._newInst($(target), inline);
		inst.settings = $.extend({}, settings || {}, inlineSettings || {});
		if (nodeName == 'input') {
			this._connectDatepicker(target, inst);
		} else if (inline) {
			this._inlineDatepicker(target, inst);
		}
	},

	/* Create a new instance object. */
	_newInst: function(target, inline) {
		var id = target[0].id.replace(/([^A-Za-z0-9_-])/g, '\\\\$1'); // escape jQuery meta chars
		return {id: id, input: target, // associated target
			selectedDay: 0, selectedMonth: 0, selectedYear: 0, // current selection
			drawMonth: 0, drawYear: 0, // month being drawn
			inline: inline, // is datepicker inline or not
			dpDiv: (!inline ? this.dpDiv : // presentation div
			bindHover($('<div class="' + this._inlineClass + ' ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>')))};
	},

	/* Attach the date picker to an input field. */
	_connectDatepicker: function(target, inst) {
		var input = $(target);
		inst.append = $([]);
		inst.trigger = $([]);
		if (input.hasClass(this.markerClassName))
			return;
		this._attachments(input, inst);
		input.addClass(this.markerClassName).keydown(this._doKeyDown).
			keypress(this._doKeyPress).keyup(this._doKeyUp).
			bind("setData.datepicker", function(event, key, value) {
				inst.settings[key] = value;
			}).bind("getData.datepicker", function(event, key) {
				return this._get(inst, key);
			});
		this._autoSize(inst);
		$.data(target, PROP_NAME, inst);
		//If disabled option is true, disable the datepicker once it has been attached to the input (see ticket #5665)
		if( inst.settings.disabled ) {
			this._disableDatepicker( target );
		}
	},

	/* Make attachments based on settings. */
	_attachments: function(input, inst) {
		var appendText = this._get(inst, 'appendText');
		var isRTL = this._get(inst, 'isRTL');
		if (inst.append)
			inst.append.remove();
		if (appendText) {
			inst.append = $('<span class="' + this._appendClass + '">' + appendText + '</span>');
			input[isRTL ? 'before' : 'after'](inst.append);
		}
		input.unbind('focus', this._showDatepicker);
		if (inst.trigger)
			inst.trigger.remove();
		var showOn = this._get(inst, 'showOn');
		if (showOn == 'focus' || showOn == 'both') // pop-up date picker when in the marked field
			input.focus(this._showDatepicker);
		if (showOn == 'button' || showOn == 'both') { // pop-up date picker when button clicked
			var buttonText = this._get(inst, 'buttonText');
			var buttonImage = this._get(inst, 'buttonImage');
			inst.trigger = $(this._get(inst, 'buttonImageOnly') ?
				$('<img/>').addClass(this._triggerClass).
					attr({ src: buttonImage, alt: buttonText, title: buttonText }) :
				$('<button type="button"></button>').addClass(this._triggerClass).
					html(buttonImage == '' ? buttonText : $('<img/>').attr(
					{ src:buttonImage, alt:buttonText, title:buttonText })));
			input[isRTL ? 'before' : 'after'](inst.trigger);
			inst.trigger.click(function() {
				if ($.datepicker._datepickerShowing && $.datepicker._lastInput == input[0])
					$.datepicker._hideDatepicker();
				else if ($.datepicker._datepickerShowing && $.datepicker._lastInput != input[0]) {
					$.datepicker._hideDatepicker();
					$.datepicker._showDatepicker(input[0]);
				} else
					$.datepicker._showDatepicker(input[0]);
				return false;
			});
		}
	},

	/* Apply the maximum length for the date format. */
	_autoSize: function(inst) {
		if (this._get(inst, 'autoSize') && !inst.inline) {
			var date = new Date(2009, 12 - 1, 20); // Ensure double digits
			var dateFormat = this._get(inst, 'dateFormat');
			if (dateFormat.match(/[DM]/)) {
				var findMax = function(names) {
					var max = 0;
					var maxI = 0;
					for (var i = 0; i < names.length; i++) {
						if (names[i].length > max) {
							max = names[i].length;
							maxI = i;
						}
					}
					return maxI;
				};
				date.setMonth(findMax(this._get(inst, (dateFormat.match(/MM/) ?
					'monthNames' : 'monthNamesShort'))));
				date.setDate(findMax(this._get(inst, (dateFormat.match(/DD/) ?
					'dayNames' : 'dayNamesShort'))) + 20 - date.getDay());
			}
			inst.input.attr('size', this._formatDate(inst, date).length);
		}
	},

	/* Attach an inline date picker to a div. */
	_inlineDatepicker: function(target, inst) {
		var divSpan = $(target);
		if (divSpan.hasClass(this.markerClassName))
			return;
		divSpan.addClass(this.markerClassName).append(inst.dpDiv).
			bind("setData.datepicker", function(event, key, value){
				inst.settings[key] = value;
			}).bind("getData.datepicker", function(event, key){
				return this._get(inst, key);
			});
		$.data(target, PROP_NAME, inst);
		this._setDate(inst, this._getDefaultDate(inst), true);
		this._updateDatepicker(inst);
		this._updateAlternate(inst);
		//If disabled option is true, disable the datepicker before showing it (see ticket #5665)
		if( inst.settings.disabled ) {
			this._disableDatepicker( target );
		}
		// Set display:block in place of inst.dpDiv.show() which won't work on disconnected elements
		// http://bugs.jqueryui.com/ticket/7552 - A Datepicker created on a detached div has zero height
		inst.dpDiv.css( "display", "block" );
	},

	/* Pop-up the date picker in a "dialog" box.
	   @param  input     element - ignored
	   @param  date      string or Date - the initial date to display
	   @param  onSelect  function - the function to call when a date is selected
	   @param  settings  object - update the dialog date picker instance's settings (anonymous object)
	   @param  pos       int[2] - coordinates for the dialog's position within the screen or
	                     event - with x/y coordinates or
	                     leave empty for default (screen centre)
	   @return the manager object */
	_dialogDatepicker: function(input, date, onSelect, settings, pos) {
		var inst = this._dialogInst; // internal instance
		if (!inst) {
			this.uuid += 1;
			var id = 'dp' + this.uuid;
			this._dialogInput = $('<input type="text" id="' + id +
				'" style="position: absolute; top: -100px; width: 0px;"/>');
			this._dialogInput.keydown(this._doKeyDown);
			$('body').append(this._dialogInput);
			inst = this._dialogInst = this._newInst(this._dialogInput, false);
			inst.settings = {};
			$.data(this._dialogInput[0], PROP_NAME, inst);
		}
		extendRemove(inst.settings, settings || {});
		date = (date && date.constructor == Date ? this._formatDate(inst, date) : date);
		this._dialogInput.val(date);

		this._pos = (pos ? (pos.length ? pos : [pos.pageX, pos.pageY]) : null);
		if (!this._pos) {
			var browserWidth = document.documentElement.clientWidth;
			var browserHeight = document.documentElement.clientHeight;
			var scrollX = document.documentElement.scrollLeft || document.body.scrollLeft;
			var scrollY = document.documentElement.scrollTop || document.body.scrollTop;
			this._pos = // should use actual width/height below
				[(browserWidth / 2) - 100 + scrollX, (browserHeight / 2) - 150 + scrollY];
		}

		// move input on screen for focus, but hidden behind dialog
		this._dialogInput.css('left', (this._pos[0] + 20) + 'px').css('top', this._pos[1] + 'px');
		inst.settings.onSelect = onSelect;
		this._inDialog = true;
		this.dpDiv.addClass(this._dialogClass);
		this._showDatepicker(this._dialogInput[0]);
		if ($.blockUI)
			$.blockUI(this.dpDiv);
		$.data(this._dialogInput[0], PROP_NAME, inst);
		return this;
	},

	/* Detach a datepicker from its control.
	   @param  target    element - the target input field or division or span */
	_destroyDatepicker: function(target) {
		var $target = $(target);
		var inst = $.data(target, PROP_NAME);
		if (!$target.hasClass(this.markerClassName)) {
			return;
		}
		var nodeName = target.nodeName.toLowerCase();
		$.removeData(target, PROP_NAME);
		if (nodeName == 'input') {
			inst.append.remove();
			inst.trigger.remove();
			$target.removeClass(this.markerClassName).
				unbind('focus', this._showDatepicker).
				unbind('keydown', this._doKeyDown).
				unbind('keypress', this._doKeyPress).
				unbind('keyup', this._doKeyUp);
		} else if (nodeName == 'div' || nodeName == 'span')
			$target.removeClass(this.markerClassName).empty();
	},

	/* Enable the date picker to a jQuery selection.
	   @param  target    element - the target input field or division or span */
	_enableDatepicker: function(target) {
		var $target = $(target);
		var inst = $.data(target, PROP_NAME);
		if (!$target.hasClass(this.markerClassName)) {
			return;
		}
		var nodeName = target.nodeName.toLowerCase();
		if (nodeName == 'input') {
			target.disabled = false;
			inst.trigger.filter('button').
				each(function() { this.disabled = false; }).end().
				filter('img').css({opacity: '1.0', cursor: ''});
		}
		else if (nodeName == 'div' || nodeName == 'span') {
			var inline = $target.children('.' + this._inlineClass);
			inline.children().removeClass('ui-state-disabled');
			inline.find("select.ui-datepicker-month, select.ui-datepicker-year").
				prop("disabled", false);
		}
		this._disabledInputs = $.map(this._disabledInputs,
			function(value) { return (value == target ? null : value); }); // delete entry
	},

	/* Disable the date picker to a jQuery selection.
	   @param  target    element - the target input field or division or span */
	_disableDatepicker: function(target) {
		var $target = $(target);
		var inst = $.data(target, PROP_NAME);
		if (!$target.hasClass(this.markerClassName)) {
			return;
		}
		var nodeName = target.nodeName.toLowerCase();
		if (nodeName == 'input') {
			target.disabled = true;
			inst.trigger.filter('button').
				each(function() { this.disabled = true; }).end().
				filter('img').css({opacity: '0.5', cursor: 'default'});
		}
		else if (nodeName == 'div' || nodeName == 'span') {
			var inline = $target.children('.' + this._inlineClass);
			inline.children().addClass('ui-state-disabled');
			inline.find("select.ui-datepicker-month, select.ui-datepicker-year").
				prop("disabled", true);
		}
		this._disabledInputs = $.map(this._disabledInputs,
			function(value) { return (value == target ? null : value); }); // delete entry
		this._disabledInputs[this._disabledInputs.length] = target;
	},

	/* Is the first field in a jQuery collection disabled as a datepicker?
	   @param  target    element - the target input field or division or span
	   @return boolean - true if disabled, false if enabled */
	_isDisabledDatepicker: function(target) {
		if (!target) {
			return false;
		}
		for (var i = 0; i < this._disabledInputs.length; i++) {
			if (this._disabledInputs[i] == target)
				return true;
		}
		return false;
	},

	/* Retrieve the instance data for the target control.
	   @param  target  element - the target input field or division or span
	   @return  object - the associated instance data
	   @throws  error if a jQuery problem getting data */
	_getInst: function(target) {
		try {
			return $.data(target, PROP_NAME);
		}
		catch (err) {
			throw 'Missing instance data for this datepicker';
		}
	},

	/* Update or retrieve the settings for a date picker attached to an input field or division.
	   @param  target  element - the target input field or division or span
	   @param  name    object - the new settings to update or
	                   string - the name of the setting to change or retrieve,
	                   when retrieving also 'all' for all instance settings or
	                   'defaults' for all global defaults
	   @param  value   any - the new value for the setting
	                   (omit if above is an object or to retrieve a value) */
	_optionDatepicker: function(target, name, value) {
		var inst = this._getInst(target);
		if (arguments.length == 2 && typeof name == 'string') {
			return (name == 'defaults' ? $.extend({}, $.datepicker._defaults) :
				(inst ? (name == 'all' ? $.extend({}, inst.settings) :
				this._get(inst, name)) : null));
		}
		var settings = name || {};
		if (typeof name == 'string') {
			settings = {};
			settings[name] = value;
		}
		if (inst) {
			if (this._curInst == inst) {
				this._hideDatepicker();
			}
			var date = this._getDateDatepicker(target, true);
			var minDate = this._getMinMaxDate(inst, 'min');
			var maxDate = this._getMinMaxDate(inst, 'max');
			extendRemove(inst.settings, settings);
			// reformat the old minDate/maxDate values if dateFormat changes and a new minDate/maxDate isn't provided
			if (minDate !== null && settings['dateFormat'] !== undefined && settings['minDate'] === undefined)
				inst.settings.minDate = this._formatDate(inst, minDate);
			if (maxDate !== null && settings['dateFormat'] !== undefined && settings['maxDate'] === undefined)
				inst.settings.maxDate = this._formatDate(inst, maxDate);
			this._attachments($(target), inst);
			this._autoSize(inst);
			this._setDate(inst, date);
			this._updateAlternate(inst);
			this._updateDatepicker(inst);
		}
	},

	// change method deprecated
	_changeDatepicker: function(target, name, value) {
		this._optionDatepicker(target, name, value);
	},

	/* Redraw the date picker attached to an input field or division.
	   @param  target  element - the target input field or division or span */
	_refreshDatepicker: function(target) {
		var inst = this._getInst(target);
		if (inst) {
			this._updateDatepicker(inst);
		}
	},

	/* Set the dates for a jQuery selection.
	   @param  target   element - the target input field or division or span
	   @param  date     Date - the new date */
	_setDateDatepicker: function(target, date) {
		var inst = this._getInst(target);
		if (inst) {
			this._setDate(inst, date);
			this._updateDatepicker(inst);
			this._updateAlternate(inst);
		}
	},

	/* Get the date(s) for the first entry in a jQuery selection.
	   @param  target     element - the target input field or division or span
	   @param  noDefault  boolean - true if no default date is to be used
	   @return Date - the current date */
	_getDateDatepicker: function(target, noDefault) {
		var inst = this._getInst(target);
		if (inst && !inst.inline)
			this._setDateFromField(inst, noDefault);
		return (inst ? this._getDate(inst) : null);
	},

	/* Handle keystrokes. */
	_doKeyDown: function(event) {
		var inst = $.datepicker._getInst(event.target);
		var handled = true;
		var isRTL = inst.dpDiv.is('.ui-datepicker-rtl');
		inst._keyEvent = true;
		if ($.datepicker._datepickerShowing)
			switch (event.keyCode) {
				case 9: $.datepicker._hideDatepicker();
						handled = false;
						break; // hide on tab out
				case 13: var sel = $('td.' + $.datepicker._dayOverClass + ':not(.' +
									$.datepicker._currentClass + ')', inst.dpDiv);
						if (sel[0])
							$.datepicker._selectDay(event.target, inst.selectedMonth, inst.selectedYear, sel[0]);
							var onSelect = $.datepicker._get(inst, 'onSelect');
							if (onSelect) {
								var dateStr = $.datepicker._formatDate(inst);

								// trigger custom callback
								onSelect.apply((inst.input ? inst.input[0] : null), [dateStr, inst]);
							}
						else
							$.datepicker._hideDatepicker();
						return false; // don't submit the form
						break; // select the value on enter
				case 27: $.datepicker._hideDatepicker();
						break; // hide on escape
				case 33: $.datepicker._adjustDate(event.target, (event.ctrlKey ?
							-$.datepicker._get(inst, 'stepBigMonths') :
							-$.datepicker._get(inst, 'stepMonths')), 'M');
						break; // previous month/year on page up/+ ctrl
				case 34: $.datepicker._adjustDate(event.target, (event.ctrlKey ?
							+$.datepicker._get(inst, 'stepBigMonths') :
							+$.datepicker._get(inst, 'stepMonths')), 'M');
						break; // next month/year on page down/+ ctrl
				case 35: if (event.ctrlKey || event.metaKey) $.datepicker._clearDate(event.target);
						handled = event.ctrlKey || event.metaKey;
						break; // clear on ctrl or command +end
				case 36: if (event.ctrlKey || event.metaKey) $.datepicker._gotoToday(event.target);
						handled = event.ctrlKey || event.metaKey;
						break; // current on ctrl or command +home
				case 37: if (event.ctrlKey || event.metaKey) $.datepicker._adjustDate(event.target, (isRTL ? +1 : -1), 'D');
						handled = event.ctrlKey || event.metaKey;
						// -1 day on ctrl or command +left
						if (event.originalEvent.altKey) $.datepicker._adjustDate(event.target, (event.ctrlKey ?
									-$.datepicker._get(inst, 'stepBigMonths') :
									-$.datepicker._get(inst, 'stepMonths')), 'M');
						// next month/year on alt +left on Mac
						break;
				case 38: if (event.ctrlKey || event.metaKey) $.datepicker._adjustDate(event.target, -7, 'D');
						handled = event.ctrlKey || event.metaKey;
						break; // -1 week on ctrl or command +up
				case 39: if (event.ctrlKey || event.metaKey) $.datepicker._adjustDate(event.target, (isRTL ? -1 : +1), 'D');
						handled = event.ctrlKey || event.metaKey;
						// +1 day on ctrl or command +right
						if (event.originalEvent.altKey) $.datepicker._adjustDate(event.target, (event.ctrlKey ?
									+$.datepicker._get(inst, 'stepBigMonths') :
									+$.datepicker._get(inst, 'stepMonths')), 'M');
						// next month/year on alt +right
						break;
				case 40: if (event.ctrlKey || event.metaKey) $.datepicker._adjustDate(event.target, +7, 'D');
						handled = event.ctrlKey || event.metaKey;
						break; // +1 week on ctrl or command +down
				default: handled = false;
			}
		else if (event.keyCode == 36 && event.ctrlKey) // display the date picker on ctrl+home
			$.datepicker._showDatepicker(this);
		else {
			handled = false;
		}
		if (handled) {
			event.preventDefault();
			event.stopPropagation();
		}
	},

	/* Filter entered characters - based on date format. */
	_doKeyPress: function(event) {
		var inst = $.datepicker._getInst(event.target);
		if ($.datepicker._get(inst, 'constrainInput')) {
			var chars = $.datepicker._possibleChars($.datepicker._get(inst, 'dateFormat'));
			var chr = String.fromCharCode(event.charCode == undefined ? event.keyCode : event.charCode);
			return event.ctrlKey || event.metaKey || (chr < ' ' || !chars || chars.indexOf(chr) > -1);
		}
	},

	/* Synchronise manual entry and field/alternate field. */
	_doKeyUp: function(event) {
		var inst = $.datepicker._getInst(event.target);
		if (inst.input.val() != inst.lastVal) {
			try {
				var date = $.datepicker.parseDate($.datepicker._get(inst, 'dateFormat'),
					(inst.input ? inst.input.val() : null),
					$.datepicker._getFormatConfig(inst));
				if (date) { // only if valid
					$.datepicker._setDateFromField(inst);
					$.datepicker._updateAlternate(inst);
					$.datepicker._updateDatepicker(inst);
				}
			}
			catch (err) {
				$.datepicker.log(err);
			}
		}
		return true;
	},

	/* Pop-up the date picker for a given input field.
	   If false returned from beforeShow event handler do not show.
	   @param  input  element - the input field attached to the date picker or
	                  event - if triggered by focus */
	_showDatepicker: function(input) {
		input = input.target || input;
		if (input.nodeName.toLowerCase() != 'input') // find from button/image trigger
			input = $('input', input.parentNode)[0];
		if ($.datepicker._isDisabledDatepicker(input) || $.datepicker._lastInput == input) // already here
			return;
		var inst = $.datepicker._getInst(input);
		if ($.datepicker._curInst && $.datepicker._curInst != inst) {
			$.datepicker._curInst.dpDiv.stop(true, true);
			if ( inst && $.datepicker._datepickerShowing ) {
				$.datepicker._hideDatepicker( $.datepicker._curInst.input[0] );
			}
		}
		var beforeShow = $.datepicker._get(inst, 'beforeShow');
		var beforeShowSettings = beforeShow ? beforeShow.apply(input, [input, inst]) : {};
		if(beforeShowSettings === false){
			//false
			return;
		}
		extendRemove(inst.settings, beforeShowSettings);
		inst.lastVal = null;
		$.datepicker._lastInput = input;
		$.datepicker._setDateFromField(inst);
		if ($.datepicker._inDialog) // hide cursor
			input.value = '';
		if (!$.datepicker._pos) { // position below input
			$.datepicker._pos = $.datepicker._findPos(input);
			$.datepicker._pos[1] += input.offsetHeight; // add the height
		}
		var isFixed = false;
		$(input).parents().each(function() {
			isFixed |= $(this).css('position') == 'fixed';
			return !isFixed;
		});
		var offset = {left: $.datepicker._pos[0], top: $.datepicker._pos[1]};
		$.datepicker._pos = null;
		//to avoid flashes on Firefox
		inst.dpDiv.empty();
		// determine sizing offscreen
		inst.dpDiv.css({position: 'absolute', display: 'block', top: '-1000px'});
		$.datepicker._updateDatepicker(inst);
		// fix width for dynamic number of date pickers
		// and adjust position before showing
		offset = $.datepicker._checkOffset(inst, offset, isFixed);
		inst.dpDiv.css({position: ($.datepicker._inDialog && $.blockUI ?
			'static' : (isFixed ? 'fixed' : 'absolute')), display: 'none',
			left: offset.left + 'px', top: offset.top + 'px'});
		if (!inst.inline) {
			var showAnim = $.datepicker._get(inst, 'showAnim');
			var duration = $.datepicker._get(inst, 'duration');
			var postProcess = function() {
				var cover = inst.dpDiv.find('iframe.ui-datepicker-cover'); // IE6- only
				if( !! cover.length ){
					var borders = $.datepicker._getBorders(inst.dpDiv);
					cover.css({left: -borders[0], top: -borders[1],
						width: inst.dpDiv.outerWidth(), height: inst.dpDiv.outerHeight()});
				}
			};
			inst.dpDiv.zIndex($(input).zIndex()+1);
			$.datepicker._datepickerShowing = true;

			// DEPRECATED: after BC for 1.8.x $.effects[ showAnim ] is not needed
			if ( $.effects && ( $.effects.effect[ showAnim ] || $.effects[ showAnim ] ) )
				inst.dpDiv.show(showAnim, $.datepicker._get(inst, 'showOptions'), duration, postProcess);
			else
				inst.dpDiv[showAnim || 'show']((showAnim ? duration : null), postProcess);
			if (!showAnim || !duration)
				postProcess();
			if (inst.input.is(':visible') && !inst.input.is(':disabled'))
				inst.input.focus();
			$.datepicker._curInst = inst;
		}
	},

	/* Generate the date picker content. */
	_updateDatepicker: function(inst) {
		this.maxRows = 4; //Reset the max number of rows being displayed (see #7043)
		var borders = $.datepicker._getBorders(inst.dpDiv);
		instActive = inst; // for delegate hover events
		inst.dpDiv.empty().append(this._generateHTML(inst));
		this._attachHandlers(inst);
		var cover = inst.dpDiv.find('iframe.ui-datepicker-cover'); // IE6- only
		if( !!cover.length ){ //avoid call to outerXXXX() when not in IE6
			cover.css({left: -borders[0], top: -borders[1], width: inst.dpDiv.outerWidth(), height: inst.dpDiv.outerHeight()})
		}
		inst.dpDiv.find('.' + this._dayOverClass + ' a').mouseover();
		var numMonths = this._getNumberOfMonths(inst);
		var cols = numMonths[1];
		var width = 17;
		inst.dpDiv.removeClass('ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4').width('');
		if (cols > 1)
			inst.dpDiv.addClass('ui-datepicker-multi-' + cols).css('width', (width * cols) + 'em');
		inst.dpDiv[(numMonths[0] != 1 || numMonths[1] != 1 ? 'add' : 'remove') +
			'Class']('ui-datepicker-multi');
		inst.dpDiv[(this._get(inst, 'isRTL') ? 'add' : 'remove') +
			'Class']('ui-datepicker-rtl');
		if (inst == $.datepicker._curInst && $.datepicker._datepickerShowing && inst.input &&
				// #6694 - don't focus the input if it's already focused
				// this breaks the change event in IE
				inst.input.is(':visible') && !inst.input.is(':disabled') && inst.input[0] != document.activeElement)
			inst.input.focus();
		// deffered render of the years select (to avoid flashes on Firefox)
		if( inst.yearshtml ){
			var origyearshtml = inst.yearshtml;
			setTimeout(function(){
				//assure that inst.yearshtml didn't change.
				if( origyearshtml === inst.yearshtml && inst.yearshtml ){
					inst.dpDiv.find('select.ui-datepicker-year:first').replaceWith(inst.yearshtml);
				}
				origyearshtml = inst.yearshtml = null;
			}, 0);
		}
	},

	/* Retrieve the size of left and top borders for an element.
	   @param  elem  (jQuery object) the element of interest
	   @return  (number[2]) the left and top borders */
	_getBorders: function(elem) {
		var convert = function(value) {
			return {thin: 1, medium: 2, thick: 3}[value] || value;
		};
		return [parseFloat(convert(elem.css('border-left-width'))),
			parseFloat(convert(elem.css('border-top-width')))];
	},

	/* Check positioning to remain on screen. */
	_checkOffset: function(inst, offset, isFixed) {
		var dpWidth = inst.dpDiv.outerWidth();
		var dpHeight = inst.dpDiv.outerHeight();
		var inputWidth = inst.input ? inst.input.outerWidth() : 0;
		var inputHeight = inst.input ? inst.input.outerHeight() : 0;
		var viewWidth = document.documentElement.clientWidth + (isFixed ? 0 : $(document).scrollLeft());
		var viewHeight = document.documentElement.clientHeight + (isFixed ? 0 : $(document).scrollTop());

		offset.left -= (this._get(inst, 'isRTL') ? (dpWidth - inputWidth) : 0);
		offset.left -= (isFixed && offset.left == inst.input.offset().left) ? $(document).scrollLeft() : 0;
		offset.top -= (isFixed && offset.top == (inst.input.offset().top + inputHeight)) ? $(document).scrollTop() : 0;

		// now check if datepicker is showing outside window viewport - move to a better place if so.
		offset.left -= Math.min(offset.left, (offset.left + dpWidth > viewWidth && viewWidth > dpWidth) ?
			Math.abs(offset.left + dpWidth - viewWidth) : 0);
		offset.top -= Math.min(offset.top, (offset.top + dpHeight > viewHeight && viewHeight > dpHeight) ?
			Math.abs(dpHeight + inputHeight) : 0);

		return offset;
	},

	/* Find an object's position on the screen. */
	_findPos: function(obj) {
		var inst = this._getInst(obj);
		var isRTL = this._get(inst, 'isRTL');
		while (obj && (obj.type == 'hidden' || obj.nodeType != 1 || $.expr.filters.hidden(obj))) {
			obj = obj[isRTL ? 'previousSibling' : 'nextSibling'];
		}
		var position = $(obj).offset();
		return [position.left, position.top];
	},

	/* Hide the date picker from view.
	   @param  input  element - the input field attached to the date picker */
	_hideDatepicker: function(input) {
		var inst = this._curInst;
		if (!inst || (input && inst != $.data(input, PROP_NAME)))
			return;
		if (this._datepickerShowing) {
			var showAnim = this._get(inst, 'showAnim');
			var duration = this._get(inst, 'duration');
			var postProcess = function() {
				$.datepicker._tidyDialog(inst);
			};

			// DEPRECATED: after BC for 1.8.x $.effects[ showAnim ] is not needed
			if ( $.effects && ( $.effects.effect[ showAnim ] || $.effects[ showAnim ] ) )
				inst.dpDiv.hide(showAnim, $.datepicker._get(inst, 'showOptions'), duration, postProcess);
			else
				inst.dpDiv[(showAnim == 'slideDown' ? 'slideUp' :
					(showAnim == 'fadeIn' ? 'fadeOut' : 'hide'))]((showAnim ? duration : null), postProcess);
			if (!showAnim)
				postProcess();
			this._datepickerShowing = false;
			var onClose = this._get(inst, 'onClose');
			if (onClose)
				onClose.apply((inst.input ? inst.input[0] : null),
					[(inst.input ? inst.input.val() : ''), inst]);
			this._lastInput = null;
			if (this._inDialog) {
				this._dialogInput.css({ position: 'absolute', left: '0', top: '-100px' });
				if ($.blockUI) {
					$.unblockUI();
					$('body').append(this.dpDiv);
				}
			}
			this._inDialog = false;
		}
	},

	/* Tidy up after a dialog display. */
	_tidyDialog: function(inst) {
		inst.dpDiv.removeClass(this._dialogClass).unbind('.ui-datepicker-calendar');
	},

	/* Close date picker if clicked elsewhere. */
	_checkExternalClick: function(event) {
		if (!$.datepicker._curInst)
			return;

		var $target = $(event.target),
			inst = $.datepicker._getInst($target[0]);

		if ( ( ( $target[0].id != $.datepicker._mainDivId &&
				$target.parents('#' + $.datepicker._mainDivId).length == 0 &&
				!$target.hasClass($.datepicker.markerClassName) &&
				!$target.closest("." + $.datepicker._triggerClass).length &&
				$.datepicker._datepickerShowing && !($.datepicker._inDialog && $.blockUI) ) ) ||
			( $target.hasClass($.datepicker.markerClassName) && $.datepicker._curInst != inst ) )
			$.datepicker._hideDatepicker();
	},

	/* Adjust one of the date sub-fields. */
	_adjustDate: function(id, offset, period) {
		var target = $(id);
		var inst = this._getInst(target[0]);
		if (this._isDisabledDatepicker(target[0])) {
			return;
		}
		this._adjustInstDate(inst, offset +
			(period == 'M' ? this._get(inst, 'showCurrentAtPos') : 0), // undo positioning
			period);
		this._updateDatepicker(inst);
	},

	/* Action for current link. */
	_gotoToday: function(id) {
		var target = $(id);
		var inst = this._getInst(target[0]);
		if (this._get(inst, 'gotoCurrent') && inst.currentDay) {
			inst.selectedDay = inst.currentDay;
			inst.drawMonth = inst.selectedMonth = inst.currentMonth;
			inst.drawYear = inst.selectedYear = inst.currentYear;
		}
		else {
			var date = new Date();
			inst.selectedDay = date.getDate();
			inst.drawMonth = inst.selectedMonth = date.getMonth();
			inst.drawYear = inst.selectedYear = date.getFullYear();
		}
		this._notifyChange(inst);
		this._adjustDate(target);
	},

	/* Action for selecting a new month/year. */
	_selectMonthYear: function(id, select, period) {
		var target = $(id);
		var inst = this._getInst(target[0]);
		inst['selected' + (period == 'M' ? 'Month' : 'Year')] =
		inst['draw' + (period == 'M' ? 'Month' : 'Year')] =
			parseInt(select.options[select.selectedIndex].value,10);
		this._notifyChange(inst);
		this._adjustDate(target);
	},

	/* Action for selecting a day. */
	_selectDay: function(id, month, year, td) {
		var target = $(id);
		if ($(td).hasClass(this._unselectableClass) || this._isDisabledDatepicker(target[0])) {
			return;
		}
		var inst = this._getInst(target[0]);
		inst.selectedDay = inst.currentDay = $('a', td).html();
		inst.selectedMonth = inst.currentMonth = month;
		inst.selectedYear = inst.currentYear = year;
		this._selectDate(id, this._formatDate(inst,
			inst.currentDay, inst.currentMonth, inst.currentYear));
	},

	/* Erase the input field and hide the date picker. */
	_clearDate: function(id) {
		var target = $(id);
		var inst = this._getInst(target[0]);
		this._selectDate(target, '');
	},

	/* Update the input field with the selected date. */
	_selectDate: function(id, dateStr) {
		var target = $(id);
		var inst = this._getInst(target[0]);
		dateStr = (dateStr != null ? dateStr : this._formatDate(inst));
		if (inst.input)
			inst.input.val(dateStr);
		this._updateAlternate(inst);
		var onSelect = this._get(inst, 'onSelect');
		if (onSelect)
			onSelect.apply((inst.input ? inst.input[0] : null), [dateStr, inst]);  // trigger custom callback
		else if (inst.input)
			inst.input.trigger('change'); // fire the change event
		if (inst.inline)
			this._updateDatepicker(inst);
		else {
			this._hideDatepicker();
			this._lastInput = inst.input[0];
			if (typeof(inst.input[0]) != 'object')
				inst.input.focus(); // restore focus
			this._lastInput = null;
		}
	},

	/* Update any alternate field to synchronise with the main field. */
	_updateAlternate: function(inst) {
		var altField = this._get(inst, 'altField');
		if (altField) { // update alternate field too
			var altFormat = this._get(inst, 'altFormat') || this._get(inst, 'dateFormat');
			var date = this._getDate(inst);
			var dateStr = this.formatDate(altFormat, date, this._getFormatConfig(inst));
			$(altField).each(function() { $(this).val(dateStr); });
		}
	},

	/* Set as beforeShowDay function to prevent selection of weekends.
	   @param  date  Date - the date to customise
	   @return [boolean, string] - is this date selectable?, what is its CSS class? */
	noWeekends: function(date) {
		var day = date.getDay();
		return [(day > 0 && day < 6), ''];
	},

	/* Set as calculateWeek to determine the week of the year based on the ISO 8601 definition.
	   @param  date  Date - the date to get the week for
	   @return  number - the number of the week within the year that contains this date */
	iso8601Week: function(date) {
		var checkDate = new Date(date.getTime());
		// Find Thursday of this week starting on Monday
		checkDate.setDate(checkDate.getDate() + 4 - (checkDate.getDay() || 7));
		var time = checkDate.getTime();
		checkDate.setMonth(0); // Compare with Jan 1
		checkDate.setDate(1);
		return Math.floor(Math.round((time - checkDate) / 86400000) / 7) + 1;
	},

	/* Parse a string value into a date object.
	   See formatDate below for the possible formats.

	   @param  format    string - the expected format of the date
	   @param  value     string - the date in the above format
	   @param  settings  Object - attributes include:
	                     shortYearCutoff  number - the cutoff year for determining the century (optional)
	                     dayNamesShort    string[7] - abbreviated names of the days from Sunday (optional)
	                     dayNames         string[7] - names of the days from Sunday (optional)
	                     monthNamesShort  string[12] - abbreviated names of the months (optional)
	                     monthNames       string[12] - names of the months (optional)
	   @return  Date - the extracted date value or null if value is blank */
	parseDate: function (format, value, settings) {
		if (format == null || value == null)
			throw 'Invalid arguments';
		value = (typeof value == 'object' ? value.toString() : value + '');
		if (value == '')
			return null;
		var shortYearCutoff = (settings ? settings.shortYearCutoff : null) || this._defaults.shortYearCutoff;
		shortYearCutoff = (typeof shortYearCutoff != 'string' ? shortYearCutoff :
				new Date().getFullYear() % 100 + parseInt(shortYearCutoff, 10));
		var dayNamesShort = (settings ? settings.dayNamesShort : null) || this._defaults.dayNamesShort;
		var dayNames = (settings ? settings.dayNames : null) || this._defaults.dayNames;
		var monthNamesShort = (settings ? settings.monthNamesShort : null) || this._defaults.monthNamesShort;
		var monthNames = (settings ? settings.monthNames : null) || this._defaults.monthNames;
		var year = -1;
		var month = -1;
		var day = -1;
		var doy = -1;
		var literal = false;
		// Check whether a format character is doubled
		var lookAhead = function(match) {
			var matches = (iFormat + 1 < format.length && format.charAt(iFormat + 1) == match);
			if (matches)
				iFormat++;
			return matches;
		};
		// Extract a number from the string value
		var getNumber = function(match) {
			var isDoubled = lookAhead(match);
			var size = (match == '@' ? 14 : (match == '!' ? 20 :
				(match == 'y' && isDoubled ? 4 : (match == 'o' ? 3 : 2))));
			var digits = new RegExp('^\\d{1,' + size + '}');
			var num = value.substring(iValue).match(digits);
			if (!num)
				throw 'Missing number at position ' + iValue;
			iValue += num[0].length;
			return parseInt(num[0], 10);
		};
		// Extract a name from the string value and convert to an index
		var getName = function(match, shortNames, longNames) {
			var names = $.map(lookAhead(match) ? longNames : shortNames, function (v, k) {
				return [ [k, v] ];
			}).sort(function (a, b) {
				return -(a[1].length - b[1].length);
			});
			var index = -1;
			$.each(names, function (i, pair) {
				var name = pair[1];
				if (value.substr(iValue, name.length).toLowerCase() == name.toLowerCase()) {
					index = pair[0];
					iValue += name.length;
					return false;
				}
			});
			if (index != -1)
				return index + 1;
			else
				throw 'Unknown name at position ' + iValue;
		};
		// Confirm that a literal character matches the string value
		var checkLiteral = function() {
			if (value.charAt(iValue) != format.charAt(iFormat))
				throw 'Unexpected literal at position ' + iValue;
			iValue++;
		};
		var iValue = 0;
		for (var iFormat = 0; iFormat < format.length; iFormat++) {
			if (literal)
				if (format.charAt(iFormat) == "'" && !lookAhead("'"))
					literal = false;
				else
					checkLiteral();
			else
				switch (format.charAt(iFormat)) {
					case 'd':
						day = getNumber('d');
						break;
					case 'D':
						getName('D', dayNamesShort, dayNames);
						break;
					case 'o':
						doy = getNumber('o');
						break;
					case 'm':
						month = getNumber('m');
						break;
					case 'M':
						month = getName('M', monthNamesShort, monthNames);
						break;
					case 'y':
						year = getNumber('y');
						break;
					case '@':
						var date = new Date(getNumber('@'));
						year = date.getFullYear();
						month = date.getMonth() + 1;
						day = date.getDate();
						break;
					case '!':
						var date = new Date((getNumber('!') - this._ticksTo1970) / 10000);
						year = date.getFullYear();
						month = date.getMonth() + 1;
						day = date.getDate();
						break;
					case "'":
						if (lookAhead("'"))
							checkLiteral();
						else
							literal = true;
						break;
					default:
						checkLiteral();
				}
		}
		if (iValue < value.length){
			var extra = value.substr(iValue);
			if (!/^\s+/.test(extra)) {
				throw "Extra/unparsed characters found in date: " + extra;
			}
		}
		if (year == -1)
			year = new Date().getFullYear();
		else if (year < 100)
			year += new Date().getFullYear() - new Date().getFullYear() % 100 +
				(year <= shortYearCutoff ? 0 : -100);
		if (doy > -1) {
			month = 1;
			day = doy;
			do {
				var dim = this._getDaysInMonth(year, month - 1);
				if (day <= dim)
					break;
				month++;
				day -= dim;
			} while (true);
		}
		var date = this._daylightSavingAdjust(new Date(year, month - 1, day));
		if (date.getFullYear() != year || date.getMonth() + 1 != month || date.getDate() != day)
			throw 'Invalid date'; // E.g. 31/02/00
		return date;
	},

	/* Standard date formats. */
	ATOM: 'yy-mm-dd', // RFC 3339 (ISO 8601)
	COOKIE: 'D, dd M yy',
	ISO_8601: 'yy-mm-dd',
	RFC_822: 'D, d M y',
	RFC_850: 'DD, dd-M-y',
	RFC_1036: 'D, d M y',
	RFC_1123: 'D, d M yy',
	RFC_2822: 'D, d M yy',
	RSS: 'D, d M y', // RFC 822
	TICKS: '!',
	TIMESTAMP: '@',
	W3C: 'yy-mm-dd', // ISO 8601

	_ticksTo1970: (((1970 - 1) * 365 + Math.floor(1970 / 4) - Math.floor(1970 / 100) +
		Math.floor(1970 / 400)) * 24 * 60 * 60 * 10000000),

	/* Format a date object into a string value.
	   The format can be combinations of the following:
	   d  - day of month (no leading zero)
	   dd - day of month (two digit)
	   o  - day of year (no leading zeros)
	   oo - day of year (three digit)
	   D  - day name short
	   DD - day name long
	   m  - month of year (no leading zero)
	   mm - month of year (two digit)
	   M  - month name short
	   MM - month name long
	   y  - year (two digit)
	   yy - year (four digit)
	   @ - Unix timestamp (ms since 01/01/1970)
	   ! - Windows ticks (100ns since 01/01/0001)
	   '...' - literal text
	   '' - single quote

	   @param  format    string - the desired format of the date
	   @param  date      Date - the date value to format
	   @param  settings  Object - attributes include:
	                     dayNamesShort    string[7] - abbreviated names of the days from Sunday (optional)
	                     dayNames         string[7] - names of the days from Sunday (optional)
	                     monthNamesShort  string[12] - abbreviated names of the months (optional)
	                     monthNames       string[12] - names of the months (optional)
	   @return  string - the date in the above format */
	formatDate: function (format, date, settings) {
		if (!date)
			return '';
		var dayNamesShort = (settings ? settings.dayNamesShort : null) || this._defaults.dayNamesShort;
		var dayNames = (settings ? settings.dayNames : null) || this._defaults.dayNames;
		var monthNamesShort = (settings ? settings.monthNamesShort : null) || this._defaults.monthNamesShort;
		var monthNames = (settings ? settings.monthNames : null) || this._defaults.monthNames;
		// Check whether a format character is doubled
		var lookAhead = function(match) {
			var matches = (iFormat + 1 < format.length && format.charAt(iFormat + 1) == match);
			if (matches)
				iFormat++;
			return matches;
		};
		// Format a number, with leading zero if necessary
		var formatNumber = function(match, value, len) {
			var num = '' + value;
			if (lookAhead(match))
				while (num.length < len)
					num = '0' + num;
			return num;
		};
		// Format a name, short or long as requested
		var formatName = function(match, value, shortNames, longNames) {
			return (lookAhead(match) ? longNames[value] : shortNames[value]);
		};
		var output = '';
		var literal = false;
		if (date)
			for (var iFormat = 0; iFormat < format.length; iFormat++) {
				if (literal)
					if (format.charAt(iFormat) == "'" && !lookAhead("'"))
						literal = false;
					else
						output += format.charAt(iFormat);
				else
					switch (format.charAt(iFormat)) {
						case 'd':
							output += formatNumber('d', date.getDate(), 2);
							break;
						case 'D':
							output += formatName('D', date.getDay(), dayNamesShort, dayNames);
							break;
						case 'o':
							output += formatNumber('o',
								Math.round((new Date(date.getFullYear(), date.getMonth(), date.getDate()).getTime() - new Date(date.getFullYear(), 0, 0).getTime()) / 86400000), 3);
							break;
						case 'm':
							output += formatNumber('m', date.getMonth() + 1, 2);
							break;
						case 'M':
							output += formatName('M', date.getMonth(), monthNamesShort, monthNames);
							break;
						case 'y':
							output += (lookAhead('y') ? date.getFullYear() :
								(date.getYear() % 100 < 10 ? '0' : '') + date.getYear() % 100);
							break;
						case '@':
							output += date.getTime();
							break;
						case '!':
							output += date.getTime() * 10000 + this._ticksTo1970;
							break;
						case "'":
							if (lookAhead("'"))
								output += "'";
							else
								literal = true;
							break;
						default:
							output += format.charAt(iFormat);
					}
			}
		return output;
	},

	/* Extract all possible characters from the date format. */
	_possibleChars: function (format) {
		var chars = '';
		var literal = false;
		// Check whether a format character is doubled
		var lookAhead = function(match) {
			var matches = (iFormat + 1 < format.length && format.charAt(iFormat + 1) == match);
			if (matches)
				iFormat++;
			return matches;
		};
		for (var iFormat = 0; iFormat < format.length; iFormat++)
			if (literal)
				if (format.charAt(iFormat) == "'" && !lookAhead("'"))
					literal = false;
				else
					chars += format.charAt(iFormat);
			else
				switch (format.charAt(iFormat)) {
					case 'd': case 'm': case 'y': case '@':
						chars += '0123456789';
						break;
					case 'D': case 'M':
						return null; // Accept anything
					case "'":
						if (lookAhead("'"))
							chars += "'";
						else
							literal = true;
						break;
					default:
						chars += format.charAt(iFormat);
				}
		return chars;
	},

	/* Get a setting value, defaulting if necessary. */
	_get: function(inst, name) {
		return inst.settings[name] !== undefined ?
			inst.settings[name] : this._defaults[name];
	},

	/* Parse existing date and initialise date picker. */
	_setDateFromField: function(inst, noDefault) {
		if (inst.input.val() == inst.lastVal) {
			return;
		}
		var dateFormat = this._get(inst, 'dateFormat');
		var dates = inst.lastVal = inst.input ? inst.input.val() : null;
		var date, defaultDate;
		date = defaultDate = this._getDefaultDate(inst);
		var settings = this._getFormatConfig(inst);
		try {
			date = this.parseDate(dateFormat, dates, settings) || defaultDate;
		} catch (event) {
			this.log(event);
			dates = (noDefault ? '' : dates);
		}
		inst.selectedDay = date.getDate();
		inst.drawMonth = inst.selectedMonth = date.getMonth();
		inst.drawYear = inst.selectedYear = date.getFullYear();
		inst.currentDay = (dates ? date.getDate() : 0);
		inst.currentMonth = (dates ? date.getMonth() : 0);
		inst.currentYear = (dates ? date.getFullYear() : 0);
		this._adjustInstDate(inst);
	},

	/* Retrieve the default date shown on opening. */
	_getDefaultDate: function(inst) {
		return this._restrictMinMax(inst,
			this._determineDate(inst, this._get(inst, 'defaultDate'), new Date()));
	},

	/* A date may be specified as an exact value or a relative one. */
	_determineDate: function(inst, date, defaultDate) {
		var offsetNumeric = function(offset) {
			var date = new Date();
			date.setDate(date.getDate() + offset);
			return date;
		};
		var offsetString = function(offset) {
			try {
				return $.datepicker.parseDate($.datepicker._get(inst, 'dateFormat'),
					offset, $.datepicker._getFormatConfig(inst));
			}
			catch (e) {
				// Ignore
			}
			var date = (offset.toLowerCase().match(/^c/) ?
				$.datepicker._getDate(inst) : null) || new Date();
			var year = date.getFullYear();
			var month = date.getMonth();
			var day = date.getDate();
			var pattern = /([+-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g;
			var matches = pattern.exec(offset);
			while (matches) {
				switch (matches[2] || 'd') {
					case 'd' : case 'D' :
						day += parseInt(matches[1],10); break;
					case 'w' : case 'W' :
						day += parseInt(matches[1],10) * 7; break;
					case 'm' : case 'M' :
						month += parseInt(matches[1],10);
						day = Math.min(day, $.datepicker._getDaysInMonth(year, month));
						break;
					case 'y': case 'Y' :
						year += parseInt(matches[1],10);
						day = Math.min(day, $.datepicker._getDaysInMonth(year, month));
						break;
				}
				matches = pattern.exec(offset);
			}
			return new Date(year, month, day);
		};
		var newDate = (date == null || date === '' ? defaultDate : (typeof date == 'string' ? offsetString(date) :
			(typeof date == 'number' ? (isNaN(date) ? defaultDate : offsetNumeric(date)) : new Date(date.getTime()))));
		newDate = (newDate && newDate.toString() == 'Invalid Date' ? defaultDate : newDate);
		if (newDate) {
			newDate.setHours(0);
			newDate.setMinutes(0);
			newDate.setSeconds(0);
			newDate.setMilliseconds(0);
		}
		return this._daylightSavingAdjust(newDate);
	},

	/* Handle switch to/from daylight saving.
	   Hours may be non-zero on daylight saving cut-over:
	   > 12 when midnight changeover, but then cannot generate
	   midnight datetime, so jump to 1AM, otherwise reset.
	   @param  date  (Date) the date to check
	   @return  (Date) the corrected date */
	_daylightSavingAdjust: function(date) {
		if (!date) return null;
		date.setHours(date.getHours() > 12 ? date.getHours() + 2 : 0);
		return date;
	},

	/* Set the date(s) directly. */
	_setDate: function(inst, date, noChange) {
		var clear = !date;
		var origMonth = inst.selectedMonth;
		var origYear = inst.selectedYear;
		var newDate = this._restrictMinMax(inst, this._determineDate(inst, date, new Date()));
		inst.selectedDay = inst.currentDay = newDate.getDate();
		inst.drawMonth = inst.selectedMonth = inst.currentMonth = newDate.getMonth();
		inst.drawYear = inst.selectedYear = inst.currentYear = newDate.getFullYear();
		if ((origMonth != inst.selectedMonth || origYear != inst.selectedYear) && !noChange)
			this._notifyChange(inst);
		this._adjustInstDate(inst);
		if (inst.input) {
			inst.input.val(clear ? '' : this._formatDate(inst));
		}
	},

	/* Retrieve the date(s) directly. */
	_getDate: function(inst) {
		var startDate = (!inst.currentYear || (inst.input && inst.input.val() == '') ? null :
			this._daylightSavingAdjust(new Date(
			inst.currentYear, inst.currentMonth, inst.currentDay)));
			return startDate;
	},

	/* Attach the onxxx handlers.  These are declared statically so
	 * they work with static code transformers like Caja.
	 */
	_attachHandlers: function(inst) {
		var stepMonths = this._get(inst, 'stepMonths');
		var id = '#' + inst.id.replace( /\\\\/g, "\\" );
		inst.dpDiv.find('[data-handler]').map(function () {
			var handler = {
				prev: function () {
					window['DP_jQuery_' + dpuuid].datepicker._adjustDate(id, -stepMonths, 'M');
				},
				next: function () {
					window['DP_jQuery_' + dpuuid].datepicker._adjustDate(id, +stepMonths, 'M');
				},
				hide: function () {
					window['DP_jQuery_' + dpuuid].datepicker._hideDatepicker();
				},
				today: function () {
					window['DP_jQuery_' + dpuuid].datepicker._gotoToday(id);
				},
				selectDay: function () {
					window['DP_jQuery_' + dpuuid].datepicker._selectDay(id, +this.getAttribute('data-month'), +this.getAttribute('data-year'), this);
					return false;
				},
				selectMonth: function () {
					window['DP_jQuery_' + dpuuid].datepicker._selectMonthYear(id, this, 'M');
					return false;
				},
				selectYear: function () {
					window['DP_jQuery_' + dpuuid].datepicker._selectMonthYear(id, this, 'Y');
					return false;
				}
			};
			$(this).bind(this.getAttribute('data-event'), handler[this.getAttribute('data-handler')]);
		});
	},

	/* Generate the HTML for the current state of the date picker. */
	_generateHTML: function(inst) {
		var today = new Date();
		today = this._daylightSavingAdjust(
			new Date(today.getFullYear(), today.getMonth(), today.getDate())); // clear time
		var isRTL = this._get(inst, 'isRTL');
		var showButtonPanel = this._get(inst, 'showButtonPanel');
		var hideIfNoPrevNext = this._get(inst, 'hideIfNoPrevNext');
		var navigationAsDateFormat = this._get(inst, 'navigationAsDateFormat');
		var numMonths = this._getNumberOfMonths(inst);
		var showCurrentAtPos = this._get(inst, 'showCurrentAtPos');
		var stepMonths = this._get(inst, 'stepMonths');
		var isMultiMonth = (numMonths[0] != 1 || numMonths[1] != 1);
		var currentDate = this._daylightSavingAdjust((!inst.currentDay ? new Date(9999, 9, 9) :
			new Date(inst.currentYear, inst.currentMonth, inst.currentDay)));
		var minDate = this._getMinMaxDate(inst, 'min');
		var maxDate = this._getMinMaxDate(inst, 'max');
		var drawMonth = inst.drawMonth - showCurrentAtPos;
		var drawYear = inst.drawYear;
		if (drawMonth < 0) {
			drawMonth += 12;
			drawYear--;
		}
		if (maxDate) {
			var maxDraw = this._daylightSavingAdjust(new Date(maxDate.getFullYear(),
				maxDate.getMonth() - (numMonths[0] * numMonths[1]) + 1, maxDate.getDate()));
			maxDraw = (minDate && maxDraw < minDate ? minDate : maxDraw);
			while (this._daylightSavingAdjust(new Date(drawYear, drawMonth, 1)) > maxDraw) {
				drawMonth--;
				if (drawMonth < 0) {
					drawMonth = 11;
					drawYear--;
				}
			}
		}
		inst.drawMonth = drawMonth;
		inst.drawYear = drawYear;
		var prevText = this._get(inst, 'prevText');
		prevText = (!navigationAsDateFormat ? prevText : this.formatDate(prevText,
			this._daylightSavingAdjust(new Date(drawYear, drawMonth - stepMonths, 1)),
			this._getFormatConfig(inst)));
		var prev = (this._canAdjustMonth(inst, -1, drawYear, drawMonth) ?
			'<a class="ui-datepicker-prev ui-corner-all" data-handler="prev" data-event="click"' +
			' title="' + prevText + '"><span class="ui-icon ui-icon-circle-triangle-' + ( isRTL ? 'e' : 'w') + '">' + prevText + '</span></a>' :
			(hideIfNoPrevNext ? '' : '<a class="ui-datepicker-prev ui-corner-all ui-state-disabled" title="'+ prevText +'"><span class="ui-icon ui-icon-circle-triangle-' + ( isRTL ? 'e' : 'w') + '">' + prevText + '</span></a>'));
		var nextText = this._get(inst, 'nextText');
		nextText = (!navigationAsDateFormat ? nextText : this.formatDate(nextText,
			this._daylightSavingAdjust(new Date(drawYear, drawMonth + stepMonths, 1)),
			this._getFormatConfig(inst)));
		var next = (this._canAdjustMonth(inst, +1, drawYear, drawMonth) ?
			'<a class="ui-datepicker-next ui-corner-all" data-handler="next" data-event="click"' +
			' title="' + nextText + '"><span class="ui-icon ui-icon-circle-triangle-' + ( isRTL ? 'w' : 'e') + '">' + nextText + '</span></a>' :
			(hideIfNoPrevNext ? '' : '<a class="ui-datepicker-next ui-corner-all ui-state-disabled" title="'+ nextText + '"><span class="ui-icon ui-icon-circle-triangle-' + ( isRTL ? 'w' : 'e') + '">' + nextText + '</span></a>'));
		var currentText = this._get(inst, 'currentText');
		var gotoDate = (this._get(inst, 'gotoCurrent') && inst.currentDay ? currentDate : today);
		currentText = (!navigationAsDateFormat ? currentText :
			this.formatDate(currentText, gotoDate, this._getFormatConfig(inst)));
		var controls = (!inst.inline ? '<button type="button" class="ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all" data-handler="hide" data-event="click">' +
			this._get(inst, 'closeText') + '</button>' : '');
		var buttonPanel = (showButtonPanel) ? '<div class="ui-datepicker-buttonpane ui-widget-content">' + (isRTL ? controls : '') +
			(this._isInRange(inst, gotoDate) ? '<button type="button" class="ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all" data-handler="today" data-event="click"' +
			'>' + currentText + '</button>' : '') + (isRTL ? '' : controls) + '</div>' : '';
		var firstDay = parseInt(this._get(inst, 'firstDay'),10);
		firstDay = (isNaN(firstDay) ? 0 : firstDay);
		var showWeek = this._get(inst, 'showWeek');
		var dayNames = this._get(inst, 'dayNames');
		var dayNamesShort = this._get(inst, 'dayNamesShort');
		var dayNamesMin = this._get(inst, 'dayNamesMin');
		var monthNames = this._get(inst, 'monthNames');
		var monthNamesShort = this._get(inst, 'monthNamesShort');
		var beforeShowDay = this._get(inst, 'beforeShowDay');
		var showOtherMonths = this._get(inst, 'showOtherMonths');
		var selectOtherMonths = this._get(inst, 'selectOtherMonths');
		var calculateWeek = this._get(inst, 'calculateWeek') || this.iso8601Week;
		var defaultDate = this._getDefaultDate(inst);
		var html = '';
		for (var row = 0; row < numMonths[0]; row++) {
			var group = '';
			this.maxRows = 4;
			for (var col = 0; col < numMonths[1]; col++) {
				var selectedDate = this._daylightSavingAdjust(new Date(drawYear, drawMonth, inst.selectedDay));
				var cornerClass = ' ui-corner-all';
				var calender = '';
				if (isMultiMonth) {
					calender += '<div class="ui-datepicker-group';
					if (numMonths[1] > 1)
						switch (col) {
							case 0: calender += ' ui-datepicker-group-first';
								cornerClass = ' ui-corner-' + (isRTL ? 'right' : 'left'); break;
							case numMonths[1]-1: calender += ' ui-datepicker-group-last';
								cornerClass = ' ui-corner-' + (isRTL ? 'left' : 'right'); break;
							default: calender += ' ui-datepicker-group-middle'; cornerClass = ''; break;
						}
					calender += '">';
				}
				calender += '<div class="ui-datepicker-header ui-widget-header ui-helper-clearfix' + cornerClass + '">' +
					(/all|left/.test(cornerClass) && row == 0 ? (isRTL ? next : prev) : '') +
					(/all|right/.test(cornerClass) && row == 0 ? (isRTL ? prev : next) : '') +
					this._generateMonthYearHeader(inst, drawMonth, drawYear, minDate, maxDate,
					row > 0 || col > 0, monthNames, monthNamesShort) + // draw month headers
					'</div><table class="ui-datepicker-calendar"><thead>' +
					'<tr>';
				var thead = (showWeek ? '<th class="ui-datepicker-week-col">' + this._get(inst, 'weekHeader') + '</th>' : '');
				for (var dow = 0; dow < 7; dow++) { // days of the week
					var day = (dow + firstDay) % 7;
					thead += '<th' + ((dow + firstDay + 6) % 7 >= 5 ? ' class="ui-datepicker-week-end"' : '') + '>' +
						'<span title="' + dayNames[day] + '">' + dayNamesMin[day] + '</span></th>';
				}
				calender += thead + '</tr></thead><tbody>';
				var daysInMonth = this._getDaysInMonth(drawYear, drawMonth);
				if (drawYear == inst.selectedYear && drawMonth == inst.selectedMonth)
					inst.selectedDay = Math.min(inst.selectedDay, daysInMonth);
				var leadDays = (this._getFirstDayOfMonth(drawYear, drawMonth) - firstDay + 7) % 7;
				var curRows = Math.ceil((leadDays + daysInMonth) / 7); // calculate the number of rows to generate
				var numRows = (isMultiMonth ? this.maxRows > curRows ? this.maxRows : curRows : curRows); //If multiple months, use the higher number of rows (see #7043)
				this.maxRows = numRows;
				var printDate = this._daylightSavingAdjust(new Date(drawYear, drawMonth, 1 - leadDays));
				for (var dRow = 0; dRow < numRows; dRow++) { // create date picker rows
					calender += '<tr>';
					var tbody = (!showWeek ? '' : '<td class="ui-datepicker-week-col">' +
						this._get(inst, 'calculateWeek')(printDate) + '</td>');
					for (var dow = 0; dow < 7; dow++) { // create date picker days
						var daySettings = (beforeShowDay ?
							beforeShowDay.apply((inst.input ? inst.input[0] : null), [printDate]) : [true, '']);
						var otherMonth = (printDate.getMonth() != drawMonth);
						var unselectable = (otherMonth && !selectOtherMonths) || !daySettings[0] ||
							(minDate && printDate < minDate) || (maxDate && printDate > maxDate);
						tbody += '<td class="' +
							((dow + firstDay + 6) % 7 >= 5 ? ' ui-datepicker-week-end' : '') + // highlight weekends
							(otherMonth ? ' ui-datepicker-other-month' : '') + // highlight days from other months
							((printDate.getTime() == selectedDate.getTime() && drawMonth == inst.selectedMonth && inst._keyEvent) || // user pressed key
							(defaultDate.getTime() == printDate.getTime() && defaultDate.getTime() == selectedDate.getTime()) ?
							// or defaultDate is current printedDate and defaultDate is selectedDate
							' ' + this._dayOverClass : '') + // highlight selected day
							(unselectable ? ' ' + this._unselectableClass + ' ui-state-disabled': '') +  // highlight unselectable days
							(otherMonth && !showOtherMonths ? '' : ' ' + daySettings[1] + // highlight custom dates
							(printDate.getTime() == currentDate.getTime() ? ' ' + this._currentClass : '') + // highlight selected day
							(printDate.getTime() == today.getTime() ? ' ui-datepicker-today' : '')) + '"' + // highlight today (if different)
							((!otherMonth || showOtherMonths) && daySettings[2] ? ' title="' + daySettings[2] + '"' : '') + // cell title
							(unselectable ? '' : ' data-handler="selectDay" data-event="click" data-month="' + printDate.getMonth() + '" data-year="' + printDate.getFullYear() + '"') + '>' + // actions
							(otherMonth && !showOtherMonths ? '&#xa0;' : // display for other months
							(unselectable ? '<span class="ui-state-default">' + printDate.getDate() + '</span>' : '<a class="ui-state-default' +
							(printDate.getTime() == today.getTime() ? ' ui-state-highlight' : '') +
							(printDate.getTime() == currentDate.getTime() ? ' ui-state-active' : '') + // highlight selected day
							(otherMonth ? ' ui-priority-secondary' : '') + // distinguish dates from other months
							'" href="#">' + printDate.getDate() + '</a>')) + '</td>'; // display selectable date
						printDate.setDate(printDate.getDate() + 1);
						printDate = this._daylightSavingAdjust(printDate);
					}
					calender += tbody + '</tr>';
				}
				drawMonth++;
				if (drawMonth > 11) {
					drawMonth = 0;
					drawYear++;
				}
				calender += '</tbody></table>' + (isMultiMonth ? '</div>' +
							((numMonths[0] > 0 && col == numMonths[1]-1) ? '<div class="ui-datepicker-row-break"></div>' : '') : '');
				group += calender;
			}
			html += group;
		}
		html += buttonPanel + ($.ui.ie6 && !inst.inline ?
			'<iframe src="javascript:false;" class="ui-datepicker-cover" frameborder="0"></iframe>' : '');
		inst._keyEvent = false;
		return html;
	},

	/* Generate the month and year header. */
	_generateMonthYearHeader: function(inst, drawMonth, drawYear, minDate, maxDate,
			secondary, monthNames, monthNamesShort) {
		var changeMonth = this._get(inst, 'changeMonth');
		var changeYear = this._get(inst, 'changeYear');
		var showMonthAfterYear = this._get(inst, 'showMonthAfterYear');
		var html = '<div class="ui-datepicker-title">';
		var monthHtml = '';
		// month selection
		if (secondary || !changeMonth)
			monthHtml += '<span class="ui-datepicker-month">' + monthNames[drawMonth] + '</span>';
		else {
			var inMinYear = (minDate && minDate.getFullYear() == drawYear);
			var inMaxYear = (maxDate && maxDate.getFullYear() == drawYear);
			monthHtml += '<select class="ui-datepicker-month" data-handler="selectMonth" data-event="change">';
			for (var month = 0; month < 12; month++) {
				if ((!inMinYear || month >= minDate.getMonth()) &&
						(!inMaxYear || month <= maxDate.getMonth()))
					monthHtml += '<option value="' + month + '"' +
						(month == drawMonth ? ' selected="selected"' : '') +
						'>' + monthNamesShort[month] + '</option>';
			}
			monthHtml += '</select>';
		}
		if (!showMonthAfterYear)
			html += monthHtml + (secondary || !(changeMonth && changeYear) ? '&#xa0;' : '');
		// year selection
		if ( !inst.yearshtml ) {
			inst.yearshtml = '';
			if (secondary || !changeYear)
				html += '<span class="ui-datepicker-year">' + drawYear + '</span>';
			else {
				// determine range of years to display
				var years = this._get(inst, 'yearRange').split(':');
				var thisYear = new Date().getFullYear();
				var determineYear = function(value) {
					var year = (value.match(/c[+-].*/) ? drawYear + parseInt(value.substring(1), 10) :
						(value.match(/[+-].*/) ? thisYear + parseInt(value, 10) :
						parseInt(value, 10)));
					return (isNaN(year) ? thisYear : year);
				};
				var year = determineYear(years[0]);
				var endYear = Math.max(year, determineYear(years[1] || ''));
				year = (minDate ? Math.max(year, minDate.getFullYear()) : year);
				endYear = (maxDate ? Math.min(endYear, maxDate.getFullYear()) : endYear);
				inst.yearshtml += '<select class="ui-datepicker-year" data-handler="selectYear" data-event="change">';
				for (; year <= endYear; year++) {
					inst.yearshtml += '<option value="' + year + '"' +
						(year == drawYear ? ' selected="selected"' : '') +
						'>' + year + '</option>';
				}
				inst.yearshtml += '</select>';

				html += inst.yearshtml;
				inst.yearshtml = null;
			}
		}
		html += this._get(inst, 'yearSuffix');
		if (showMonthAfterYear)
			html += (secondary || !(changeMonth && changeYear) ? '&#xa0;' : '') + monthHtml;
		html += '</div>'; // Close datepicker_header
		return html;
	},

	/* Adjust one of the date sub-fields. */
	_adjustInstDate: function(inst, offset, period) {
		var year = inst.drawYear + (period == 'Y' ? offset : 0);
		var month = inst.drawMonth + (period == 'M' ? offset : 0);
		var day = Math.min(inst.selectedDay, this._getDaysInMonth(year, month)) +
			(period == 'D' ? offset : 0);
		var date = this._restrictMinMax(inst,
			this._daylightSavingAdjust(new Date(year, month, day)));
		inst.selectedDay = date.getDate();
		inst.drawMonth = inst.selectedMonth = date.getMonth();
		inst.drawYear = inst.selectedYear = date.getFullYear();
		if (period == 'M' || period == 'Y')
			this._notifyChange(inst);
	},

	/* Ensure a date is within any min/max bounds. */
	_restrictMinMax: function(inst, date) {
		var minDate = this._getMinMaxDate(inst, 'min');
		var maxDate = this._getMinMaxDate(inst, 'max');
		var newDate = (minDate && date < minDate ? minDate : date);
		newDate = (maxDate && newDate > maxDate ? maxDate : newDate);
		return newDate;
	},

	/* Notify change of month/year. */
	_notifyChange: function(inst) {
		var onChange = this._get(inst, 'onChangeMonthYear');
		if (onChange)
			onChange.apply((inst.input ? inst.input[0] : null),
				[inst.selectedYear, inst.selectedMonth + 1, inst]);
	},

	/* Determine the number of months to show. */
	_getNumberOfMonths: function(inst) {
		var numMonths = this._get(inst, 'numberOfMonths');
		return (numMonths == null ? [1, 1] : (typeof numMonths == 'number' ? [1, numMonths] : numMonths));
	},

	/* Determine the current maximum date - ensure no time components are set. */
	_getMinMaxDate: function(inst, minMax) {
		return this._determineDate(inst, this._get(inst, minMax + 'Date'), null);
	},

	/* Find the number of days in a given month. */
	_getDaysInMonth: function(year, month) {
		return 32 - this._daylightSavingAdjust(new Date(year, month, 32)).getDate();
	},

	/* Find the day of the week of the first of a month. */
	_getFirstDayOfMonth: function(year, month) {
		return new Date(year, month, 1).getDay();
	},

	/* Determines if we should allow a "next/prev" month display change. */
	_canAdjustMonth: function(inst, offset, curYear, curMonth) {
		var numMonths = this._getNumberOfMonths(inst);
		var date = this._daylightSavingAdjust(new Date(curYear,
			curMonth + (offset < 0 ? offset : numMonths[0] * numMonths[1]), 1));
		if (offset < 0)
			date.setDate(this._getDaysInMonth(date.getFullYear(), date.getMonth()));
		return this._isInRange(inst, date);
	},

	/* Is the given date in the accepted range? */
	_isInRange: function(inst, date) {
		var minDate = this._getMinMaxDate(inst, 'min');
		var maxDate = this._getMinMaxDate(inst, 'max');
		return ((!minDate || date.getTime() >= minDate.getTime()) &&
			(!maxDate || date.getTime() <= maxDate.getTime()));
	},

	/* Provide the configuration settings for formatting/parsing. */
	_getFormatConfig: function(inst) {
		var shortYearCutoff = this._get(inst, 'shortYearCutoff');
		shortYearCutoff = (typeof shortYearCutoff != 'string' ? shortYearCutoff :
			new Date().getFullYear() % 100 + parseInt(shortYearCutoff, 10));
		return {shortYearCutoff: shortYearCutoff,
			dayNamesShort: this._get(inst, 'dayNamesShort'), dayNames: this._get(inst, 'dayNames'),
			monthNamesShort: this._get(inst, 'monthNamesShort'), monthNames: this._get(inst, 'monthNames')};
	},

	/* Format the given date for display. */
	_formatDate: function(inst, day, month, year) {
		if (!day) {
			inst.currentDay = inst.selectedDay;
			inst.currentMonth = inst.selectedMonth;
			inst.currentYear = inst.selectedYear;
		}
		var date = (day ? (typeof day == 'object' ? day :
			this._daylightSavingAdjust(new Date(year, month, day))) :
			this._daylightSavingAdjust(new Date(inst.currentYear, inst.currentMonth, inst.currentDay)));
		return this.formatDate(this._get(inst, 'dateFormat'), date, this._getFormatConfig(inst));
	}
});

/*
 * Bind hover events for datepicker elements.
 * Done via delegate so the binding only occurs once in the lifetime of the parent div.
 * Global instActive, set by _updateDatepicker allows the handlers to find their way back to the active picker.
 */
function bindHover(dpDiv) {
	var selector = 'button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a';
	return dpDiv.delegate(selector, 'mouseout', function() {
			$(this).removeClass('ui-state-hover');
			if (this.className.indexOf('ui-datepicker-prev') != -1) $(this).removeClass('ui-datepicker-prev-hover');
			if (this.className.indexOf('ui-datepicker-next') != -1) $(this).removeClass('ui-datepicker-next-hover');
		})
		.delegate(selector, 'mouseover', function(){
			if (!$.datepicker._isDisabledDatepicker( instActive.inline ? dpDiv.parent()[0] : instActive.input[0])) {
				$(this).parents('.ui-datepicker-calendar').find('a').removeClass('ui-state-hover');
				$(this).addClass('ui-state-hover');
				if (this.className.indexOf('ui-datepicker-prev') != -1) $(this).addClass('ui-datepicker-prev-hover');
				if (this.className.indexOf('ui-datepicker-next') != -1) $(this).addClass('ui-datepicker-next-hover');
			}
		});
}

/* jQuery extend now ignores nulls! */
function extendRemove(target, props) {
	$.extend(target, props);
	for (var name in props)
		if (props[name] == null || props[name] == undefined)
			target[name] = props[name];
	return target;
};

/* Invoke the datepicker functionality.
   @param  options  string - a command, optionally followed by additional parameters or
	                Object - settings for attaching new datepicker functionality
   @return  jQuery object */
$.fn.datepicker = function(options){

	/* Verify an empty collection wasn't passed - Fixes #6976 */
	if ( !this.length ) {
		return this;
	}

	/* Initialise the date picker. */
	if (!$.datepicker.initialized) {
		$(document).mousedown($.datepicker._checkExternalClick).
			find(document.body).append($.datepicker.dpDiv);
		$.datepicker.initialized = true;
	}

	var otherArgs = Array.prototype.slice.call(arguments, 1);
	if (typeof options == 'string' && (options == 'isDisabled' || options == 'getDate' || options == 'widget'))
		return $.datepicker['_' + options + 'Datepicker'].
			apply($.datepicker, [this[0]].concat(otherArgs));
	if (options == 'option' && arguments.length == 2 && typeof arguments[1] == 'string')
		return $.datepicker['_' + options + 'Datepicker'].
			apply($.datepicker, [this[0]].concat(otherArgs));
	return this.each(function() {
		typeof options == 'string' ?
			$.datepicker['_' + options + 'Datepicker'].
				apply($.datepicker, [this].concat(otherArgs)) :
			$.datepicker._attachDatepicker(this, options);
	});
};

$.datepicker = new Datepicker(); // singleton instance
$.datepicker.initialized = false;
$.datepicker.uuid = new Date().getTime();
$.datepicker.version = "1.9.2";

// Workaround for #4055
// Add another global to avoid noConflict issues with inline event handlers
window['DP_jQuery_' + dpuuid] = $;

})(jQuery);
(function( $, undefined ) {

var mouseHandled = false;

$.widget( "ui.menu", {
	version: "1.9.2",
	defaultElement: "<ul>",
	delay: 300,
	options: {
		icons: {
			submenu: "ui-icon-carat-1-e"
		},
		menus: "ul",
		position: {
			my: "left top",
			at: "right top"
		},
		role: "menu",

		// callbacks
		blur: null,
		focus: null,
		select: null
	},

	_create: function() {
		this.activeMenu = this.element;
		this.element
			.uniqueId()
			.addClass( "ui-menu ui-widget ui-widget-content ui-corner-all" )
			.toggleClass( "ui-menu-icons", !!this.element.find( ".ui-icon" ).length )
			.attr({
				role: this.options.role,
				tabIndex: 0
			})
			// need to catch all clicks on disabled menu
			// not possible through _on
			.bind( "click" + this.eventNamespace, $.proxy(function( event ) {
				if ( this.options.disabled ) {
					event.preventDefault();
				}
			}, this ));

		if ( this.options.disabled ) {
			this.element
				.addClass( "ui-state-disabled" )
				.attr( "aria-disabled", "true" );
		}

		this._on({
			// Prevent focus from sticking to links inside menu after clicking
			// them (focus should always stay on UL during navigation).
			"mousedown .ui-menu-item > a": function( event ) {
				event.preventDefault();
			},
			"click .ui-state-disabled > a": function( event ) {
				event.preventDefault();
			},
			"click .ui-menu-item:has(a)": function( event ) {
				var target = $( event.target ).closest( ".ui-menu-item" );
				if ( !mouseHandled && target.not( ".ui-state-disabled" ).length ) {
					mouseHandled = true;

					this.select( event );
					// Open submenu on click
					if ( target.has( ".ui-menu" ).length ) {
						this.expand( event );
					} else if ( !this.element.is( ":focus" ) ) {
						// Redirect focus to the menu
						this.element.trigger( "focus", [ true ] );

						// If the active item is on the top level, let it stay active.
						// Otherwise, blur the active item since it is no longer visible.
						if ( this.active && this.active.parents( ".ui-menu" ).length === 1 ) {
							clearTimeout( this.timer );
						}
					}
				}
			},
			"mouseenter .ui-menu-item": function( event ) {
				var target = $( event.currentTarget );
				// Remove ui-state-active class from siblings of the newly focused menu item
				// to avoid a jump caused by adjacent elements both having a class with a border
				target.siblings().children( ".ui-state-active" ).removeClass( "ui-state-active" );
				this.focus( event, target );
			},
			mouseleave: "collapseAll",
			"mouseleave .ui-menu": "collapseAll",
			focus: function( event, keepActiveItem ) {
				// If there's already an active item, keep it active
				// If not, activate the first item
				var item = this.active || this.element.children( ".ui-menu-item" ).eq( 0 );

				if ( !keepActiveItem ) {
					this.focus( event, item );
				}
			},
			blur: function( event ) {
				this._delay(function() {
					if ( !$.contains( this.element[0], this.document[0].activeElement ) ) {
						this.collapseAll( event );
					}
				});
			},
			keydown: "_keydown"
		});

		this.refresh();

		// Clicks outside of a menu collapse any open menus
		this._on( this.document, {
			click: function( event ) {
				if ( !$( event.target ).closest( ".ui-menu" ).length ) {
					this.collapseAll( event );
				}

				// Reset the mouseHandled flag
				mouseHandled = false;
			}
		});
	},

	_destroy: function() {
		// Destroy (sub)menus
		this.element
			.removeAttr( "aria-activedescendant" )
			.find( ".ui-menu" ).andSelf()
				.removeClass( "ui-menu ui-widget ui-widget-content ui-corner-all ui-menu-icons" )
				.removeAttr( "role" )
				.removeAttr( "tabIndex" )
				.removeAttr( "aria-labelledby" )
				.removeAttr( "aria-expanded" )
				.removeAttr( "aria-hidden" )
				.removeAttr( "aria-disabled" )
				.removeUniqueId()
				.show();

		// Destroy menu items
		this.element.find( ".ui-menu-item" )
			.removeClass( "ui-menu-item" )
			.removeAttr( "role" )
			.removeAttr( "aria-disabled" )
			.children( "a" )
				.removeUniqueId()
				.removeClass( "ui-corner-all ui-state-hover" )
				.removeAttr( "tabIndex" )
				.removeAttr( "role" )
				.removeAttr( "aria-haspopup" )
				.children().each( function() {
					var elem = $( this );
					if ( elem.data( "ui-menu-submenu-carat" ) ) {
						elem.remove();
					}
				});

		// Destroy menu dividers
		this.element.find( ".ui-menu-divider" ).removeClass( "ui-menu-divider ui-widget-content" );
	},

	_keydown: function( event ) {
		var match, prev, character, skip, regex,
			preventDefault = true;

		function escape( value ) {
			return value.replace( /[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&" );
		}

		switch ( event.keyCode ) {
		case $.ui.keyCode.PAGE_UP:
			this.previousPage( event );
			break;
		case $.ui.keyCode.PAGE_DOWN:
			this.nextPage( event );
			break;
		case $.ui.keyCode.HOME:
			this._move( "first", "first", event );
			break;
		case $.ui.keyCode.END:
			this._move( "last", "last", event );
			break;
		case $.ui.keyCode.UP:
			this.previous( event );
			break;
		case $.ui.keyCode.DOWN:
			this.next( event );
			break;
		case $.ui.keyCode.LEFT:
			this.collapse( event );
			break;
		case $.ui.keyCode.RIGHT:
			if ( this.active && !this.active.is( ".ui-state-disabled" ) ) {
				this.expand( event );
			}
			break;
		case $.ui.keyCode.ENTER:
		case $.ui.keyCode.SPACE:
			this._activate( event );
			break;
		case $.ui.keyCode.ESCAPE:
			this.collapse( event );
			break;
		default:
			preventDefault = false;
			prev = this.previousFilter || "";
			character = String.fromCharCode( event.keyCode );
			skip = false;

			clearTimeout( this.filterTimer );

			if ( character === prev ) {
				skip = true;
			} else {
				character = prev + character;
			}

			regex = new RegExp( "^" + escape( character ), "i" );
			match = this.activeMenu.children( ".ui-menu-item" ).filter(function() {
				return regex.test( $( this ).children( "a" ).text() );
			});
			match = skip && match.index( this.active.next() ) !== -1 ?
				this.active.nextAll( ".ui-menu-item" ) :
				match;

			// If no matches on the current filter, reset to the last character pressed
			// to move down the menu to the first item that starts with that character
			if ( !match.length ) {
				character = String.fromCharCode( event.keyCode );
				regex = new RegExp( "^" + escape( character ), "i" );
				match = this.activeMenu.children( ".ui-menu-item" ).filter(function() {
					return regex.test( $( this ).children( "a" ).text() );
				});
			}

			if ( match.length ) {
				this.focus( event, match );
				if ( match.length > 1 ) {
					this.previousFilter = character;
					this.filterTimer = this._delay(function() {
						delete this.previousFilter;
					}, 1000 );
				} else {
					delete this.previousFilter;
				}
			} else {
				delete this.previousFilter;
			}
		}

		if ( preventDefault ) {
			event.preventDefault();
		}
	},

	_activate: function( event ) {
		if ( !this.active.is( ".ui-state-disabled" ) ) {
			if ( this.active.children( "a[aria-haspopup='true']" ).length ) {
				this.expand( event );
			} else {
				this.select( event );
			}
		}
	},

	refresh: function() {
		var menus,
			icon = this.options.icons.submenu,
			submenus = this.element.find( this.options.menus );

		// Initialize nested menus
		submenus.filter( ":not(.ui-menu)" )
			.addClass( "ui-menu ui-widget ui-widget-content ui-corner-all" )
			.hide()
			.attr({
				role: this.options.role,
				"aria-hidden": "true",
				"aria-expanded": "false"
			})
			.each(function() {
				var menu = $( this ),
					item = menu.prev( "a" ),
					submenuCarat = $( "<span>" )
						.addClass( "ui-menu-icon ui-icon " + icon )
						.data( "ui-menu-submenu-carat", true );

				item
					.attr( "aria-haspopup", "true" )
					.prepend( submenuCarat );
				menu.attr( "aria-labelledby", item.attr( "id" ) );
			});

		menus = submenus.add( this.element );

		// Don't refresh list items that are already adapted
		menus.children( ":not(.ui-menu-item):has(a)" )
			.addClass( "ui-menu-item" )
			.attr( "role", "presentation" )
			.children( "a" )
				.uniqueId()
				.addClass( "ui-corner-all" )
				.attr({
					tabIndex: -1,
					role: this._itemRole()
				});

		// Initialize unlinked menu-items containing spaces and/or dashes only as dividers
		menus.children( ":not(.ui-menu-item)" ).each(function() {
			var item = $( this );
			// hyphen, em dash, en dash
			if ( !/[^\-â€”â€“\s]/.test( item.text() ) ) {
				item.addClass( "ui-widget-content ui-menu-divider" );
			}
		});

		// Add aria-disabled attribute to any disabled menu item
		menus.children( ".ui-state-disabled" ).attr( "aria-disabled", "true" );

		// If the active item has been removed, blur the menu
		if ( this.active && !$.contains( this.element[ 0 ], this.active[ 0 ] ) ) {
			this.blur();
		}
	},

	_itemRole: function() {
		return {
			menu: "menuitem",
			listbox: "option"
		}[ this.options.role ];
	},

	focus: function( event, item ) {
		var nested, focused;
		this.blur( event, event && event.type === "focus" );

		this._scrollIntoView( item );

		this.active = item.first();
		focused = this.active.children( "a" ).addClass( "ui-state-focus" );
		// Only update aria-activedescendant if there's a role
		// otherwise we assume focus is managed elsewhere
		if ( this.options.role ) {
			this.element.attr( "aria-activedescendant", focused.attr( "id" ) );
		}

		// Highlight active parent menu item, if any
		this.active
			.parent()
			.closest( ".ui-menu-item" )
			.children( "a:first" )
			.addClass( "ui-state-active" );

		if ( event && event.type === "keydown" ) {
			this._close();
		} else {
			this.timer = this._delay(function() {
				this._close();
			}, this.delay );
		}

		nested = item.children( ".ui-menu" );
		if ( nested.length && ( /^mouse/.test( event.type ) ) ) {
			this._startOpening(nested);
		}
		this.activeMenu = item.parent();

		this._trigger( "focus", event, { item: item } );
	},

	_scrollIntoView: function( item ) {
		var borderTop, paddingTop, offset, scroll, elementHeight, itemHeight;
		if ( this._hasScroll() ) {
			borderTop = parseFloat( $.css( this.activeMenu[0], "borderTopWidth" ) ) || 0;
			paddingTop = parseFloat( $.css( this.activeMenu[0], "paddingTop" ) ) || 0;
			offset = item.offset().top - this.activeMenu.offset().top - borderTop - paddingTop;
			scroll = this.activeMenu.scrollTop();
			elementHeight = this.activeMenu.height();
			itemHeight = item.height();

			if ( offset < 0 ) {
				this.activeMenu.scrollTop( scroll + offset );
			} else if ( offset + itemHeight > elementHeight ) {
				this.activeMenu.scrollTop( scroll + offset - elementHeight + itemHeight );
			}
		}
	},

	blur: function( event, fromFocus ) {
		if ( !fromFocus ) {
			clearTimeout( this.timer );
		}

		if ( !this.active ) {
			return;
		}

		this.active.children( "a" ).removeClass( "ui-state-focus" );
		this.active = null;

		this._trigger( "blur", event, { item: this.active } );
	},

	_startOpening: function( submenu ) {
		clearTimeout( this.timer );

		// Don't open if already open fixes a Firefox bug that caused a .5 pixel
		// shift in the submenu position when mousing over the carat icon
		if ( submenu.attr( "aria-hidden" ) !== "true" ) {
			return;
		}

		this.timer = this._delay(function() {
			this._close();
			this._open( submenu );
		}, this.delay );
	},

	_open: function( submenu ) {
		var position = $.extend({
			of: this.active
		}, this.options.position );

		clearTimeout( this.timer );
		this.element.find( ".ui-menu" ).not( submenu.parents( ".ui-menu" ) )
			.hide()
			.attr( "aria-hidden", "true" );

		submenu
			.show()
			.removeAttr( "aria-hidden" )
			.attr( "aria-expanded", "true" )
			.position( position );
	},

	collapseAll: function( event, all ) {
		clearTimeout( this.timer );
		this.timer = this._delay(function() {
			// If we were passed an event, look for the submenu that contains the event
			var currentMenu = all ? this.element :
				$( event && event.target ).closest( this.element.find( ".ui-menu" ) );

			// If we found no valid submenu ancestor, use the main menu to close all sub menus anyway
			if ( !currentMenu.length ) {
				currentMenu = this.element;
			}

			this._close( currentMenu );

			this.blur( event );
			this.activeMenu = currentMenu;
		}, this.delay );
	},

	// With no arguments, closes the currently active menu - if nothing is active
	// it closes all menus.  If passed an argument, it will search for menus BELOW
	_close: function( startMenu ) {
		if ( !startMenu ) {
			startMenu = this.active ? this.active.parent() : this.element;
		}

		startMenu
			.find( ".ui-menu" )
				.hide()
				.attr( "aria-hidden", "true" )
				.attr( "aria-expanded", "false" )
			.end()
			.find( "a.ui-state-active" )
				.removeClass( "ui-state-active" );
	},

	collapse: function( event ) {
		var newItem = this.active &&
			this.active.parent().closest( ".ui-menu-item", this.element );
		if ( newItem && newItem.length ) {
			this._close();
			this.focus( event, newItem );
		}
	},

	expand: function( event ) {
		var newItem = this.active &&
			this.active
				.children( ".ui-menu " )
				.children( ".ui-menu-item" )
				.first();

		if ( newItem && newItem.length ) {
			this._open( newItem.parent() );

			// Delay so Firefox will not hide activedescendant change in expanding submenu from AT
			this._delay(function() {
				this.focus( event, newItem );
			});
		}
	},

	next: function( event ) {
		this._move( "next", "first", event );
	},

	previous: function( event ) {
		this._move( "prev", "last", event );
	},

	isFirstItem: function() {
		return this.active && !this.active.prevAll( ".ui-menu-item" ).length;
	},

	isLastItem: function() {
		return this.active && !this.active.nextAll( ".ui-menu-item" ).length;
	},

	_move: function( direction, filter, event ) {
		var next;
		if ( this.active ) {
			if ( direction === "first" || direction === "last" ) {
				next = this.active
					[ direction === "first" ? "prevAll" : "nextAll" ]( ".ui-menu-item" )
					.eq( -1 );
			} else {
				next = this.active
					[ direction + "All" ]( ".ui-menu-item" )
					.eq( 0 );
			}
		}
		if ( !next || !next.length || !this.active ) {
			next = this.activeMenu.children( ".ui-menu-item" )[ filter ]();
		}

		this.focus( event, next );
	},

	nextPage: function( event ) {
		var item, base, height;

		if ( !this.active ) {
			this.next( event );
			return;
		}
		if ( this.isLastItem() ) {
			return;
		}
		if ( this._hasScroll() ) {
			base = this.active.offset().top;
			height = this.element.height();
			this.active.nextAll( ".ui-menu-item" ).each(function() {
				item = $( this );
				return item.offset().top - base - height < 0;
			});

			this.focus( event, item );
		} else {
			this.focus( event, this.activeMenu.children( ".ui-menu-item" )
				[ !this.active ? "first" : "last" ]() );
		}
	},

	previousPage: function( event ) {
		var item, base, height;
		if ( !this.active ) {
			this.next( event );
			return;
		}
		if ( this.isFirstItem() ) {
			return;
		}
		if ( this._hasScroll() ) {
			base = this.active.offset().top;
			height = this.element.height();
			this.active.prevAll( ".ui-menu-item" ).each(function() {
				item = $( this );
				return item.offset().top - base + height > 0;
			});

			this.focus( event, item );
		} else {
			this.focus( event, this.activeMenu.children( ".ui-menu-item" ).first() );
		}
	},

	_hasScroll: function() {
		return this.element.outerHeight() < this.element.prop( "scrollHeight" );
	},

	select: function( event ) {
		// TODO: It should never be possible to not have an active item at this
		// point, but the tests don't trigger mouseenter before click.
		this.active = this.active || $( event.target ).closest( ".ui-menu-item" );
		var ui = { item: this.active };
		if ( !this.active.has( ".ui-menu" ).length ) {
			this.collapseAll( event, true );
		}
		this._trigger( "select", event, ui );
	}
});

}( jQuery ));
(function( $, undefined ) {

// number of pages in a slider
// (how many times can you page up/down to go through the whole range)
var numPages = 5;

$.widget( "ui.slider", $.ui.mouse, {
	version: "1.9.2",
	widgetEventPrefix: "slide",

	options: {
		animate: false,
		distance: 0,
		max: 100,
		min: 0,
		orientation: "horizontal",
		range: false,
		step: 1,
		value: 0,
		values: null
	},

	_create: function() {
		var i, handleCount,
			o = this.options,
			existingHandles = this.element.find( ".ui-slider-handle" ).addClass( "ui-state-default ui-corner-all" ),
			handle = "<a class='ui-slider-handle ui-state-default ui-corner-all' href='#'></a>",
			handles = [];

		this._keySliding = false;
		this._mouseSliding = false;
		this._animateOff = true;
		this._handleIndex = null;
		this._detectOrientation();
		this._mouseInit();

		this.element
			.addClass( "ui-slider" +
				" ui-slider-" + this.orientation +
				" ui-widget" +
				" ui-widget-content" +
				" ui-corner-all" +
				( o.disabled ? " ui-slider-disabled ui-disabled" : "" ) );

		this.range = $([]);

		if ( o.range ) {
			if ( o.range === true ) {
				if ( !o.values ) {
					o.values = [ this._valueMin(), this._valueMin() ];
				}
				if ( o.values.length && o.values.length !== 2 ) {
					o.values = [ o.values[0], o.values[0] ];
				}
			}

			this.range = $( "<div></div>" )
				.appendTo( this.element )
				.addClass( "ui-slider-range" +
				// note: this isn't the most fittingly semantic framework class for this element,
				// but worked best visually with a variety of themes
				" ui-widget-header" +
				( ( o.range === "min" || o.range === "max" ) ? " ui-slider-range-" + o.range : "" ) );
		}

		handleCount = ( o.values && o.values.length ) || 1;

		for ( i = existingHandles.length; i < handleCount; i++ ) {
			handles.push( handle );
		}

		this.handles = existingHandles.add( $( handles.join( "" ) ).appendTo( this.element ) );

		this.handle = this.handles.eq( 0 );

		this.handles.add( this.range ).filter( "a" )
			.click(function( event ) {
				event.preventDefault();
			})
			.mouseenter(function() {
				if ( !o.disabled ) {
					$( this ).addClass( "ui-state-hover" );
				}
			})
			.mouseleave(function() {
				$( this ).removeClass( "ui-state-hover" );
			})
			.focus(function() {
				if ( !o.disabled ) {
					$( ".ui-slider .ui-state-focus" ).removeClass( "ui-state-focus" );
					$( this ).addClass( "ui-state-focus" );
				} else {
					$( this ).blur();
				}
			})
			.blur(function() {
				$( this ).removeClass( "ui-state-focus" );
			});

		this.handles.each(function( i ) {
			$( this ).data( "ui-slider-handle-index", i );
		});

		this._on( this.handles, {
			keydown: function( event ) {
				var allowed, curVal, newVal, step,
					index = $( event.target ).data( "ui-slider-handle-index" );

				switch ( event.keyCode ) {
					case $.ui.keyCode.HOME:
					case $.ui.keyCode.END:
					case $.ui.keyCode.PAGE_UP:
					case $.ui.keyCode.PAGE_DOWN:
					case $.ui.keyCode.UP:
					case $.ui.keyCode.RIGHT:
					case $.ui.keyCode.DOWN:
					case $.ui.keyCode.LEFT:
						event.preventDefault();
						if ( !this._keySliding ) {
							this._keySliding = true;
							$( event.target ).addClass( "ui-state-active" );
							allowed = this._start( event, index );
							if ( allowed === false ) {
								return;
							}
						}
						break;
				}

				step = this.options.step;
				if ( this.options.values && this.options.values.length ) {
					curVal = newVal = this.values( index );
				} else {
					curVal = newVal = this.value();
				}

				switch ( event.keyCode ) {
					case $.ui.keyCode.HOME:
						newVal = this._valueMin();
						break;
					case $.ui.keyCode.END:
						newVal = this._valueMax();
						break;
					case $.ui.keyCode.PAGE_UP:
						newVal = this._trimAlignValue( curVal + ( (this._valueMax() - this._valueMin()) / numPages ) );
						break;
					case $.ui.keyCode.PAGE_DOWN:
						newVal = this._trimAlignValue( curVal - ( (this._valueMax() - this._valueMin()) / numPages ) );
						break;
					case $.ui.keyCode.UP:
					case $.ui.keyCode.RIGHT:
						if ( curVal === this._valueMax() ) {
							return;
						}
						newVal = this._trimAlignValue( curVal + step );
						break;
					case $.ui.keyCode.DOWN:
					case $.ui.keyCode.LEFT:
						if ( curVal === this._valueMin() ) {
							return;
						}
						newVal = this._trimAlignValue( curVal - step );
						break;
				}

				this._slide( event, index, newVal );
			},
			keyup: function( event ) {
				var index = $( event.target ).data( "ui-slider-handle-index" );

				if ( this._keySliding ) {
					this._keySliding = false;
					this._stop( event, index );
					this._change( event, index );
					$( event.target ).removeClass( "ui-state-active" );
				}
			}
		});

		this._refreshValue();

		this._animateOff = false;
	},

	_destroy: function() {
		this.handles.remove();
		this.range.remove();

		this.element
			.removeClass( "ui-slider" +
				" ui-slider-horizontal" +
				" ui-slider-vertical" +
				" ui-slider-disabled" +
				" ui-widget" +
				" ui-widget-content" +
				" ui-corner-all" );

		this._mouseDestroy();
	},

	_mouseCapture: function( event ) {
		var position, normValue, distance, closestHandle, index, allowed, offset, mouseOverHandle,
			that = this,
			o = this.options;

		if ( o.disabled ) {
			return false;
		}

		this.elementSize = {
			width: this.element.outerWidth(),
			height: this.element.outerHeight()
		};
		this.elementOffset = this.element.offset();

		position = { x: event.pageX, y: event.pageY };
		normValue = this._normValueFromMouse( position );
		distance = this._valueMax() - this._valueMin() + 1;
		this.handles.each(function( i ) {
			var thisDistance = Math.abs( normValue - that.values(i) );
			if ( distance > thisDistance ) {
				distance = thisDistance;
				closestHandle = $( this );
				index = i;
			}
		});

		// workaround for bug #3736 (if both handles of a range are at 0,
		// the first is always used as the one with least distance,
		// and moving it is obviously prevented by preventing negative ranges)
		if( o.range === true && this.values(1) === o.min ) {
			index += 1;
			closestHandle = $( this.handles[index] );
		}

		allowed = this._start( event, index );
		if ( allowed === false ) {
			return false;
		}
		this._mouseSliding = true;

		this._handleIndex = index;

		closestHandle
			.addClass( "ui-state-active" )
			.focus();

		offset = closestHandle.offset();
		mouseOverHandle = !$( event.target ).parents().andSelf().is( ".ui-slider-handle" );
		this._clickOffset = mouseOverHandle ? { left: 0, top: 0 } : {
			left: event.pageX - offset.left - ( closestHandle.width() / 2 ),
			top: event.pageY - offset.top -
				( closestHandle.height() / 2 ) -
				( parseInt( closestHandle.css("borderTopWidth"), 10 ) || 0 ) -
				( parseInt( closestHandle.css("borderBottomWidth"), 10 ) || 0) +
				( parseInt( closestHandle.css("marginTop"), 10 ) || 0)
		};

		if ( !this.handles.hasClass( "ui-state-hover" ) ) {
			this._slide( event, index, normValue );
		}
		this._animateOff = true;
		return true;
	},

	_mouseStart: function() {
		return true;
	},

	_mouseDrag: function( event ) {
		var position = { x: event.pageX, y: event.pageY },
			normValue = this._normValueFromMouse( position );

		this._slide( event, this._handleIndex, normValue );

		return false;
	},

	_mouseStop: function( event ) {
		this.handles.removeClass( "ui-state-active" );
		this._mouseSliding = false;

		this._stop( event, this._handleIndex );
		this._change( event, this._handleIndex );

		this._handleIndex = null;
		this._clickOffset = null;
		this._animateOff = false;

		return false;
	},

	_detectOrientation: function() {
		this.orientation = ( this.options.orientation === "vertical" ) ? "vertical" : "horizontal";
	},

	_normValueFromMouse: function( position ) {
		var pixelTotal,
			pixelMouse,
			percentMouse,
			valueTotal,
			valueMouse;

		if ( this.orientation === "horizontal" ) {
			pixelTotal = this.elementSize.width;
			pixelMouse = position.x - this.elementOffset.left - ( this._clickOffset ? this._clickOffset.left : 0 );
		} else {
			pixelTotal = this.elementSize.height;
			pixelMouse = position.y - this.elementOffset.top - ( this._clickOffset ? this._clickOffset.top : 0 );
		}

		percentMouse = ( pixelMouse / pixelTotal );
		if ( percentMouse > 1 ) {
			percentMouse = 1;
		}
		if ( percentMouse < 0 ) {
			percentMouse = 0;
		}
		if ( this.orientation === "vertical" ) {
			percentMouse = 1 - percentMouse;
		}

		valueTotal = this._valueMax() - this._valueMin();
		valueMouse = this._valueMin() + percentMouse * valueTotal;

		return this._trimAlignValue( valueMouse );
	},

	_start: function( event, index ) {
		var uiHash = {
			handle: this.handles[ index ],
			value: this.value()
		};
		if ( this.options.values && this.options.values.length ) {
			uiHash.value = this.values( index );
			uiHash.values = this.values();
		}
		return this._trigger( "start", event, uiHash );
	},

	_slide: function( event, index, newVal ) {
		var otherVal,
			newValues,
			allowed;

		if ( this.options.values && this.options.values.length ) {
			otherVal = this.values( index ? 0 : 1 );

			if ( ( this.options.values.length === 2 && this.options.range === true ) &&
					( ( index === 0 && newVal > otherVal) || ( index === 1 && newVal < otherVal ) )
				) {
				newVal = otherVal;
			}

			if ( newVal !== this.values( index ) ) {
				newValues = this.values();
				newValues[ index ] = newVal;
				// A slide can be canceled by returning false from the slide callback
				allowed = this._trigger( "slide", event, {
					handle: this.handles[ index ],
					value: newVal,
					values: newValues
				} );
				otherVal = this.values( index ? 0 : 1 );
				if ( allowed !== false ) {
					this.values( index, newVal, true );
				}
			}
		} else {
			if ( newVal !== this.value() ) {
				// A slide can be canceled by returning false from the slide callback
				allowed = this._trigger( "slide", event, {
					handle: this.handles[ index ],
					value: newVal
				} );
				if ( allowed !== false ) {
					this.value( newVal );
				}
			}
		}
	},

	_stop: function( event, index ) {
		var uiHash = {
			handle: this.handles[ index ],
			value: this.value()
		};
		if ( this.options.values && this.options.values.length ) {
			uiHash.value = this.values( index );
			uiHash.values = this.values();
		}

		this._trigger( "stop", event, uiHash );
	},

	_change: function( event, index ) {
		if ( !this._keySliding && !this._mouseSliding ) {
			var uiHash = {
				handle: this.handles[ index ],
				value: this.value()
			};
			if ( this.options.values && this.options.values.length ) {
				uiHash.value = this.values( index );
				uiHash.values = this.values();
			}

			this._trigger( "change", event, uiHash );
		}
	},

	value: function( newValue ) {
		if ( arguments.length ) {
			this.options.value = this._trimAlignValue( newValue );
			this._refreshValue();
			this._change( null, 0 );
			return;
		}

		return this._value();
	},

	values: function( index, newValue ) {
		var vals,
			newValues,
			i;

		if ( arguments.length > 1 ) {
			this.options.values[ index ] = this._trimAlignValue( newValue );
			this._refreshValue();
			this._change( null, index );
			return;
		}

		if ( arguments.length ) {
			if ( $.isArray( arguments[ 0 ] ) ) {
				vals = this.options.values;
				newValues = arguments[ 0 ];
				for ( i = 0; i < vals.length; i += 1 ) {
					vals[ i ] = this._trimAlignValue( newValues[ i ] );
					this._change( null, i );
				}
				this._refreshValue();
			} else {
				if ( this.options.values && this.options.values.length ) {
					return this._values( index );
				} else {
					return this.value();
				}
			}
		} else {
			return this._values();
		}
	},

	_setOption: function( key, value ) {
		var i,
			valsLength = 0;

		if ( $.isArray( this.options.values ) ) {
			valsLength = this.options.values.length;
		}

		$.Widget.prototype._setOption.apply( this, arguments );

		switch ( key ) {
			case "disabled":
				if ( value ) {
					this.handles.filter( ".ui-state-focus" ).blur();
					this.handles.removeClass( "ui-state-hover" );
					this.handles.prop( "disabled", true );
					this.element.addClass( "ui-disabled" );
				} else {
					this.handles.prop( "disabled", false );
					this.element.removeClass( "ui-disabled" );
				}
				break;
			case "orientation":
				this._detectOrientation();
				this.element
					.removeClass( "ui-slider-horizontal ui-slider-vertical" )
					.addClass( "ui-slider-" + this.orientation );
				this._refreshValue();
				break;
			case "value":
				this._animateOff = true;
				this._refreshValue();
				this._change( null, 0 );
				this._animateOff = false;
				break;
			case "values":
				this._animateOff = true;
				this._refreshValue();
				for ( i = 0; i < valsLength; i += 1 ) {
					this._change( null, i );
				}
				this._animateOff = false;
				break;
			case "min":
			case "max":
				this._animateOff = true;
				this._refreshValue();
				this._animateOff = false;
				break;
		}
	},

	//internal value getter
	// _value() returns value trimmed by min and max, aligned by step
	_value: function() {
		var val = this.options.value;
		val = this._trimAlignValue( val );

		return val;
	},

	//internal values getter
	// _values() returns array of values trimmed by min and max, aligned by step
	// _values( index ) returns single value trimmed by min and max, aligned by step
	_values: function( index ) {
		var val,
			vals,
			i;

		if ( arguments.length ) {
			val = this.options.values[ index ];
			val = this._trimAlignValue( val );

			return val;
		} else {
			// .slice() creates a copy of the array
			// this copy gets trimmed by min and max and then returned
			vals = this.options.values.slice();
			for ( i = 0; i < vals.length; i+= 1) {
				vals[ i ] = this._trimAlignValue( vals[ i ] );
			}

			return vals;
		}
	},

	// returns the step-aligned value that val is closest to, between (inclusive) min and max
	_trimAlignValue: function( val ) {
		if ( val <= this._valueMin() ) {
			return this._valueMin();
		}
		if ( val >= this._valueMax() ) {
			return this._valueMax();
		}
		var step = ( this.options.step > 0 ) ? this.options.step : 1,
			valModStep = (val - this._valueMin()) % step,
			alignValue = val - valModStep;

		if ( Math.abs(valModStep) * 2 >= step ) {
			alignValue += ( valModStep > 0 ) ? step : ( -step );
		}

		// Since JavaScript has problems with large floats, round
		// the final value to 5 digits after the decimal point (see #4124)
		return parseFloat( alignValue.toFixed(5) );
	},

	_valueMin: function() {
		return this.options.min;
	},

	_valueMax: function() {
		return this.options.max;
	},

	_refreshValue: function() {
		var lastValPercent, valPercent, value, valueMin, valueMax,
			oRange = this.options.range,
			o = this.options,
			that = this,
			animate = ( !this._animateOff ) ? o.animate : false,
			_set = {};

		if ( this.options.values && this.options.values.length ) {
			this.handles.each(function( i ) {
				valPercent = ( that.values(i) - that._valueMin() ) / ( that._valueMax() - that._valueMin() ) * 100;
				_set[ that.orientation === "horizontal" ? "left" : "bottom" ] = valPercent + "%";
				$( this ).stop( 1, 1 )[ animate ? "animate" : "css" ]( _set, o.animate );
				if ( that.options.range === true ) {
					if ( that.orientation === "horizontal" ) {
						if ( i === 0 ) {
							that.range.stop( 1, 1 )[ animate ? "animate" : "css" ]( { left: valPercent + "%" }, o.animate );
						}
						if ( i === 1 ) {
							that.range[ animate ? "animate" : "css" ]( { width: ( valPercent - lastValPercent ) + "%" }, { queue: false, duration: o.animate } );
						}
					} else {
						if ( i === 0 ) {
							that.range.stop( 1, 1 )[ animate ? "animate" : "css" ]( { bottom: ( valPercent ) + "%" }, o.animate );
						}
						if ( i === 1 ) {
							that.range[ animate ? "animate" : "css" ]( { height: ( valPercent - lastValPercent ) + "%" }, { queue: false, duration: o.animate } );
						}
					}
				}
				lastValPercent = valPercent;
			});
		} else {
			value = this.value();
			valueMin = this._valueMin();
			valueMax = this._valueMax();
			valPercent = ( valueMax !== valueMin ) ?
					( value - valueMin ) / ( valueMax - valueMin ) * 100 :
					0;
			_set[ this.orientation === "horizontal" ? "left" : "bottom" ] = valPercent + "%";
			this.handle.stop( 1, 1 )[ animate ? "animate" : "css" ]( _set, o.animate );

			if ( oRange === "min" && this.orientation === "horizontal" ) {
				this.range.stop( 1, 1 )[ animate ? "animate" : "css" ]( { width: valPercent + "%" }, o.animate );
			}
			if ( oRange === "max" && this.orientation === "horizontal" ) {
				this.range[ animate ? "animate" : "css" ]( { width: ( 100 - valPercent ) + "%" }, { queue: false, duration: o.animate } );
			}
			if ( oRange === "min" && this.orientation === "vertical" ) {
				this.range.stop( 1, 1 )[ animate ? "animate" : "css" ]( { height: valPercent + "%" }, o.animate );
			}
			if ( oRange === "max" && this.orientation === "vertical" ) {
				this.range[ animate ? "animate" : "css" ]( { height: ( 100 - valPercent ) + "%" }, { queue: false, duration: o.animate } );
			}
		}
	}

});

}(jQuery));
(function( $, undefined ) {

var tabId = 0,
	rhash = /#.*$/;

function getNextTabId() {
	return ++tabId;
}

function isLocal( anchor ) {
	return anchor.hash.length > 1 &&
		anchor.href.replace( rhash, "" ) ===
			location.href.replace( rhash, "" )
				// support: Safari 5.1
				// Safari 5.1 doesn't encode spaces in window.location
				// but it does encode spaces from anchors (#8777)
				.replace( /\s/g, "%20" );
}

$.widget( "ui.tabs", {
	version: "1.9.2",
	delay: 300,
	options: {
		active: null,
		collapsible: false,
		event: "click",
		heightStyle: "content",
		hide: null,
		show: null,

		// callbacks
		activate: null,
		beforeActivate: null,
		beforeLoad: null,
		load: null
	},

	_create: function() {
		var that = this,
			options = this.options,
			active = options.active,
			locationHash = location.hash.substring( 1 );

		this.running = false;

		this.element
			.addClass( "ui-tabs ui-widget ui-widget-content ui-corner-all" )
			.toggleClass( "ui-tabs-collapsible", options.collapsible )
			// Prevent users from focusing disabled tabs via click
			.delegate( ".ui-tabs-nav > li", "mousedown" + this.eventNamespace, function( event ) {
				if ( $( this ).is( ".ui-state-disabled" ) ) {
					event.preventDefault();
				}
			})
			// support: IE <9
			// Preventing the default action in mousedown doesn't prevent IE
			// from focusing the element, so if the anchor gets focused, blur.
			// We don't have to worry about focusing the previously focused
			// element since clicking on a non-focusable element should focus
			// the body anyway.
			.delegate( ".ui-tabs-anchor", "focus" + this.eventNamespace, function() {
				if ( $( this ).closest( "li" ).is( ".ui-state-disabled" ) ) {
					this.blur();
				}
			});

		this._processTabs();

		if ( active === null ) {
			// check the fragment identifier in the URL
			if ( locationHash ) {
				this.tabs.each(function( i, tab ) {
					if ( $( tab ).attr( "aria-controls" ) === locationHash ) {
						active = i;
						return false;
					}
				});
			}

			// check for a tab marked active via a class
			if ( active === null ) {
				active = this.tabs.index( this.tabs.filter( ".ui-tabs-active" ) );
			}

			// no active tab, set to false
			if ( active === null || active === -1 ) {
				active = this.tabs.length ? 0 : false;
			}
		}

		// handle numbers: negative, out of range
		if ( active !== false ) {
			active = this.tabs.index( this.tabs.eq( active ) );
			if ( active === -1 ) {
				active = options.collapsible ? false : 0;
			}
		}
		options.active = active;

		// don't allow collapsible: false and active: false
		if ( !options.collapsible && options.active === false && this.anchors.length ) {
			options.active = 0;
		}

		// Take disabling tabs via class attribute from HTML
		// into account and update option properly.
		if ( $.isArray( options.disabled ) ) {
			options.disabled = $.unique( options.disabled.concat(
				$.map( this.tabs.filter( ".ui-state-disabled" ), function( li ) {
					return that.tabs.index( li );
				})
			) ).sort();
		}

		// check for length avoids error when initializing empty list
		if ( this.options.active !== false && this.anchors.length ) {
			this.active = this._findActive( this.options.active );
		} else {
			this.active = $();
		}

		this._refresh();

		if ( this.active.length ) {
			this.load( options.active );
		}
	},

	_getCreateEventData: function() {
		return {
			tab: this.active,
			panel: !this.active.length ? $() : this._getPanelForTab( this.active )
		};
	},

	_tabKeydown: function( event ) {
		var focusedTab = $( this.document[0].activeElement ).closest( "li" ),
			selectedIndex = this.tabs.index( focusedTab ),
			goingForward = true;

		if ( this._handlePageNav( event ) ) {
			return;
		}

		switch ( event.keyCode ) {
			case $.ui.keyCode.RIGHT:
			case $.ui.keyCode.DOWN:
				selectedIndex++;
				break;
			case $.ui.keyCode.UP:
			case $.ui.keyCode.LEFT:
				goingForward = false;
				selectedIndex--;
				break;
			case $.ui.keyCode.END:
				selectedIndex = this.anchors.length - 1;
				break;
			case $.ui.keyCode.HOME:
				selectedIndex = 0;
				break;
			case $.ui.keyCode.SPACE:
				// Activate only, no collapsing
				event.preventDefault();
				clearTimeout( this.activating );
				this._activate( selectedIndex );
				return;
			case $.ui.keyCode.ENTER:
				// Toggle (cancel delayed activation, allow collapsing)
				event.preventDefault();
				clearTimeout( this.activating );
				// Determine if we should collapse or activate
				this._activate( selectedIndex === this.options.active ? false : selectedIndex );
				return;
			default:
				return;
		}

		// Focus the appropriate tab, based on which key was pressed
		event.preventDefault();
		clearTimeout( this.activating );
		selectedIndex = this._focusNextTab( selectedIndex, goingForward );

		// Navigating with control key will prevent automatic activation
		if ( !event.ctrlKey ) {
			// Update aria-selected immediately so that AT think the tab is already selected.
			// Otherwise AT may confuse the user by stating that they need to activate the tab,
			// but the tab will already be activated by the time the announcement finishes.
			focusedTab.attr( "aria-selected", "false" );
			this.tabs.eq( selectedIndex ).attr( "aria-selected", "true" );

			this.activating = this._delay(function() {
				this.option( "active", selectedIndex );
			}, this.delay );
		}
	},

	_panelKeydown: function( event ) {
		if ( this._handlePageNav( event ) ) {
			return;
		}

		// Ctrl+up moves focus to the current tab
		if ( event.ctrlKey && event.keyCode === $.ui.keyCode.UP ) {
			event.preventDefault();
			this.active.focus();
		}
	},

	// Alt+page up/down moves focus to the previous/next tab (and activates)
	_handlePageNav: function( event ) {
		if ( event.altKey && event.keyCode === $.ui.keyCode.PAGE_UP ) {
			this._activate( this._focusNextTab( this.options.active - 1, false ) );
			return true;
		}
		if ( event.altKey && event.keyCode === $.ui.keyCode.PAGE_DOWN ) {
			this._activate( this._focusNextTab( this.options.active + 1, true ) );
			return true;
		}
	},

	_findNextTab: function( index, goingForward ) {
		var lastTabIndex = this.tabs.length - 1;

		function constrain() {
			if ( index > lastTabIndex ) {
				index = 0;
			}
			if ( index < 0 ) {
				index = lastTabIndex;
			}
			return index;
		}

		while ( $.inArray( constrain(), this.options.disabled ) !== -1 ) {
			index = goingForward ? index + 1 : index - 1;
		}

		return index;
	},

	_focusNextTab: function( index, goingForward ) {
		index = this._findNextTab( index, goingForward );
		this.tabs.eq( index ).focus();
		return index;
	},

	_setOption: function( key, value ) {
		if ( key === "active" ) {
			// _activate() will handle invalid values and update this.options
			this._activate( value );
			return;
		}

		if ( key === "disabled" ) {
			// don't use the widget factory's disabled handling
			this._setupDisabled( value );
			return;
		}

		this._super( key, value);

		if ( key === "collapsible" ) {
			this.element.toggleClass( "ui-tabs-collapsible", value );
			// Setting collapsible: false while collapsed; open first panel
			if ( !value && this.options.active === false ) {
				this._activate( 0 );
			}
		}

		if ( key === "event" ) {
			this._setupEvents( value );
		}

		if ( key === "heightStyle" ) {
			this._setupHeightStyle( value );
		}
	},

	_tabId: function( tab ) {
		return tab.attr( "aria-controls" ) || "ui-tabs-" + getNextTabId();
	},

	_sanitizeSelector: function( hash ) {
		return hash ? hash.replace( /[!"$%&'()*+,.\/:;<=>?@\[\]\^`{|}~]/g, "\\$&" ) : "";
	},

	refresh: function() {
		var options = this.options,
			lis = this.tablist.children( ":has(a[href])" );

		// get disabled tabs from class attribute from HTML
		// this will get converted to a boolean if needed in _refresh()
		options.disabled = $.map( lis.filter( ".ui-state-disabled" ), function( tab ) {
			return lis.index( tab );
		});

		this._processTabs();

		// was collapsed or no tabs
		if ( options.active === false || !this.anchors.length ) {
			options.active = false;
			this.active = $();
		// was active, but active tab is gone
		} else if ( this.active.length && !$.contains( this.tablist[ 0 ], this.active[ 0 ] ) ) {
			// all remaining tabs are disabled
			if ( this.tabs.length === options.disabled.length ) {
				options.active = false;
				this.active = $();
			// activate previous tab
			} else {
				this._activate( this._findNextTab( Math.max( 0, options.active - 1 ), false ) );
			}
		// was active, active tab still exists
		} else {
			// make sure active index is correct
			options.active = this.tabs.index( this.active );
		}

		this._refresh();
	},

	_refresh: function() {
		this._setupDisabled( this.options.disabled );
		this._setupEvents( this.options.event );
		this._setupHeightStyle( this.options.heightStyle );

		this.tabs.not( this.active ).attr({
			"aria-selected": "false",
			tabIndex: -1
		});
		this.panels.not( this._getPanelForTab( this.active ) )
			.hide()
			.attr({
				"aria-expanded": "false",
				"aria-hidden": "true"
			});

		// Make sure one tab is in the tab order
		if ( !this.active.length ) {
			this.tabs.eq( 0 ).attr( "tabIndex", 0 );
		} else {
			this.active
				.addClass( "ui-tabs-active ui-state-active" )
				.attr({
					"aria-selected": "true",
					tabIndex: 0
				});
			this._getPanelForTab( this.active )
				.show()
				.attr({
					"aria-expanded": "true",
					"aria-hidden": "false"
				});
		}
	},

	_processTabs: function() {
		var that = this;

		this.tablist = this._getList()
			.addClass( "ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all" )
			.attr( "role", "tablist" );

		this.tabs = this.tablist.find( "> li:has(a[href])" )
			.addClass( "ui-state-default ui-corner-top" )
			.attr({
				role: "tab",
				tabIndex: -1
			});

		this.anchors = this.tabs.map(function() {
				return $( "a", this )[ 0 ];
			})
			.addClass( "ui-tabs-anchor" )
			.attr({
				role: "presentation",
				tabIndex: -1
			});

		this.panels = $();

		this.anchors.each(function( i, anchor ) {
			var selector, panel, panelId,
				anchorId = $( anchor ).uniqueId().attr( "id" ),
				tab = $( anchor ).closest( "li" ),
				originalAriaControls = tab.attr( "aria-controls" );

			// inline tab
			if ( isLocal( anchor ) ) {
				selector = anchor.hash;
				panel = that.element.find( that._sanitizeSelector( selector ) );
			// remote tab
			} else {
				panelId = that._tabId( tab );
				selector = "#" + panelId;
				panel = that.element.find( selector );
				if ( !panel.length ) {
					panel = that._createPanel( panelId );
					panel.insertAfter( that.panels[ i - 1 ] || that.tablist );
				}
				panel.attr( "aria-live", "polite" );
			}

			if ( panel.length) {
				that.panels = that.panels.add( panel );
			}
			if ( originalAriaControls ) {
				tab.data( "ui-tabs-aria-controls", originalAriaControls );
			}
			tab.attr({
				"aria-controls": selector.substring( 1 ),
				"aria-labelledby": anchorId
			});
			panel.attr( "aria-labelledby", anchorId );
		});

		this.panels
			.addClass( "ui-tabs-panel ui-widget-content ui-corner-bottom" )
			.attr( "role", "tabpanel" );
	},

	// allow overriding how to find the list for rare usage scenarios (#7715)
	_getList: function() {
		return this.element.find( "ol,ul" ).eq( 0 );
	},

	_createPanel: function( id ) {
		return $( "<div>" )
			.attr( "id", id )
			.addClass( "ui-tabs-panel ui-widget-content ui-corner-bottom" )
			.data( "ui-tabs-destroy", true );
	},

	_setupDisabled: function( disabled ) {
		if ( $.isArray( disabled ) ) {
			if ( !disabled.length ) {
				disabled = false;
			} else if ( disabled.length === this.anchors.length ) {
				disabled = true;
			}
		}

		// disable tabs
		for ( var i = 0, li; ( li = this.tabs[ i ] ); i++ ) {
			if ( disabled === true || $.inArray( i, disabled ) !== -1 ) {
				$( li )
					.addClass( "ui-state-disabled" )
					.attr( "aria-disabled", "true" );
			} else {
				$( li )
					.removeClass( "ui-state-disabled" )
					.removeAttr( "aria-disabled" );
			}
		}

		this.options.disabled = disabled;
	},

	_setupEvents: function( event ) {
		var events = {
			click: function( event ) {
				event.preventDefault();
			}
		};
		if ( event ) {
			$.each( event.split(" "), function( index, eventName ) {
				events[ eventName ] = "_eventHandler";
			});
		}

		this._off( this.anchors.add( this.tabs ).add( this.panels ) );
		this._on( this.anchors, events );
		this._on( this.tabs, { keydown: "_tabKeydown" } );
		this._on( this.panels, { keydown: "_panelKeydown" } );

		this._focusable( this.tabs );
		this._hoverable( this.tabs );
	},

	_setupHeightStyle: function( heightStyle ) {
		var maxHeight, overflow,
			parent = this.element.parent();

		if ( heightStyle === "fill" ) {
			// IE 6 treats height like minHeight, so we need to turn off overflow
			// in order to get a reliable height
			// we use the minHeight support test because we assume that only
			// browsers that don't support minHeight will treat height as minHeight
			if ( !$.support.minHeight ) {
				overflow = parent.css( "overflow" );
				parent.css( "overflow", "hidden");
			}
			maxHeight = parent.height();
			this.element.siblings( ":visible" ).each(function() {
				var elem = $( this ),
					position = elem.css( "position" );

				if ( position === "absolute" || position === "fixed" ) {
					return;
				}
				maxHeight -= elem.outerHeight( true );
			});
			if ( overflow ) {
				parent.css( "overflow", overflow );
			}

			this.element.children().not( this.panels ).each(function() {
				maxHeight -= $( this ).outerHeight( true );
			});

			this.panels.each(function() {
				$( this ).height( Math.max( 0, maxHeight -
					$( this ).innerHeight() + $( this ).height() ) );
			})
			.css( "overflow", "auto" );
		} else if ( heightStyle === "auto" ) {
			maxHeight = 0;
			this.panels.each(function() {
				maxHeight = Math.max( maxHeight, $( this ).height( "" ).height() );
			}).height( maxHeight );
		}
	},

	_eventHandler: function( event ) {
		var options = this.options,
			active = this.active,
			anchor = $( event.currentTarget ),
			tab = anchor.closest( "li" ),
			clickedIsActive = tab[ 0 ] === active[ 0 ],
			collapsing = clickedIsActive && options.collapsible,
			toShow = collapsing ? $() : this._getPanelForTab( tab ),
			toHide = !active.length ? $() : this._getPanelForTab( active ),
			eventData = {
				oldTab: active,
				oldPanel: toHide,
				newTab: collapsing ? $() : tab,
				newPanel: toShow
			};

		event.preventDefault();

		if ( tab.hasClass( "ui-state-disabled" ) ||
				// tab is already loading
				tab.hasClass( "ui-tabs-loading" ) ||
				// can't switch durning an animation
				this.running ||
				// click on active header, but not collapsible
				( clickedIsActive && !options.collapsible ) ||
				// allow canceling activation
				( this._trigger( "beforeActivate", event, eventData ) === false ) ) {
			return;
		}

		options.active = collapsing ? false : this.tabs.index( tab );

		this.active = clickedIsActive ? $() : tab;
		if ( this.xhr ) {
			this.xhr.abort();
		}

		if ( !toHide.length && !toShow.length ) {
			$.error( "jQuery UI Tabs: Mismatching fragment identifier." );
		}

		if ( toShow.length ) {
			this.load( this.tabs.index( tab ), event );
		}
		this._toggle( event, eventData );
	},

	// handles show/hide for selecting tabs
	_toggle: function( event, eventData ) {
		var that = this,
			toShow = eventData.newPanel,
			toHide = eventData.oldPanel;

		this.running = true;

		function complete() {
			that.running = false;
			that._trigger( "activate", event, eventData );
		}

		function show() {
			eventData.newTab.closest( "li" ).addClass( "ui-tabs-active ui-state-active" );

			if ( toShow.length && that.options.show ) {
				that._show( toShow, that.options.show, complete );
			} else {
				toShow.show();
				complete();
			}
		}

		// start out by hiding, then showing, then completing
		if ( toHide.length && this.options.hide ) {
			this._hide( toHide, this.options.hide, function() {
				eventData.oldTab.closest( "li" ).removeClass( "ui-tabs-active ui-state-active" );
				show();
			});
		} else {
			eventData.oldTab.closest( "li" ).removeClass( "ui-tabs-active ui-state-active" );
			toHide.hide();
			show();
		}

		toHide.attr({
			"aria-expanded": "false",
			"aria-hidden": "true"
		});
		eventData.oldTab.attr( "aria-selected", "false" );
		// If we're switching tabs, remove the old tab from the tab order.
		// If we're opening from collapsed state, remove the previous tab from the tab order.
		// If we're collapsing, then keep the collapsing tab in the tab order.
		if ( toShow.length && toHide.length ) {
			eventData.oldTab.attr( "tabIndex", -1 );
		} else if ( toShow.length ) {
			this.tabs.filter(function() {
				return $( this ).attr( "tabIndex" ) === 0;
			})
			.attr( "tabIndex", -1 );
		}

		toShow.attr({
			"aria-expanded": "true",
			"aria-hidden": "false"
		});
		eventData.newTab.attr({
			"aria-selected": "true",
			tabIndex: 0
		});
	},

	_activate: function( index ) {
		var anchor,
			active = this._findActive( index );

		// trying to activate the already active panel
		if ( active[ 0 ] === this.active[ 0 ] ) {
			return;
		}

		// trying to collapse, simulate a click on the current active header
		if ( !active.length ) {
			active = this.active;
		}

		anchor = active.find( ".ui-tabs-anchor" )[ 0 ];
		this._eventHandler({
			target: anchor,
			currentTarget: anchor,
			preventDefault: $.noop
		});
	},

	_findActive: function( index ) {
		return index === false ? $() : this.tabs.eq( index );
	},

	_getIndex: function( index ) {
		// meta-function to give users option to provide a href string instead of a numerical index.
		if ( typeof index === "string" ) {
			index = this.anchors.index( this.anchors.filter( "[href$='" + index + "']" ) );
		}

		return index;
	},

	_destroy: function() {
		if ( this.xhr ) {
			this.xhr.abort();
		}

		this.element.removeClass( "ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible" );

		this.tablist
			.removeClass( "ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all" )
			.removeAttr( "role" );

		this.anchors
			.removeClass( "ui-tabs-anchor" )
			.removeAttr( "role" )
			.removeAttr( "tabIndex" )
			.removeData( "href.tabs" )
			.removeData( "load.tabs" )
			.removeUniqueId();

		this.tabs.add( this.panels ).each(function() {
			if ( $.data( this, "ui-tabs-destroy" ) ) {
				$( this ).remove();
			} else {
				$( this )
					.removeClass( "ui-state-default ui-state-active ui-state-disabled " +
						"ui-corner-top ui-corner-bottom ui-widget-content ui-tabs-active ui-tabs-panel" )
					.removeAttr( "tabIndex" )
					.removeAttr( "aria-live" )
					.removeAttr( "aria-busy" )
					.removeAttr( "aria-selected" )
					.removeAttr( "aria-labelledby" )
					.removeAttr( "aria-hidden" )
					.removeAttr( "aria-expanded" )
					.removeAttr( "role" );
			}
		});

		this.tabs.each(function() {
			var li = $( this ),
				prev = li.data( "ui-tabs-aria-controls" );
			if ( prev ) {
				li.attr( "aria-controls", prev );
			} else {
				li.removeAttr( "aria-controls" );
			}
		});

		this.panels.show();

		if ( this.options.heightStyle !== "content" ) {
			this.panels.css( "height", "" );
		}
	},

	enable: function( index ) {
		var disabled = this.options.disabled;
		if ( disabled === false ) {
			return;
		}

		if ( index === undefined ) {
			disabled = false;
		} else {
			index = this._getIndex( index );
			if ( $.isArray( disabled ) ) {
				disabled = $.map( disabled, function( num ) {
					return num !== index ? num : null;
				});
			} else {
				disabled = $.map( this.tabs, function( li, num ) {
					return num !== index ? num : null;
				});
			}
		}
		this._setupDisabled( disabled );
	},

	disable: function( index ) {
		var disabled = this.options.disabled;
		if ( disabled === true ) {
			return;
		}

		if ( index === undefined ) {
			disabled = true;
		} else {
			index = this._getIndex( index );
			if ( $.inArray( index, disabled ) !== -1 ) {
				return;
			}
			if ( $.isArray( disabled ) ) {
				disabled = $.merge( [ index ], disabled ).sort();
			} else {
				disabled = [ index ];
			}
		}
		this._setupDisabled( disabled );
	},

	load: function( index, event ) {
		index = this._getIndex( index );
		var that = this,
			tab = this.tabs.eq( index ),
			anchor = tab.find( ".ui-tabs-anchor" ),
			panel = this._getPanelForTab( tab ),
			eventData = {
				tab: tab,
				panel: panel
			};

		// not remote
		if ( isLocal( anchor[ 0 ] ) ) {
			return;
		}

		this.xhr = $.ajax( this._ajaxSettings( anchor, event, eventData ) );

		// support: jQuery <1.8
		// jQuery <1.8 returns false if the request is canceled in beforeSend,
		// but as of 1.8, $.ajax() always returns a jqXHR object.
		if ( this.xhr && this.xhr.statusText !== "canceled" ) {
			tab.addClass( "ui-tabs-loading" );
			panel.attr( "aria-busy", "true" );

			this.xhr
				.success(function( response ) {
					// support: jQuery <1.8
					// http://bugs.jquery.com/ticket/11778
					setTimeout(function() {
						panel.html( response );
						that._trigger( "load", event, eventData );
					}, 1 );
				})
				.complete(function( jqXHR, status ) {
					// support: jQuery <1.8
					// http://bugs.jquery.com/ticket/11778
					setTimeout(function() {
						if ( status === "abort" ) {
							that.panels.stop( false, true );
						}

						tab.removeClass( "ui-tabs-loading" );
						panel.removeAttr( "aria-busy" );

						if ( jqXHR === that.xhr ) {
							delete that.xhr;
						}
					}, 1 );
				});
		}
	},

	// TODO: Remove this function in 1.10 when ajaxOptions is removed
	_ajaxSettings: function( anchor, event, eventData ) {
		var that = this;
		return {
			url: anchor.attr( "href" ),
			beforeSend: function( jqXHR, settings ) {
				return that._trigger( "beforeLoad", event,
					$.extend( { jqXHR : jqXHR, ajaxSettings: settings }, eventData ) );
			}
		};
	},

	_getPanelForTab: function( tab ) {
		var id = $( tab ).attr( "aria-controls" );
		return this.element.find( this._sanitizeSelector( "#" + id ) );
	}
});

// DEPRECATED
if ( $.uiBackCompat !== false ) {

	// helper method for a lot of the back compat extensions
	$.ui.tabs.prototype._ui = function( tab, panel ) {
		return {
			tab: tab,
			panel: panel,
			index: this.anchors.index( tab )
		};
	};

	// url method
	$.widget( "ui.tabs", $.ui.tabs, {
		url: function( index, url ) {
			this.anchors.eq( index ).attr( "href", url );
		}
	});

	// TODO: Remove _ajaxSettings() method when removing this extension
	// ajaxOptions and cache options
	$.widget( "ui.tabs", $.ui.tabs, {
		options: {
			ajaxOptions: null,
			cache: false
		},

		_create: function() {
			this._super();

			var that = this;

			this._on({ tabsbeforeload: function( event, ui ) {
				// tab is already cached
				if ( $.data( ui.tab[ 0 ], "cache.tabs" ) ) {
					event.preventDefault();
					return;
				}

				ui.jqXHR.success(function() {
					if ( that.options.cache ) {
						$.data( ui.tab[ 0 ], "cache.tabs", true );
					}
				});
			}});
		},

		_ajaxSettings: function( anchor, event, ui ) {
			var ajaxOptions = this.options.ajaxOptions;
			return $.extend( {}, ajaxOptions, {
				error: function( xhr, status ) {
					try {
						// Passing index avoid a race condition when this method is
						// called after the user has selected another tab.
						// Pass the anchor that initiated this request allows
						// loadError to manipulate the tab content panel via $(a.hash)
						ajaxOptions.error(
							xhr, status, ui.tab.closest( "li" ).index(), ui.tab[ 0 ] );
					}
					catch ( error ) {}
				}
			}, this._superApply( arguments ) );
		},

		_setOption: function( key, value ) {
			// reset cache if switching from cached to not cached
			if ( key === "cache" && value === false ) {
				this.anchors.removeData( "cache.tabs" );
			}
			this._super( key, value );
		},

		_destroy: function() {
			this.anchors.removeData( "cache.tabs" );
			this._super();
		},

		url: function( index ){
			this.anchors.eq( index ).removeData( "cache.tabs" );
			this._superApply( arguments );
		}
	});

	// abort method
	$.widget( "ui.tabs", $.ui.tabs, {
		abort: function() {
			if ( this.xhr ) {
				this.xhr.abort();
			}
		}
	});

	// spinner
	$.widget( "ui.tabs", $.ui.tabs, {
		options: {
			spinner: "<em>Loading&#8230;</em>"
		},
		_create: function() {
			this._super();
			this._on({
				tabsbeforeload: function( event, ui ) {
					// Don't react to nested tabs or tabs that don't use a spinner
					if ( event.target !== this.element[ 0 ] ||
							!this.options.spinner ) {
						return;
					}

					var span = ui.tab.find( "span" ),
						html = span.html();
					span.html( this.options.spinner );
					ui.jqXHR.complete(function() {
						span.html( html );
					});
				}
			});
		}
	});

	// enable/disable events
	$.widget( "ui.tabs", $.ui.tabs, {
		options: {
			enable: null,
			disable: null
		},

		enable: function( index ) {
			var options = this.options,
				trigger;

			if ( index && options.disabled === true ||
					( $.isArray( options.disabled ) && $.inArray( index, options.disabled ) !== -1 ) ) {
				trigger = true;
			}

			this._superApply( arguments );

			if ( trigger ) {
				this._trigger( "enable", null, this._ui( this.anchors[ index ], this.panels[ index ] ) );
			}
		},

		disable: function( index ) {
			var options = this.options,
				trigger;

			if ( index && options.disabled === false ||
					( $.isArray( options.disabled ) && $.inArray( index, options.disabled ) === -1 ) ) {
				trigger = true;
			}

			this._superApply( arguments );

			if ( trigger ) {
				this._trigger( "disable", null, this._ui( this.anchors[ index ], this.panels[ index ] ) );
			}
		}
	});

	// add/remove methods and events
	$.widget( "ui.tabs", $.ui.tabs, {
		options: {
			add: null,
			remove: null,
			tabTemplate: "<li><a href='#{href}'><span>#{label}</span></a></li>"
		},

		add: function( url, label, index ) {
			if ( index === undefined ) {
				index = this.anchors.length;
			}

			var doInsertAfter, panel,
				options = this.options,
				li = $( options.tabTemplate
					.replace( /#\{href\}/g, url )
					.replace( /#\{label\}/g, label ) ),
				id = !url.indexOf( "#" ) ?
					url.replace( "#", "" ) :
					this._tabId( li );

			li.addClass( "ui-state-default ui-corner-top" ).data( "ui-tabs-destroy", true );
			li.attr( "aria-controls", id );

			doInsertAfter = index >= this.tabs.length;

			// try to find an existing element before creating a new one
			panel = this.element.find( "#" + id );
			if ( !panel.length ) {
				panel = this._createPanel( id );
				if ( doInsertAfter ) {
					if ( index > 0 ) {
						panel.insertAfter( this.panels.eq( -1 ) );
					} else {
						panel.appendTo( this.element );
					}
				} else {
					panel.insertBefore( this.panels[ index ] );
				}
			}
			panel.addClass( "ui-tabs-panel ui-widget-content ui-corner-bottom" ).hide();

			if ( doInsertAfter ) {
				li.appendTo( this.tablist );
			} else {
				li.insertBefore( this.tabs[ index ] );
			}

			options.disabled = $.map( options.disabled, function( n ) {
				return n >= index ? ++n : n;
			});

			this.refresh();
			if ( this.tabs.length === 1 && options.active === false ) {
				this.option( "active", 0 );
			}

			this._trigger( "add", null, this._ui( this.anchors[ index ], this.panels[ index ] ) );
			return this;
		},

		remove: function( index ) {
			index = this._getIndex( index );
			var options = this.options,
				tab = this.tabs.eq( index ).remove(),
				panel = this._getPanelForTab( tab ).remove();

			// If selected tab was removed focus tab to the right or
			// in case the last tab was removed the tab to the left.
			// We check for more than 2 tabs, because if there are only 2,
			// then when we remove this tab, there will only be one tab left
			// so we don't need to detect which tab to activate.
			if ( tab.hasClass( "ui-tabs-active" ) && this.anchors.length > 2 ) {
				this._activate( index + ( index + 1 < this.anchors.length ? 1 : -1 ) );
			}

			options.disabled = $.map(
				$.grep( options.disabled, function( n ) {
					return n !== index;
				}),
				function( n ) {
					return n >= index ? --n : n;
				});

			this.refresh();

			this._trigger( "remove", null, this._ui( tab.find( "a" )[ 0 ], panel[ 0 ] ) );
			return this;
		}
	});

	// length method
	$.widget( "ui.tabs", $.ui.tabs, {
		length: function() {
			return this.anchors.length;
		}
	});

	// panel ids (idPrefix option + title attribute)
	$.widget( "ui.tabs", $.ui.tabs, {
		options: {
			idPrefix: "ui-tabs-"
		},

		_tabId: function( tab ) {
			var a = tab.is( "li" ) ? tab.find( "a[href]" ) : tab;
			a = a[0];
			return $( a ).closest( "li" ).attr( "aria-controls" ) ||
				a.title && a.title.replace( /\s/g, "_" ).replace( /[^\w\u00c0-\uFFFF\-]/g, "" ) ||
				this.options.idPrefix + getNextTabId();
		}
	});

	// _createPanel method
	$.widget( "ui.tabs", $.ui.tabs, {
		options: {
			panelTemplate: "<div></div>"
		},

		_createPanel: function( id ) {
			return $( this.options.panelTemplate )
				.attr( "id", id )
				.addClass( "ui-tabs-panel ui-widget-content ui-corner-bottom" )
				.data( "ui-tabs-destroy", true );
		}
	});

	// selected option
	$.widget( "ui.tabs", $.ui.tabs, {
		_create: function() {
			var options = this.options;
			if ( options.active === null && options.selected !== undefined ) {
				options.active = options.selected === -1 ? false : options.selected;
			}
			this._super();
			options.selected = options.active;
			if ( options.selected === false ) {
				options.selected = -1;
			}
		},

		_setOption: function( key, value ) {
			if ( key !== "selected" ) {
				return this._super( key, value );
			}

			var options = this.options;
			this._super( "active", value === -1 ? false : value );
			options.selected = options.active;
			if ( options.selected === false ) {
				options.selected = -1;
			}
		},

		_eventHandler: function() {
			this._superApply( arguments );
			this.options.selected = this.options.active;
			if ( this.options.selected === false ) {
				this.options.selected = -1;
			}
		}
	});

	// show and select event
	$.widget( "ui.tabs", $.ui.tabs, {
		options: {
			show: null,
			select: null
		},
		_create: function() {
			this._super();
			if ( this.options.active !== false ) {
				this._trigger( "show", null, this._ui(
					this.active.find( ".ui-tabs-anchor" )[ 0 ],
					this._getPanelForTab( this.active )[ 0 ] ) );
			}
		},
		_trigger: function( type, event, data ) {
			var tab, panel,
				ret = this._superApply( arguments );

			if ( !ret ) {
				return false;
			}

			if ( type === "beforeActivate" ) {
				tab = data.newTab.length ? data.newTab : data.oldTab;
				panel = data.newPanel.length ? data.newPanel : data.oldPanel;
				ret = this._super( "select", event, {
					tab: tab.find( ".ui-tabs-anchor" )[ 0],
					panel: panel[ 0 ],
					index: tab.closest( "li" ).index()
				});
			} else if ( type === "activate" && data.newTab.length ) {
				ret = this._super( "show", event, {
					tab: data.newTab.find( ".ui-tabs-anchor" )[ 0 ],
					panel: data.newPanel[ 0 ],
					index: data.newTab.closest( "li" ).index()
				});
			}
			return ret;
		}
	});

	// select method
	$.widget( "ui.tabs", $.ui.tabs, {
		select: function( index ) {
			index = this._getIndex( index );
			if ( index === -1 ) {
				if ( this.options.collapsible && this.options.selected !== -1 ) {
					index = this.options.selected;
				} else {
					return;
				}
			}
			this.anchors.eq( index ).trigger( this.options.event + this.eventNamespace );
		}
	});

	// cookie option
	(function() {

	var listId = 0;

	$.widget( "ui.tabs", $.ui.tabs, {
		options: {
			cookie: null // e.g. { expires: 7, path: '/', domain: 'jquery.com', secure: true }
		},
		_create: function() {
			var options = this.options,
				active;
			if ( options.active == null && options.cookie ) {
				active = parseInt( this._cookie(), 10 );
				if ( active === -1 ) {
					active = false;
				}
				options.active = active;
			}
			this._super();
		},
		_cookie: function( active ) {
			var cookie = [ this.cookie ||
				( this.cookie = this.options.cookie.name || "ui-tabs-" + (++listId) ) ];
			if ( arguments.length ) {
				cookie.push( active === false ? -1 : active );
				cookie.push( this.options.cookie );
			}
			return $.cookie.apply( null, cookie );
		},
		_refresh: function() {
			this._super();
			if ( this.options.cookie ) {
				this._cookie( this.options.active, this.options.cookie );
			}
		},
		_eventHandler: function() {
			this._superApply( arguments );
			if ( this.options.cookie ) {
				this._cookie( this.options.active, this.options.cookie );
			}
		},
		_destroy: function() {
			this._super();
			if ( this.options.cookie ) {
				this._cookie( null, this.options.cookie );
			}
		}
	});

	})();

	// load event
	$.widget( "ui.tabs", $.ui.tabs, {
		_trigger: function( type, event, data ) {
			var _data = $.extend( {}, data );
			if ( type === "load" ) {
				_data.panel = _data.panel[ 0 ];
				_data.tab = _data.tab.find( ".ui-tabs-anchor" )[ 0 ];
			}
			return this._super( type, event, _data );
		}
	});

	// fx option
	// The new animation options (show, hide) conflict with the old show callback.
	// The old fx option wins over show/hide anyway (always favor back-compat).
	// If a user wants to use the new animation API, they must give up the old API.
	$.widget( "ui.tabs", $.ui.tabs, {
		options: {
			fx: null // e.g. { height: "toggle", opacity: "toggle", duration: 200 }
		},

		_getFx: function() {
			var hide, show,
				fx = this.options.fx;

			if ( fx ) {
				if ( $.isArray( fx ) ) {
					hide = fx[ 0 ];
					show = fx[ 1 ];
				} else {
					hide = show = fx;
				}
			}

			return fx ? { show: show, hide: hide } : null;
		},

		_toggle: function( event, eventData ) {
			var that = this,
				toShow = eventData.newPanel,
				toHide = eventData.oldPanel,
				fx = this._getFx();

			if ( !fx ) {
				return this._super( event, eventData );
			}

			that.running = true;

			function complete() {
				that.running = false;
				that._trigger( "activate", event, eventData );
			}

			function show() {
				eventData.newTab.closest( "li" ).addClass( "ui-tabs-active ui-state-active" );

				if ( toShow.length && fx.show ) {
					toShow
						.animate( fx.show, fx.show.duration, function() {
							complete();
						});
				} else {
					toShow.show();
					complete();
				}
			}

			// start out by hiding, then showing, then completing
			if ( toHide.length && fx.hide ) {
				toHide.animate( fx.hide, fx.hide.duration, function() {
					eventData.oldTab.closest( "li" ).removeClass( "ui-tabs-active ui-state-active" );
					show();
				});
			} else {
				eventData.oldTab.closest( "li" ).removeClass( "ui-tabs-active ui-state-active" );
				toHide.hide();
				show();
			}
		}
	});
}

})( jQuery );
(function( $ ) {

var increments = 0;

function addDescribedBy( elem, id ) {
	var describedby = (elem.attr( "aria-describedby" ) || "").split( /\s+/ );
	describedby.push( id );
	elem
		.data( "ui-tooltip-id", id )
		.attr( "aria-describedby", $.trim( describedby.join( " " ) ) );
}

function removeDescribedBy( elem ) {
	var id = elem.data( "ui-tooltip-id" ),
		describedby = (elem.attr( "aria-describedby" ) || "").split( /\s+/ ),
		index = $.inArray( id, describedby );
	if ( index !== -1 ) {
		describedby.splice( index, 1 );
	}

	elem.removeData( "ui-tooltip-id" );
	describedby = $.trim( describedby.join( " " ) );
	if ( describedby ) {
		elem.attr( "aria-describedby", describedby );
	} else {
		elem.removeAttr( "aria-describedby" );
	}
}

$.widget( "ui.tooltip", {
	version: "1.9.2",
	options: {
		content: function() {
			return $( this ).attr( "title" );
		},
		hide: true,
		// Disabled elements have inconsistent behavior across browsers (#8661)
		items: "[title]:not([disabled])",
		position: {
			my: "left top+15",
			at: "left bottom",
			collision: "flipfit flip"
		},
		show: true,
		tooltipClass: null,
		track: false,

		// callbacks
		close: null,
		open: null
	},

	_create: function() {
		this._on({
			mouseover: "open",
			focusin: "open"
		});

		// IDs of generated tooltips, needed for destroy
		this.tooltips = {};
		// IDs of parent tooltips where we removed the title attribute
		this.parents = {};

		if ( this.options.disabled ) {
			this._disable();
		}
	},

	_setOption: function( key, value ) {
		var that = this;

		if ( key === "disabled" ) {
			this[ value ? "_disable" : "_enable" ]();
			this.options[ key ] = value;
			// disable element style changes
			return;
		}

		this._super( key, value );

		if ( key === "content" ) {
			$.each( this.tooltips, function( id, element ) {
				that._updateContent( element );
			});
		}
	},

	_disable: function() {
		var that = this;

		// close open tooltips
		$.each( this.tooltips, function( id, element ) {
			var event = $.Event( "blur" );
			event.target = event.currentTarget = element[0];
			that.close( event, true );
		});

		// remove title attributes to prevent native tooltips
		this.element.find( this.options.items ).andSelf().each(function() {
			var element = $( this );
			if ( element.is( "[title]" ) ) {
				element
					.data( "ui-tooltip-title", element.attr( "title" ) )
					.attr( "title", "" );
			}
		});
	},

	_enable: function() {
		// restore title attributes
		this.element.find( this.options.items ).andSelf().each(function() {
			var element = $( this );
			if ( element.data( "ui-tooltip-title" ) ) {
				element.attr( "title", element.data( "ui-tooltip-title" ) );
			}
		});
	},

	open: function( event ) {
		var that = this,
			target = $( event ? event.target : this.element )
				// we need closest here due to mouseover bubbling,
				// but always pointing at the same event target
				.closest( this.options.items );

		// No element to show a tooltip for or the tooltip is already open
		if ( !target.length || target.data( "ui-tooltip-id" ) ) {
			return;
		}

		if ( target.attr( "title" ) ) {
			target.data( "ui-tooltip-title", target.attr( "title" ) );
		}

		target.data( "ui-tooltip-open", true );

		// kill parent tooltips, custom or native, for hover
		if ( event && event.type === "mouseover" ) {
			target.parents().each(function() {
				var parent = $( this ),
					blurEvent;
				if ( parent.data( "ui-tooltip-open" ) ) {
					blurEvent = $.Event( "blur" );
					blurEvent.target = blurEvent.currentTarget = this;
					that.close( blurEvent, true );
				}
				if ( parent.attr( "title" ) ) {
					parent.uniqueId();
					that.parents[ this.id ] = {
						element: this,
						title: parent.attr( "title" )
					};
					parent.attr( "title", "" );
				}
			});
		}

		this._updateContent( target, event );
	},

	_updateContent: function( target, event ) {
		var content,
			contentOption = this.options.content,
			that = this,
			eventType = event ? event.type : null;

		if ( typeof contentOption === "string" ) {
			return this._open( event, target, contentOption );
		}

		content = contentOption.call( target[0], function( response ) {
			// ignore async response if tooltip was closed already
			if ( !target.data( "ui-tooltip-open" ) ) {
				return;
			}
			// IE may instantly serve a cached response for ajax requests
			// delay this call to _open so the other call to _open runs first
			that._delay(function() {
				// jQuery creates a special event for focusin when it doesn't
				// exist natively. To improve performance, the native event
				// object is reused and the type is changed. Therefore, we can't
				// rely on the type being correct after the event finished
				// bubbling, so we set it back to the previous value. (#8740)
				if ( event ) {
					event.type = eventType;
				}
				this._open( event, target, response );
			});
		});
		if ( content ) {
			this._open( event, target, content );
		}
	},

	_open: function( event, target, content ) {
		var tooltip, events, delayedShow,
			positionOption = $.extend( {}, this.options.position );

		if ( !content ) {
			return;
		}

		// Content can be updated multiple times. If the tooltip already
		// exists, then just update the content and bail.
		tooltip = this._find( target );
		if ( tooltip.length ) {
			tooltip.find( ".ui-tooltip-content" ).html( content );
			return;
		}

		// if we have a title, clear it to prevent the native tooltip
		// we have to check first to avoid defining a title if none exists
		// (we don't want to cause an element to start matching [title])
		//
		// We use removeAttr only for key events, to allow IE to export the correct
		// accessible attributes. For mouse events, set to empty string to avoid
		// native tooltip showing up (happens only when removing inside mouseover).
		if ( target.is( "[title]" ) ) {
			if ( event && event.type === "mouseover" ) {
				target.attr( "title", "" );
			} else {
				target.removeAttr( "title" );
			}
		}

		tooltip = this._tooltip( target );
		addDescribedBy( target, tooltip.attr( "id" ) );
		tooltip.find( ".ui-tooltip-content" ).html( content );

		function position( event ) {
			positionOption.of = event;
			if ( tooltip.is( ":hidden" ) ) {
				return;
			}
			tooltip.position( positionOption );
		}
		if ( this.options.track && event && /^mouse/.test( event.type ) ) {
			this._on( this.document, {
				mousemove: position
			});
			// trigger once to override element-relative positioning
			position( event );
		} else {
			tooltip.position( $.extend({
				of: target
			}, this.options.position ) );
		}

		tooltip.hide();

		this._show( tooltip, this.options.show );
		// Handle tracking tooltips that are shown with a delay (#8644). As soon
		// as the tooltip is visible, position the tooltip using the most recent
		// event.
		if ( this.options.show && this.options.show.delay ) {
			delayedShow = setInterval(function() {
				if ( tooltip.is( ":visible" ) ) {
					position( positionOption.of );
					clearInterval( delayedShow );
				}
			}, $.fx.interval );
		}

		this._trigger( "open", event, { tooltip: tooltip } );

		events = {
			keyup: function( event ) {
				if ( event.keyCode === $.ui.keyCode.ESCAPE ) {
					var fakeEvent = $.Event(event);
					fakeEvent.currentTarget = target[0];
					this.close( fakeEvent, true );
				}
			},
			remove: function() {
				this._removeTooltip( tooltip );
			}
		};
		if ( !event || event.type === "mouseover" ) {
			events.mouseleave = "close";
		}
		if ( !event || event.type === "focusin" ) {
			events.focusout = "close";
		}
		this._on( true, target, events );
	},

	close: function( event ) {
		var that = this,
			target = $( event ? event.currentTarget : this.element ),
			tooltip = this._find( target );

		// disabling closes the tooltip, so we need to track when we're closing
		// to avoid an infinite loop in case the tooltip becomes disabled on close
		if ( this.closing ) {
			return;
		}

		// only set title if we had one before (see comment in _open())
		if ( target.data( "ui-tooltip-title" ) ) {
			target.attr( "title", target.data( "ui-tooltip-title" ) );
		}

		removeDescribedBy( target );

		tooltip.stop( true );
		this._hide( tooltip, this.options.hide, function() {
			that._removeTooltip( $( this ) );
		});

		target.removeData( "ui-tooltip-open" );
		this._off( target, "mouseleave focusout keyup" );
		// Remove 'remove' binding only on delegated targets
		if ( target[0] !== this.element[0] ) {
			this._off( target, "remove" );
		}
		this._off( this.document, "mousemove" );

		if ( event && event.type === "mouseleave" ) {
			$.each( this.parents, function( id, parent ) {
				$( parent.element ).attr( "title", parent.title );
				delete that.parents[ id ];
			});
		}

		this.closing = true;
		this._trigger( "close", event, { tooltip: tooltip } );
		this.closing = false;
	},

	_tooltip: function( element ) {
		var id = "ui-tooltip-" + increments++,
			tooltip = $( "<div>" )
				.attr({
					id: id,
					role: "tooltip"
				})
				.addClass( "ui-tooltip ui-widget ui-corner-all ui-widget-content " +
					( this.options.tooltipClass || "" ) );
		$( "<div>" )
			.addClass( "ui-tooltip-content" )
			.appendTo( tooltip );
		tooltip.appendTo( this.document[0].body );
		if ( $.fn.bgiframe ) {
			tooltip.bgiframe();
		}
		this.tooltips[ id ] = element;
		return tooltip;
	},

	_find: function( target ) {
		var id = target.data( "ui-tooltip-id" );
		return id ? $( "#" + id ) : $();
	},

	_removeTooltip: function( tooltip ) {
		tooltip.remove();
		delete this.tooltips[ tooltip.attr( "id" ) ];
	},

	_destroy: function() {
		var that = this;

		// close open tooltips
		$.each( this.tooltips, function( id, element ) {
			// Delegate to close method to handle common cleanup
			var event = $.Event( "blur" );
			event.target = event.currentTarget = element[0];
			that.close( event, true );

			// Remove immediately; destroying an open tooltip doesn't use the
			// hide animation
			$( "#" + id ).remove();

			// Restore the title
			if ( element.data( "ui-tooltip-title" ) ) {
				element.attr( "title", element.data( "ui-tooltip-title" ) );
				element.removeData( "ui-tooltip-title" );
			}
		});
	}
});

}( jQuery ) );
;(jQuery.effects || (function($, undefined) {

var backCompat = $.uiBackCompat !== false,
	// prefix used for storing data on .data()
	dataSpace = "ui-effects-";

$.effects = {
	effect: {}
};

/*!
 * jQuery Color Animations v2.0.0
 * http://jquery.com/
 *
 * Copyright 2012 jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * Date: Mon Aug 13 13:41:02 2012 -0500
 */
(function( jQuery, undefined ) {

	var stepHooks = "backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor".split(" "),

	// plusequals test for += 100 -= 100
	rplusequals = /^([\-+])=\s*(\d+\.?\d*)/,
	// a set of RE's that can match strings and generate color tuples.
	stringParsers = [{
			re: /rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,
			parse: function( execResult ) {
				return [
					execResult[ 1 ],
					execResult[ 2 ],
					execResult[ 3 ],
					execResult[ 4 ]
				];
			}
		}, {
			re: /rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,
			parse: function( execResult ) {
				return [
					execResult[ 1 ] * 2.55,
					execResult[ 2 ] * 2.55,
					execResult[ 3 ] * 2.55,
					execResult[ 4 ]
				];
			}
		}, {
			// this regex ignores A-F because it's compared against an already lowercased string
			re: /#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,
			parse: function( execResult ) {
				return [
					parseInt( execResult[ 1 ], 16 ),
					parseInt( execResult[ 2 ], 16 ),
					parseInt( execResult[ 3 ], 16 )
				];
			}
		}, {
			// this regex ignores A-F because it's compared against an already lowercased string
			re: /#([a-f0-9])([a-f0-9])([a-f0-9])/,
			parse: function( execResult ) {
				return [
					parseInt( execResult[ 1 ] + execResult[ 1 ], 16 ),
					parseInt( execResult[ 2 ] + execResult[ 2 ], 16 ),
					parseInt( execResult[ 3 ] + execResult[ 3 ], 16 )
				];
			}
		}, {
			re: /hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,
			space: "hsla",
			parse: function( execResult ) {
				return [
					execResult[ 1 ],
					execResult[ 2 ] / 100,
					execResult[ 3 ] / 100,
					execResult[ 4 ]
				];
			}
		}],

	// jQuery.Color( )
	color = jQuery.Color = function( color, green, blue, alpha ) {
		return new jQuery.Color.fn.parse( color, green, blue, alpha );
	},
	spaces = {
		rgba: {
			props: {
				red: {
					idx: 0,
					type: "byte"
				},
				green: {
					idx: 1,
					type: "byte"
				},
				blue: {
					idx: 2,
					type: "byte"
				}
			}
		},

		hsla: {
			props: {
				hue: {
					idx: 0,
					type: "degrees"
				},
				saturation: {
					idx: 1,
					type: "percent"
				},
				lightness: {
					idx: 2,
					type: "percent"
				}
			}
		}
	},
	propTypes = {
		"byte": {
			floor: true,
			max: 255
		},
		"percent": {
			max: 1
		},
		"degrees": {
			mod: 360,
			floor: true
		}
	},
	support = color.support = {},

	// element for support tests
	supportElem = jQuery( "<p>" )[ 0 ],

	// colors = jQuery.Color.names
	colors,

	// local aliases of functions called often
	each = jQuery.each;

// determine rgba support immediately
supportElem.style.cssText = "background-color:rgba(1,1,1,.5)";
support.rgba = supportElem.style.backgroundColor.indexOf( "rgba" ) > -1;

// define cache name and alpha properties
// for rgba and hsla spaces
each( spaces, function( spaceName, space ) {
	space.cache = "_" + spaceName;
	space.props.alpha = {
		idx: 3,
		type: "percent",
		def: 1
	};
});

function clamp( value, prop, allowEmpty ) {
	var type = propTypes[ prop.type ] || {};

	if ( value == null ) {
		return (allowEmpty || !prop.def) ? null : prop.def;
	}

	// ~~ is an short way of doing floor for positive numbers
	value = type.floor ? ~~value : parseFloat( value );

	// IE will pass in empty strings as value for alpha,
	// which will hit this case
	if ( isNaN( value ) ) {
		return prop.def;
	}

	if ( type.mod ) {
		// we add mod before modding to make sure that negatives values
		// get converted properly: -10 -> 350
		return (value + type.mod) % type.mod;
	}

	// for now all property types without mod have min and max
	return 0 > value ? 0 : type.max < value ? type.max : value;
}

function stringParse( string ) {
	var inst = color(),
		rgba = inst._rgba = [];

	string = string.toLowerCase();

	each( stringParsers, function( i, parser ) {
		var parsed,
			match = parser.re.exec( string ),
			values = match && parser.parse( match ),
			spaceName = parser.space || "rgba";

		if ( values ) {
			parsed = inst[ spaceName ]( values );

			// if this was an rgba parse the assignment might happen twice
			// oh well....
			inst[ spaces[ spaceName ].cache ] = parsed[ spaces[ spaceName ].cache ];
			rgba = inst._rgba = parsed._rgba;

			// exit each( stringParsers ) here because we matched
			return false;
		}
	});

	// Found a stringParser that handled it
	if ( rgba.length ) {

		// if this came from a parsed string, force "transparent" when alpha is 0
		// chrome, (and maybe others) return "transparent" as rgba(0,0,0,0)
		if ( rgba.join() === "0,0,0,0" ) {
			jQuery.extend( rgba, colors.transparent );
		}
		return inst;
	}

	// named colors
	return colors[ string ];
}

color.fn = jQuery.extend( color.prototype, {
	parse: function( red, green, blue, alpha ) {
		if ( red === undefined ) {
			this._rgba = [ null, null, null, null ];
			return this;
		}
		if ( red.jquery || red.nodeType ) {
			red = jQuery( red ).css( green );
			green = undefined;
		}

		var inst = this,
			type = jQuery.type( red ),
			rgba = this._rgba = [];

		// more than 1 argument specified - assume ( red, green, blue, alpha )
		if ( green !== undefined ) {
			red = [ red, green, blue, alpha ];
			type = "array";
		}

		if ( type === "string" ) {
			return this.parse( stringParse( red ) || colors._default );
		}

		if ( type === "array" ) {
			each( spaces.rgba.props, function( key, prop ) {
				rgba[ prop.idx ] = clamp( red[ prop.idx ], prop );
			});
			return this;
		}

		if ( type === "object" ) {
			if ( red instanceof color ) {
				each( spaces, function( spaceName, space ) {
					if ( red[ space.cache ] ) {
						inst[ space.cache ] = red[ space.cache ].slice();
					}
				});
			} else {
				each( spaces, function( spaceName, space ) {
					var cache = space.cache;
					each( space.props, function( key, prop ) {

						// if the cache doesn't exist, and we know how to convert
						if ( !inst[ cache ] && space.to ) {

							// if the value was null, we don't need to copy it
							// if the key was alpha, we don't need to copy it either
							if ( key === "alpha" || red[ key ] == null ) {
								return;
							}
							inst[ cache ] = space.to( inst._rgba );
						}

						// this is the only case where we allow nulls for ALL properties.
						// call clamp with alwaysAllowEmpty
						inst[ cache ][ prop.idx ] = clamp( red[ key ], prop, true );
					});

					// everything defined but alpha?
					if ( inst[ cache ] && $.inArray( null, inst[ cache ].slice( 0, 3 ) ) < 0 ) {
						// use the default of 1
						inst[ cache ][ 3 ] = 1;
						if ( space.from ) {
							inst._rgba = space.from( inst[ cache ] );
						}
					}
				});
			}
			return this;
		}
	},
	is: function( compare ) {
		var is = color( compare ),
			same = true,
			inst = this;

		each( spaces, function( _, space ) {
			var localCache,
				isCache = is[ space.cache ];
			if (isCache) {
				localCache = inst[ space.cache ] || space.to && space.to( inst._rgba ) || [];
				each( space.props, function( _, prop ) {
					if ( isCache[ prop.idx ] != null ) {
						same = ( isCache[ prop.idx ] === localCache[ prop.idx ] );
						return same;
					}
				});
			}
			return same;
		});
		return same;
	},
	_space: function() {
		var used = [],
			inst = this;
		each( spaces, function( spaceName, space ) {
			if ( inst[ space.cache ] ) {
				used.push( spaceName );
			}
		});
		return used.pop();
	},
	transition: function( other, distance ) {
		var end = color( other ),
			spaceName = end._space(),
			space = spaces[ spaceName ],
			startColor = this.alpha() === 0 ? color( "transparent" ) : this,
			start = startColor[ space.cache ] || space.to( startColor._rgba ),
			result = start.slice();

		end = end[ space.cache ];
		each( space.props, function( key, prop ) {
			var index = prop.idx,
				startValue = start[ index ],
				endValue = end[ index ],
				type = propTypes[ prop.type ] || {};

			// if null, don't override start value
			if ( endValue === null ) {
				return;
			}
			// if null - use end
			if ( startValue === null ) {
				result[ index ] = endValue;
			} else {
				if ( type.mod ) {
					if ( endValue - startValue > type.mod / 2 ) {
						startValue += type.mod;
					} else if ( startValue - endValue > type.mod / 2 ) {
						startValue -= type.mod;
					}
				}
				result[ index ] = clamp( ( endValue - startValue ) * distance + startValue, prop );
			}
		});
		return this[ spaceName ]( result );
	},
	blend: function( opaque ) {
		// if we are already opaque - return ourself
		if ( this._rgba[ 3 ] === 1 ) {
			return this;
		}

		var rgb = this._rgba.slice(),
			a = rgb.pop(),
			blend = color( opaque )._rgba;

		return color( jQuery.map( rgb, function( v, i ) {
			return ( 1 - a ) * blend[ i ] + a * v;
		}));
	},
	toRgbaString: function() {
		var prefix = "rgba(",
			rgba = jQuery.map( this._rgba, function( v, i ) {
				return v == null ? ( i > 2 ? 1 : 0 ) : v;
			});

		if ( rgba[ 3 ] === 1 ) {
			rgba.pop();
			prefix = "rgb(";
		}

		return prefix + rgba.join() + ")";
	},
	toHslaString: function() {
		var prefix = "hsla(",
			hsla = jQuery.map( this.hsla(), function( v, i ) {
				if ( v == null ) {
					v = i > 2 ? 1 : 0;
				}

				// catch 1 and 2
				if ( i && i < 3 ) {
					v = Math.round( v * 100 ) + "%";
				}
				return v;
			});

		if ( hsla[ 3 ] === 1 ) {
			hsla.pop();
			prefix = "hsl(";
		}
		return prefix + hsla.join() + ")";
	},
	toHexString: function( includeAlpha ) {
		var rgba = this._rgba.slice(),
			alpha = rgba.pop();

		if ( includeAlpha ) {
			rgba.push( ~~( alpha * 255 ) );
		}

		return "#" + jQuery.map( rgba, function( v ) {

			// default to 0 when nulls exist
			v = ( v || 0 ).toString( 16 );
			return v.length === 1 ? "0" + v : v;
		}).join("");
	},
	toString: function() {
		return this._rgba[ 3 ] === 0 ? "transparent" : this.toRgbaString();
	}
});
color.fn.parse.prototype = color.fn;

// hsla conversions adapted from:
// https://code.google.com/p/maashaack/source/browse/packages/graphics/trunk/src/graphics/colors/HUE2RGB.as?r=5021

function hue2rgb( p, q, h ) {
	h = ( h + 1 ) % 1;
	if ( h * 6 < 1 ) {
		return p + (q - p) * h * 6;
	}
	if ( h * 2 < 1) {
		return q;
	}
	if ( h * 3 < 2 ) {
		return p + (q - p) * ((2/3) - h) * 6;
	}
	return p;
}

spaces.hsla.to = function ( rgba ) {
	if ( rgba[ 0 ] == null || rgba[ 1 ] == null || rgba[ 2 ] == null ) {
		return [ null, null, null, rgba[ 3 ] ];
	}
	var r = rgba[ 0 ] / 255,
		g = rgba[ 1 ] / 255,
		b = rgba[ 2 ] / 255,
		a = rgba[ 3 ],
		max = Math.max( r, g, b ),
		min = Math.min( r, g, b ),
		diff = max - min,
		add = max + min,
		l = add * 0.5,
		h, s;

	if ( min === max ) {
		h = 0;
	} else if ( r === max ) {
		h = ( 60 * ( g - b ) / diff ) + 360;
	} else if ( g === max ) {
		h = ( 60 * ( b - r ) / diff ) + 120;
	} else {
		h = ( 60 * ( r - g ) / diff ) + 240;
	}

	if ( l === 0 || l === 1 ) {
		s = l;
	} else if ( l <= 0.5 ) {
		s = diff / add;
	} else {
		s = diff / ( 2 - add );
	}
	return [ Math.round(h) % 360, s, l, a == null ? 1 : a ];
};

spaces.hsla.from = function ( hsla ) {
	if ( hsla[ 0 ] == null || hsla[ 1 ] == null || hsla[ 2 ] == null ) {
		return [ null, null, null, hsla[ 3 ] ];
	}
	var h = hsla[ 0 ] / 360,
		s = hsla[ 1 ],
		l = hsla[ 2 ],
		a = hsla[ 3 ],
		q = l <= 0.5 ? l * ( 1 + s ) : l + s - l * s,
		p = 2 * l - q;

	return [
		Math.round( hue2rgb( p, q, h + ( 1 / 3 ) ) * 255 ),
		Math.round( hue2rgb( p, q, h ) * 255 ),
		Math.round( hue2rgb( p, q, h - ( 1 / 3 ) ) * 255 ),
		a
	];
};


each( spaces, function( spaceName, space ) {
	var props = space.props,
		cache = space.cache,
		to = space.to,
		from = space.from;

	// makes rgba() and hsla()
	color.fn[ spaceName ] = function( value ) {

		// generate a cache for this space if it doesn't exist
		if ( to && !this[ cache ] ) {
			this[ cache ] = to( this._rgba );
		}
		if ( value === undefined ) {
			return this[ cache ].slice();
		}

		var ret,
			type = jQuery.type( value ),
			arr = ( type === "array" || type === "object" ) ? value : arguments,
			local = this[ cache ].slice();

		each( props, function( key, prop ) {
			var val = arr[ type === "object" ? key : prop.idx ];
			if ( val == null ) {
				val = local[ prop.idx ];
			}
			local[ prop.idx ] = clamp( val, prop );
		});

		if ( from ) {
			ret = color( from( local ) );
			ret[ cache ] = local;
			return ret;
		} else {
			return color( local );
		}
	};

	// makes red() green() blue() alpha() hue() saturation() lightness()
	each( props, function( key, prop ) {
		// alpha is included in more than one space
		if ( color.fn[ key ] ) {
			return;
		}
		color.fn[ key ] = function( value ) {
			var vtype = jQuery.type( value ),
				fn = ( key === "alpha" ? ( this._hsla ? "hsla" : "rgba" ) : spaceName ),
				local = this[ fn ](),
				cur = local[ prop.idx ],
				match;

			if ( vtype === "undefined" ) {
				return cur;
			}

			if ( vtype === "function" ) {
				value = value.call( this, cur );
				vtype = jQuery.type( value );
			}
			if ( value == null && prop.empty ) {
				return this;
			}
			if ( vtype === "string" ) {
				match = rplusequals.exec( value );
				if ( match ) {
					value = cur + parseFloat( match[ 2 ] ) * ( match[ 1 ] === "+" ? 1 : -1 );
				}
			}
			local[ prop.idx ] = value;
			return this[ fn ]( local );
		};
	});
});

// add .fx.step functions
each( stepHooks, function( i, hook ) {
	jQuery.cssHooks[ hook ] = {
		set: function( elem, value ) {
			var parsed, curElem,
				backgroundColor = "";

			if ( jQuery.type( value ) !== "string" || ( parsed = stringParse( value ) ) ) {
				value = color( parsed || value );
				if ( !support.rgba && value._rgba[ 3 ] !== 1 ) {
					curElem = hook === "backgroundColor" ? elem.parentNode : elem;
					while (
						(backgroundColor === "" || backgroundColor === "transparent") &&
						curElem && curElem.style
					) {
						try {
							backgroundColor = jQuery.css( curElem, "backgroundColor" );
							curElem = curElem.parentNode;
						} catch ( e ) {
						}
					}

					value = value.blend( backgroundColor && backgroundColor !== "transparent" ?
						backgroundColor :
						"_default" );
				}

				value = value.toRgbaString();
			}
			try {
				elem.style[ hook ] = value;
			} catch( error ) {
				// wrapped to prevent IE from throwing errors on "invalid" values like 'auto' or 'inherit'
			}
		}
	};
	jQuery.fx.step[ hook ] = function( fx ) {
		if ( !fx.colorInit ) {
			fx.start = color( fx.elem, hook );
			fx.end = color( fx.end );
			fx.colorInit = true;
		}
		jQuery.cssHooks[ hook ].set( fx.elem, fx.start.transition( fx.end, fx.pos ) );
	};
});

jQuery.cssHooks.borderColor = {
	expand: function( value ) {
		var expanded = {};

		each( [ "Top", "Right", "Bottom", "Left" ], function( i, part ) {
			expanded[ "border" + part + "Color" ] = value;
		});
		return expanded;
	}
};

// Basic color names only.
// Usage of any of the other color names requires adding yourself or including
// jquery.color.svg-names.js.
colors = jQuery.Color.names = {
	// 4.1. Basic color keywords
	aqua: "#00ffff",
	black: "#000000",
	blue: "#0000ff",
	fuchsia: "#ff00ff",
	gray: "#808080",
	green: "#008000",
	lime: "#00ff00",
	maroon: "#800000",
	navy: "#000080",
	olive: "#808000",
	purple: "#800080",
	red: "#ff0000",
	silver: "#c0c0c0",
	teal: "#008080",
	white: "#ffffff",
	yellow: "#ffff00",

	// 4.2.3. "transparent" color keyword
	transparent: [ null, null, null, 0 ],

	_default: "#ffffff"
};

})( jQuery );



/******************************************************************************/
/****************************** CLASS ANIMATIONS ******************************/
/******************************************************************************/
(function() {

var classAnimationActions = [ "add", "remove", "toggle" ],
	shorthandStyles = {
		border: 1,
		borderBottom: 1,
		borderColor: 1,
		borderLeft: 1,
		borderRight: 1,
		borderTop: 1,
		borderWidth: 1,
		margin: 1,
		padding: 1
	};

$.each([ "borderLeftStyle", "borderRightStyle", "borderBottomStyle", "borderTopStyle" ], function( _, prop ) {
	$.fx.step[ prop ] = function( fx ) {
		if ( fx.end !== "none" && !fx.setAttr || fx.pos === 1 && !fx.setAttr ) {
			jQuery.style( fx.elem, prop, fx.end );
			fx.setAttr = true;
		}
	};
});

function getElementStyles() {
	var style = this.ownerDocument.defaultView ?
			this.ownerDocument.defaultView.getComputedStyle( this, null ) :
			this.currentStyle,
		newStyle = {},
		key,
		len;

	// webkit enumerates style porperties
	if ( style && style.length && style[ 0 ] && style[ style[ 0 ] ] ) {
		len = style.length;
		while ( len-- ) {
			key = style[ len ];
			if ( typeof style[ key ] === "string" ) {
				newStyle[ $.camelCase( key ) ] = style[ key ];
			}
		}
	} else {
		for ( key in style ) {
			if ( typeof style[ key ] === "string" ) {
				newStyle[ key ] = style[ key ];
			}
		}
	}

	return newStyle;
}


function styleDifference( oldStyle, newStyle ) {
	var diff = {},
		name, value;

	for ( name in newStyle ) {
		value = newStyle[ name ];
		if ( oldStyle[ name ] !== value ) {
			if ( !shorthandStyles[ name ] ) {
				if ( $.fx.step[ name ] || !isNaN( parseFloat( value ) ) ) {
					diff[ name ] = value;
				}
			}
		}
	}

	return diff;
}

$.effects.animateClass = function( value, duration, easing, callback ) {
	var o = $.speed( duration, easing, callback );

	return this.queue( function() {
		var animated = $( this ),
			baseClass = animated.attr( "class" ) || "",
			applyClassChange,
			allAnimations = o.children ? animated.find( "*" ).andSelf() : animated;

		// map the animated objects to store the original styles.
		allAnimations = allAnimations.map(function() {
			var el = $( this );
			return {
				el: el,
				start: getElementStyles.call( this )
			};
		});

		// apply class change
		applyClassChange = function() {
			$.each( classAnimationActions, function(i, action) {
				if ( value[ action ] ) {
					animated[ action + "Class" ]( value[ action ] );
				}
			});
		};
		applyClassChange();

		// map all animated objects again - calculate new styles and diff
		allAnimations = allAnimations.map(function() {
			this.end = getElementStyles.call( this.el[ 0 ] );
			this.diff = styleDifference( this.start, this.end );
			return this;
		});

		// apply original class
		animated.attr( "class", baseClass );

		// map all animated objects again - this time collecting a promise
		allAnimations = allAnimations.map(function() {
			var styleInfo = this,
				dfd = $.Deferred(),
				opts = jQuery.extend({}, o, {
					queue: false,
					complete: function() {
						dfd.resolve( styleInfo );
					}
				});

			this.el.animate( this.diff, opts );
			return dfd.promise();
		});

		// once all animations have completed:
		$.when.apply( $, allAnimations.get() ).done(function() {

			// set the final class
			applyClassChange();

			// for each animated element,
			// clear all css properties that were animated
			$.each( arguments, function() {
				var el = this.el;
				$.each( this.diff, function(key) {
					el.css( key, '' );
				});
			});

			// this is guarnteed to be there if you use jQuery.speed()
			// it also handles dequeuing the next anim...
			o.complete.call( animated[ 0 ] );
		});
	});
};

$.fn.extend({
	_addClass: $.fn.addClass,
	addClass: function( classNames, speed, easing, callback ) {
		return speed ?
			$.effects.animateClass.call( this,
				{ add: classNames }, speed, easing, callback ) :
			this._addClass( classNames );
	},

	_removeClass: $.fn.removeClass,
	removeClass: function( classNames, speed, easing, callback ) {
		return speed ?
			$.effects.animateClass.call( this,
				{ remove: classNames }, speed, easing, callback ) :
			this._removeClass( classNames );
	},

	_toggleClass: $.fn.toggleClass,
	toggleClass: function( classNames, force, speed, easing, callback ) {
		if ( typeof force === "boolean" || force === undefined ) {
			if ( !speed ) {
				// without speed parameter
				return this._toggleClass( classNames, force );
			} else {
				return $.effects.animateClass.call( this,
					(force ? { add: classNames } : { remove: classNames }),
					speed, easing, callback );
			}
		} else {
			// without force parameter
			return $.effects.animateClass.call( this,
				{ toggle: classNames }, force, speed, easing );
		}
	},

	switchClass: function( remove, add, speed, easing, callback) {
		return $.effects.animateClass.call( this, {
			add: add,
			remove: remove
		}, speed, easing, callback );
	}
});

})();

/******************************************************************************/
/*********************************** EFFECTS **********************************/
/******************************************************************************/

(function() {

$.extend( $.effects, {
	version: "1.9.2",

	// Saves a set of properties in a data storage
	save: function( element, set ) {
		for( var i=0; i < set.length; i++ ) {
			if ( set[ i ] !== null ) {
				element.data( dataSpace + set[ i ], element[ 0 ].style[ set[ i ] ] );
			}
		}
	},

	// Restores a set of previously saved properties from a data storage
	restore: function( element, set ) {
		var val, i;
		for( i=0; i < set.length; i++ ) {
			if ( set[ i ] !== null ) {
				val = element.data( dataSpace + set[ i ] );
				// support: jQuery 1.6.2
				// http://bugs.jquery.com/ticket/9917
				// jQuery 1.6.2 incorrectly returns undefined for any falsy value.
				// We can't differentiate between "" and 0 here, so we just assume
				// empty string since it's likely to be a more common value...
				if ( val === undefined ) {
					val = "";
				}
				element.css( set[ i ], val );
			}
		}
	},

	setMode: function( el, mode ) {
		if (mode === "toggle") {
			mode = el.is( ":hidden" ) ? "show" : "hide";
		}
		return mode;
	},

	// Translates a [top,left] array into a baseline value
	// this should be a little more flexible in the future to handle a string & hash
	getBaseline: function( origin, original ) {
		var y, x;
		switch ( origin[ 0 ] ) {
			case "top": y = 0; break;
			case "middle": y = 0.5; break;
			case "bottom": y = 1; break;
			default: y = origin[ 0 ] / original.height;
		}
		switch ( origin[ 1 ] ) {
			case "left": x = 0; break;
			case "center": x = 0.5; break;
			case "right": x = 1; break;
			default: x = origin[ 1 ] / original.width;
		}
		return {
			x: x,
			y: y
		};
	},

	// Wraps the element around a wrapper that copies position properties
	createWrapper: function( element ) {

		// if the element is already wrapped, return it
		if ( element.parent().is( ".ui-effects-wrapper" )) {
			return element.parent();
		}

		// wrap the element
		var props = {
				width: element.outerWidth(true),
				height: element.outerHeight(true),
				"float": element.css( "float" )
			},
			wrapper = $( "<div></div>" )
				.addClass( "ui-effects-wrapper" )
				.css({
					fontSize: "100%",
					background: "transparent",
					border: "none",
					margin: 0,
					padding: 0
				}),
			// Store the size in case width/height are defined in % - Fixes #5245
			size = {
				width: element.width(),
				height: element.height()
			},
			active = document.activeElement;

		// support: Firefox
		// Firefox incorrectly exposes anonymous content
		// https://bugzilla.mozilla.org/show_bug.cgi?id=561664
		try {
			active.id;
		} catch( e ) {
			active = document.body;
		}

		element.wrap( wrapper );

		// Fixes #7595 - Elements lose focus when wrapped.
		if ( element[ 0 ] === active || $.contains( element[ 0 ], active ) ) {
			$( active ).focus();
		}

		wrapper = element.parent(); //Hotfix for jQuery 1.4 since some change in wrap() seems to actually lose the reference to the wrapped element

		// transfer positioning properties to the wrapper
		if ( element.css( "position" ) === "static" ) {
			wrapper.css({ position: "relative" });
			element.css({ position: "relative" });
		} else {
			$.extend( props, {
				position: element.css( "position" ),
				zIndex: element.css( "z-index" )
			});
			$.each([ "top", "left", "bottom", "right" ], function(i, pos) {
				props[ pos ] = element.css( pos );
				if ( isNaN( parseInt( props[ pos ], 10 ) ) ) {
					props[ pos ] = "auto";
				}
			});
			element.css({
				position: "relative",
				top: 0,
				left: 0,
				right: "auto",
				bottom: "auto"
			});
		}
		element.css(size);

		return wrapper.css( props ).show();
	},

	removeWrapper: function( element ) {
		var active = document.activeElement;

		if ( element.parent().is( ".ui-effects-wrapper" ) ) {
			element.parent().replaceWith( element );

			// Fixes #7595 - Elements lose focus when wrapped.
			if ( element[ 0 ] === active || $.contains( element[ 0 ], active ) ) {
				$( active ).focus();
			}
		}


		return element;
	},

	setTransition: function( element, list, factor, value ) {
		value = value || {};
		$.each( list, function( i, x ) {
			var unit = element.cssUnit( x );
			if ( unit[ 0 ] > 0 ) {
				value[ x ] = unit[ 0 ] * factor + unit[ 1 ];
			}
		});
		return value;
	}
});

// return an effect options object for the given parameters:
function _normalizeArguments( effect, options, speed, callback ) {

	// allow passing all options as the first parameter
	if ( $.isPlainObject( effect ) ) {
		options = effect;
		effect = effect.effect;
	}

	// convert to an object
	effect = { effect: effect };

	// catch (effect, null, ...)
	if ( options == null ) {
		options = {};
	}

	// catch (effect, callback)
	if ( $.isFunction( options ) ) {
		callback = options;
		speed = null;
		options = {};
	}

	// catch (effect, speed, ?)
	if ( typeof options === "number" || $.fx.speeds[ options ] ) {
		callback = speed;
		speed = options;
		options = {};
	}

	// catch (effect, options, callback)
	if ( $.isFunction( speed ) ) {
		callback = speed;
		speed = null;
	}

	// add options to effect
	if ( options ) {
		$.extend( effect, options );
	}

	speed = speed || options.duration;
	effect.duration = $.fx.off ? 0 :
		typeof speed === "number" ? speed :
		speed in $.fx.speeds ? $.fx.speeds[ speed ] :
		$.fx.speeds._default;

	effect.complete = callback || options.complete;

	return effect;
}

function standardSpeed( speed ) {
	// valid standard speeds
	if ( !speed || typeof speed === "number" || $.fx.speeds[ speed ] ) {
		return true;
	}

	// invalid strings - treat as "normal" speed
	if ( typeof speed === "string" && !$.effects.effect[ speed ] ) {
		// TODO: remove in 2.0 (#7115)
		if ( backCompat && $.effects[ speed ] ) {
			return false;
		}
		return true;
	}

	return false;
}

$.fn.extend({
	effect: function( /* effect, options, speed, callback */ ) {
		var args = _normalizeArguments.apply( this, arguments ),
			mode = args.mode,
			queue = args.queue,
			effectMethod = $.effects.effect[ args.effect ],

			// DEPRECATED: remove in 2.0 (#7115)
			oldEffectMethod = !effectMethod && backCompat && $.effects[ args.effect ];

		if ( $.fx.off || !( effectMethod || oldEffectMethod ) ) {
			// delegate to the original method (e.g., .show()) if possible
			if ( mode ) {
				return this[ mode ]( args.duration, args.complete );
			} else {
				return this.each( function() {
					if ( args.complete ) {
						args.complete.call( this );
					}
				});
			}
		}

		function run( next ) {
			var elem = $( this ),
				complete = args.complete,
				mode = args.mode;

			function done() {
				if ( $.isFunction( complete ) ) {
					complete.call( elem[0] );
				}
				if ( $.isFunction( next ) ) {
					next();
				}
			}

			// if the element is hiddden and mode is hide,
			// or element is visible and mode is show
			if ( elem.is( ":hidden" ) ? mode === "hide" : mode === "show" ) {
				done();
			} else {
				effectMethod.call( elem[0], args, done );
			}
		}

		// TODO: remove this check in 2.0, effectMethod will always be true
		if ( effectMethod ) {
			return queue === false ? this.each( run ) : this.queue( queue || "fx", run );
		} else {
			// DEPRECATED: remove in 2.0 (#7115)
			return oldEffectMethod.call(this, {
				options: args,
				duration: args.duration,
				callback: args.complete,
				mode: args.mode
			});
		}
	},

	_show: $.fn.show,
	show: function( speed ) {
		if ( standardSpeed( speed ) ) {
			return this._show.apply( this, arguments );
		} else {
			var args = _normalizeArguments.apply( this, arguments );
			args.mode = "show";
			return this.effect.call( this, args );
		}
	},

	_hide: $.fn.hide,
	hide: function( speed ) {
		if ( standardSpeed( speed ) ) {
			return this._hide.apply( this, arguments );
		} else {
			var args = _normalizeArguments.apply( this, arguments );
			args.mode = "hide";
			return this.effect.call( this, args );
		}
	},

	// jQuery core overloads toggle and creates _toggle
	__toggle: $.fn.toggle,
	toggle: function( speed ) {
		if ( standardSpeed( speed ) || typeof speed === "boolean" || $.isFunction( speed ) ) {
			return this.__toggle.apply( this, arguments );
		} else {
			var args = _normalizeArguments.apply( this, arguments );
			args.mode = "toggle";
			return this.effect.call( this, args );
		}
	},

	// helper functions
	cssUnit: function(key) {
		var style = this.css( key ),
			val = [];

		$.each( [ "em", "px", "%", "pt" ], function( i, unit ) {
			if ( style.indexOf( unit ) > 0 ) {
				val = [ parseFloat( style ), unit ];
			}
		});
		return val;
	}
});

})();

/******************************************************************************/
/*********************************** EASING ***********************************/
/******************************************************************************/

(function() {

// based on easing equations from Robert Penner (http://www.robertpenner.com/easing)

var baseEasings = {};

$.each( [ "Quad", "Cubic", "Quart", "Quint", "Expo" ], function( i, name ) {
	baseEasings[ name ] = function( p ) {
		return Math.pow( p, i + 2 );
	};
});

$.extend( baseEasings, {
	Sine: function ( p ) {
		return 1 - Math.cos( p * Math.PI / 2 );
	},
	Circ: function ( p ) {
		return 1 - Math.sqrt( 1 - p * p );
	},
	Elastic: function( p ) {
		return p === 0 || p === 1 ? p :
			-Math.pow( 2, 8 * (p - 1) ) * Math.sin( ( (p - 1) * 80 - 7.5 ) * Math.PI / 15 );
	},
	Back: function( p ) {
		return p * p * ( 3 * p - 2 );
	},
	Bounce: function ( p ) {
		var pow2,
			bounce = 4;

		while ( p < ( ( pow2 = Math.pow( 2, --bounce ) ) - 1 ) / 11 ) {}
		return 1 / Math.pow( 4, 3 - bounce ) - 7.5625 * Math.pow( ( pow2 * 3 - 2 ) / 22 - p, 2 );
	}
});

$.each( baseEasings, function( name, easeIn ) {
	$.easing[ "easeIn" + name ] = easeIn;
	$.easing[ "easeOut" + name ] = function( p ) {
		return 1 - easeIn( 1 - p );
	};
	$.easing[ "easeInOut" + name ] = function( p ) {
		return p < 0.5 ?
			easeIn( p * 2 ) / 2 :
			1 - easeIn( p * -2 + 2 ) / 2;
	};
});

})();

})(jQuery));
(function( $, undefined ) {

$.effects.effect.drop = function( o, done ) {

	var el = $( this ),
		props = [ "position", "top", "bottom", "left", "right", "opacity", "height", "width" ],
		mode = $.effects.setMode( el, o.mode || "hide" ),
		show = mode === "show",
		direction = o.direction || "left",
		ref = ( direction === "up" || direction === "down" ) ? "top" : "left",
		motion = ( direction === "up" || direction === "left" ) ? "pos" : "neg",
		animation = {
			opacity: show ? 1 : 0
		},
		distance;

	// Adjust
	$.effects.save( el, props );
	el.show();
	$.effects.createWrapper( el );

	distance = o.distance || el[ ref === "top" ? "outerHeight": "outerWidth" ]( true ) / 2;

	if ( show ) {
		el
			.css( "opacity", 0 )
			.css( ref, motion === "pos" ? -distance : distance );
	}

	// Animation
	animation[ ref ] = ( show ?
		( motion === "pos" ? "+=" : "-=" ) :
		( motion === "pos" ? "-=" : "+=" ) ) +
		distance;

	// Animate
	el.animate( animation, {
		queue: false,
		duration: o.duration,
		easing: o.easing,
		complete: function() {
			if ( mode === "hide" ) {
				el.hide();
			}
			$.effects.restore( el, props );
			$.effects.removeWrapper( el );
			done();
		}
	});
};

})(jQuery);
(function( $, undefined ) {

$.effects.effect.fade = function( o, done ) {
	var el = $( this ),
		mode = $.effects.setMode( el, o.mode || "toggle" );

	el.animate({
		opacity: mode
	}, {
		queue: false,
		duration: o.duration,
		easing: o.easing,
		complete: done
	});
};

})( jQuery );
(function( $, undefined ) {

$.effects.effect.puff = function( o, done ) {
	var elem = $( this ),
		mode = $.effects.setMode( elem, o.mode || "hide" ),
		hide = mode === "hide",
		percent = parseInt( o.percent, 10 ) || 150,
		factor = percent / 100,
		original = {
			height: elem.height(),
			width: elem.width(),
			outerHeight: elem.outerHeight(),
			outerWidth: elem.outerWidth()
		};

	$.extend( o, {
		effect: "scale",
		queue: false,
		fade: true,
		mode: mode,
		complete: done,
		percent: hide ? percent : 100,
		from: hide ?
			original :
			{
				height: original.height * factor,
				width: original.width * factor,
				outerHeight: original.outerHeight * factor,
				outerWidth: original.outerWidth * factor
			}
	});

	elem.effect( o );
};

$.effects.effect.scale = function( o, done ) {

	// Create element
	var el = $( this ),
		options = $.extend( true, {}, o ),
		mode = $.effects.setMode( el, o.mode || "effect" ),
		percent = parseInt( o.percent, 10 ) ||
			( parseInt( o.percent, 10 ) === 0 ? 0 : ( mode === "hide" ? 0 : 100 ) ),
		direction = o.direction || "both",
		origin = o.origin,
		original = {
			height: el.height(),
			width: el.width(),
			outerHeight: el.outerHeight(),
			outerWidth: el.outerWidth()
		},
		factor = {
			y: direction !== "horizontal" ? (percent / 100) : 1,
			x: direction !== "vertical" ? (percent / 100) : 1
		};

	// We are going to pass this effect to the size effect:
	options.effect = "size";
	options.queue = false;
	options.complete = done;

	// Set default origin and restore for show/hide
	if ( mode !== "effect" ) {
		options.origin = origin || ["middle","center"];
		options.restore = true;
	}

	options.from = o.from || ( mode === "show" ? {
		height: 0,
		width: 0,
		outerHeight: 0,
		outerWidth: 0
	} : original );
	options.to = {
		height: original.height * factor.y,
		width: original.width * factor.x,
		outerHeight: original.outerHeight * factor.y,
		outerWidth: original.outerWidth * factor.x
	};

	// Fade option to support puff
	if ( options.fade ) {
		if ( mode === "show" ) {
			options.from.opacity = 0;
			options.to.opacity = 1;
		}
		if ( mode === "hide" ) {
			options.from.opacity = 1;
			options.to.opacity = 0;
		}
	}

	// Animate
	el.effect( options );

};

$.effects.effect.size = function( o, done ) {

	// Create element
	var original, baseline, factor,
		el = $( this ),
		props0 = [ "position", "top", "bottom", "left", "right", "width", "height", "overflow", "opacity" ],

		// Always restore
		props1 = [ "position", "top", "bottom", "left", "right", "overflow", "opacity" ],

		// Copy for children
		props2 = [ "width", "height", "overflow" ],
		cProps = [ "fontSize" ],
		vProps = [ "borderTopWidth", "borderBottomWidth", "paddingTop", "paddingBottom" ],
		hProps = [ "borderLeftWidth", "borderRightWidth", "paddingLeft", "paddingRight" ],

		// Set options
		mode = $.effects.setMode( el, o.mode || "effect" ),
		restore = o.restore || mode !== "effect",
		scale = o.scale || "both",
		origin = o.origin || [ "middle", "center" ],
		position = el.css( "position" ),
		props = restore ? props0 : props1,
		zero = {
			height: 0,
			width: 0,
			outerHeight: 0,
			outerWidth: 0
		};

	if ( mode === "show" ) {
		el.show();
	}
	original = {
		height: el.height(),
		width: el.width(),
		outerHeight: el.outerHeight(),
		outerWidth: el.outerWidth()
	};

	if ( o.mode === "toggle" && mode === "show" ) {
		el.from = o.to || zero;
		el.to = o.from || original;
	} else {
		el.from = o.from || ( mode === "show" ? zero : original );
		el.to = o.to || ( mode === "hide" ? zero : original );
	}

	// Set scaling factor
	factor = {
		from: {
			y: el.from.height / original.height,
			x: el.from.width / original.width
		},
		to: {
			y: el.to.height / original.height,
			x: el.to.width / original.width
		}
	};

	// Scale the css box
	if ( scale === "box" || scale === "both" ) {

		// Vertical props scaling
		if ( factor.from.y !== factor.to.y ) {
			props = props.concat( vProps );
			el.from = $.effects.setTransition( el, vProps, factor.from.y, el.from );
			el.to = $.effects.setTransition( el, vProps, factor.to.y, el.to );
		}

		// Horizontal props scaling
		if ( factor.from.x !== factor.to.x ) {
			props = props.concat( hProps );
			el.from = $.effects.setTransition( el, hProps, factor.from.x, el.from );
			el.to = $.effects.setTransition( el, hProps, factor.to.x, el.to );
		}
	}

	// Scale the content
	if ( scale === "content" || scale === "both" ) {

		// Vertical props scaling
		if ( factor.from.y !== factor.to.y ) {
			props = props.concat( cProps ).concat( props2 );
			el.from = $.effects.setTransition( el, cProps, factor.from.y, el.from );
			el.to = $.effects.setTransition( el, cProps, factor.to.y, el.to );
		}
	}

	$.effects.save( el, props );
	el.show();
	$.effects.createWrapper( el );
	el.css( "overflow", "hidden" ).css( el.from );

	// Adjust
	if (origin) { // Calculate baseline shifts
		baseline = $.effects.getBaseline( origin, original );
		el.from.top = ( original.outerHeight - el.outerHeight() ) * baseline.y;
		el.from.left = ( original.outerWidth - el.outerWidth() ) * baseline.x;
		el.to.top = ( original.outerHeight - el.to.outerHeight ) * baseline.y;
		el.to.left = ( original.outerWidth - el.to.outerWidth ) * baseline.x;
	}
	el.css( el.from ); // set top & left

	// Animate
	if ( scale === "content" || scale === "both" ) { // Scale the children

		// Add margins/font-size
		vProps = vProps.concat([ "marginTop", "marginBottom" ]).concat(cProps);
		hProps = hProps.concat([ "marginLeft", "marginRight" ]);
		props2 = props0.concat(vProps).concat(hProps);

		el.find( "*[width]" ).each( function(){
			var child = $( this ),
				c_original = {
					height: child.height(),
					width: child.width(),
					outerHeight: child.outerHeight(),
					outerWidth: child.outerWidth()
				};
			if (restore) {
				$.effects.save(child, props2);
			}

			child.from = {
				height: c_original.height * factor.from.y,
				width: c_original.width * factor.from.x,
				outerHeight: c_original.outerHeight * factor.from.y,
				outerWidth: c_original.outerWidth * factor.from.x
			};
			child.to = {
				height: c_original.height * factor.to.y,
				width: c_original.width * factor.to.x,
				outerHeight: c_original.height * factor.to.y,
				outerWidth: c_original.width * factor.to.x
			};

			// Vertical props scaling
			if ( factor.from.y !== factor.to.y ) {
				child.from = $.effects.setTransition( child, vProps, factor.from.y, child.from );
				child.to = $.effects.setTransition( child, vProps, factor.to.y, child.to );
			}

			// Horizontal props scaling
			if ( factor.from.x !== factor.to.x ) {
				child.from = $.effects.setTransition( child, hProps, factor.from.x, child.from );
				child.to = $.effects.setTransition( child, hProps, factor.to.x, child.to );
			}

			// Animate children
			child.css( child.from );
			child.animate( child.to, o.duration, o.easing, function() {

				// Restore children
				if ( restore ) {
					$.effects.restore( child, props2 );
				}
			});
		});
	}

	// Animate
	el.animate( el.to, {
		queue: false,
		duration: o.duration,
		easing: o.easing,
		complete: function() {
			if ( el.to.opacity === 0 ) {
				el.css( "opacity", el.from.opacity );
			}
			if( mode === "hide" ) {
				el.hide();
			}
			$.effects.restore( el, props );
			if ( !restore ) {

				// we need to calculate our new positioning based on the scaling
				if ( position === "static" ) {
					el.css({
						position: "relative",
						top: el.to.top,
						left: el.to.left
					});
				} else {
					$.each([ "top", "left" ], function( idx, pos ) {
						el.css( pos, function( _, str ) {
							var val = parseInt( str, 10 ),
								toRef = idx ? el.to.left : el.to.top;

							// if original was "auto", recalculate the new value from wrapper
							if ( str === "auto" ) {
								return toRef + "px";
							}

							return val + toRef + "px";
						});
					});
				}
			}

			$.effects.removeWrapper( el );
			done();
		}
	});

};

})(jQuery);
(function( $, undefined ) {

$.effects.effect.slide = function( o, done ) {

	// Create element
	var el = $( this ),
		props = [ "position", "top", "bottom", "left", "right", "width", "height" ],
		mode = $.effects.setMode( el, o.mode || "show" ),
		show = mode === "show",
		direction = o.direction || "left",
		ref = (direction === "up" || direction === "down") ? "top" : "left",
		positiveMotion = (direction === "up" || direction === "left"),
		distance,
		animation = {};

	// Adjust
	$.effects.save( el, props );
	el.show();
	distance = o.distance || el[ ref === "top" ? "outerHeight" : "outerWidth" ]( true );

	$.effects.createWrapper( el ).css({
		overflow: "hidden"
	});

	if ( show ) {
		el.css( ref, positiveMotion ? (isNaN(distance) ? "-" + distance : -distance) : distance );
	}

	// Animation
	animation[ ref ] = ( show ?
		( positiveMotion ? "+=" : "-=") :
		( positiveMotion ? "-=" : "+=")) +
		distance;

	// Animate
	el.animate( animation, {
		queue: false,
		duration: o.duration,
		easing: o.easing,
		complete: function() {
			if ( mode === "hide" ) {
				el.hide();
			}
			$.effects.restore( el, props );
			$.effects.removeWrapper( el );
			done();
		}
	});
};

})(jQuery);

// Copyright (c) 2009 Daniel Wachsstock
// MIT license:
// Permission is hereby granted, free of charge, to any person
// obtaining a copy of this software and associated documentation
// files (the "Software"), to deal in the Software without
// restriction, including without limitation the rights to use,
// copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following
// conditions:

// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
// OTHER DEALINGS IN THE SOFTWARE.
(function($){
// create the master widget
    $.widget("ui.widget",{
        // Aspect Oriented Programming tools from Justin Palmer's article
        yield: null,
        returnValues: { },
        before: function(method, f) {
            var original = this[method];
            this[method] = function() {
                f.apply(this, arguments);
                return original.apply(this, arguments);
            };
        },
        after: function(method, f) {
            var original = this[method];
            this[method] = function() {
                this.returnValues[method] = original.apply(this, arguments);
                return f.apply(this, arguments);
            }
        },
        around: function(method, f) {
            var original = this[method];
            this[method] = function() {
                var tmp = this.yield;
                this.yield = original;
                var ret = f.apply(this, arguments);
                this.yield = tmp;
                return ret;
            }
        }
    });

// from http://groups.google.com/group/comp.lang.javascript/msg/e04726a66face2a2 and
// http://webreflection.blogspot.com/2008/10/big-douglas-begetobject-revisited.html
    var object = (function(F){
        return (function(o){
            F.prototype = o;
            return new F();
        });
    })(function (){});

// create a widget subclass
    var OVERRIDE = /xyz/.test(function(){xyz;}) ? /\b_super\b/ : /.*/;
    $.ui.widget.subclass = function subclass(name){
        $.widget(name); // Slightly inefficient to create a widget only to discard its prototype, but it's not too bad
        name = name.split('.');
        var widget = $[name[0]][name[1]], superclass = this, superproto = superclass.prototype;


        var proto = arguments[0] = widget.prototype = object(superproto); // inherit from the superclass
        $.extend.apply(null, arguments); // and add other add-in methods to the prototype
        widget.subclass = subclass;

        // Subtle point: we want to call superclass init and destroy if they exist
        // (otherwise the user of this function would have to keep track of all that)
        for (key in proto) if (proto.hasOwnProperty(key)) switch (key){
            case '_create':
                var create = proto._create;
                proto._create = function(){
                    superproto._create.apply(this);
                    create.apply(this);
                };
                break;
            case '_init':
                var init = proto._init;
                proto._init = function(){
                    superproto._init.apply(this);
                    init.apply(this);
                };
                break;
            case 'destroy':
                var destroy = proto.destroy;
                proto.destroy = function(){
                    destroy.apply(this);
                    superproto.destroy.apply(this);
                };
                break;
            case 'options':
                var options = proto.options;
                proto.options = $.extend ({}, superproto.options, options);
                break;
            default:
                if ($.isFunction(proto[key]) && $.isFunction(superproto[key]) && OVERRIDE.test(proto[key])){
                    proto[key] = (function(name, fn){
                        return function() {
                            var tmp = this._super;
                            this._super = superproto[name];
                            try { var ret = fn.apply(this, arguments); }
                            finally { this._super = tmp; }
                            return ret;
                        };
                    })(key, proto[key]);
                }
                break;
        }
    };
})(jQuery);

/* ========================================================================
 * Bootstrap: button.js v3.0.3
 * http://getbootstrap.com/javascript/#buttons
 * ========================================================================
 * Copyright 2013 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ======================================================================== */


+function ($) { "use strict";

  // BUTTON PUBLIC CLASS DEFINITION
  // ==============================

  var Button = function (element, options) {
    this.$element = $(element)
    this.options  = $.extend({}, Button.DEFAULTS, options)
  }

  Button.DEFAULTS = {
    loadingText: 'loading...'
  }

  Button.prototype.setState = function (state) {
    var d    = 'disabled'
    var $el  = this.$element
    var val  = $el.is('input') ? 'val' : 'html'
    var data = $el.data()

    state = state + 'Text'

    if (!data.resetText) $el.data('resetText', $el[val]())

    $el[val](data[state] || this.options[state])

    // push to event loop to allow forms to submit
    setTimeout(function () {
      state == 'loadingText' ?
        $el.addClass(d).attr(d, d) :
        $el.removeClass(d).removeAttr(d);
    }, 0)
  }

  Button.prototype.toggle = function () {
    var $parent = this.$element.closest('[data-toggle="buttons"]')
    var changed = true

    if ($parent.length) {
      var $input = this.$element.find('input')
      if ($input.prop('type') === 'radio') {
        // see if clicking on current one
        if ($input.prop('checked') && this.$element.hasClass('active'))
          changed = false
        else
          $parent.find('.active').removeClass('active')
      }
      if (changed) $input.prop('checked', !this.$element.hasClass('active')).trigger('change')
    }

    if (changed) this.$element.toggleClass('active')
  }


  // BUTTON PLUGIN DEFINITION
  // ========================

  var old = $.fn.button

  $.fn.button = function (option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.button')
      var options = typeof option == 'object' && option

      if (!data) $this.data('bs.button', (data = new Button(this, options)))

      if (option == 'toggle') data.toggle()
      else if (option) data.setState(option)
    })
  }

  $.fn.button.Constructor = Button


  // BUTTON NO CONFLICT
  // ==================

  $.fn.button.noConflict = function () {
    $.fn.button = old
    return this
  }


  // BUTTON DATA-API
  // ===============

  $(document).on('click.bs.button.data-api', '[data-toggle^=button]', function (e) {
    var $btn = $(e.target)
    if (!$btn.hasClass('btn')) $btn = $btn.closest('.btn')
    $btn.button('toggle')
    e.preventDefault()
  })

}(jQuery);

/* ========================================================================
 * Bootstrap: carousel.js v3.0.3
 * http://getbootstrap.com/javascript/#carousel
 * ========================================================================
 * Copyright 2013 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ======================================================================== */


+function ($) { "use strict";

  // CAROUSEL CLASS DEFINITION
  // =========================

  var Carousel = function (element, options) {
    this.$element    = $(element)
    this.$indicators = this.$element.find('.carousel-indicators')
    this.options     = options
    this.paused      =
    this.sliding     =
    this.interval    =
    this.$active     =
    this.$items      = null

    this.options.pause == 'hover' && this.$element
      .on('mouseenter', $.proxy(this.pause, this))
      .on('mouseleave', $.proxy(this.cycle, this))
  }

  Carousel.DEFAULTS = {
    interval: 5000
  , pause: 'hover'
  , wrap: true
  }

  Carousel.prototype.cycle =  function (e) {
    e || (this.paused = false)

    this.interval && clearInterval(this.interval)

    this.options.interval
      && !this.paused
      && (this.interval = setInterval($.proxy(this.next, this), this.options.interval))

    return this
  }

  Carousel.prototype.getActiveIndex = function () {
    this.$active = this.$element.find('.item.active')
    this.$items  = this.$active.parent().children()

    return this.$items.index(this.$active)
  }

  Carousel.prototype.to = function (pos) {
    var that        = this
    var activeIndex = this.getActiveIndex()

    if (pos > (this.$items.length - 1) || pos < 0) return

    if (this.sliding)       return this.$element.one('slid.bs.carousel', function () { that.to(pos) })
    if (activeIndex == pos) return this.pause().cycle()

    return this.slide(pos > activeIndex ? 'next' : 'prev', $(this.$items[pos]))
  }

  Carousel.prototype.pause = function (e) {
    e || (this.paused = true)

    if (this.$element.find('.next, .prev').length && $.support.transition.end) {
      this.$element.trigger($.support.transition.end)
      this.cycle(true)
    }

    this.interval = clearInterval(this.interval)

    return this
  }

  Carousel.prototype.next = function () {
    if (this.sliding) return
    return this.slide('next')
  }

  Carousel.prototype.prev = function () {
    if (this.sliding) return
    return this.slide('prev')
  }

  Carousel.prototype.slide = function (type, next) {
    var $active   = this.$element.find('.item.active')
    var $next     = next || $active[type]()
    var isCycling = this.interval
    var direction = type == 'next' ? 'left' : 'right'
    var fallback  = type == 'next' ? 'first' : 'last'
    var that      = this

    if (!$next.length) {
      if (!this.options.wrap) return
      $next = this.$element.find('.item')[fallback]()
    }

    this.sliding = true

    isCycling && this.pause()

    var e = $.Event('slide.bs.carousel', { relatedTarget: $next[0], direction: direction })

    if ($next.hasClass('active')) return

    if (this.$indicators.length) {
      this.$indicators.find('.active').removeClass('active')
      this.$element.one('slid.bs.carousel', function () {
        var $nextIndicator = $(that.$indicators.children()[that.getActiveIndex()])
        $nextIndicator && $nextIndicator.addClass('active')
      })
    }

    if ($.support.transition && this.$element.hasClass('slide')) {
      this.$element.trigger(e)
      if (e.isDefaultPrevented()) return
      $next.addClass(type)
      $next[0].offsetWidth // force reflow
      $active.addClass(direction)
      $next.addClass(direction)
      $active
        .one($.support.transition.end, function () {
          $next.removeClass([type, direction].join(' ')).addClass('active')
          $active.removeClass(['active', direction].join(' '))
          that.sliding = false
          setTimeout(function () { that.$element.trigger('slid.bs.carousel') }, 0)
        })
        .emulateTransitionEnd(600)
    } else {
      this.$element.trigger(e)
      if (e.isDefaultPrevented()) return
      $active.removeClass('active')
      $next.addClass('active')
      this.sliding = false
      this.$element.trigger('slid.bs.carousel')
    }

    isCycling && this.cycle()

    return this
  }


  // CAROUSEL PLUGIN DEFINITION
  // ==========================

  var old = $.fn.carousel

  $.fn.carousel = function (option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.carousel')
      var options = $.extend({}, Carousel.DEFAULTS, $this.data(), typeof option == 'object' && option)
      var action  = typeof option == 'string' ? option : options.slide

      if (!data) $this.data('bs.carousel', (data = new Carousel(this, options)))
      if (typeof option == 'number') data.to(option)
      else if (action) data[action]()
      else if (options.interval) data.pause().cycle()
    })
  }

  $.fn.carousel.Constructor = Carousel


  // CAROUSEL NO CONFLICT
  // ====================

  $.fn.carousel.noConflict = function () {
    $.fn.carousel = old
    return this
  }


  // CAROUSEL DATA-API
  // =================

  $(document).on('click.bs.carousel.data-api', '[data-slide], [data-slide-to]', function (e) {
    var $this   = $(this), href
    var $target = $($this.attr('data-target') || (href = $this.attr('href')) && href.replace(/.*(?=#[^\s]+$)/, '')) //strip for ie7
    var options = $.extend({}, $target.data(), $this.data())
    var slideIndex = $this.attr('data-slide-to')
    if (slideIndex) options.interval = false

    $target.carousel(options)

    if (slideIndex = $this.attr('data-slide-to')) {
      $target.data('bs.carousel').to(slideIndex)
    }

    e.preventDefault()
  })

  $(window).on('load', function () {
    $('[data-ride="carousel"]').each(function () {
      var $carousel = $(this)
      $carousel.carousel($carousel.data())
    })
  })

}(jQuery);

/* ========================================================================
 * Bootstrap: collapse.js v3.0.3
 * http://getbootstrap.com/javascript/#collapse
 * ========================================================================
 * Copyright 2013 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ======================================================================== */


+function ($) { "use strict";

  // COLLAPSE PUBLIC CLASS DEFINITION
  // ================================

  var Collapse = function (element, options) {
    this.$element      = $(element)
    this.options       = $.extend({}, Collapse.DEFAULTS, options)
    this.transitioning = null

    if (this.options.parent) this.$parent = $(this.options.parent)
    if (this.options.toggle) this.toggle()
  }

  Collapse.DEFAULTS = {
    toggle: true
  }

  Collapse.prototype.dimension = function () {
    var hasWidth = this.$element.hasClass('width')
    return hasWidth ? 'width' : 'height'
  }

  Collapse.prototype.show = function () {
    if (this.transitioning || this.$element.hasClass('in')) return

    var startEvent = $.Event('show.bs.collapse')
    this.$element.trigger(startEvent)
    if (startEvent.isDefaultPrevented()) return

    var actives = this.$parent && this.$parent.find('> .panel > .in')

    if (actives && actives.length) {
      var hasData = actives.data('bs.collapse')
      if (hasData && hasData.transitioning) return
      actives.collapse('hide')
      hasData || actives.data('bs.collapse', null)
    }

    var dimension = this.dimension()

    this.$element
      .removeClass('collapse')
      .addClass('collapsing')
      [dimension](0)

    this.transitioning = 1

    var complete = function () {
      this.$element
        .removeClass('collapsing')
        .addClass('in')
        [dimension]('auto')
      this.transitioning = 0
      this.$element.trigger('shown.bs.collapse')
    }

    if (!$.support.transition) return complete.call(this)

    var scrollSize = $.camelCase(['scroll', dimension].join('-'))

    this.$element
      .one($.support.transition.end, $.proxy(complete, this))
      .emulateTransitionEnd(350)
      [dimension](this.$element[0][scrollSize])
  }

  Collapse.prototype.hide = function () {
    if (this.transitioning || !this.$element.hasClass('in')) return

    var startEvent = $.Event('hide.bs.collapse')
    this.$element.trigger(startEvent)
    if (startEvent.isDefaultPrevented()) return

    var dimension = this.dimension()

    this.$element
      [dimension](this.$element[dimension]())
      [0].offsetHeight

    this.$element
      .addClass('collapsing')
      .removeClass('collapse')
      .removeClass('in')

    this.transitioning = 1

    var complete = function () {
      this.transitioning = 0
      this.$element
        .trigger('hidden.bs.collapse')
        .removeClass('collapsing')
        .addClass('collapse')
    }

    if (!$.support.transition) return complete.call(this)

    this.$element
      [dimension](0)
      .one($.support.transition.end, $.proxy(complete, this))
      .emulateTransitionEnd(350)
  }

  Collapse.prototype.toggle = function () {
    this[this.$element.hasClass('in') ? 'hide' : 'show']()
  }


  // COLLAPSE PLUGIN DEFINITION
  // ==========================

  var old = $.fn.collapse

  $.fn.collapse = function (option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.collapse')
      var options = $.extend({}, Collapse.DEFAULTS, $this.data(), typeof option == 'object' && option)

      if (!data) $this.data('bs.collapse', (data = new Collapse(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  $.fn.collapse.Constructor = Collapse


  // COLLAPSE NO CONFLICT
  // ====================

  $.fn.collapse.noConflict = function () {
    $.fn.collapse = old
    return this
  }


  // COLLAPSE DATA-API
  // =================

  $(document).on('click.bs.collapse.data-api', '[data-toggle=collapse]', function (e) {
    var $this   = $(this), href
    var target  = $this.attr('data-target')
        || e.preventDefault()
        || (href = $this.attr('href')) && href.replace(/.*(?=#[^\s]+$)/, '') //strip for ie7
    var $target = $(target)
    var data    = $target.data('bs.collapse')
    var option  = data ? 'toggle' : $this.data()
    var parent  = $this.attr('data-parent')
    var $parent = parent && $(parent)

    if (!data || !data.transitioning) {
      if ($parent) $parent.find('[data-toggle=collapse][data-parent="' + parent + '"]').not($this).addClass('collapsed')
      $this[$target.hasClass('in') ? 'addClass' : 'removeClass']('collapsed')
    }

    $target.collapse(option)
  })

}(jQuery);

/* ========================================================================
 * Bootstrap: dropdown.js v3.0.3
 * http://getbootstrap.com/javascript/#dropdowns
 * ========================================================================
 * Copyright 2013 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ======================================================================== */


+function ($) { "use strict";

  // DROPDOWN CLASS DEFINITION
  // =========================

  var backdrop = '.dropdown-backdrop'
  var toggle   = '[data-toggle=dropdown]'
  var Dropdown = function (element) {
    $(element).on('click.bs.dropdown', this.toggle)
  }

  Dropdown.prototype.toggle = function (e) {
    var $this = $(this)

    if ($this.is('.disabled, :disabled')) return

    var $parent  = getParent($this)
    var isActive = $parent.hasClass('open')

    clearMenus()

    if (!isActive) {
      if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {
        // if mobile we use a backdrop because click events don't delegate
        $('<div class="dropdown-backdrop"/>').insertAfter($(this)).on('click', clearMenus)
      }

      $parent.trigger(e = $.Event('show.bs.dropdown'))

      if (e.isDefaultPrevented()) return

      $parent
        .toggleClass('open')
        .trigger('shown.bs.dropdown')

      $this.focus()
    }

    return false
  }

  Dropdown.prototype.keydown = function (e) {
    if (!/(38|40|27)/.test(e.keyCode)) return

    var $this = $(this)

    e.preventDefault()
    e.stopPropagation()

    if ($this.is('.disabled, :disabled')) return

    var $parent  = getParent($this)
    var isActive = $parent.hasClass('open')

    if (!isActive || (isActive && e.keyCode == 27)) {
      if (e.which == 27) $parent.find(toggle).focus()
      return $this.click()
    }

    var $items = $('[role=menu] li:not(.divider):visible a', $parent)

    if (!$items.length) return

    var index = $items.index($items.filter(':focus'))

    if (e.keyCode == 38 && index > 0)                 index--                        // up
    if (e.keyCode == 40 && index < $items.length - 1) index++                        // down
    if (!~index)                                      index=0

    $items.eq(index).focus()
  }

  function clearMenus() {
    $(backdrop).remove()
    $(toggle).each(function (e) {
      var $parent = getParent($(this))
      if (!$parent.hasClass('open')) return
      $parent.trigger(e = $.Event('hide.bs.dropdown'))
      if (e.isDefaultPrevented()) return
      $parent.removeClass('open').trigger('hidden.bs.dropdown')
    })
  }

  function getParent($this) {
    var selector = $this.attr('data-target')

    if (!selector) {
      selector = $this.attr('href')
      selector = selector && /#/.test(selector) && selector.replace(/.*(?=#[^\s]*$)/, '') //strip for ie7
    }

    var $parent = selector && $(selector)

    return $parent && $parent.length ? $parent : $this.parent()
  }


  // DROPDOWN PLUGIN DEFINITION
  // ==========================

  var old = $.fn.dropdown

  $.fn.dropdown = function (option) {
    return this.each(function () {
      var $this = $(this)
      var data  = $this.data('bs.dropdown')

      if (!data) $this.data('bs.dropdown', (data = new Dropdown(this)))
      if (typeof option == 'string') data[option].call($this)
    })
  }

  $.fn.dropdown.Constructor = Dropdown


  // DROPDOWN NO CONFLICT
  // ====================

  $.fn.dropdown.noConflict = function () {
    $.fn.dropdown = old
    return this
  }


  // APPLY TO STANDARD DROPDOWN ELEMENTS
  // ===================================

  $(document)
    .on('click.bs.dropdown.data-api', clearMenus)
    .on('click.bs.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation() })
    .on('click.bs.dropdown.data-api'  , toggle, Dropdown.prototype.toggle)
    .on('keydown.bs.dropdown.data-api', toggle + ', [role=menu]' , Dropdown.prototype.keydown)

}(jQuery);

/* ========================================================================
 * Bootstrap: modal.js v3.0.3
 * http://getbootstrap.com/javascript/#modals
 * ========================================================================
 * Copyright 2013 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ======================================================================== */


+function ($) { "use strict";

  // MODAL CLASS DEFINITION
  // ======================

  var Modal = function (element, options) {
    this.options   = options
    this.$element  = $(element)
    this.$backdrop =
    this.isShown   = null

    if (this.options.remote) this.$element.load(this.options.remote)
  }

  Modal.DEFAULTS = {
      backdrop: true
    , keyboard: true
    , show: true
  }

  Modal.prototype.toggle = function (_relatedTarget) {
    return this[!this.isShown ? 'show' : 'hide'](_relatedTarget)
  }

  Modal.prototype.show = function (_relatedTarget) {
    var that = this
    var e    = $.Event('show.bs.modal', { relatedTarget: _relatedTarget })

    this.$element.trigger(e)

    if (this.isShown || e.isDefaultPrevented()) return

    this.isShown = true

    this.escape()

    this.$element.on('click.dismiss.modal', '[data-dismiss="modal"]', $.proxy(this.hide, this))

    this.backdrop(function () {
      var transition = $.support.transition && that.$element.hasClass('fade')

      if (!that.$element.parent().length) {
        that.$element.appendTo(document.body) // don't move modals dom position
      }

      that.$element.show()

      if (transition) {
        that.$element[0].offsetWidth // force reflow
      }

      that.$element
        .addClass('in')
        .attr('aria-hidden', false)

      that.enforceFocus()

      var e = $.Event('shown.bs.modal', { relatedTarget: _relatedTarget })

      transition ?
        that.$element.find('.modal-dialog') // wait for modal to slide in
          .one($.support.transition.end, function () {
            that.$element.focus().trigger(e)
          })
          .emulateTransitionEnd(300) :
        that.$element.focus().trigger(e)
    })
  }

  Modal.prototype.hide = function (e) {
    if (e) e.preventDefault()

    e = $.Event('hide.bs.modal')

    this.$element.trigger(e)

    if (!this.isShown || e.isDefaultPrevented()) return

    this.isShown = false

    this.escape()

    $(document).off('focusin.bs.modal')

    this.$element
      .removeClass('in')
      .attr('aria-hidden', true)
      .off('click.dismiss.modal')

    $.support.transition && this.$element.hasClass('fade') ?
      this.$element
        .one($.support.transition.end, $.proxy(this.hideModal, this))
        .emulateTransitionEnd(300) :
      this.hideModal()
  }

  Modal.prototype.enforceFocus = function () {
    $(document)
      .off('focusin.bs.modal') // guard against infinite focus loop
      .on('focusin.bs.modal', $.proxy(function (e) {
        if (this.$element[0] !== e.target && !this.$element.has(e.target).length) {
          this.$element.focus()
        }
      }, this))
  }

  Modal.prototype.escape = function () {
    if (this.isShown && this.options.keyboard) {
      this.$element.on('keyup.dismiss.bs.modal', $.proxy(function (e) {
        e.which == 27 && this.hide()
      }, this))
    } else if (!this.isShown) {
      this.$element.off('keyup.dismiss.bs.modal')
    }
  }

  Modal.prototype.hideModal = function () {
    var that = this
    this.$element.hide()
    this.backdrop(function () {
      that.removeBackdrop()
      that.$element.trigger('hidden.bs.modal')
    })
  }

  Modal.prototype.removeBackdrop = function () {
    this.$backdrop && this.$backdrop.remove()
    this.$backdrop = null
  }

  Modal.prototype.backdrop = function (callback) {
    var that    = this
    var animate = this.$element.hasClass('fade') ? 'fade' : ''

    if (this.isShown && this.options.backdrop) {
      var doAnimate = $.support.transition && animate

      this.$backdrop = $('<div class="modal-backdrop ' + animate + '" />')
        .appendTo(document.body)

      this.$element.on('click.dismiss.modal', $.proxy(function (e) {
        if (e.target !== e.currentTarget) return
        this.options.backdrop == 'static'
          ? this.$element[0].focus.call(this.$element[0])
          : this.hide.call(this)
      }, this))

      if (doAnimate) this.$backdrop[0].offsetWidth // force reflow

      this.$backdrop.addClass('in')

      if (!callback) return

      doAnimate ?
        this.$backdrop
          .one($.support.transition.end, callback)
          .emulateTransitionEnd(150) :
        callback()

    } else if (!this.isShown && this.$backdrop) {
      this.$backdrop.removeClass('in')

      $.support.transition && this.$element.hasClass('fade')?
        this.$backdrop
          .one($.support.transition.end, callback)
          .emulateTransitionEnd(150) :
        callback()

    } else if (callback) {
      callback()
    }
  }


  // MODAL PLUGIN DEFINITION
  // =======================

  var old = $.fn.modal

  $.fn.modal = function (option, _relatedTarget) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.modal')
      var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == 'object' && option)

      if (!data) $this.data('bs.modal', (data = new Modal(this, options)))
      if (typeof option == 'string') data[option](_relatedTarget)
      else if (options.show) data.show(_relatedTarget)
    })
  }

  $.fn.modal.Constructor = Modal


  // MODAL NO CONFLICT
  // =================

  $.fn.modal.noConflict = function () {
    $.fn.modal = old
    return this
  }


  // MODAL DATA-API
  // ==============

  $(document).on('click.bs.modal.data-api', '[data-toggle="modal"]', function (e) {
    var $this   = $(this)
    var href    = $this.attr('href')
    var $target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\s]+$)/, ''))) //strip for ie7
    var option  = $target.data('modal') ? 'toggle' : $.extend({ remote: !/#/.test(href) && href }, $target.data(), $this.data())

    e.preventDefault()

    $target
      .modal(option, this)
      .one('hide', function () {
        $this.is(':visible') && $this.focus()
      })
  })

  $(document)
    .on('show.bs.modal',  '.modal', function () { $(document.body).addClass('modal-open') })
    .on('hidden.bs.modal', '.modal', function () { $(document.body).removeClass('modal-open') })

}(jQuery);

/* ========================================================================
 * Bootstrap: tab.js v3.0.3
 * http://getbootstrap.com/javascript/#tabs
 * ========================================================================
 * Copyright 2013 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ======================================================================== */


+function ($) { "use strict";

  // TAB CLASS DEFINITION
  // ====================

  var Tab = function (element) {
    this.element = $(element)
  }

  Tab.prototype.show = function () {
    var $this    = this.element
    var $ul      = $this.closest('ul:not(.dropdown-menu)')
    var selector = $this.data('target')

    if (!selector) {
      selector = $this.attr('href')
      selector = selector && selector.replace(/.*(?=#[^\s]*$)/, '') //strip for ie7
    }

    if ($this.parent('li').hasClass('active')) return

    var previous = $ul.find('.active:last a')[0]
    var e        = $.Event('show.bs.tab', {
      relatedTarget: previous
    })

    $this.trigger(e)

    if (e.isDefaultPrevented()) return

    var $target = $(selector)

    this.activate($this.parent('li'), $ul)
    this.activate($target, $target.parent(), function () {
      $this.trigger({
        type: 'shown.bs.tab'
      , relatedTarget: previous
      })
    })
  }

  Tab.prototype.activate = function (element, container, callback) {
    var $active    = container.find('> .active')
    var transition = callback
      && $.support.transition
      && $active.hasClass('fade')

    function next() {
      $active
        .removeClass('active')
        .find('> .dropdown-menu > .active')
        .removeClass('active')

      element.addClass('active')

      if (transition) {
        element[0].offsetWidth // reflow for transition
        element.addClass('in')
      } else {
        element.removeClass('fade')
      }

      if (element.parent('.dropdown-menu')) {
        element.closest('li.dropdown').addClass('active')
      }

      callback && callback()
    }

    transition ?
      $active
        .one($.support.transition.end, next)
        .emulateTransitionEnd(150) :
      next()

    $active.removeClass('in')
  }


  // TAB PLUGIN DEFINITION
  // =====================

  var old = $.fn.tab

  $.fn.tab = function ( option ) {
    return this.each(function () {
      var $this = $(this)
      var data  = $this.data('bs.tab')

      if (!data) $this.data('bs.tab', (data = new Tab(this)))
      if (typeof option == 'string') data[option]()
    })
  }

  $.fn.tab.Constructor = Tab


  // TAB NO CONFLICT
  // ===============

  $.fn.tab.noConflict = function () {
    $.fn.tab = old
    return this
  }


  // TAB DATA-API
  // ============

  $(document).on('click.bs.tab.data-api', '[data-toggle="tab"], [data-toggle="pill"]', function (e) {
    e.preventDefault()
    $(this).tab('show')
  })

}(jQuery);

/* ========================================================================
 * Bootstrap: tooltip.js v3.0.3
 * http://getbootstrap.com/javascript/#tooltip
 * Inspired by the original jQuery.tipsy by Jason Frame
 * ========================================================================
 * Copyright 2013 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ======================================================================== */


+function ($) { "use strict";

  // TOOLTIP PUBLIC CLASS DEFINITION
  // ===============================

  var Tooltip = function (element, options) {
    this.type       =
    this.options    =
    this.enabled    =
    this.timeout    =
    this.hoverState =
    this.$element   = null

    this.init('tooltip', element, options)
  }

  Tooltip.DEFAULTS = {
    animation: true
  , placement: 'top'
  , selector: false
  , template: '<div class="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>'
  , trigger: 'hover focus'
  , title: ''
  , delay: 0
  , html: false
  , container: false
  }

  Tooltip.prototype.init = function (type, element, options) {
    this.enabled  = true
    this.type     = type
    this.$element = $(element)
    this.options  = this.getOptions(options)

    var triggers = this.options.trigger.split(' ')

    for (var i = triggers.length; i--;) {
      var trigger = triggers[i]

      if (trigger == 'click') {
        this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))
      } else if (trigger != 'manual') {
        var eventIn  = trigger == 'hover' ? 'mouseenter' : 'focus'
        var eventOut = trigger == 'hover' ? 'mouseleave' : 'blur'

        this.$element.on(eventIn  + '.' + this.type, this.options.selector, $.proxy(this.enter, this))
        this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))
      }
    }

    this.options.selector ?
      (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :
      this.fixTitle()
  }

  Tooltip.prototype.getDefaults = function () {
    return Tooltip.DEFAULTS
  }

  Tooltip.prototype.getOptions = function (options) {
    options = $.extend({}, this.getDefaults(), this.$element.data(), options)

    if (options.delay && typeof options.delay == 'number') {
      options.delay = {
        show: options.delay
      , hide: options.delay
      }
    }

    return options
  }

  Tooltip.prototype.getDelegateOptions = function () {
    var options  = {}
    var defaults = this.getDefaults()

    this._options && $.each(this._options, function (key, value) {
      if (defaults[key] != value) options[key] = value
    })

    return options
  }

  Tooltip.prototype.enter = function (obj) {
    var self = obj instanceof this.constructor ?
      obj : $(obj.currentTarget)[this.type](this.getDelegateOptions()).data('bs.' + this.type)

    clearTimeout(self.timeout)

    self.hoverState = 'in'

    if (!self.options.delay || !self.options.delay.show) return self.show()

    self.timeout = setTimeout(function () {
      if (self.hoverState == 'in') self.show()
    }, self.options.delay.show)
  }

  Tooltip.prototype.leave = function (obj) {
    var self = obj instanceof this.constructor ?
      obj : $(obj.currentTarget)[this.type](this.getDelegateOptions()).data('bs.' + this.type)

    clearTimeout(self.timeout)

    self.hoverState = 'out'

    if (!self.options.delay || !self.options.delay.hide) return self.hide()

    self.timeout = setTimeout(function () {
      if (self.hoverState == 'out') self.hide()
    }, self.options.delay.hide)
  }

  Tooltip.prototype.show = function () {
    var e = $.Event('show.bs.'+ this.type)

    if (this.hasContent() && this.enabled) {
      this.$element.trigger(e)

      if (e.isDefaultPrevented()) return

      var $tip = this.tip()

      this.setContent()

      if (this.options.animation) $tip.addClass('fade')

      var placement = typeof this.options.placement == 'function' ?
        this.options.placement.call(this, $tip[0], this.$element[0]) :
        this.options.placement

      var autoToken = /\s?auto?\s?/i
      var autoPlace = autoToken.test(placement)
      if (autoPlace) placement = placement.replace(autoToken, '') || 'top'

      $tip
        .detach()
        .css({ top: 0, left: 0, display: 'block' })
        .addClass(placement)

      this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)

      var pos          = this.getPosition()
      var actualWidth  = $tip[0].offsetWidth
      var actualHeight = $tip[0].offsetHeight

      if (autoPlace) {
        var $parent = this.$element.parent()

        var orgPlacement = placement
        var docScroll    = document.documentElement.scrollTop || document.body.scrollTop
        var parentWidth  = this.options.container == 'body' ? window.innerWidth  : $parent.outerWidth()
        var parentHeight = this.options.container == 'body' ? window.innerHeight : $parent.outerHeight()
        var parentLeft   = this.options.container == 'body' ? 0 : $parent.offset().left

        placement = placement == 'bottom' && pos.top   + pos.height  + actualHeight - docScroll > parentHeight  ? 'top'    :
                    placement == 'top'    && pos.top   - docScroll   - actualHeight < 0                         ? 'bottom' :
                    placement == 'right'  && pos.right + actualWidth > parentWidth                              ? 'left'   :
                    placement == 'left'   && pos.left  - actualWidth < parentLeft                               ? 'right'  :
                    placement

        $tip
          .removeClass(orgPlacement)
          .addClass(placement)
      }

      var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight)

      this.applyPlacement(calculatedOffset, placement)
      this.$element.trigger('shown.bs.' + this.type)
    }
  }

  Tooltip.prototype.applyPlacement = function(offset, placement) {
    var replace
    var $tip   = this.tip()
    var width  = $tip[0].offsetWidth
    var height = $tip[0].offsetHeight

    // manually read margins because getBoundingClientRect includes difference
    var marginTop = parseInt($tip.css('margin-top'), 10)
    var marginLeft = parseInt($tip.css('margin-left'), 10)

    // we must check for NaN for ie 8/9
    if (isNaN(marginTop))  marginTop  = 0
    if (isNaN(marginLeft)) marginLeft = 0

    offset.top  = offset.top  + marginTop
    offset.left = offset.left + marginLeft

    $tip
      .offset(offset)
      .addClass('in')

    // check to see if placing tip in new offset caused the tip to resize itself
    var actualWidth  = $tip[0].offsetWidth
    var actualHeight = $tip[0].offsetHeight

    if (placement == 'top' && actualHeight != height) {
      replace = true
      offset.top = offset.top + height - actualHeight
    }

    if (/bottom|top/.test(placement)) {
      var delta = 0

      if (offset.left < 0) {
        delta       = offset.left * -2
        offset.left = 0

        $tip.offset(offset)

        actualWidth  = $tip[0].offsetWidth
        actualHeight = $tip[0].offsetHeight
      }

      this.replaceArrow(delta - width + actualWidth, actualWidth, 'left')
    } else {
      this.replaceArrow(actualHeight - height, actualHeight, 'top')
    }

    if (replace) $tip.offset(offset)
  }

  Tooltip.prototype.replaceArrow = function(delta, dimension, position) {
    this.arrow().css(position, delta ? (50 * (1 - delta / dimension) + "%") : '')
  }

  Tooltip.prototype.setContent = function () {
    var $tip  = this.tip()
    var title = this.getTitle()

    $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)
    $tip.removeClass('fade in top bottom left right')
  }

  Tooltip.prototype.hide = function () {
    var that = this
    var $tip = this.tip()
    var e    = $.Event('hide.bs.' + this.type)

    function complete() {
      if (that.hoverState != 'in') $tip.detach()
    }

    this.$element.trigger(e)

    if (e.isDefaultPrevented()) return

    $tip.removeClass('in')

    $.support.transition && this.$tip.hasClass('fade') ?
      $tip
        .one($.support.transition.end, complete)
        .emulateTransitionEnd(150) :
      complete()

    this.$element.trigger('hidden.bs.' + this.type)

    return this
  }

  Tooltip.prototype.fixTitle = function () {
    var $e = this.$element
    if ($e.attr('title') || typeof($e.attr('data-original-title')) != 'string') {
      $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')
    }
  }

  Tooltip.prototype.hasContent = function () {
    return this.getTitle()
  }

  Tooltip.prototype.getPosition = function () {
    var el = this.$element[0]
    return $.extend({}, (typeof el.getBoundingClientRect == 'function') ? el.getBoundingClientRect() : {
      width: el.offsetWidth
    , height: el.offsetHeight
    }, this.$element.offset())
  }

  Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {
    return placement == 'bottom' ? { top: pos.top + pos.height,   left: pos.left + pos.width / 2 - actualWidth / 2  } :
           placement == 'top'    ? { top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2  } :
           placement == 'left'   ? { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth } :
        /* placement == 'right' */ { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width   }
  }

  Tooltip.prototype.getTitle = function () {
    var title
    var $e = this.$element
    var o  = this.options

    title = $e.attr('data-original-title')
      || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)

    return title
  }

  Tooltip.prototype.tip = function () {
    return this.$tip = this.$tip || $(this.options.template)
  }

  Tooltip.prototype.arrow = function () {
    return this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow')
  }

  Tooltip.prototype.validate = function () {
    if (!this.$element[0].parentNode) {
      this.hide()
      this.$element = null
      this.options  = null
    }
  }

  Tooltip.prototype.enable = function () {
    this.enabled = true
  }

  Tooltip.prototype.disable = function () {
    this.enabled = false
  }

  Tooltip.prototype.toggleEnabled = function () {
    this.enabled = !this.enabled
  }

  Tooltip.prototype.toggle = function (e) {
    var self = e ? $(e.currentTarget)[this.type](this.getDelegateOptions()).data('bs.' + this.type) : this
    self.tip().hasClass('in') ? self.leave(self) : self.enter(self)
  }

  Tooltip.prototype.destroy = function () {
    this.hide().$element.off('.' + this.type).removeData('bs.' + this.type)
  }


  // TOOLTIP PLUGIN DEFINITION
  // =========================

  var old = $.fn.tooltip

  $.fn.tooltip = function (option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.tooltip')
      var options = typeof option == 'object' && option

      if (!data) $this.data('bs.tooltip', (data = new Tooltip(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  $.fn.tooltip.Constructor = Tooltip


  // TOOLTIP NO CONFLICT
  // ===================

  $.fn.tooltip.noConflict = function () {
    $.fn.tooltip = old
    return this
  }

}(jQuery);

/* ========================================================================
 * Bootstrap: popover.js v3.0.3
 * http://getbootstrap.com/javascript/#popovers
 * ========================================================================
 * Copyright 2013 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ======================================================================== */


+function ($) { "use strict";

  // POPOVER PUBLIC CLASS DEFINITION
  // ===============================

  var Popover = function (element, options) {
    this.init('popover', element, options)
  }

  if (!$.fn.tooltip) throw new Error('Popover requires tooltip.js')

  Popover.DEFAULTS = $.extend({} , $.fn.tooltip.Constructor.DEFAULTS, {
    placement: 'right'
  , trigger: 'click'
  , content: ''
  , template: '<div class="popover"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'
  })


  // NOTE: POPOVER EXTENDS tooltip.js
  // ================================

  Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype)

  Popover.prototype.constructor = Popover

  Popover.prototype.getDefaults = function () {
    return Popover.DEFAULTS
  }

  Popover.prototype.setContent = function () {
    var $tip    = this.tip()
    var title   = this.getTitle()
    var content = this.getContent()

    $tip.find('.popover-title')[this.options.html ? 'html' : 'text'](title)
    $tip.find('.popover-content')[this.options.html ? 'html' : 'text'](content)

    $tip.removeClass('fade top bottom left right in')

    // IE8 doesn't accept hiding via the `:empty` pseudo selector, we have to do
    // this manually by checking the contents.
    if (!$tip.find('.popover-title').html()) $tip.find('.popover-title').hide()
  }

  Popover.prototype.hasContent = function () {
    return this.getTitle() || this.getContent()
  }

  Popover.prototype.getContent = function () {
    var $e = this.$element
    var o  = this.options

    return $e.attr('data-content')
      || (typeof o.content == 'function' ?
            o.content.call($e[0]) :
            o.content)
  }

  Popover.prototype.arrow = function () {
    return this.$arrow = this.$arrow || this.tip().find('.arrow')
  }

  Popover.prototype.tip = function () {
    if (!this.$tip) this.$tip = $(this.options.template)
    return this.$tip
  }


  // POPOVER PLUGIN DEFINITION
  // =========================

  var old = $.fn.popover

  $.fn.popover = function (option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.popover')
      var options = typeof option == 'object' && option

      if (!data) $this.data('bs.popover', (data = new Popover(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  $.fn.popover.Constructor = Popover


  // POPOVER NO CONFLICT
  // ===================

  $.fn.popover.noConflict = function () {
    $.fn.popover = old
    return this
  }

}(jQuery);

/* ========================================================================
 * Bootstrap: transition.js v3.0.3
 * http://getbootstrap.com/javascript/#transitions
 * ========================================================================
 * Copyright 2013 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ======================================================================== */


+function ($) { "use strict";

  // CSS TRANSITION SUPPORT (Shoutout: http://www.modernizr.com/)
  // ============================================================

  function transitionEnd() {
    var el = document.createElement('bootstrap')

    var transEndEventNames = {
      'WebkitTransition' : 'webkitTransitionEnd'
    , 'MozTransition'    : 'transitionend'
    , 'OTransition'      : 'oTransitionEnd otransitionend'
    , 'transition'       : 'transitionend'
    }

    for (var name in transEndEventNames) {
      if (el.style[name] !== undefined) {
        return { end: transEndEventNames[name] }
      }
    }
  }

  // http://blog.alexmaccaw.com/css-transitions
  $.fn.emulateTransitionEnd = function (duration) {
    var called = false, $el = this
    $(this).one($.support.transition.end, function () { called = true })
    var callback = function () { if (!called) $($el).trigger($.support.transition.end) }
    setTimeout(callback, duration)
    return this
  }

  $(function () {
    $.support.transition = transitionEnd()
  })

}(jQuery);

// Knockout JavaScript library v3.1.0
// (c) Steven Sanderson - http://knockoutjs.com/
// License: MIT (http://www.opensource.org/licenses/mit-license.php)

(function() {(function(p){var A=this||(0,eval)("this"),w=A.document,K=A.navigator,t=A.jQuery,C=A.JSON;(function(p){"function"===typeof require&&"object"===typeof exports&&"object"===typeof module?p(module.exports||exports):"function"===typeof define&&define.amd?define(["exports"],p):p(A.ko={})})(function(z){function G(a,c){return null===a||typeof a in M?a===c:!1}function N(a,c){var d;return function(){d||(d=setTimeout(function(){d=p;a()},c))}}function O(a,c){var d;return function(){clearTimeout(d);d=setTimeout(a,
c)}}function H(b,c,d,e){a.d[b]={init:function(b,h,g,k,l){var n,r;a.ba(function(){var g=a.a.c(h()),k=!d!==!g,s=!r;if(s||c||k!==n)s&&a.ca.fa()&&(r=a.a.lb(a.e.childNodes(b),!0)),k?(s||a.e.U(b,a.a.lb(r)),a.gb(e?e(l,g):l,b)):a.e.da(b),n=k},null,{G:b});return{controlsDescendantBindings:!0}}};a.g.aa[b]=!1;a.e.Q[b]=!0}var a="undefined"!==typeof z?z:{};a.b=function(b,c){for(var d=b.split("."),e=a,f=0;f<d.length-1;f++)e=e[d[f]];e[d[d.length-1]]=c};a.s=function(a,c,d){a[c]=d};a.version="3.1.0";a.b("version",
a.version);a.a=function(){function b(a,b){for(var c in a)a.hasOwnProperty(c)&&b(c,a[c])}function c(a,b){if(b)for(var c in b)b.hasOwnProperty(c)&&(a[c]=b[c]);return a}function d(a,b){a.__proto__=b;return a}var e={__proto__:[]}instanceof Array,f={},h={};f[K&&/Firefox\/2/i.test(K.userAgent)?"KeyboardEvent":"UIEvents"]=["keyup","keydown","keypress"];f.MouseEvents="click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave".split(" ");b(f,function(a,b){if(b.length)for(var c=0,
d=b.length;c<d;c++)h[b[c]]=a});var g={propertychange:!0},k=w&&function(){for(var a=3,b=w.createElement("div"),c=b.getElementsByTagName("i");b.innerHTML="\x3c!--[if gt IE "+ ++a+"]><i></i><![endif]--\x3e",c[0];);return 4<a?a:p}();return{mb:["authenticity_token",/^__RequestVerificationToken(_.*)?$/],r:function(a,b){for(var c=0,d=a.length;c<d;c++)b(a[c],c)},l:function(a,b){if("function"==typeof Array.prototype.indexOf)return Array.prototype.indexOf.call(a,b);for(var c=0,d=a.length;c<d;c++)if(a[c]===
b)return c;return-1},hb:function(a,b,c){for(var d=0,e=a.length;d<e;d++)if(b.call(c,a[d],d))return a[d];return null},ma:function(b,c){var d=a.a.l(b,c);0<d?b.splice(d,1):0===d&&b.shift()},ib:function(b){b=b||[];for(var c=[],d=0,e=b.length;d<e;d++)0>a.a.l(c,b[d])&&c.push(b[d]);return c},ya:function(a,b){a=a||[];for(var c=[],d=0,e=a.length;d<e;d++)c.push(b(a[d],d));return c},la:function(a,b){a=a||[];for(var c=[],d=0,e=a.length;d<e;d++)b(a[d],d)&&c.push(a[d]);return c},$:function(a,b){if(b instanceof Array)a.push.apply(a,
b);else for(var c=0,d=b.length;c<d;c++)a.push(b[c]);return a},Y:function(b,c,d){var e=a.a.l(a.a.Sa(b),c);0>e?d&&b.push(c):d||b.splice(e,1)},na:e,extend:c,ra:d,sa:e?d:c,A:b,Oa:function(a,b){if(!a)return a;var c={},d;for(d in a)a.hasOwnProperty(d)&&(c[d]=b(a[d],d,a));return c},Fa:function(b){for(;b.firstChild;)a.removeNode(b.firstChild)},ec:function(b){b=a.a.R(b);for(var c=w.createElement("div"),d=0,e=b.length;d<e;d++)c.appendChild(a.M(b[d]));return c},lb:function(b,c){for(var d=0,e=b.length,g=[];d<
e;d++){var k=b[d].cloneNode(!0);g.push(c?a.M(k):k)}return g},U:function(b,c){a.a.Fa(b);if(c)for(var d=0,e=c.length;d<e;d++)b.appendChild(c[d])},Bb:function(b,c){var d=b.nodeType?[b]:b;if(0<d.length){for(var e=d[0],g=e.parentNode,k=0,h=c.length;k<h;k++)g.insertBefore(c[k],e);k=0;for(h=d.length;k<h;k++)a.removeNode(d[k])}},ea:function(a,b){if(a.length){for(b=8===b.nodeType&&b.parentNode||b;a.length&&a[0].parentNode!==b;)a.shift();if(1<a.length){var c=a[0],d=a[a.length-1];for(a.length=0;c!==d;)if(a.push(c),
c=c.nextSibling,!c)return;a.push(d)}}return a},Db:function(a,b){7>k?a.setAttribute("selected",b):a.selected=b},ta:function(a){return null===a||a===p?"":a.trim?a.trim():a.toString().replace(/^[\s\xa0]+|[\s\xa0]+$/g,"")},oc:function(b,c){for(var d=[],e=(b||"").split(c),g=0,k=e.length;g<k;g++){var h=a.a.ta(e[g]);""!==h&&d.push(h)}return d},kc:function(a,b){a=a||"";return b.length>a.length?!1:a.substring(0,b.length)===b},Sb:function(a,b){if(a===b)return!0;if(11===a.nodeType)return!1;if(b.contains)return b.contains(3===
a.nodeType?a.parentNode:a);if(b.compareDocumentPosition)return 16==(b.compareDocumentPosition(a)&16);for(;a&&a!=b;)a=a.parentNode;return!!a},Ea:function(b){return a.a.Sb(b,b.ownerDocument.documentElement)},eb:function(b){return!!a.a.hb(b,a.a.Ea)},B:function(a){return a&&a.tagName&&a.tagName.toLowerCase()},q:function(b,c,d){var e=k&&g[c];if(!e&&t)t(b).bind(c,d);else if(e||"function"!=typeof b.addEventListener)if("undefined"!=typeof b.attachEvent){var h=function(a){d.call(b,a)},f="on"+c;b.attachEvent(f,
h);a.a.u.ja(b,function(){b.detachEvent(f,h)})}else throw Error("Browser doesn't support addEventListener or attachEvent");else b.addEventListener(c,d,!1)},ha:function(b,c){if(!b||!b.nodeType)throw Error("element must be a DOM node when calling triggerEvent");var d;"input"===a.a.B(b)&&b.type&&"click"==c.toLowerCase()?(d=b.type,d="checkbox"==d||"radio"==d):d=!1;if(t&&!d)t(b).trigger(c);else if("function"==typeof w.createEvent)if("function"==typeof b.dispatchEvent)d=w.createEvent(h[c]||"HTMLEvents"),
d.initEvent(c,!0,!0,A,0,0,0,0,0,!1,!1,!1,!1,0,b),b.dispatchEvent(d);else throw Error("The supplied element doesn't support dispatchEvent");else if(d&&b.click)b.click();else if("undefined"!=typeof b.fireEvent)b.fireEvent("on"+c);else throw Error("Browser doesn't support triggering events");},c:function(b){return a.v(b)?b():b},Sa:function(b){return a.v(b)?b.o():b},ua:function(b,c,d){if(c){var e=/\S+/g,g=b.className.match(e)||[];a.a.r(c.match(e),function(b){a.a.Y(g,b,d)});b.className=g.join(" ")}},Xa:function(b,
c){var d=a.a.c(c);if(null===d||d===p)d="";var e=a.e.firstChild(b);!e||3!=e.nodeType||a.e.nextSibling(e)?a.e.U(b,[b.ownerDocument.createTextNode(d)]):e.data=d;a.a.Vb(b)},Cb:function(a,b){a.name=b;if(7>=k)try{a.mergeAttributes(w.createElement("<input name='"+a.name+"'/>"),!1)}catch(c){}},Vb:function(a){9<=k&&(a=1==a.nodeType?a:a.parentNode,a.style&&(a.style.zoom=a.style.zoom))},Tb:function(a){if(k){var b=a.style.width;a.style.width=0;a.style.width=b}},ic:function(b,c){b=a.a.c(b);c=a.a.c(c);for(var d=
[],e=b;e<=c;e++)d.push(e);return d},R:function(a){for(var b=[],c=0,d=a.length;c<d;c++)b.push(a[c]);return b},mc:6===k,nc:7===k,oa:k,ob:function(b,c){for(var d=a.a.R(b.getElementsByTagName("input")).concat(a.a.R(b.getElementsByTagName("textarea"))),e="string"==typeof c?function(a){return a.name===c}:function(a){return c.test(a.name)},g=[],k=d.length-1;0<=k;k--)e(d[k])&&g.push(d[k]);return g},fc:function(b){return"string"==typeof b&&(b=a.a.ta(b))?C&&C.parse?C.parse(b):(new Function("return "+b))():
null},Ya:function(b,c,d){if(!C||!C.stringify)throw Error("Cannot find JSON.stringify(). Some browsers (e.g., IE < 8) don't support it natively, but you can overcome this by adding a script reference to json2.js, downloadable from http://www.json.org/json2.js");return C.stringify(a.a.c(b),c,d)},gc:function(c,d,e){e=e||{};var g=e.params||{},k=e.includeFields||this.mb,h=c;if("object"==typeof c&&"form"===a.a.B(c))for(var h=c.action,f=k.length-1;0<=f;f--)for(var u=a.a.ob(c,k[f]),D=u.length-1;0<=D;D--)g[u[D].name]=
u[D].value;d=a.a.c(d);var y=w.createElement("form");y.style.display="none";y.action=h;y.method="post";for(var p in d)c=w.createElement("input"),c.name=p,c.value=a.a.Ya(a.a.c(d[p])),y.appendChild(c);b(g,function(a,b){var c=w.createElement("input");c.name=a;c.value=b;y.appendChild(c)});w.body.appendChild(y);e.submitter?e.submitter(y):y.submit();setTimeout(function(){y.parentNode.removeChild(y)},0)}}}();a.b("utils",a.a);a.b("utils.arrayForEach",a.a.r);a.b("utils.arrayFirst",a.a.hb);a.b("utils.arrayFilter",
a.a.la);a.b("utils.arrayGetDistinctValues",a.a.ib);a.b("utils.arrayIndexOf",a.a.l);a.b("utils.arrayMap",a.a.ya);a.b("utils.arrayPushAll",a.a.$);a.b("utils.arrayRemoveItem",a.a.ma);a.b("utils.extend",a.a.extend);a.b("utils.fieldsIncludedWithJsonPost",a.a.mb);a.b("utils.getFormFields",a.a.ob);a.b("utils.peekObservable",a.a.Sa);a.b("utils.postJson",a.a.gc);a.b("utils.parseJson",a.a.fc);a.b("utils.registerEventHandler",a.a.q);a.b("utils.stringifyJson",a.a.Ya);a.b("utils.range",a.a.ic);a.b("utils.toggleDomNodeCssClass",
a.a.ua);a.b("utils.triggerEvent",a.a.ha);a.b("utils.unwrapObservable",a.a.c);a.b("utils.objectForEach",a.a.A);a.b("utils.addOrRemoveItem",a.a.Y);a.b("unwrap",a.a.c);Function.prototype.bind||(Function.prototype.bind=function(a){var c=this,d=Array.prototype.slice.call(arguments);a=d.shift();return function(){return c.apply(a,d.concat(Array.prototype.slice.call(arguments)))}});a.a.f=new function(){function a(b,h){var g=b[d];if(!g||"null"===g||!e[g]){if(!h)return p;g=b[d]="ko"+c++;e[g]={}}return e[g]}
var c=0,d="__ko__"+(new Date).getTime(),e={};return{get:function(c,d){var e=a(c,!1);return e===p?p:e[d]},set:function(c,d,e){if(e!==p||a(c,!1)!==p)a(c,!0)[d]=e},clear:function(a){var b=a[d];return b?(delete e[b],a[d]=null,!0):!1},L:function(){return c++ +d}}};a.b("utils.domData",a.a.f);a.b("utils.domData.clear",a.a.f.clear);a.a.u=new function(){function b(b,c){var e=a.a.f.get(b,d);e===p&&c&&(e=[],a.a.f.set(b,d,e));return e}function c(d){var e=b(d,!1);if(e)for(var e=e.slice(0),k=0;k<e.length;k++)e[k](d);
a.a.f.clear(d);a.a.u.cleanExternalData(d);if(f[d.nodeType])for(e=d.firstChild;d=e;)e=d.nextSibling,8===d.nodeType&&c(d)}var d=a.a.f.L(),e={1:!0,8:!0,9:!0},f={1:!0,9:!0};return{ja:function(a,c){if("function"!=typeof c)throw Error("Callback must be a function");b(a,!0).push(c)},Ab:function(c,e){var k=b(c,!1);k&&(a.a.ma(k,e),0==k.length&&a.a.f.set(c,d,p))},M:function(b){if(e[b.nodeType]&&(c(b),f[b.nodeType])){var d=[];a.a.$(d,b.getElementsByTagName("*"));for(var k=0,l=d.length;k<l;k++)c(d[k])}return b},
removeNode:function(b){a.M(b);b.parentNode&&b.parentNode.removeChild(b)},cleanExternalData:function(a){t&&"function"==typeof t.cleanData&&t.cleanData([a])}}};a.M=a.a.u.M;a.removeNode=a.a.u.removeNode;a.b("cleanNode",a.M);a.b("removeNode",a.removeNode);a.b("utils.domNodeDisposal",a.a.u);a.b("utils.domNodeDisposal.addDisposeCallback",a.a.u.ja);a.b("utils.domNodeDisposal.removeDisposeCallback",a.a.u.Ab);(function(){a.a.Qa=function(b){var c;if(t)if(t.parseHTML)c=t.parseHTML(b)||[];else{if((c=t.clean([b]))&&
c[0]){for(b=c[0];b.parentNode&&11!==b.parentNode.nodeType;)b=b.parentNode;b.parentNode&&b.parentNode.removeChild(b)}}else{var d=a.a.ta(b).toLowerCase();c=w.createElement("div");d=d.match(/^<(thead|tbody|tfoot)/)&&[1,"<table>","</table>"]||!d.indexOf("<tr")&&[2,"<table><tbody>","</tbody></table>"]||(!d.indexOf("<td")||!d.indexOf("<th"))&&[3,"<table><tbody><tr>","</tr></tbody></table>"]||[0,"",""];b="ignored<div>"+d[1]+b+d[2]+"</div>";for("function"==typeof A.innerShiv?c.appendChild(A.innerShiv(b)):
c.innerHTML=b;d[0]--;)c=c.lastChild;c=a.a.R(c.lastChild.childNodes)}return c};a.a.Va=function(b,c){a.a.Fa(b);c=a.a.c(c);if(null!==c&&c!==p)if("string"!=typeof c&&(c=c.toString()),t)t(b).html(c);else for(var d=a.a.Qa(c),e=0;e<d.length;e++)b.appendChild(d[e])}})();a.b("utils.parseHtmlFragment",a.a.Qa);a.b("utils.setHtml",a.a.Va);a.w=function(){function b(c,e){if(c)if(8==c.nodeType){var f=a.w.xb(c.nodeValue);null!=f&&e.push({Rb:c,cc:f})}else if(1==c.nodeType)for(var f=0,h=c.childNodes,g=h.length;f<g;f++)b(h[f],
e)}var c={};return{Na:function(a){if("function"!=typeof a)throw Error("You can only pass a function to ko.memoization.memoize()");var b=(4294967296*(1+Math.random())|0).toString(16).substring(1)+(4294967296*(1+Math.random())|0).toString(16).substring(1);c[b]=a;return"\x3c!--[ko_memo:"+b+"]--\x3e"},Hb:function(a,b){var f=c[a];if(f===p)throw Error("Couldn't find any memo with ID "+a+". Perhaps it's already been unmemoized.");try{return f.apply(null,b||[]),!0}finally{delete c[a]}},Ib:function(c,e){var f=
[];b(c,f);for(var h=0,g=f.length;h<g;h++){var k=f[h].Rb,l=[k];e&&a.a.$(l,e);a.w.Hb(f[h].cc,l);k.nodeValue="";k.parentNode&&k.parentNode.removeChild(k)}},xb:function(a){return(a=a.match(/^\[ko_memo\:(.*?)\]$/))?a[1]:null}}}();a.b("memoization",a.w);a.b("memoization.memoize",a.w.Na);a.b("memoization.unmemoize",a.w.Hb);a.b("memoization.parseMemoText",a.w.xb);a.b("memoization.unmemoizeDomNodeAndDescendants",a.w.Ib);a.Ga={throttle:function(b,c){b.throttleEvaluation=c;var d=null;return a.h({read:b,write:function(a){clearTimeout(d);
d=setTimeout(function(){b(a)},c)}})},rateLimit:function(a,c){var d,e,f;"number"==typeof c?d=c:(d=c.timeout,e=c.method);f="notifyWhenChangesStop"==e?O:N;a.Ma(function(a){return f(a,d)})},notify:function(a,c){a.equalityComparer="always"==c?null:G}};var M={undefined:1,"boolean":1,number:1,string:1};a.b("extenders",a.Ga);a.Fb=function(b,c,d){this.target=b;this.za=c;this.Qb=d;this.sb=!1;a.s(this,"dispose",this.F)};a.Fb.prototype.F=function(){this.sb=!0;this.Qb()};a.N=function(){a.a.sa(this,a.N.fn);this.H=
{}};var F="change";z={V:function(b,c,d){var e=this;d=d||F;var f=new a.Fb(e,c?b.bind(c):b,function(){a.a.ma(e.H[d],f)});e.o&&e.o();e.H[d]||(e.H[d]=[]);e.H[d].push(f);return f},notifySubscribers:function(b,c){c=c||F;if(this.qb(c))try{a.k.jb();for(var d=this.H[c].slice(0),e=0,f;f=d[e];++e)f.sb||f.za(b)}finally{a.k.end()}},Ma:function(b){var c=this,d=a.v(c),e,f,h;c.ia||(c.ia=c.notifySubscribers,c.notifySubscribers=function(a,b){b&&b!==F?"beforeChange"===b?c.bb(a):c.ia(a,b):c.cb(a)});var g=b(function(){d&&
h===c&&(h=c());e=!1;c.Ka(f,h)&&c.ia(f=h)});c.cb=function(a){e=!0;h=a;g()};c.bb=function(a){e||(f=a,c.ia(a,"beforeChange"))}},qb:function(a){return this.H[a]&&this.H[a].length},Wb:function(){var b=0;a.a.A(this.H,function(a,d){b+=d.length});return b},Ka:function(a,c){return!this.equalityComparer||!this.equalityComparer(a,c)},extend:function(b){var c=this;b&&a.a.A(b,function(b,e){var f=a.Ga[b];"function"==typeof f&&(c=f(c,e)||c)});return c}};a.s(z,"subscribe",z.V);a.s(z,"extend",z.extend);a.s(z,"getSubscriptionsCount",
z.Wb);a.a.na&&a.a.ra(z,Function.prototype);a.N.fn=z;a.tb=function(a){return null!=a&&"function"==typeof a.V&&"function"==typeof a.notifySubscribers};a.b("subscribable",a.N);a.b("isSubscribable",a.tb);a.ca=a.k=function(){function b(a){d.push(e);e=a}function c(){e=d.pop()}var d=[],e,f=0;return{jb:b,end:c,zb:function(b){if(e){if(!a.tb(b))throw Error("Only subscribable things can act as dependencies");e.za(b,b.Kb||(b.Kb=++f))}},t:function(a,d,e){try{return b(),a.apply(d,e||[])}finally{c()}},fa:function(){if(e)return e.ba.fa()},
pa:function(){if(e)return e.pa}}}();a.b("computedContext",a.ca);a.b("computedContext.getDependenciesCount",a.ca.fa);a.b("computedContext.isInitial",a.ca.pa);a.m=function(b){function c(){if(0<arguments.length)return c.Ka(d,arguments[0])&&(c.P(),d=arguments[0],c.O()),this;a.k.zb(c);return d}var d=b;a.N.call(c);a.a.sa(c,a.m.fn);c.o=function(){return d};c.O=function(){c.notifySubscribers(d)};c.P=function(){c.notifySubscribers(d,"beforeChange")};a.s(c,"peek",c.o);a.s(c,"valueHasMutated",c.O);a.s(c,"valueWillMutate",
c.P);return c};a.m.fn={equalityComparer:G};var E=a.m.hc="__ko_proto__";a.m.fn[E]=a.m;a.a.na&&a.a.ra(a.m.fn,a.N.fn);a.Ha=function(b,c){return null===b||b===p||b[E]===p?!1:b[E]===c?!0:a.Ha(b[E],c)};a.v=function(b){return a.Ha(b,a.m)};a.ub=function(b){return"function"==typeof b&&b[E]===a.m||"function"==typeof b&&b[E]===a.h&&b.Yb?!0:!1};a.b("observable",a.m);a.b("isObservable",a.v);a.b("isWriteableObservable",a.ub);a.T=function(b){b=b||[];if("object"!=typeof b||!("length"in b))throw Error("The argument passed when initializing an observable array must be an array, or null, or undefined.");
b=a.m(b);a.a.sa(b,a.T.fn);return b.extend({trackArrayChanges:!0})};a.T.fn={remove:function(b){for(var c=this.o(),d=[],e="function"!=typeof b||a.v(b)?function(a){return a===b}:b,f=0;f<c.length;f++){var h=c[f];e(h)&&(0===d.length&&this.P(),d.push(h),c.splice(f,1),f--)}d.length&&this.O();return d},removeAll:function(b){if(b===p){var c=this.o(),d=c.slice(0);this.P();c.splice(0,c.length);this.O();return d}return b?this.remove(function(c){return 0<=a.a.l(b,c)}):[]},destroy:function(b){var c=this.o(),d=
"function"!=typeof b||a.v(b)?function(a){return a===b}:b;this.P();for(var e=c.length-1;0<=e;e--)d(c[e])&&(c[e]._destroy=!0);this.O()},destroyAll:function(b){return b===p?this.destroy(function(){return!0}):b?this.destroy(function(c){return 0<=a.a.l(b,c)}):[]},indexOf:function(b){var c=this();return a.a.l(c,b)},replace:function(a,c){var d=this.indexOf(a);0<=d&&(this.P(),this.o()[d]=c,this.O())}};a.a.r("pop push reverse shift sort splice unshift".split(" "),function(b){a.T.fn[b]=function(){var a=this.o();
this.P();this.kb(a,b,arguments);a=a[b].apply(a,arguments);this.O();return a}});a.a.r(["slice"],function(b){a.T.fn[b]=function(){var a=this();return a[b].apply(a,arguments)}});a.a.na&&a.a.ra(a.T.fn,a.m.fn);a.b("observableArray",a.T);var I="arrayChange";a.Ga.trackArrayChanges=function(b){function c(){if(!d){d=!0;var c=b.notifySubscribers;b.notifySubscribers=function(a,b){b&&b!==F||++f;return c.apply(this,arguments)};var k=[].concat(b.o()||[]);e=null;b.V(function(c){c=[].concat(c||[]);if(b.qb(I)){var d;
if(!e||1<f)e=a.a.Aa(k,c,{sparse:!0});d=e;d.length&&b.notifySubscribers(d,I)}k=c;e=null;f=0})}}if(!b.kb){var d=!1,e=null,f=0,h=b.V;b.V=b.subscribe=function(a,b,d){d===I&&c();return h.apply(this,arguments)};b.kb=function(b,c,l){function h(a,b,c){return r[r.length]={status:a,value:b,index:c}}if(d&&!f){var r=[],m=b.length,q=l.length,s=0;switch(c){case "push":s=m;case "unshift":for(c=0;c<q;c++)h("added",l[c],s+c);break;case "pop":s=m-1;case "shift":m&&h("deleted",b[s],s);break;case "splice":c=Math.min(Math.max(0,
0>l[0]?m+l[0]:l[0]),m);for(var m=1===q?m:Math.min(c+(l[1]||0),m),q=c+q-2,s=Math.max(m,q),B=[],u=[],D=2;c<s;++c,++D)c<m&&u.push(h("deleted",b[c],c)),c<q&&B.push(h("added",l[D],c));a.a.nb(u,B);break;default:return}e=r}}}};a.ba=a.h=function(b,c,d){function e(){q=!0;a.a.A(v,function(a,b){b.F()});v={};x=0;n=!1}function f(){var a=g.throttleEvaluation;a&&0<=a?(clearTimeout(t),t=setTimeout(h,a)):g.wa?g.wa():h()}function h(){if(!r&&!q){if(y&&y()){if(!m){p();return}}else m=!1;r=!0;try{var b=v,d=x;a.k.jb({za:function(a,
c){q||(d&&b[c]?(v[c]=b[c],++x,delete b[c],--d):v[c]||(v[c]=a.V(f),++x))},ba:g,pa:!x});v={};x=0;try{var e=c?s.call(c):s()}finally{a.k.end(),d&&a.a.A(b,function(a,b){b.F()}),n=!1}g.Ka(l,e)&&(g.notifySubscribers(l,"beforeChange"),l=e,g.wa&&!g.throttleEvaluation||g.notifySubscribers(l))}finally{r=!1}x||p()}}function g(){if(0<arguments.length){if("function"===typeof B)B.apply(c,arguments);else throw Error("Cannot write a value to a ko.computed unless you specify a 'write' option. If you wish to read the current value, don't pass any parameters.");
return this}n&&h();a.k.zb(g);return l}function k(){return n||0<x}var l,n=!0,r=!1,m=!1,q=!1,s=b;s&&"object"==typeof s?(d=s,s=d.read):(d=d||{},s||(s=d.read));if("function"!=typeof s)throw Error("Pass a function that returns the value of the ko.computed");var B=d.write,u=d.disposeWhenNodeIsRemoved||d.G||null,D=d.disposeWhen||d.Da,y=D,p=e,v={},x=0,t=null;c||(c=d.owner);a.N.call(g);a.a.sa(g,a.h.fn);g.o=function(){n&&!x&&h();return l};g.fa=function(){return x};g.Yb="function"===typeof d.write;g.F=function(){p()};
g.ga=k;var w=g.Ma;g.Ma=function(a){w.call(g,a);g.wa=function(){g.bb(l);n=!0;g.cb(g)}};a.s(g,"peek",g.o);a.s(g,"dispose",g.F);a.s(g,"isActive",g.ga);a.s(g,"getDependenciesCount",g.fa);u&&(m=!0,u.nodeType&&(y=function(){return!a.a.Ea(u)||D&&D()}));!0!==d.deferEvaluation&&h();u&&k()&&u.nodeType&&(p=function(){a.a.u.Ab(u,p);e()},a.a.u.ja(u,p));return g};a.$b=function(b){return a.Ha(b,a.h)};z=a.m.hc;a.h[z]=a.m;a.h.fn={equalityComparer:G};a.h.fn[z]=a.h;a.a.na&&a.a.ra(a.h.fn,a.N.fn);a.b("dependentObservable",
a.h);a.b("computed",a.h);a.b("isComputed",a.$b);(function(){function b(a,f,h){h=h||new d;a=f(a);if("object"!=typeof a||null===a||a===p||a instanceof Date||a instanceof String||a instanceof Number||a instanceof Boolean)return a;var g=a instanceof Array?[]:{};h.save(a,g);c(a,function(c){var d=f(a[c]);switch(typeof d){case "boolean":case "number":case "string":case "function":g[c]=d;break;case "object":case "undefined":var n=h.get(d);g[c]=n!==p?n:b(d,f,h)}});return g}function c(a,b){if(a instanceof Array){for(var c=
0;c<a.length;c++)b(c);"function"==typeof a.toJSON&&b("toJSON")}else for(c in a)b(c)}function d(){this.keys=[];this.ab=[]}a.Gb=function(c){if(0==arguments.length)throw Error("When calling ko.toJS, pass the object you want to convert.");return b(c,function(b){for(var c=0;a.v(b)&&10>c;c++)b=b();return b})};a.toJSON=function(b,c,d){b=a.Gb(b);return a.a.Ya(b,c,d)};d.prototype={save:function(b,c){var d=a.a.l(this.keys,b);0<=d?this.ab[d]=c:(this.keys.push(b),this.ab.push(c))},get:function(b){b=a.a.l(this.keys,
b);return 0<=b?this.ab[b]:p}}})();a.b("toJS",a.Gb);a.b("toJSON",a.toJSON);(function(){a.i={p:function(b){switch(a.a.B(b)){case "option":return!0===b.__ko__hasDomDataOptionValue__?a.a.f.get(b,a.d.options.Pa):7>=a.a.oa?b.getAttributeNode("value")&&b.getAttributeNode("value").specified?b.value:b.text:b.value;case "select":return 0<=b.selectedIndex?a.i.p(b.options[b.selectedIndex]):p;default:return b.value}},X:function(b,c,d){switch(a.a.B(b)){case "option":switch(typeof c){case "string":a.a.f.set(b,a.d.options.Pa,
p);"__ko__hasDomDataOptionValue__"in b&&delete b.__ko__hasDomDataOptionValue__;b.value=c;break;default:a.a.f.set(b,a.d.options.Pa,c),b.__ko__hasDomDataOptionValue__=!0,b.value="number"===typeof c?c:""}break;case "select":if(""===c||null===c)c=p;for(var e=-1,f=0,h=b.options.length,g;f<h;++f)if(g=a.i.p(b.options[f]),g==c||""==g&&c===p){e=f;break}if(d||0<=e||c===p&&1<b.size)b.selectedIndex=e;break;default:if(null===c||c===p)c="";b.value=c}}}})();a.b("selectExtensions",a.i);a.b("selectExtensions.readValue",
a.i.p);a.b("selectExtensions.writeValue",a.i.X);a.g=function(){function b(b){b=a.a.ta(b);123===b.charCodeAt(0)&&(b=b.slice(1,-1));var c=[],d=b.match(e),g,m,q=0;if(d){d.push(",");for(var s=0,B;B=d[s];++s){var u=B.charCodeAt(0);if(44===u){if(0>=q){g&&c.push(m?{key:g,value:m.join("")}:{unknown:g});g=m=q=0;continue}}else if(58===u){if(!m)continue}else if(47===u&&s&&1<B.length)(u=d[s-1].match(f))&&!h[u[0]]&&(b=b.substr(b.indexOf(B)+1),d=b.match(e),d.push(","),s=-1,B="/");else if(40===u||123===u||91===
u)++q;else if(41===u||125===u||93===u)--q;else if(!g&&!m){g=34===u||39===u?B.slice(1,-1):B;continue}m?m.push(B):m=[B]}}return c}var c=["true","false","null","undefined"],d=/^(?:[$_a-z][$\w]*|(.+)(\.\s*[$_a-z][$\w]*|\[.+\]))$/i,e=RegExp("\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*'|/(?:[^/\\\\]|\\\\.)*/w*|[^\\s:,/][^,\"'{}()/:[\\]]*[^\\s,\"'{}()/:[\\]]|[^\\s]","g"),f=/[\])"'A-Za-z0-9_$]+$/,h={"in":1,"return":1,"typeof":1},g={};return{aa:[],W:g,Ra:b,qa:function(e,l){function f(b,e){var l,k=a.getBindingHandler(b);
if(k&&k.preprocess?e=k.preprocess(e,b,f):1){if(k=g[b])l=e,0<=a.a.l(c,l)?l=!1:(k=l.match(d),l=null===k?!1:k[1]?"Object("+k[1]+")"+k[2]:l),k=l;k&&m.push("'"+b+"':function(_z){"+l+"=_z}");q&&(e="function(){return "+e+" }");h.push("'"+b+"':"+e)}}l=l||{};var h=[],m=[],q=l.valueAccessors,s="string"===typeof e?b(e):e;a.a.r(s,function(a){f(a.key||a.unknown,a.value)});m.length&&f("_ko_property_writers","{"+m.join(",")+" }");return h.join(",")},bc:function(a,b){for(var c=0;c<a.length;c++)if(a[c].key==b)return!0;
return!1},va:function(b,c,d,e,g){if(b&&a.v(b))!a.ub(b)||g&&b.o()===e||b(e);else if((b=c.get("_ko_property_writers"))&&b[d])b[d](e)}}}();a.b("expressionRewriting",a.g);a.b("expressionRewriting.bindingRewriteValidators",a.g.aa);a.b("expressionRewriting.parseObjectLiteral",a.g.Ra);a.b("expressionRewriting.preProcessBindings",a.g.qa);a.b("expressionRewriting._twoWayBindings",a.g.W);a.b("jsonExpressionRewriting",a.g);a.b("jsonExpressionRewriting.insertPropertyAccessorsIntoJson",a.g.qa);(function(){function b(a){return 8==
a.nodeType&&h.test(f?a.text:a.nodeValue)}function c(a){return 8==a.nodeType&&g.test(f?a.text:a.nodeValue)}function d(a,d){for(var e=a,g=1,k=[];e=e.nextSibling;){if(c(e)&&(g--,0===g))return k;k.push(e);b(e)&&g++}if(!d)throw Error("Cannot find closing comment tag to match: "+a.nodeValue);return null}function e(a,b){var c=d(a,b);return c?0<c.length?c[c.length-1].nextSibling:a.nextSibling:null}var f=w&&"\x3c!--test--\x3e"===w.createComment("test").text,h=f?/^\x3c!--\s*ko(?:\s+([\s\S]+))?\s*--\x3e$/:/^\s*ko(?:\s+([\s\S]+))?\s*$/,
g=f?/^\x3c!--\s*\/ko\s*--\x3e$/:/^\s*\/ko\s*$/,k={ul:!0,ol:!0};a.e={Q:{},childNodes:function(a){return b(a)?d(a):a.childNodes},da:function(c){if(b(c)){c=a.e.childNodes(c);for(var d=0,e=c.length;d<e;d++)a.removeNode(c[d])}else a.a.Fa(c)},U:function(c,d){if(b(c)){a.e.da(c);for(var e=c.nextSibling,g=0,k=d.length;g<k;g++)e.parentNode.insertBefore(d[g],e)}else a.a.U(c,d)},yb:function(a,c){b(a)?a.parentNode.insertBefore(c,a.nextSibling):a.firstChild?a.insertBefore(c,a.firstChild):a.appendChild(c)},rb:function(c,
d,e){e?b(c)?c.parentNode.insertBefore(d,e.nextSibling):e.nextSibling?c.insertBefore(d,e.nextSibling):c.appendChild(d):a.e.yb(c,d)},firstChild:function(a){return b(a)?!a.nextSibling||c(a.nextSibling)?null:a.nextSibling:a.firstChild},nextSibling:function(a){b(a)&&(a=e(a));return a.nextSibling&&c(a.nextSibling)?null:a.nextSibling},Xb:b,lc:function(a){return(a=(f?a.text:a.nodeValue).match(h))?a[1]:null},wb:function(d){if(k[a.a.B(d)]){var g=d.firstChild;if(g){do if(1===g.nodeType){var f;f=g.firstChild;
var h=null;if(f){do if(h)h.push(f);else if(b(f)){var q=e(f,!0);q?f=q:h=[f]}else c(f)&&(h=[f]);while(f=f.nextSibling)}if(f=h)for(h=g.nextSibling,q=0;q<f.length;q++)h?d.insertBefore(f[q],h):d.appendChild(f[q])}while(g=g.nextSibling)}}}}})();a.b("virtualElements",a.e);a.b("virtualElements.allowedBindings",a.e.Q);a.b("virtualElements.emptyNode",a.e.da);a.b("virtualElements.insertAfter",a.e.rb);a.b("virtualElements.prepend",a.e.yb);a.b("virtualElements.setDomNodeChildren",a.e.U);(function(){a.J=function(){this.Nb=
{}};a.a.extend(a.J.prototype,{nodeHasBindings:function(b){switch(b.nodeType){case 1:return null!=b.getAttribute("data-bind");case 8:return a.e.Xb(b);default:return!1}},getBindings:function(a,c){var d=this.getBindingsString(a,c);return d?this.parseBindingsString(d,c,a):null},getBindingAccessors:function(a,c){var d=this.getBindingsString(a,c);return d?this.parseBindingsString(d,c,a,{valueAccessors:!0}):null},getBindingsString:function(b){switch(b.nodeType){case 1:return b.getAttribute("data-bind");
case 8:return a.e.lc(b);default:return null}},parseBindingsString:function(b,c,d,e){try{var f=this.Nb,h=b+(e&&e.valueAccessors||""),g;if(!(g=f[h])){var k,l="with($context){with($data||{}){return{"+a.g.qa(b,e)+"}}}";k=new Function("$context","$element",l);g=f[h]=k}return g(c,d)}catch(n){throw n.message="Unable to parse bindings.\nBindings value: "+b+"\nMessage: "+n.message,n;}}});a.J.instance=new a.J})();a.b("bindingProvider",a.J);(function(){function b(a){return function(){return a}}function c(a){return a()}
function d(b){return a.a.Oa(a.k.t(b),function(a,c){return function(){return b()[c]}})}function e(a,b){return d(this.getBindings.bind(this,a,b))}function f(b,c,d){var e,g=a.e.firstChild(c),k=a.J.instance,f=k.preprocessNode;if(f){for(;e=g;)g=a.e.nextSibling(e),f.call(k,e);g=a.e.firstChild(c)}for(;e=g;)g=a.e.nextSibling(e),h(b,e,d)}function h(b,c,d){var e=!0,g=1===c.nodeType;g&&a.e.wb(c);if(g&&d||a.J.instance.nodeHasBindings(c))e=k(c,null,b,d).shouldBindDescendants;e&&!n[a.a.B(c)]&&f(b,c,!g)}function g(b){var c=
[],d={},e=[];a.a.A(b,function y(g){if(!d[g]){var k=a.getBindingHandler(g);k&&(k.after&&(e.push(g),a.a.r(k.after,function(c){if(b[c]){if(-1!==a.a.l(e,c))throw Error("Cannot combine the following bindings, because they have a cyclic dependency: "+e.join(", "));y(c)}}),e.length--),c.push({key:g,pb:k}));d[g]=!0}});return c}function k(b,d,k,f){var h=a.a.f.get(b,r);if(!d){if(h)throw Error("You cannot apply bindings multiple times to the same element.");a.a.f.set(b,r,!0)}!h&&f&&a.Eb(b,k);var l;if(d&&"function"!==
typeof d)l=d;else{var n=a.J.instance,m=n.getBindingAccessors||e,x=a.h(function(){(l=d?d(k,b):m.call(n,b,k))&&k.D&&k.D();return l},null,{G:b});l&&x.ga()||(x=null)}var t;if(l){var w=x?function(a){return function(){return c(x()[a])}}:function(a){return l[a]},z=function(){return a.a.Oa(x?x():l,c)};z.get=function(a){return l[a]&&c(w(a))};z.has=function(a){return a in l};f=g(l);a.a.r(f,function(c){var d=c.pb.init,e=c.pb.update,g=c.key;if(8===b.nodeType&&!a.e.Q[g])throw Error("The binding '"+g+"' cannot be used with virtual elements");
try{"function"==typeof d&&a.k.t(function(){var a=d(b,w(g),z,k.$data,k);if(a&&a.controlsDescendantBindings){if(t!==p)throw Error("Multiple bindings ("+t+" and "+g+") are trying to control descendant bindings of the same element. You cannot use these bindings together on the same element.");t=g}}),"function"==typeof e&&a.h(function(){e(b,w(g),z,k.$data,k)},null,{G:b})}catch(f){throw f.message='Unable to process binding "'+g+": "+l[g]+'"\nMessage: '+f.message,f;}})}return{shouldBindDescendants:t===p}}
function l(b){return b&&b instanceof a.I?b:new a.I(b)}a.d={};var n={script:!0};a.getBindingHandler=function(b){return a.d[b]};a.I=function(b,c,d,e){var g=this,k="function"==typeof b&&!a.v(b),f,h=a.h(function(){var f=k?b():b,l=a.a.c(f);c?(c.D&&c.D(),a.a.extend(g,c),h&&(g.D=h)):(g.$parents=[],g.$root=l,g.ko=a);g.$rawData=f;g.$data=l;d&&(g[d]=l);e&&e(g,c,l);return g.$data},null,{Da:function(){return f&&!a.a.eb(f)},G:!0});h.ga()&&(g.D=h,h.equalityComparer=null,f=[],h.Jb=function(b){f.push(b);a.a.u.ja(b,
function(b){a.a.ma(f,b);f.length||(h.F(),g.D=h=p)})})};a.I.prototype.createChildContext=function(b,c,d){return new a.I(b,this,c,function(a,b){a.$parentContext=b;a.$parent=b.$data;a.$parents=(b.$parents||[]).slice(0);a.$parents.unshift(a.$parent);d&&d(a)})};a.I.prototype.extend=function(b){return new a.I(this.D||this.$data,this,null,function(c,d){c.$rawData=d.$rawData;a.a.extend(c,"function"==typeof b?b():b)})};var r=a.a.f.L(),m=a.a.f.L();a.Eb=function(b,c){if(2==arguments.length)a.a.f.set(b,m,c),
c.D&&c.D.Jb(b);else return a.a.f.get(b,m)};a.xa=function(b,c,d){1===b.nodeType&&a.e.wb(b);return k(b,c,l(d),!0)};a.Lb=function(c,e,g){g=l(g);return a.xa(c,"function"===typeof e?d(e.bind(null,g,c)):a.a.Oa(e,b),g)};a.gb=function(a,b){1!==b.nodeType&&8!==b.nodeType||f(l(a),b,!0)};a.fb=function(a,b){!t&&A.jQuery&&(t=A.jQuery);if(b&&1!==b.nodeType&&8!==b.nodeType)throw Error("ko.applyBindings: first parameter should be your view model; second parameter should be a DOM node");b=b||A.document.body;h(l(a),
b,!0)};a.Ca=function(b){switch(b.nodeType){case 1:case 8:var c=a.Eb(b);if(c)return c;if(b.parentNode)return a.Ca(b.parentNode)}return p};a.Pb=function(b){return(b=a.Ca(b))?b.$data:p};a.b("bindingHandlers",a.d);a.b("applyBindings",a.fb);a.b("applyBindingsToDescendants",a.gb);a.b("applyBindingAccessorsToNode",a.xa);a.b("applyBindingsToNode",a.Lb);a.b("contextFor",a.Ca);a.b("dataFor",a.Pb)})();var L={"class":"className","for":"htmlFor"};a.d.attr={update:function(b,c){var d=a.a.c(c())||{};a.a.A(d,function(c,
d){d=a.a.c(d);var h=!1===d||null===d||d===p;h&&b.removeAttribute(c);8>=a.a.oa&&c in L?(c=L[c],h?b.removeAttribute(c):b[c]=d):h||b.setAttribute(c,d.toString());"name"===c&&a.a.Cb(b,h?"":d.toString())})}};(function(){a.d.checked={after:["value","attr"],init:function(b,c,d){function e(){return d.has("checkedValue")?a.a.c(d.get("checkedValue")):b.value}function f(){var g=b.checked,f=r?e():g;if(!a.ca.pa()&&(!k||g)){var h=a.k.t(c);l?n!==f?(g&&(a.a.Y(h,f,!0),a.a.Y(h,n,!1)),n=f):a.a.Y(h,f,g):a.g.va(h,d,"checked",
f,!0)}}function h(){var d=a.a.c(c());b.checked=l?0<=a.a.l(d,e()):g?d:e()===d}var g="checkbox"==b.type,k="radio"==b.type;if(g||k){var l=g&&a.a.c(c())instanceof Array,n=l?e():p,r=k||l;k&&!b.name&&a.d.uniqueName.init(b,function(){return!0});a.ba(f,null,{G:b});a.a.q(b,"click",f);a.ba(h,null,{G:b})}}};a.g.W.checked=!0;a.d.checkedValue={update:function(b,c){b.value=a.a.c(c())}}})();a.d.css={update:function(b,c){var d=a.a.c(c());"object"==typeof d?a.a.A(d,function(c,d){d=a.a.c(d);a.a.ua(b,c,d)}):(d=String(d||
""),a.a.ua(b,b.__ko__cssValue,!1),b.__ko__cssValue=d,a.a.ua(b,d,!0))}};a.d.enable={update:function(b,c){var d=a.a.c(c());d&&b.disabled?b.removeAttribute("disabled"):d||b.disabled||(b.disabled=!0)}};a.d.disable={update:function(b,c){a.d.enable.update(b,function(){return!a.a.c(c())})}};a.d.event={init:function(b,c,d,e,f){var h=c()||{};a.a.A(h,function(g){"string"==typeof g&&a.a.q(b,g,function(b){var h,n=c()[g];if(n){try{var r=a.a.R(arguments);e=f.$data;r.unshift(e);h=n.apply(e,r)}finally{!0!==h&&(b.preventDefault?
b.preventDefault():b.returnValue=!1)}!1===d.get(g+"Bubble")&&(b.cancelBubble=!0,b.stopPropagation&&b.stopPropagation())}})})}};a.d.foreach={vb:function(b){return function(){var c=b(),d=a.a.Sa(c);if(!d||"number"==typeof d.length)return{foreach:c,templateEngine:a.K.Ja};a.a.c(c);return{foreach:d.data,as:d.as,includeDestroyed:d.includeDestroyed,afterAdd:d.afterAdd,beforeRemove:d.beforeRemove,afterRender:d.afterRender,beforeMove:d.beforeMove,afterMove:d.afterMove,templateEngine:a.K.Ja}}},init:function(b,
c){return a.d.template.init(b,a.d.foreach.vb(c))},update:function(b,c,d,e,f){return a.d.template.update(b,a.d.foreach.vb(c),d,e,f)}};a.g.aa.foreach=!1;a.e.Q.foreach=!0;a.d.hasfocus={init:function(b,c,d){function e(e){b.__ko_hasfocusUpdating=!0;var k=b.ownerDocument;if("activeElement"in k){var f;try{f=k.activeElement}catch(h){f=k.body}e=f===b}k=c();a.g.va(k,d,"hasfocus",e,!0);b.__ko_hasfocusLastValue=e;b.__ko_hasfocusUpdating=!1}var f=e.bind(null,!0),h=e.bind(null,!1);a.a.q(b,"focus",f);a.a.q(b,"focusin",
f);a.a.q(b,"blur",h);a.a.q(b,"focusout",h)},update:function(b,c){var d=!!a.a.c(c());b.__ko_hasfocusUpdating||b.__ko_hasfocusLastValue===d||(d?b.focus():b.blur(),a.k.t(a.a.ha,null,[b,d?"focusin":"focusout"]))}};a.g.W.hasfocus=!0;a.d.hasFocus=a.d.hasfocus;a.g.W.hasFocus=!0;a.d.html={init:function(){return{controlsDescendantBindings:!0}},update:function(b,c){a.a.Va(b,c())}};H("if");H("ifnot",!1,!0);H("with",!0,!1,function(a,c){return a.createChildContext(c)});var J={};a.d.options={init:function(b){if("select"!==
a.a.B(b))throw Error("options binding applies only to SELECT elements");for(;0<b.length;)b.remove(0);return{controlsDescendantBindings:!0}},update:function(b,c,d){function e(){return a.a.la(b.options,function(a){return a.selected})}function f(a,b,c){var d=typeof b;return"function"==d?b(a):"string"==d?a[b]:c}function h(c,d){if(r.length){var e=0<=a.a.l(r,a.i.p(d[0]));a.a.Db(d[0],e);m&&!e&&a.k.t(a.a.ha,null,[b,"change"])}}var g=0!=b.length&&b.multiple?b.scrollTop:null,k=a.a.c(c()),l=d.get("optionsIncludeDestroyed");
c={};var n,r;r=b.multiple?a.a.ya(e(),a.i.p):0<=b.selectedIndex?[a.i.p(b.options[b.selectedIndex])]:[];k&&("undefined"==typeof k.length&&(k=[k]),n=a.a.la(k,function(b){return l||b===p||null===b||!a.a.c(b._destroy)}),d.has("optionsCaption")&&(k=a.a.c(d.get("optionsCaption")),null!==k&&k!==p&&n.unshift(J)));var m=!1;c.beforeRemove=function(a){b.removeChild(a)};k=h;d.has("optionsAfterRender")&&(k=function(b,c){h(0,c);a.k.t(d.get("optionsAfterRender"),null,[c[0],b!==J?b:p])});a.a.Ua(b,n,function(c,e,g){g.length&&
(r=g[0].selected?[a.i.p(g[0])]:[],m=!0);e=b.ownerDocument.createElement("option");c===J?(a.a.Xa(e,d.get("optionsCaption")),a.i.X(e,p)):(g=f(c,d.get("optionsValue"),c),a.i.X(e,a.a.c(g)),c=f(c,d.get("optionsText"),g),a.a.Xa(e,c));return[e]},c,k);a.k.t(function(){d.get("valueAllowUnset")&&d.has("value")?a.i.X(b,a.a.c(d.get("value")),!0):(b.multiple?r.length&&e().length<r.length:r.length&&0<=b.selectedIndex?a.i.p(b.options[b.selectedIndex])!==r[0]:r.length||0<=b.selectedIndex)&&a.a.ha(b,"change")});a.a.Tb(b);
g&&20<Math.abs(g-b.scrollTop)&&(b.scrollTop=g)}};a.d.options.Pa=a.a.f.L();a.d.selectedOptions={after:["options","foreach"],init:function(b,c,d){a.a.q(b,"change",function(){var e=c(),f=[];a.a.r(b.getElementsByTagName("option"),function(b){b.selected&&f.push(a.i.p(b))});a.g.va(e,d,"selectedOptions",f)})},update:function(b,c){if("select"!=a.a.B(b))throw Error("values binding applies only to SELECT elements");var d=a.a.c(c());d&&"number"==typeof d.length&&a.a.r(b.getElementsByTagName("option"),function(b){var c=
0<=a.a.l(d,a.i.p(b));a.a.Db(b,c)})}};a.g.W.selectedOptions=!0;a.d.style={update:function(b,c){var d=a.a.c(c()||{});a.a.A(d,function(c,d){d=a.a.c(d);b.style[c]=d||""})}};a.d.submit={init:function(b,c,d,e,f){if("function"!=typeof c())throw Error("The value for a submit binding must be a function");a.a.q(b,"submit",function(a){var d,e=c();try{d=e.call(f.$data,b)}finally{!0!==d&&(a.preventDefault?a.preventDefault():a.returnValue=!1)}})}};a.d.text={init:function(){return{controlsDescendantBindings:!0}},
update:function(b,c){a.a.Xa(b,c())}};a.e.Q.text=!0;a.d.uniqueName={init:function(b,c){if(c()){var d="ko_unique_"+ ++a.d.uniqueName.Ob;a.a.Cb(b,d)}}};a.d.uniqueName.Ob=0;a.d.value={after:["options","foreach"],init:function(b,c,d){function e(){g=!1;var e=c(),f=a.i.p(b);a.g.va(e,d,"value",f)}var f=["change"],h=d.get("valueUpdate"),g=!1;h&&("string"==typeof h&&(h=[h]),a.a.$(f,h),f=a.a.ib(f));!a.a.oa||"input"!=b.tagName.toLowerCase()||"text"!=b.type||"off"==b.autocomplete||b.form&&"off"==b.form.autocomplete||
-1!=a.a.l(f,"propertychange")||(a.a.q(b,"propertychange",function(){g=!0}),a.a.q(b,"focus",function(){g=!1}),a.a.q(b,"blur",function(){g&&e()}));a.a.r(f,function(c){var d=e;a.a.kc(c,"after")&&(d=function(){setTimeout(e,0)},c=c.substring(5));a.a.q(b,c,d)})},update:function(b,c,d){var e=a.a.c(c());c=a.i.p(b);if(e!==c)if("select"===a.a.B(b)){var f=d.get("valueAllowUnset");d=function(){a.i.X(b,e,f)};d();f||e===a.i.p(b)?setTimeout(d,0):a.k.t(a.a.ha,null,[b,"change"])}else a.i.X(b,e)}};a.g.W.value=!0;a.d.visible=
{update:function(b,c){var d=a.a.c(c()),e="none"!=b.style.display;d&&!e?b.style.display="":!d&&e&&(b.style.display="none")}};(function(b){a.d[b]={init:function(c,d,e,f,h){return a.d.event.init.call(this,c,function(){var a={};a[b]=d();return a},e,f,h)}}})("click");a.C=function(){};a.C.prototype.renderTemplateSource=function(){throw Error("Override renderTemplateSource");};a.C.prototype.createJavaScriptEvaluatorBlock=function(){throw Error("Override createJavaScriptEvaluatorBlock");};a.C.prototype.makeTemplateSource=
function(b,c){if("string"==typeof b){c=c||w;var d=c.getElementById(b);if(!d)throw Error("Cannot find template with ID "+b);return new a.n.j(d)}if(1==b.nodeType||8==b.nodeType)return new a.n.Z(b);throw Error("Unknown template type: "+b);};a.C.prototype.renderTemplate=function(a,c,d,e){a=this.makeTemplateSource(a,e);return this.renderTemplateSource(a,c,d)};a.C.prototype.isTemplateRewritten=function(a,c){return!1===this.allowTemplateRewriting?!0:this.makeTemplateSource(a,c).data("isRewritten")};a.C.prototype.rewriteTemplate=
function(a,c,d){a=this.makeTemplateSource(a,d);c=c(a.text());a.text(c);a.data("isRewritten",!0)};a.b("templateEngine",a.C);a.Za=function(){function b(b,c,d,g){b=a.g.Ra(b);for(var k=a.g.aa,l=0;l<b.length;l++){var n=b[l].key;if(k.hasOwnProperty(n)){var r=k[n];if("function"===typeof r){if(n=r(b[l].value))throw Error(n);}else if(!r)throw Error("This template engine does not support the '"+n+"' binding within its templates");}}d="ko.__tr_ambtns(function($context,$element){return(function(){return{ "+a.g.qa(b,
{valueAccessors:!0})+" } })()},'"+d.toLowerCase()+"')";return g.createJavaScriptEvaluatorBlock(d)+c}var c=/(<([a-z]+\d*)(?:\s+(?!data-bind\s*=\s*)[a-z0-9\-]+(?:=(?:\"[^\"]*\"|\'[^\']*\'))?)*\s+)data-bind\s*=\s*(["'])([\s\S]*?)\3/gi,d=/\x3c!--\s*ko\b\s*([\s\S]*?)\s*--\x3e/g;return{Ub:function(b,c,d){c.isTemplateRewritten(b,d)||c.rewriteTemplate(b,function(b){return a.Za.dc(b,c)},d)},dc:function(a,f){return a.replace(c,function(a,c,d,e,n){return b(n,c,d,f)}).replace(d,function(a,c){return b(c,"\x3c!-- ko --\x3e",
"#comment",f)})},Mb:function(b,c){return a.w.Na(function(d,g){var k=d.nextSibling;k&&k.nodeName.toLowerCase()===c&&a.xa(k,b,g)})}}}();a.b("__tr_ambtns",a.Za.Mb);(function(){a.n={};a.n.j=function(a){this.j=a};a.n.j.prototype.text=function(){var b=a.a.B(this.j),b="script"===b?"text":"textarea"===b?"value":"innerHTML";if(0==arguments.length)return this.j[b];var c=arguments[0];"innerHTML"===b?a.a.Va(this.j,c):this.j[b]=c};var b=a.a.f.L()+"_";a.n.j.prototype.data=function(c){if(1===arguments.length)return a.a.f.get(this.j,
b+c);a.a.f.set(this.j,b+c,arguments[1])};var c=a.a.f.L();a.n.Z=function(a){this.j=a};a.n.Z.prototype=new a.n.j;a.n.Z.prototype.text=function(){if(0==arguments.length){var b=a.a.f.get(this.j,c)||{};b.$a===p&&b.Ba&&(b.$a=b.Ba.innerHTML);return b.$a}a.a.f.set(this.j,c,{$a:arguments[0]})};a.n.j.prototype.nodes=function(){if(0==arguments.length)return(a.a.f.get(this.j,c)||{}).Ba;a.a.f.set(this.j,c,{Ba:arguments[0]})};a.b("templateSources",a.n);a.b("templateSources.domElement",a.n.j);a.b("templateSources.anonymousTemplate",
a.n.Z)})();(function(){function b(b,c,d){var e;for(c=a.e.nextSibling(c);b&&(e=b)!==c;)b=a.e.nextSibling(e),d(e,b)}function c(c,d){if(c.length){var e=c[0],f=c[c.length-1],h=e.parentNode,m=a.J.instance,q=m.preprocessNode;if(q){b(e,f,function(a,b){var c=a.previousSibling,d=q.call(m,a);d&&(a===e&&(e=d[0]||b),a===f&&(f=d[d.length-1]||c))});c.length=0;if(!e)return;e===f?c.push(e):(c.push(e,f),a.a.ea(c,h))}b(e,f,function(b){1!==b.nodeType&&8!==b.nodeType||a.fb(d,b)});b(e,f,function(b){1!==b.nodeType&&8!==
b.nodeType||a.w.Ib(b,[d])});a.a.ea(c,h)}}function d(a){return a.nodeType?a:0<a.length?a[0]:null}function e(b,e,h,n,r){r=r||{};var m=b&&d(b),m=m&&m.ownerDocument,q=r.templateEngine||f;a.Za.Ub(h,q,m);h=q.renderTemplate(h,n,r,m);if("number"!=typeof h.length||0<h.length&&"number"!=typeof h[0].nodeType)throw Error("Template engine must return an array of DOM nodes");m=!1;switch(e){case "replaceChildren":a.e.U(b,h);m=!0;break;case "replaceNode":a.a.Bb(b,h);m=!0;break;case "ignoreTargetNode":break;default:throw Error("Unknown renderMode: "+
e);}m&&(c(h,n),r.afterRender&&a.k.t(r.afterRender,null,[h,n.$data]));return h}var f;a.Wa=function(b){if(b!=p&&!(b instanceof a.C))throw Error("templateEngine must inherit from ko.templateEngine");f=b};a.Ta=function(b,c,h,n,r){h=h||{};if((h.templateEngine||f)==p)throw Error("Set a template engine before calling renderTemplate");r=r||"replaceChildren";if(n){var m=d(n);return a.h(function(){var f=c&&c instanceof a.I?c:new a.I(a.a.c(c)),p=a.v(b)?b():"function"==typeof b?b(f.$data,f):b,f=e(n,r,p,f,h);
"replaceNode"==r&&(n=f,m=d(n))},null,{Da:function(){return!m||!a.a.Ea(m)},G:m&&"replaceNode"==r?m.parentNode:m})}return a.w.Na(function(d){a.Ta(b,c,h,d,"replaceNode")})};a.jc=function(b,d,f,h,r){function m(a,b){c(b,s);f.afterRender&&f.afterRender(b,a)}function q(a,c){s=r.createChildContext(a,f.as,function(a){a.$index=c});var d="function"==typeof b?b(a,s):b;return e(null,"ignoreTargetNode",d,s,f)}var s;return a.h(function(){var b=a.a.c(d)||[];"undefined"==typeof b.length&&(b=[b]);b=a.a.la(b,function(b){return f.includeDestroyed||
b===p||null===b||!a.a.c(b._destroy)});a.k.t(a.a.Ua,null,[h,b,q,f,m])},null,{G:h})};var h=a.a.f.L();a.d.template={init:function(b,c){var d=a.a.c(c());"string"==typeof d||d.name?a.e.da(b):(d=a.e.childNodes(b),d=a.a.ec(d),(new a.n.Z(b)).nodes(d));return{controlsDescendantBindings:!0}},update:function(b,c,d,e,f){var m=c(),q;c=a.a.c(m);d=!0;e=null;"string"==typeof c?c={}:(m=c.name,"if"in c&&(d=a.a.c(c["if"])),d&&"ifnot"in c&&(d=!a.a.c(c.ifnot)),q=a.a.c(c.data));"foreach"in c?e=a.jc(m||b,d&&c.foreach||
[],c,b,f):d?(f="data"in c?f.createChildContext(q,c.as):f,e=a.Ta(m||b,f,c,b)):a.e.da(b);f=e;(q=a.a.f.get(b,h))&&"function"==typeof q.F&&q.F();a.a.f.set(b,h,f&&f.ga()?f:p)}};a.g.aa.template=function(b){b=a.g.Ra(b);return 1==b.length&&b[0].unknown||a.g.bc(b,"name")?null:"This template engine does not support anonymous templates nested within its templates"};a.e.Q.template=!0})();a.b("setTemplateEngine",a.Wa);a.b("renderTemplate",a.Ta);a.a.nb=function(a,c,d){if(a.length&&c.length){var e,f,h,g,k;for(e=
f=0;(!d||e<d)&&(g=a[f]);++f){for(h=0;k=c[h];++h)if(g.value===k.value){g.moved=k.index;k.moved=g.index;c.splice(h,1);e=h=0;break}e+=h}}};a.a.Aa=function(){function b(b,d,e,f,h){var g=Math.min,k=Math.max,l=[],n,p=b.length,m,q=d.length,s=q-p||1,t=p+q+1,u,w,y;for(n=0;n<=p;n++)for(w=u,l.push(u=[]),y=g(q,n+s),m=k(0,n-1);m<=y;m++)u[m]=m?n?b[n-1]===d[m-1]?w[m-1]:g(w[m]||t,u[m-1]||t)+1:m+1:n+1;g=[];k=[];s=[];n=p;for(m=q;n||m;)q=l[n][m]-1,m&&q===l[n][m-1]?k.push(g[g.length]={status:e,value:d[--m],index:m}):
n&&q===l[n-1][m]?s.push(g[g.length]={status:f,value:b[--n],index:n}):(--m,--n,h.sparse||g.push({status:"retained",value:d[m]}));a.a.nb(k,s,10*p);return g.reverse()}return function(a,d,e){e="boolean"===typeof e?{dontLimitMoves:e}:e||{};a=a||[];d=d||[];return a.length<=d.length?b(a,d,"added","deleted",e):b(d,a,"deleted","added",e)}}();a.b("utils.compareArrays",a.a.Aa);(function(){function b(b,c,f,h,g){var k=[],l=a.h(function(){var l=c(f,g,a.a.ea(k,b))||[];0<k.length&&(a.a.Bb(k,l),h&&a.k.t(h,null,[f,
l,g]));k.length=0;a.a.$(k,l)},null,{G:b,Da:function(){return!a.a.eb(k)}});return{S:k,h:l.ga()?l:p}}var c=a.a.f.L();a.a.Ua=function(d,e,f,h,g){function k(b,c){v=r[c];u!==c&&(z[b]=v);v.Ia(u++);a.a.ea(v.S,d);s.push(v);y.push(v)}function l(b,c){if(b)for(var d=0,e=c.length;d<e;d++)c[d]&&a.a.r(c[d].S,function(a){b(a,d,c[d].ka)})}e=e||[];h=h||{};var n=a.a.f.get(d,c)===p,r=a.a.f.get(d,c)||[],m=a.a.ya(r,function(a){return a.ka}),q=a.a.Aa(m,e,h.dontLimitMoves),s=[],t=0,u=0,w=[],y=[];e=[];for(var z=[],m=[],
v,x=0,A,C;A=q[x];x++)switch(C=A.moved,A.status){case "deleted":C===p&&(v=r[t],v.h&&v.h.F(),w.push.apply(w,a.a.ea(v.S,d)),h.beforeRemove&&(e[x]=v,y.push(v)));t++;break;case "retained":k(x,t++);break;case "added":C!==p?k(x,C):(v={ka:A.value,Ia:a.m(u++)},s.push(v),y.push(v),n||(m[x]=v))}l(h.beforeMove,z);a.a.r(w,h.beforeRemove?a.M:a.removeNode);for(var x=0,n=a.e.firstChild(d),E;v=y[x];x++){v.S||a.a.extend(v,b(d,f,v.ka,g,v.Ia));for(t=0;q=v.S[t];n=q.nextSibling,E=q,t++)q!==n&&a.e.rb(d,q,E);!v.Zb&&g&&(g(v.ka,
v.S,v.Ia),v.Zb=!0)}l(h.beforeRemove,e);l(h.afterMove,z);l(h.afterAdd,m);a.a.f.set(d,c,s)}})();a.b("utils.setDomNodeChildrenFromArrayMapping",a.a.Ua);a.K=function(){this.allowTemplateRewriting=!1};a.K.prototype=new a.C;a.K.prototype.renderTemplateSource=function(b){var c=(9>a.a.oa?0:b.nodes)?b.nodes():null;if(c)return a.a.R(c.cloneNode(!0).childNodes);b=b.text();return a.a.Qa(b)};a.K.Ja=new a.K;a.Wa(a.K.Ja);a.b("nativeTemplateEngine",a.K);(function(){a.La=function(){var a=this.ac=function(){if(!t||
!t.tmpl)return 0;try{if(0<=t.tmpl.tag.tmpl.open.toString().indexOf("__"))return 2}catch(a){}return 1}();this.renderTemplateSource=function(b,e,f){f=f||{};if(2>a)throw Error("Your version of jQuery.tmpl is too old. Please upgrade to jQuery.tmpl 1.0.0pre or later.");var h=b.data("precompiled");h||(h=b.text()||"",h=t.template(null,"{{ko_with $item.koBindingContext}}"+h+"{{/ko_with}}"),b.data("precompiled",h));b=[e.$data];e=t.extend({koBindingContext:e},f.templateOptions);e=t.tmpl(h,b,e);e.appendTo(w.createElement("div"));
t.fragments={};return e};this.createJavaScriptEvaluatorBlock=function(a){return"{{ko_code ((function() { return "+a+" })()) }}"};this.addTemplate=function(a,b){w.write("<script type='text/html' id='"+a+"'>"+b+"\x3c/script>")};0<a&&(t.tmpl.tag.ko_code={open:"__.push($1 || '');"},t.tmpl.tag.ko_with={open:"with($1) {",close:"} "})};a.La.prototype=new a.C;var b=new a.La;0<b.ac&&a.Wa(b);a.b("jqueryTmplTemplateEngine",a.La)})()})})();})();


// Knockout Mapping plugin v2.1.2
// (c) 2012 Steven Sanderson, Roy Jacobs - http://knockoutjs.com/
// License: MIT (http://www.opensource.org/licenses/mit-license.php)

(function (factory) {
        // Module systems magic dance.

        if (typeof require === "function" && typeof exports === "object" && typeof module === "object") {
                // CommonJS or Node: hard-coded dependency on "knockout"
                factory(require("knockout"), exports);
        } else if (typeof define === "function" && define["amd"]) {
                // AMD anonymous module with hard-coded dependency on "knockout"
                define(["knockout", "exports"], factory);
        } else {
                // <script> tag: use the global `ko` object, attaching a `mapping` property
                factory(ko, ko.mapping = {});
        }
}(function (ko, exports) {
        var DEBUG=true;
        var mappingProperty = "__ko_mapping__";
        var realKoDependentObservable = ko.dependentObservable;
        var mappingNesting = 0;
        var dependentObservables;
        var visitedObjects;

        var _defaultOptions = {
                include: ["_destroy"],
                ignore: [],
                copy: []
        };
        var defaultOptions = _defaultOptions;

        exports.isMapped = function (viewModel) {
                var unwrapped = ko.utils.unwrapObservable(viewModel);
                return unwrapped && unwrapped[mappingProperty];
        }

        exports.fromJS = function (jsObject /*, inputOptions, target*/ ) {
                if (arguments.length == 0) throw new Error("When calling ko.fromJS, pass the object you want to convert.");

                // When mapping is completed, even with an exception, reset the nesting level
                window.setTimeout(function () {
                        mappingNesting = 0;
                }, 0);

                if (!mappingNesting++) {
                        dependentObservables = [];
                        visitedObjects = new objectLookup();
                }

                var options;
                var target;

                if (arguments.length == 2) {
                        if (arguments[1][mappingProperty]) {
                                target = arguments[1];
                        } else {
                                options = arguments[1];
                        }
                }
                if (arguments.length == 3) {
                        options = arguments[1];
                        target = arguments[2];
                }

                if (target) {
                        options = mergeOptions(target[mappingProperty], options);
                } else {
                        options = mergeOptions(options);
                }
                options.mappedProperties = options.mappedProperties || {};

                var result = updateViewModel(target, jsObject, options);
                if (target) {
                        result = target;
                }

                // Evaluate any dependent observables that were proxied.
                // Do this in a timeout to defer execution. Basically, any user code that explicitly looks up the DO will perform the first evaluation. Otherwise,
                // it will be done by this code.
                if (!--mappingNesting) {
                        window.setTimeout(function () {
                                while (dependentObservables.length) {
                                        var DO = dependentObservables.pop();
                                        if (DO) DO();
                                }
                        }, 0);
                }

                // Save any new mapping options in the view model, so that updateFromJS can use them later.
                result[mappingProperty] = mergeOptions(result[mappingProperty], options);

                return result;
        };

        exports.fromJSON = function (jsonString /*, options, target*/ ) {
                var parsed = ko.utils.parseJson(jsonString);
                arguments[0] = parsed;
                return exports.fromJS.apply(this, arguments);
        };

        exports.updateFromJS = function (viewModel) {
                throw new Error("ko.mapping.updateFromJS, use ko.mapping.fromJS instead. Please note that the order of parameters is different!");
        };

        exports.updateFromJSON = function (viewModel) {
                throw new Error("ko.mapping.updateFromJSON, use ko.mapping.fromJSON instead. Please note that the order of parameters is different!");
        };

        exports.toJS = function (rootObject, options) {
                if (arguments.length == 0) throw new Error("When calling ko.mapping.toJS, pass the object you want to convert.");
                // Merge in the options used in fromJS
                options = mergeOptions(rootObject[mappingProperty], options);

                // We just unwrap everything at every level in the object graph
                return visitModel(rootObject, function (x) {
                        return ko.utils.unwrapObservable(x)
                }, options);
        };

        exports.toJSON = function (rootObject, options) {
                var plainJavaScriptObject = exports.toJS(rootObject, options);
                return ko.utils.stringifyJson(plainJavaScriptObject);
        };

        exports.visitModel = function (rootObject, callback, options) {
                if (arguments.length == 0) throw new Error("When calling ko.mapping.visitModel, pass the object you want to visit.");
                // Merge in the options used in fromJS
                options = mergeOptions(rootObject[mappingProperty], options);

                return visitModel(rootObject, callback, options);
        };

        exports.defaultOptions = function () {
                if (arguments.length > 0) {
                        defaultOptions = arguments[0];
                } else {
                        return defaultOptions;
                }
        };

        exports.resetDefaultOptions = function () {
                defaultOptions = {
                        include: _defaultOptions.include.slice(0),
                        ignore: _defaultOptions.ignore.slice(0),
                        copy: _defaultOptions.copy.slice(0)
                };
        };

        exports.getType = function(x) {
                if ((x) && (typeof (x) === "object")) {
                        if (x.constructor == (new Date).constructor) return "date";
                        if (x.constructor == (new Array).constructor) return "array";
                }
                return typeof x;
        }

        function extendOptionsArray(distArray, sourceArray) {
                return ko.utils.arrayGetDistinctValues(
                        ko.utils.arrayPushAll(distArray, sourceArray)
                );
        }

        function extendOptionsObject(target, options) {
                var type = exports.getType,
                        name, special = { "include": true, "ignore": true, "copy": true },
                        t, o, i = 1, l = arguments.length;
                if (type(target) !== "object") {
                        target = {};
                }
                for (; i < l; i++) {
                        options = arguments[i];
                        if (type(options) !== "object") {
                                options = {};
                        }
                        for (name in options) {
                                t = target[name]; o = options[name];
                                if (name !== "constructor" && special[name] && type(o) !== "array") {
                                        if (type(o) !== "string") {
                                                throw new Error("ko.mapping.defaultOptions()." + name + " should be an array or string.");
                                        }
                                        o = [o];
                                }
                                switch (type(o)) {
                                case "object": // Recurse
                                        t = type(t) === "object" ? t : {};
                                        target[name] = extendOptionsObject(t, o);
                                        break;
                                case "array":
                                        t = type(t) === "array" ? t : [];
                                        target[name] = extendOptionsArray(t, o);
                                        break;
                                default:
                                        target[name] = o;
                                }
                        }
                }
                return target;
        }

        function mergeOptions() {
                var options = ko.utils.arrayPushAll([{}, defaultOptions], arguments); // Always use empty object as target to avoid changing default options
                options = extendOptionsObject.apply(this, options);
                return options;
        }

        // When using a 'create' callback, we proxy the dependent observable so that it doesn't immediately evaluate on creation.
        // The reason is that the dependent observables in the user-specified callback may contain references to properties that have not been mapped yet.
        function withProxyDependentObservable(dependentObservables, callback) {
                var localDO = ko.dependentObservable;
                ko.dependentObservable = function (read, owner, options) {
                        options = options || {};

                        if (read && typeof read == "object") { // mirrors condition in knockout implementation of DO's
                                options = read;
                        }

                        var realDeferEvaluation = options.deferEvaluation;

                        var isRemoved = false;

                        // We wrap the original dependent observable so that we can remove it from the 'dependentObservables' list we need to evaluate after mapping has
                        // completed if the user already evaluated the DO themselves in the meantime.
                        var wrap = function (DO) {
                                var wrapped = realKoDependentObservable({
                                        read: function () {
                                                if (!isRemoved) {
                                                        ko.utils.arrayRemoveItem(dependentObservables, DO);
                                                        isRemoved = true;
                                                }
                                                return DO.apply(DO, arguments);
                                        },
                                        write: function (val) {
                                                return DO(val);
                                        },
                                        deferEvaluation: true
                                });
                                if(DEBUG) wrapped._wrapper = true;
                                return wrapped;
                        };
                       
                        options.deferEvaluation = true; // will either set for just options, or both read/options.
                        var realDependentObservable = new realKoDependentObservable(read, owner, options);

                        if (!realDeferEvaluation) {
                                realDependentObservable = wrap(realDependentObservable);
                                dependentObservables.push(realDependentObservable);
                        }

                        return realDependentObservable;
                }
                ko.dependentObservable.fn = realKoDependentObservable.fn;
                ko.computed = ko.dependentObservable;
                var result = callback();
                ko.dependentObservable = localDO;
                ko.computed = ko.dependentObservable;
                return result;
        }

        function updateViewModel(mappedRootObject, rootObject, options, parentName, parent, parentPropertyName) {
                var isArray = ko.utils.unwrapObservable(rootObject) instanceof Array;

                // If nested object was already mapped previously, take the options from it
                if (parentName !== undefined && exports.isMapped(mappedRootObject)) {
                        options = ko.utils.unwrapObservable(mappedRootObject)[mappingProperty];
                        parentName = "";
                        parentPropertyName = "";
                }

                parentName = parentName || "";
                parentPropertyName = parentPropertyName || "";

                var callbackParams = {
                        data: rootObject,
                        parent: parent
                };

                var getCallback = function (name) {
                        var callback;
                        if (parentName === "") {
                                callback = options[name];
                        } else if (callback = options[parentName]) {
                                callback = callback[name]
                        }
                        return callback;
                };

                var hasCreateCallback = function () {
                        return getCallback("create") instanceof Function;
                };

                var createCallback = function (data) {
                        return withProxyDependentObservable(dependentObservables, function () {
                                return getCallback("create")({
                                        data: data || callbackParams.data,
                                        parent: callbackParams.parent
                                });
                        });
                };

                var hasUpdateCallback = function () {
                        return getCallback("update") instanceof Function;
                };

                var updateCallback = function (obj, data) {
                        var params = {
                                data: data || callbackParams.data,
                                parent: callbackParams.parent,
                                target: ko.utils.unwrapObservable(obj)
                        };

                        if (ko.isWriteableObservable(obj)) {
                                params.observable = obj;
                        }

                        return getCallback("update")(params);
                }

                var alreadyMapped = visitedObjects.get(rootObject);
                if (alreadyMapped) {
                        return alreadyMapped;
                }

                if (!isArray) {
                        // For atomic types, do a direct update on the observable
                        if (!canHaveProperties(rootObject)) {
                                switch (exports.getType(rootObject)) {
                                case "function":
                                        if (hasUpdateCallback()) {
                                                if (ko.isWriteableObservable(rootObject)) {
                                                        rootObject(updateCallback(rootObject));
                                                        mappedRootObject = rootObject;
                                                } else {
                                                        mappedRootObject = updateCallback(rootObject);
                                                }
                                        } else {
                                                mappedRootObject = rootObject;
                                        }
                                        break;
                                default:
                                        if (ko.isWriteableObservable(mappedRootObject)) {
                                                if (hasUpdateCallback()) {
                                                        mappedRootObject(updateCallback(mappedRootObject));
                                                } else {
                                                        mappedRootObject(ko.utils.unwrapObservable(rootObject));
                                                }
                                        } else {
                                                if (hasCreateCallback()) {
                                                        mappedRootObject = createCallback();
                                                } else {
                                                        mappedRootObject = ko.observable(ko.utils.unwrapObservable(rootObject));
                                                }

                                                if (hasUpdateCallback()) {
                                                        mappedRootObject(updateCallback(mappedRootObject));
                                                }
                                        }
                                        break;
                                }

                        } else {
                                mappedRootObject = ko.utils.unwrapObservable(mappedRootObject);
                                if (!mappedRootObject) {
                                        if (hasCreateCallback()) {
                                                var result = createCallback();

                                                if (hasUpdateCallback()) {
                                                        result = updateCallback(result);
                                                }

                                                return result;
                                        } else {
                                                if (hasUpdateCallback()) {
                                                        return updateCallback(result);
                                                }

                                                mappedRootObject = {};
                                        }
                                }

                                if (hasUpdateCallback()) {
                                        mappedRootObject = updateCallback(mappedRootObject);
                                }

                                visitedObjects.save(rootObject, mappedRootObject);

                                // For non-atomic types, visit all properties and update recursively
                                visitPropertiesOrArrayEntries(rootObject, function (indexer) {
                                        var fullPropertyName = getPropertyName(parentPropertyName, rootObject, indexer);

                                        if (ko.utils.arrayIndexOf(options.ignore, fullPropertyName) != -1) {
                                                return;
                                        }

                                        if (ko.utils.arrayIndexOf(options.copy, fullPropertyName) != -1) {
                                                mappedRootObject[indexer] = rootObject[indexer];
                                                return;
                                        }

                                        // In case we are adding an already mapped property, fill it with the previously mapped property value to prevent recursion.
                                        // If this is a property that was generated by fromJS, we should use the options specified there
                                        var prevMappedProperty = visitedObjects.get(rootObject[indexer]);
                                        var value = prevMappedProperty || updateViewModel(mappedRootObject[indexer], rootObject[indexer], options, indexer, mappedRootObject, fullPropertyName);

                                        if (ko.isWriteableObservable(mappedRootObject[indexer])) {
                                                mappedRootObject[indexer](ko.utils.unwrapObservable(value));
                                        } else {
                                                mappedRootObject[indexer] = value;
                                        }

                                        options.mappedProperties[fullPropertyName] = true;
                                });
                        }
                } else {
                        var changes = [];

                        var hasKeyCallback = getCallback("key") instanceof Function;
                        var keyCallback = hasKeyCallback ? getCallback("key") : function (x) {
                                return x;
                        };
                        if (!ko.isObservable(mappedRootObject)) {
                                // When creating the new observable array, also add a bunch of utility functions that take the 'key' of the array items into account.
                                mappedRootObject = ko.observableArray([]);

                                mappedRootObject.mappedRemove = function (valueOrPredicate) {
                                        var predicate = typeof valueOrPredicate == "function" ? valueOrPredicate : function (value) {
                                                        return value === keyCallback(valueOrPredicate);
                                                };
                                        return mappedRootObject.remove(function (item) {
                                                return predicate(keyCallback(item));
                                        });
                                }

                                mappedRootObject.mappedRemoveAll = function (arrayOfValues) {
                                        var arrayOfKeys = filterArrayByKey(arrayOfValues, keyCallback);
                                        return mappedRootObject.remove(function (item) {
                                                return ko.utils.arrayIndexOf(arrayOfKeys, keyCallback(item)) != -1;
                                        });
                                }

                                mappedRootObject.mappedDestroy = function (valueOrPredicate) {
                                        var predicate = typeof valueOrPredicate == "function" ? valueOrPredicate : function (value) {
                                                        return value === keyCallback(valueOrPredicate);
                                                };
                                        return mappedRootObject.destroy(function (item) {
                                                return predicate(keyCallback(item));
                                        });
                                }

                                mappedRootObject.mappedDestroyAll = function (arrayOfValues) {
                                        var arrayOfKeys = filterArrayByKey(arrayOfValues, keyCallback);
                                        return mappedRootObject.destroy(function (item) {
                                                return ko.utils.arrayIndexOf(arrayOfKeys, keyCallback(item)) != -1;
                                        });
                                }

                                mappedRootObject.mappedIndexOf = function (item) {
                                        var keys = filterArrayByKey(mappedRootObject(), keyCallback);
                                        var key = keyCallback(item);
                                        return ko.utils.arrayIndexOf(keys, key);
                                }

                                mappedRootObject.mappedCreate = function (value) {
                                        if (mappedRootObject.mappedIndexOf(value) !== -1) {
                                                throw new Error("There already is an object with the key that you specified.");
                                        }

                                        var item = hasCreateCallback() ? createCallback(value) : value;
                                        if (hasUpdateCallback()) {
                                                var newValue = updateCallback(item, value);
                                                if (ko.isWriteableObservable(item)) {
                                                        item(newValue);
                                                } else {
                                                        item = newValue;
                                                }
                                        }
                                        mappedRootObject.push(item);
                                        return item;
                                }
                        }

                        var currentArrayKeys = filterArrayByKey(ko.utils.unwrapObservable(mappedRootObject), keyCallback).sort();
                        var newArrayKeys = filterArrayByKey(rootObject, keyCallback);
                        if (hasKeyCallback) newArrayKeys.sort();
                        var editScript = ko.utils.compareArrays(currentArrayKeys, newArrayKeys);

                        var ignoreIndexOf = {};

                        var newContents = [];
                        for (var i = 0, j = editScript.length; i < j; i++) {
                                var key = editScript[i];
                                var mappedItem;
                                var fullPropertyName = getPropertyName(parentPropertyName, rootObject, i);
                                switch (key.status) {
                                case "added":
                                        var item = getItemByKey(ko.utils.unwrapObservable(rootObject), key.value, keyCallback);
                                        mappedItem = updateViewModel(undefined, item, options, parentName, mappedRootObject, fullPropertyName);
                                        if(!hasCreateCallback()) {
                                                mappedItem = ko.utils.unwrapObservable(mappedItem);
                                        }

                                        var index = ignorableIndexOf(ko.utils.unwrapObservable(rootObject), item, ignoreIndexOf);
                                        newContents[index] = mappedItem;
                                        ignoreIndexOf[index] = true;
                                        break;
                                case "retained":
                                        var item = getItemByKey(ko.utils.unwrapObservable(rootObject), key.value, keyCallback);
                                        mappedItem = getItemByKey(mappedRootObject, key.value, keyCallback);
                                        updateViewModel(mappedItem, item, options, parentName, mappedRootObject, fullPropertyName);

                                        var index = ignorableIndexOf(ko.utils.unwrapObservable(rootObject), item, ignoreIndexOf);
                                        newContents[index] = mappedItem;
                                        ignoreIndexOf[index] = true;
                                        break;
                                case "deleted":
                                        mappedItem = getItemByKey(mappedRootObject, key.value, keyCallback);
                                        break;
                                }

                                changes.push({
                                        event: key.status,
                                        item: mappedItem
                                });
                        }

                        mappedRootObject(newContents);

                        var arrayChangedCallback = getCallback("arrayChanged");
                        if (arrayChangedCallback instanceof Function) {
                                ko.utils.arrayForEach(changes, function (change) {
                                        arrayChangedCallback(change.event, change.item);
                                });
                        }
                }

                return mappedRootObject;
        }

        function ignorableIndexOf(array, item, ignoreIndices) {
                for (var i = 0, j = array.length; i < j; i++) {
                        if (ignoreIndices[i] === true) continue;
                        if (array[i] === item) return i;
                }
                return null;
        }

        function mapKey(item, callback) {
                var mappedItem;
                if (callback) mappedItem = callback(item);
                if (exports.getType(mappedItem) === "undefined") mappedItem = item;

                return ko.utils.unwrapObservable(mappedItem);
        }

        function getItemByKey(array, key, callback) {
                var filtered = ko.utils.arrayFilter(ko.utils.unwrapObservable(array), function (item) {
                        return mapKey(item, callback) === key;
                });

                if (filtered.length == 0) throw new Error("When calling ko.update*, the key '" + key + "' was not found!");
                if ((filtered.length > 1) && (canHaveProperties(filtered[0]))) throw new Error("When calling ko.update*, the key '" + key + "' was not unique!");

                return filtered[0];
        }

        function filterArrayByKey(array, callback) {
                return ko.utils.arrayMap(ko.utils.unwrapObservable(array), function (item) {
                        if (callback) {
                                return mapKey(item, callback);
                        } else {
                                return item;
                        }
                });
        }

        function visitPropertiesOrArrayEntries(rootObject, visitorCallback) {
                if (rootObject instanceof Array) {
                        for (var i = 0; i < rootObject.length; i++)
                        visitorCallback(i);
                } else {
                        for (var propertyName in rootObject)
                        visitorCallback(propertyName);
                }
        };

        function canHaveProperties(object) {
                var type = exports.getType(object);
                return (type === "object" || type === "array") && (object !== null) && (type !== "undefined");
        }

        // Based on the parentName, this creates a fully classified name of a property

        function getPropertyName(parentName, parent, indexer) {
                var propertyName = parentName || "";
                if (parent instanceof Array) {
                        if (parentName) {
                                propertyName += "[" + indexer + "]";
                        }
                } else {
                        if (parentName) {
                                propertyName += ".";
                        }
                        propertyName += indexer;
                }
                return propertyName;
        }

        function visitModel(rootObject, callback, options, parentName, fullParentName) {
                // If nested object was already mapped previously, take the options from it
                if (parentName !== undefined && exports.isMapped(rootObject)) {
                        //options = ko.utils.unwrapObservable(rootObject)[mappingProperty];
                        options = mergeOptions(ko.utils.unwrapObservable(rootObject)[mappingProperty], options);
                        parentName = "";
                }

                if (parentName === undefined) { // the first call
                        visitedObjects = new objectLookup();
                }

                parentName = parentName || "";

                var mappedRootObject;
                var unwrappedRootObject = ko.utils.unwrapObservable(rootObject);
                if (!canHaveProperties(unwrappedRootObject)) {
                        return callback(rootObject, fullParentName);
                } else {
                        // Only do a callback, but ignore the results
                        callback(rootObject, fullParentName);
                        mappedRootObject = unwrappedRootObject instanceof Array ? [] : {};
                }

                visitedObjects.save(rootObject, mappedRootObject);

                var origFullParentName = fullParentName;
                visitPropertiesOrArrayEntries(unwrappedRootObject, function (indexer) {
                        if (options.ignore && ko.utils.arrayIndexOf(options.ignore, indexer) != -1) return;

                        var propertyValue = unwrappedRootObject[indexer];
                        var fullPropertyName = getPropertyName(parentName, unwrappedRootObject, indexer);
                       
                        // If we don't want to explicitly copy the unmapped property...
                        if (ko.utils.arrayIndexOf(options.copy, indexer) === -1) {
                                // ...find out if it's a property we want to explicitly include
                                if (ko.utils.arrayIndexOf(options.include, indexer) === -1) {
                                        // Options contains all the properties that were part of the original object.
                                        // If a property does not exist, and it is not because it is part of an array (e.g. "myProp[3]"), then it should not be unmapped.
                                        if (options.mappedProperties && !options.mappedProperties[fullPropertyName] && !(unwrappedRootObject instanceof Array)) {
                                                return;
                                        }
                                }
                        }

                        fullParentName = getPropertyName(origFullParentName, unwrappedRootObject, indexer);
                       
                        var propertyType = exports.getType(ko.utils.unwrapObservable(propertyValue));
                        switch (propertyType) {
                        case "object":
                        case "array":
                        case "undefined":
                                var previouslyMappedValue = visitedObjects.get(propertyValue);
                                mappedRootObject[indexer] = (exports.getType(previouslyMappedValue) !== "undefined") ? previouslyMappedValue : visitModel(propertyValue, callback, options, fullPropertyName, fullParentName);
                                break;
                        default:
                                mappedRootObject[indexer] = callback(propertyValue, fullParentName);
                        }
                });

                return mappedRootObject;
        }

        function objectLookup() {
                var keys = [];
                var values = [];
                this.save = function (key, value) {
                        var existingIndex = ko.utils.arrayIndexOf(keys, key);
                        if (existingIndex >= 0) values[existingIndex] = value;
                        else {
                                keys.push(key);
                                values.push(value);
                        }
                };
                this.get = function (key) {
                        var existingIndex = ko.utils.arrayIndexOf(keys, key);
                        return (existingIndex >= 0) ? values[existingIndex] : undefined;
                };
        };
}));


/**
 * This function creates a ValidatedViewModel Class by adding the appropriate methods.
 * ValidatedViewModel Classes permit you to apply context-sensitive constraintGroups
 * to instances of the class.
 * 
 * @param function
 *            viewModel the POJO Knockout-JS style viewModel function that you
 *            would normally write. This object must already have
 *            ko.observable*s|computed's assigned to the desired properties.
 *
 *            In addition, the function must contain a publicly-accesible 
 *            property called 'constraintGroups'. The property must be a map of
 *            group names to constraint group definitions. Constraint group
 *            definitions are maps of property names to constraint definitions.
 *            Constraint definitions are objects identical to that which would 
 *            be passed as an argument to a 
 *            (implements ko.subscribable()).extend() for the 
 *            Knockout-Validation plugin.
 * 
 * @url https://github.com/ericmbarnard/Knockout-Validation/wiki/Native-Rules
 * @author cschroedl@xes-inc.com
 * @example
 * // -------------------------------------------------------------------
 * //src: myModelDefinitions.js
 * 
 * var MyViewModel = ValidatedViewModel(function(){ 
 * var self = this; 
 * self.prop1 = ko.observable();
 * self.prop2 = ko.computed(function(...){...});
 * self.prop3 = ko.observableArray();
 * 
 * self.constraintGroups = { 
 *      yourGroupNameHere : 
 *          {
 *              prop1 : {required: true},
 *              prop2 : {pattern: '^[a-z0-9].$'}, 
 *              prop3 : {minLength: 3, message:'insufficient length'}
 *          }
 *  };
 * 
 * });
 * // -------------------------------------------------------------------
 * //src: myPageSpecificStuff.js
 * 
 * //must run this method before applying any constraint groups
 * ko.validation.init();
 * var instanceOfMyViewModel = new MyViewModel();
 * instanceofMyViewModel.applyConstraintGroup('yourGroupNameHere');
 * //rest of validation code here
 * // -------------------------------------------------------------------
 */
var ValidatedViewModel = function (ViewModelFunc) {

	if ('function' !== typeof ViewModelFunc) {
		throw new TypeError(
            "the supplied viewModel must be of type function. '" + typeof viewModel + "' given.");
	}


	/**
     * @deprecated - this method was a safe way of updating the (property
     *             name -> constraint) map. This function now assumes that
     *             the developer will properly format self.constraintGroups
     * 
     * registers a map of property names to constraint specification
     * objects. Fails if a group of the same name has already been
     * registered, or if the given name is not a string.
     * 
     * @param string
     *            name for the constraint group
     * @param propToConstraintMap -
     *            a map of view model property names to objects containing
     *            their validation constraint specifications. The
     *            specification must be identical to that which would be
     *            passed as an argument to ko.observable().extend() for the
     *            Knockout-Validation plugin.
     * 
     * @url https://github.com/ericmbarnard/Knockout-Validation/wiki/Native-Rules
     * 
     * @returns void
     * @author  cschroedl@xes-inc.com
     */
	/*
     * var addConstraintGroup = function(name, propToConstraintMap){
     * if("undefined" == typeof self.constraintGroups[name]){//if key is yet
     * unused if(name instanceof String || name.constructor === String){
     * self.constraintGroups[name] = propToConstraintMap; } else{ throw new
     * TypeError("'name' must be of type String." + typeof name +" given."); } }
     * else{ //key is already used throw new Error("a constraint group named '" +
     * name + "' already exists"); } };
     */

	/**
     * Applies the specified validation constraint group to the view model. This
     * function may not be called in your viewModel's constructor. The
     * application of multiple constraint groups does not eliminate or overwrite
     * the constraint definitions of preiviously applied constraint groups.
     * 
     * @param name
     *            string - name of the view model
     * 
     * @param config
     *            Object - optional argument that is passed as the second
     *            argument to ko.validation.group();
     * @url https://github.com/ericmbarnard/Knockout-Validation/wiki/Configuration
     *      (see Option "grouping")
     * @returns void
     * @author  cschroedl@xes-inc.com
     */

	ViewModelFunc.prototype.applyConstraintGroup = function (name, config) {

		if (name instanceof String || name.constructor === String) {
			if ("undefined" === typeof this.constraintGroups || 'object' != typeof this.constraintGroups) {
				throw new Error(
                    "Validated View Models must define a this.constraintGroups object. No such object detected.");
			}


			if ("undefined" === typeof this.constraintGroups[name]) { // if key is
				// yet
				// registered
				throw new Error(
                    "This view model has no registered constraint group named '" + name + "'. Correct the name or register a new constraint group in this.constraintGroups");
			} else {
				//initialize if necessary::
				if ('undefined' === typeof this.appliedConstraintGroups) {
					this.appliedConstraintGroups = new Array();
				}
				//check for previous application of group
				if (name in this.appliedConstraintGroups) {
					// if group has already been applied,
					throw new Error("The Constraint Group '" + name + "' has already been applied to this model.");

				}

				var constraintGroupId = ko.validation.utils.newId();
				this.appliedConstraintGroups[name] = constraintGroupId;

				for (propertyName in this.constraintGroups[name]) {
					//console.log('propertyName:', propertyName);
					var prop = this[propertyName];
					//console.log('prop:', prop);

					if ('undefined' == typeof prop) {
						throw new Error("Property '" + propertyName + "' was not found in this view model");
					}

					if (!(prop instanceof ko.subscribable.constructor)) {
						// if this is not a ko.observable(Array) or a
						// ko.computed
						throw new TypeError(
                            "Property '" + propertyName + "' must be a ko.observable(Array) or a ko.computed to be validated.");
					}

					var constraints = this.constraintGroups[name][propertyName];

					for (var constraintName in constraints) {
						if (constraints.hasOwnProperty(constraintName)) {
							var constraintDefinition = constraints[constraintName];

							if ('object' == typeof constraintDefinition) {

								//if the definition contains messages etc., but
								//no parameter to the validator 
								//was specified, insert true for params
								//value. This is identical to ko.validation behavior
								if ('undefined' === typeof constraintDefinition.params) {
									constraintDefinition.params = true;
								}
							}
							else { //parameter was a primitive, make it an object
								constraintDefinition = { params: constraintDefinition };
							}
							//now that the constraint definition is definitely an object in the
							//proper format add key to the object
							constraintDefinition.constraintGroupId = constraintGroupId;
							constraints[constraintName] = constraintDefinition;

						}//end if
					}//end foreach    
					// add the constraints to the view model property
					prop.extend(constraints);

				};
				this['errors'] = ko.validation.group(this, config);
			}

		} else {
			throw new TypeError(
                "a string must be used to specify a registered constraint");
		}
	};



	/**
     * Applies all of the specified constraint groups to the model in the same
     * order that they were specified.
     * 
     * @param groupNames 
     *            array of string constraint group names
     * @param config 
     *      object - see applyConstraintGroup documentation
     * @author  cschroedl@xes-inc.com
     */

	ViewModelFunc.prototype.applyConstraintGroups = function (groupNames, config) {
		for (var i = 0; i < groupNames.length; ++i) {
			this.applyConstraintGroup(groupNames[i], config);
		}
	};




	/**
     * Removes the specified constraint from the specified property
     * 
     * @param constraintName
     *            string - the name of the constraint. Ex: "required",
     *            "max", etc.
     * 
     * @param constraintParameters
     *            mixed - the value of the parameter passed to the
     *            constraint. Ex: 'true' in {required: true}. '42' in {max:
     *            42}
     * 
     * @param propertyName
     *            string- the name of the property to remove the constraint
     *            from
     * 
     * @returns boolean - true if the constriant 'constraintName' was
     *          deleted from property 'propertyName'. false if the
     *          constraint was not found.
     * @author  cschroedl@xes-inc.com
     */
	ViewModelFunc.prototype.removeConstraintFromProperty = function (
    constraintName, constraintParameters, propertyName) {
		if (this[propertyName] instanceof ko.subscribable.constructor) {
			var rules = this[propertyName].rules();
		} else {
			throw new Error("Property '" + propertyName + "' does not implement ko.subscribable");
		}

		if ('undefined' === typeof rules) {
			throw new ReferenceError("Property '" + propertyName + "' does not exist");
		}
		var found = false;
		for (var i = 0; i < rules.length; i++) {
			if (rules[i].rule === constraintName && rules[i].params == constraintParameters) {
				found = true;
				rules.splice(i, 1);
				break;
				// don't continue deleting any additional occurences of this
				// constraint. Hence if applyConstraintGroups permitted multiple
				// applications of constraint groups, N applications of the
				// same constraint group would require N calls to
				// removeConstraintGroup
			}
		}

		return found;
	};

	/**
     * Removes the named constraint group. Throws errors if constraint group
     * does not not exist, or if the constraint group is not currently applied.
     * 
     * @param constraintGroupName
     *            string constraint group name
     * @author cschroedl@xes-inc.com
     */

	ViewModelFunc.prototype.removeConstraintGroup = function (constraintGroupName) {
		//ensure constraintGroups are still defined
		if ('undefined' === typeof this.constraintGroups) {
			throw new ReferenceError('Cannot remove the constraint group- no constraint groups have been defined');
		}
		//create local alias 
		var constraintGroup = this.constraintGroups[constraintGroupName];
		//check for bad constraint group name
		if ('undefined' === typeof constraintGroup) {
			throw new ReferenceError("Constraint group '" + constraintGroupName + "' does not exist");
		}
		//now that we know the constraint group exists, check to see if it has been applied

		//after checking to see that the appliedConstraintGroups property exists:
		if ('undefined' === typeof this.appliedConstraintGroups) {
			//then no constraintGroups have been applied
			throw new Error("Constraint group '" + constraintGroupName + "' is not currently applied.");
		}
		if (!(constraintGroupName in this.appliedConstraintGroups)) {
			throw new Error("Constraint group '" + constraintGroupName + "' is not currently applied.");
		}
		var constraintGroupId = this.appliedConstraintGroups[constraintGroupName];

		//console.log('propertyName', propertyName);

		for (propertyName in constraintGroup) {
			//console.log('propertyName', propertyName);
			var rulesForProperty = this[propertyName].rules();
			//console.log('rulesForProperty', rulesForProperty);

			for (var i = 0; i < rulesForProperty.length; i++) {
				//console.log('constraintGroupId:',constraintGroupId);
				if (rulesForProperty[i].constraintGroupId === constraintGroupId) {
					//delete
					rulesForProperty.splice(i, 1);
					//update counter to account for delete
					i--;
				}
			}

			//now force validation to occur again
			//unfortunately, this inefficiently notifies all 
			//subscribers instead of just the validation handlers

			//@todo only trigger the subscribed validation handlers  

			this[propertyName].notifySubscribers(this[propertyName]());
		}
		delete this.appliedConstraintGroups[constraintGroupName];
	};
	// return the newly-equipped View Model "class"
	return ViewModelFunc;
};
/*=============================================================================
	Author:			Eric M. Barnard - @ericmbarnard								
	License:		MIT (http://opensource.org/licenses/mit-license.php)		
																				
	Description:	Validation Library for KnockoutJS							
===============================================================================
*/
/*globals require: false, exports: false, define: false, ko: false */

(function (factory) {
    // Module systems magic dance.

    if (typeof require === "function" && typeof exports === "object" && typeof module === "object") {
        // CommonJS or Node: hard-coded dependency on "knockout"
        factory(require("knockout"), exports);
    } else if (typeof define === "function" && define["amd"]) {
        // AMD anonymous module with hard-coded dependency on "knockout"
        define(["knockout", "exports"], factory);
    } else {
        // <script> tag: use the global `ko` object, attaching a `mapping` property
        factory(ko, ko.validation = {});
    }
}(function ( ko, exports ) {

    if (typeof (ko) === undefined) { throw 'Knockout is required, please ensure it is loaded before loading this validation plug-in'; }

    // create our namespace object
    ko.validation = exports;

    var kv = ko.validation,
		koUtils = ko.utils,
		unwrap = koUtils.unwrapObservable,
		forEach = koUtils.arrayForEach,
		extend = koUtils.extend;
;/*global ko: false*/

var defaults = {
	registerExtenders: true,
	messagesOnModified: true,
	errorsAsTitle: true,            // enables/disables showing of errors as title attribute of the target element.
	errorsAsTitleOnModified: false, // shows the error when hovering the input field (decorateElement must be true)
	messageTemplate: null,
	insertMessages: true,           // automatically inserts validation messages as <span></span>
	parseInputAttributes: false,    // parses the HTML5 validation attribute from a form element and adds that to the object
	writeInputAttributes: false,    // adds HTML5 input validation attributes to form elements that ko observable's are bound to
	decorateInputElement: false,         // false to keep backward compatibility
	decorateElementOnModified: true,// true to keep backward compatibility
	errorClass: null,               // single class for error message and element
	errorElementClass: 'validationElement',  // class to decorate error element
	errorMessageClass: 'validationMessage',  // class to decorate error message
	allowHtmlMessages: false,		// allows HTML in validation messages
	grouping: {
		deep: false,        //by default grouping is shallow
		observable: true,   //and using observables
		live: false		    //react to changes to observableArrays if observable === true
	},
	validate: {
		// throttle: 10
	}
};

// make a copy  so we can use 'reset' later
var configuration = extend({}, defaults);

configuration.html5Attributes = ['required', 'pattern', 'min', 'max', 'step'];
configuration.html5InputTypes = ['email', 'number', 'date'];

configuration.reset = function () {
	extend(configuration, defaults);
};

kv.configuration = configuration;
;kv.utils = (function () {
	var seedId = new Date().getTime();

	var domData = {}; //hash of data objects that we reference from dom elements
	var domDataKey = '__ko_validation__';

	return {
		isArray: function (o) {
			return o.isArray || Object.prototype.toString.call(o) === '[object Array]';
		},
		isObject: function (o) {
			return o !== null && typeof o === 'object';
		},
		isObservableArray: function(instance) {
			return !!instance &&
					typeof instance["remove"] === "function" &&
					typeof instance["removeAll"] === "function" &&
					typeof instance["destroy"] === "function" &&
					typeof instance["destroyAll"] === "function" &&
					typeof instance["indexOf"] === "function" &&
					typeof instance["replace"] === "function";
		},
		values: function (o) {
			var r = [];
			for (var i in o) {
				if (o.hasOwnProperty(i)) {
					r.push(o[i]);
				}
			}
			return r;
		},
		getValue: function (o) {
			return (typeof o === 'function' ? o() : o);
		},
		hasAttribute: function (node, attr) {
			return node.getAttribute(attr) !== null;
		},
		getAttribute: function (element, attr) {
			return element.getAttribute(attr);
		},
		setAttribute: function (element, attr, value) {
			return element.setAttribute(attr, value);
		},
		isValidatable: function (o) {
			return !!(o && o.rules && o.isValid && o.isModified);
		},
		insertAfter: function (node, newNode) {
			node.parentNode.insertBefore(newNode, node.nextSibling);
		},
		newId: function () {
			return seedId += 1;
		},
		getConfigOptions: function (element) {
			var options = kv.utils.contextFor(element);

			return options || kv.configuration;
		},
		setDomData: function (node, data) {
			var key = node[domDataKey];

			if (!key) {
				node[domDataKey] = key = kv.utils.newId();
			}

			domData[key] = data;
		},
		getDomData: function (node) {
			var key = node[domDataKey];

			if (!key) {
				return undefined;
			}

			return domData[key];
		},
		contextFor: function (node) {
			switch (node.nodeType) {
				case 1:
				case 8:
					var context = kv.utils.getDomData(node);
					if (context) { return context; }
					if (node.parentNode) { return kv.utils.contextFor(node.parentNode); }
					break;
			}
			return undefined;
		},
		isEmptyVal: function (val) {
			if (val === undefined) {
				return true;
			}
			if (val === null) {
				return true;
			}
			if (val === "") {
				return true;
			}
		},
		getOriginalElementTitle: function (element) {
			var savedOriginalTitle = kv.utils.getAttribute(element, 'data-orig-title'),
				currentTitle = element.title,
				hasSavedOriginalTitle = kv.utils.hasAttribute(element, 'data-orig-title');

			return hasSavedOriginalTitle ?
				savedOriginalTitle : currentTitle;
		},
		async: function (expr) {
			if (window.setImmediate) { window.setImmediate(expr); }
			else { window.setTimeout(expr, 0); }
		},
		forEach: function (object, callback) {
			if (kv.utils.isArray(object)) {
				return forEach(object, callback);
			}
			for (var prop in object) {
				if (object.hasOwnProperty(prop)) {
					callback(object[prop], prop);
				}
			}
		}
	};
}());;var api = (function () {

	var isInitialized = 0,
		configuration = kv.configuration,
		utils = kv.utils;

	function cleanUpSubscriptions(context) {
		forEach(context.subscriptions, function (subscription) {
			subscription.dispose();
		});
		context.subscriptions = [];
	}

	function dispose(context) {
		if (context.options.deep) {
			forEach(context.flagged, function (obj) {
				delete obj.__kv_traversed;
			});
			context.flagged.length = 0;
		}

		if (!context.options.live) {
			cleanUpSubscriptions(context);
		}
	}

	function runTraversal(obj, context) {
		context.validatables = [];
		cleanUpSubscriptions(context);
		traverseGraph(obj, context);
		dispose(context);
		}

	function traverseGraph(obj, context, level) {
		var objValues = [],
			val = obj.peek ? obj.peek() : obj;

		if (obj.__kv_traversed === true) { return; }

		if (context.options.deep) {
	    obj.__kv_traversed = true;
			context.flagged.push(obj);
		}

		//default level value depends on deep option.
		level = (level !== undefined ? level : context.options.deep ? 1 : -1);

		// if object is observable then add it to the list
		if (ko.isObservable(obj)) {

			//make sure it is validatable object
			if (!obj.isValid) { obj.extend({ validatable: true }); }
			context.validatables.push(obj);

			if(context.options.live && utils.isObservableArray(obj)) {
				context.subscriptions.push(obj.subscribe(function () {
					context.graphMonitor.valueHasMutated();
				}));
		}
		}

		//get list of values either from array or object but ignore non-objects
		// and destroyed objects
		if (val && !val._destroy) {
			if (utils.isArray(val)) {
			objValues = val;
			} else if (utils.isObject(val)) {
				objValues = utils.values(val);
		}
		}

		//process recurisvely if it is deep grouping
		if (level !== 0) {
			utils.forEach(objValues, function (observable) {

				//but not falsy things and not HTML Elements
				if (observable && !observable.nodeType) {
					traverseGraph(observable, context, level + 1);
				}
			});
		}
	}

	function collectErrors(array) {
		var errors = [];
		forEach(array, function (observable) {
			if (!observable.isValid()) {
				errors.push(observable.error());
			}
		});
		return errors;
	}

	return {
		//Call this on startup
		//any config can be overridden with the passed in options
		init: function (options, force) {
			//done run this multiple times if we don't really want to
			if (isInitialized > 0 && !force) {
				return;
			}

			//becuase we will be accessing options properties it has to be an object at least
			options = options || {};
			//if specific error classes are not provided then apply generic errorClass
			//it has to be done on option so that options.errorClass can override default
			//errorElementClass and errorMessage class but not those provided in options
			options.errorElementClass = options.errorElementClass || options.errorClass || configuration.errorElementClass;
			options.errorMessageClass = options.errorMessageClass || options.errorClass || configuration.errorMessageClass;

			extend(configuration, options);

			if (configuration.registerExtenders) {
				kv.registerExtenders();
			}

			isInitialized = 1;
		},
		// backwards compatability
		configure: function (options) { kv.init(options); },

		// resets the config back to its original state
		reset: kv.configuration.reset,

		// recursivly walks a viewModel and creates an object that
		// provides validation information for the entire viewModel
		// obj -> the viewModel to walk
		// options -> {
		//	  deep: false, // if true, will walk past the first level of viewModel properties
		//	  observable: false // if true, returns a computed observable indicating if the viewModel is valid
		// }
		group: function group(obj, options) { // array of observables or viewModel
			options = extend(extend({}, configuration.grouping), options);

			var context = {
				options: options,
				graphMonitor: ko.observable(),
				flagged: [],
				subscriptions: [],
				validatables: []
        };

			var result = null;

			//if using observables then traverse structure once and add observables
			if (options.observable) {
				runTraversal(obj, context);

				result = ko.computed(function () {
					context.graphMonitor(); //register dependency
					runTraversal(obj, context);

					return collectErrors(context.validatables);
				});

			} else { //if not using observables then every call to error() should traverse the structure
				result = function () {
					runTraversal(obj, context);

					return collectErrors(context.validatables);
				};
			}

			result.showAllMessages = function (show) { // thanks @heliosPortal
				if (show === undefined) {//default to true
					show = true;
				}

				// ensure we have latest changes
				result();

				forEach(context.validatables, function (observable) {
					observable.isModified(show);
				});
			};

			obj.errors = result;
			obj.isValid = function () {
				return obj.errors().length === 0;
			};
			obj.isAnyMessageShown = function () {
				var invalidAndModifiedPresent = false;

				// ensure we have latest changes
				result();

				invalidAndModifiedPresent = !!koUtils.arrayFirst(context.validatables, function (observable) {
					return !observable.isValid() && observable.isModified();
				});
				return invalidAndModifiedPresent;
			};

			return result;
		},

		formatMessage: function (message, params, observable) {
			if (typeof (message) === 'function') {
				return message(params, observable);
			}
			return message.replace(/\{0\}/gi, unwrap(params));
		},

		// addRule:
		// This takes in a ko.observable and a Rule Context - which is just a rule name and params to supply to the validator
		// ie: kv.addRule(myObservable, {
		//		  rule: 'required',
		//		  params: true
		//	  });
		//
		addRule: function (observable, rule) {
			observable.extend({ validatable: true });

			//push a Rule Context to the observables local array of Rule Contexts
			observable.rules.push(rule);
			return observable;
		},

		// addAnonymousRule:
		// Anonymous Rules essentially have all the properties of a Rule, but are only specific for a certain property
		// and developers typically are wanting to add them on the fly or not register a rule with the 'kv.rules' object
		//
		// Example:
		// var test = ko.observable('something').extend{(
		//	  validation: {
		//		  validator: function(val, someOtherVal){
		//			  return true;
		//		  },
		//		  message: "Something must be really wrong!',
		//		  params: true
		//	  }
		//  )};
		addAnonymousRule: function (observable, ruleObj) {
			if (ruleObj['message'] === undefined) {
				ruleObj['message'] = 'Error';
			}

			//make sure onlyIf is honoured
			if (ruleObj.onlyIf) {
				ruleObj.condition = ruleObj.onlyIf;
			}

			//add the anonymous rule to the observable
			kv.addRule(observable, ruleObj);
		},

		addExtender: function (ruleName) {
			ko.extenders[ruleName] = function (observable, params) {
				//params can come in a few flavors
				// 1. Just the params to be passed to the validator
				// 2. An object containing the Message to be used and the Params to pass to the validator
				// 3. A condition when the validation rule to be applied
				//
				// Example:
				// var test = ko.observable(3).extend({
				//	  max: {
				//		  message: 'This special field has a Max of {0}',
				//		  params: 2,
				//		  onlyIf: function() {
				//					  return specialField.IsVisible();
				//				  }
				//	  }
				//  )};
				//
				if (params && (params.message || params.onlyIf)) { //if it has a message or condition object, then its an object literal to use
					return kv.addRule(observable, {
						rule: ruleName,
						message: params.message,
						params: utils.isEmptyVal(params.params) ? true : params.params,
						condition: params.onlyIf
					});
				} else {
					return kv.addRule(observable, {
						rule: ruleName,
						params: params
					});
				}
			};
		},

		// loops through all kv.rules and adds them as extenders to
		// ko.extenders
		registerExtenders: function () { // root extenders optional, use 'validation' extender if would cause conflicts
			if (configuration.registerExtenders) {
				for (var ruleName in kv.rules) {
					if (kv.rules.hasOwnProperty(ruleName)) {
						if (!ko.extenders[ruleName]) {
							kv.addExtender(ruleName);
						}
					}
				}
			}
		},

		//creates a span next to the @element with the specified error class
		insertValidationMessage: function (element) {
			var span = document.createElement('SPAN');
			span.className = utils.getConfigOptions(element).errorMessageClass;
			utils.insertAfter(element, span);
			return span;
		},

		// if html-5 validation attributes have been specified, this parses
		// the attributes on @element
		parseInputValidationAttributes: function (element, valueAccessor) {
			forEach(kv.configuration.html5Attributes, function (attr) {
				if (utils.hasAttribute(element, attr)) {

                    var params = element.getAttribute(attr) || true;

                    if (attr === 'min' || attr === 'max')
                    {
                        // If we're validating based on the min and max attributes, we'll
                        // need to know what the 'type' attribute is set to
                        var typeAttr = element.getAttribute('type');
                        if (typeof typeAttr === "undefined" || !typeAttr)
                        {
                            // From http://www.w3.org/TR/html-markup/input:
                            //   An input element with no type attribute specified represents the 
                            //   same thing as an input element with its type attribute set to "text".
                            typeAttr = "text"; 
                        }                            
                        params = {typeAttr: typeAttr, value: params}; 
                    }
                
					kv.addRule(valueAccessor(), {
						rule: attr,
						params: params
					});
				}
			});

			var currentType = element.getAttribute('type');
			forEach(kv.configuration.html5InputTypes, function (type) {
				if (type === currentType) {
					kv.addRule(valueAccessor(), {
						rule: (type === 'date') ? 'dateISO' : type,
						params: true
					});
				}
			});
		},

		// writes html5 validation attributes on the element passed in
		writeInputValidationAttributes: function (element, valueAccessor) {
			var observable = valueAccessor();

			if (!observable || !observable.rules) {
				return;
			}

			var contexts = observable.rules(); // observable array

			// loop through the attributes and add the information needed
			forEach(kv.configuration.html5Attributes, function (attr) {
				var params;
				var ctx = koUtils.arrayFirst(contexts, function (ctx) {
					return ctx.rule.toLowerCase() === attr.toLowerCase();
				});

				if (!ctx) {
					return;
				}

				params = ctx.params;

				// we have to do some special things for the pattern validation
				if (ctx.rule === "pattern") {
					if (ctx.params instanceof RegExp) {
						params = ctx.params.source; // we need the pure string representation of the RegExpr without the //gi stuff
					}
				}

				// we have a rule matching a validation attribute at this point
				// so lets add it to the element along with the params
				element.setAttribute(attr, params);
			});

			contexts = null;
		},

		//take an existing binding handler and make it cause automatic validations
		makeBindingHandlerValidatable: function (handlerName) {
			var init = ko.bindingHandlers[handlerName].init;

			ko.bindingHandlers[handlerName].init = function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {

				init(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext);

				return ko.bindingHandlers['validationCore'].init(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext);
			};
		},

		// visit an objects properties and apply validation rules from a definition
		setRules: function (target, definition) {
			var setRules = function (target, definition) {
				if (!target || !definition) { return; }

				for (var prop in definition) {
					if (!definition.hasOwnProperty(prop)) { continue; }
					var ruleDefinitions = definition[prop];

					//check the target property exists and has a value
					if (!target[prop]) { continue; }
					var targetValue = target[prop],
						unwrappedTargetValue = unwrap(targetValue),
						rules = {},
						nonRules = {};

					for (var rule in ruleDefinitions) {
						if (!ruleDefinitions.hasOwnProperty(rule)) { continue; }
						if (kv.rules[rule]) {
							rules[rule] = ruleDefinitions[rule];
						} else {
							nonRules[rule] = ruleDefinitions[rule];
						}
					}

					//apply rules
					if (ko.isObservable(targetValue)) {
						targetValue.extend(rules);
					}

					//then apply child rules
					//if it's an array, apply rules to all children
					if (unwrappedTargetValue && utils.isArray(unwrappedTargetValue)) {
						for (var i = 0; i < unwrappedTargetValue.length; i++) {
							setRules(unwrappedTargetValue[i], nonRules);
						}
						//otherwise, just apply to this property
					} else {
						setRules(unwrappedTargetValue, nonRules);
					}
				}
			};
			setRules(target, definition);
		}
	};

}());

// expose api publicly
extend(ko.validation, api);;//Validation Rules:
// You can view and override messages or rules via:
// kv.rules[ruleName]
//
// To implement a custom Rule, simply use this template:
// kv.rules['<custom rule name>'] = {
//      validator: function (val, param) {
//          <custom logic>
//          return <true or false>;
//      },
//      message: '<custom validation message>' //optionally you can also use a '{0}' to denote a placeholder that will be replaced with your 'param'
// };
//
// Example:
// kv.rules['mustEqual'] = {
//      validator: function( val, mustEqualVal ){
//          return val === mustEqualVal;
//      },
//      message: 'This field must equal {0}'
// };
//
kv.rules = {};
kv.rules['required'] = {
	validator: function (val, required) {
		var stringTrimRegEx = /^\s+|\s+$/g,
			testVal;

		if (val === undefined || val === null) {
			return !required;
		}

		testVal = val;
		if (typeof (val) === "string") {
			testVal = val.replace(stringTrimRegEx, '');
		}

		if (!required) {// if they passed: { required: false }, then don't require this
			return true;
		}

		return ((testVal + '').length > 0);
	},
	message: 'This field is required.'
};

function minMaxValidatorFactory(validatorName) {
    var isMaxValidation = validatorName === "max";

    return function (val, options) {
        if (kv.utils.isEmptyVal(val)) {
            return true;
        }

        var comparisonValue, type;
        if (options.typeAttr === undefined) {
            // This validator is being called from javascript rather than
            // being bound from markup
            type = "text";
            comparisonValue = options;
        } else {
            type = options.typeAttr;
            comparisonValue = options.value;
        }

        // From http://www.w3.org/TR/2012/WD-html5-20121025/common-input-element-attributes.html#attr-input-min,
        // if the value is parseable to a number, then the minimum should be numeric
        if (!isNaN(comparisonValue)) {
            type = "number";
        }

        var regex, valMatches, comparisonValueMatches;
        switch (type.toLowerCase()) {
            case "week":
                regex = /^(\d{4})-W(\d{2})$/;
                valMatches = val.match(regex);
                if (valMatches === null) {
                    throw "Invalid value for " + validatorName + " attribute for week input.  Should look like " +
                        "'2000-W33' http://www.w3.org/TR/html-markup/input.week.html#input.week.attrs.min";
                }
                comparisonValueMatches = comparisonValue.match(regex);
                // If no regex matches were found, validation fails
                if (!comparisonValueMatches) {
                    return false;
                }

                if (isMaxValidation) {
                    return (valMatches[1] < comparisonValueMatches[1]) || // older year
                        // same year, older week
                        ((valMatches[1] === comparisonValueMatches[1]) && (valMatches[2] <= comparisonValueMatches[2]));
                } else {
                    return (valMatches[1] > comparisonValueMatches[1]) || // newer year
                        // same year, newer week
                        ((valMatches[1] === comparisonValueMatches[1]) && (valMatches[2] >= comparisonValueMatches[2]));
                }
                break;

            case "month":
                regex = /^(\d{4})-(\d{2})$/;
                valMatches = val.match(regex);
                if (valMatches === null) {
                    throw "Invalid value for " + validatorName + " attribute for month input.  Should look like " +
                        "'2000-03' http://www.w3.org/TR/html-markup/input.month.html#input.month.attrs.min";
                }
                comparisonValueMatches = comparisonValue.match(regex);
                // If no regex matches were found, validation fails
                if (!comparisonValueMatches) {
                    return false;
                }

                if (isMaxValidation) {
                    return ((valMatches[1] < comparisonValueMatches[1]) || // older year
                        // same year, older month
                        ((valMatches[1] === comparisonValueMatches[1]) && (valMatches[2] <= comparisonValueMatches[2])));
                } else {
                    return (valMatches[1] > comparisonValueMatches[1]) || // newer year
                        // same year, newer month
                        ((valMatches[1] === comparisonValueMatches[1]) && (valMatches[2] >= comparisonValueMatches[2]));
                }
                break;

            case "number":
            case "range":
                if (isMaxValidation) {
                    return (!isNaN(val) && parseFloat(val) <= parseFloat(comparisonValue));
                } else {
                    return (!isNaN(val) && parseFloat(val) >= parseFloat(comparisonValue));
                }
                break;

            default:
                if (isMaxValidation) {
                    return val <= comparisonValue;
                } else {
                    return val >= comparisonValue;
                }
        }
    };
}

kv.rules['min'] = {
	validator: minMaxValidatorFactory("min"),
	message: 'Please enter a value greater than or equal to {0}.'
};

kv.rules['max'] = {
	validator: minMaxValidatorFactory("max"),
	message: 'Please enter a value less than or equal to {0}.'
};
    
kv.rules['minLength'] = {
	validator: function (val, minLength) {
		return kv.utils.isEmptyVal(val) || val.length >= minLength;
	},
	message: 'Please enter at least {0} characters.'
};

kv.rules['maxLength'] = {
	validator: function (val, maxLength) {
		return kv.utils.isEmptyVal(val) || val.length <= maxLength;
	},
	message: 'Please enter no more than {0} characters.'
};

kv.rules['pattern'] = {
	validator: function (val, regex) {
		return kv.utils.isEmptyVal(val) || val.toString().match(regex) !== null;
	},
	message: 'Please check this value.'
};

kv.rules['step'] = {
	validator: function (val, step) {

		// in order to handle steps of .1 & .01 etc.. Modulus won't work
		// if the value is a decimal, so we have to correct for that
		if (kv.utils.isEmptyVal(val) || step === 'any') { return true; }
		var dif = (val * 100) % (step * 100);
		return Math.abs(dif) < 0.00001 || Math.abs(1 - dif) < 0.00001;
	},
	message: 'The value must increment by {0}'
};

kv.rules['email'] = {
	validator: function (val, validate) {
		if (!validate) { return true; }

		//I think an empty email address is also a valid entry
		//if one want's to enforce entry it should be done with 'required: true'
		return kv.utils.isEmptyVal(val) || (
			// jquery validate regex - thanks Scott Gonzalez
			validate && /^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$/i.test(val)
		);
	},
	message: 'Please enter a proper email address'
};

kv.rules['date'] = {
	validator: function (value, validate) {
		if (!validate) { return true; }
		return kv.utils.isEmptyVal(value) || (validate && !/Invalid|NaN/.test(new Date(value)));
	},
	message: 'Please enter a proper date'
};

kv.rules['dateISO'] = {
	validator: function (value, validate) {
		if (!validate) { return true; }
		return kv.utils.isEmptyVal(value) || (validate && /^\d{4}[\/\-]\d{1,2}[\/\-]\d{1,2}$/.test(value));
	},
	message: 'Please enter a proper date'
};

kv.rules['number'] = {
	validator: function (value, validate) {
		if (!validate) { return true; }
		return kv.utils.isEmptyVal(value) || (validate && /^-?(?:\d+|\d{1,3}(?:,\d{3})+)?(?:\.\d+)?$/.test(value));
	},
	message: 'Please enter a number'
};

kv.rules['digit'] = {
	validator: function (value, validate) {
		if (!validate) { return true; }
		return kv.utils.isEmptyVal(value) || (validate && /^\d+$/.test(value));
	},
	message: 'Please enter a digit'
};

kv.rules['phoneUS'] = {
	validator: function (phoneNumber, validate) {
		if (!validate) { return true; }
		if (kv.utils.isEmptyVal(phoneNumber)) { return true; } // makes it optional, use 'required' rule if it should be required
		if (typeof (phoneNumber) !== 'string') { return false; }
		phoneNumber = phoneNumber.replace(/\s+/g, "");
		return validate && phoneNumber.length > 9 && phoneNumber.match(/^(1-?)?(\([2-9]\d{2}\)|[2-9]\d{2})-?[2-9]\d{2}-?\d{4}$/);
	},
	message: 'Please specify a valid phone number'
};

kv.rules['equal'] = {
	validator: function (val, params) {
		var otherValue = params;
		return val === kv.utils.getValue(otherValue);
	},
	message: 'Values must equal'
};

kv.rules['notEqual'] = {
	validator: function (val, params) {
		var otherValue = params;
		return val !== kv.utils.getValue(otherValue);
	},
	message: 'Please choose another value.'
};

//unique in collection
// options are:
//    collection: array or function returning (observable) array
//              in which the value has to be unique
//    valueAccessor: function that returns value from an object stored in collection
//              if it is null the value is compared directly
//    external: set to true when object you are validating is automatically updating collection
kv.rules['unique'] = {
	validator: function (val, options) {
		var c = kv.utils.getValue(options.collection),
			external = kv.utils.getValue(options.externalValue),
			counter = 0;

		if (!val || !c) { return true; }

		koUtils.arrayFilter(c, function (item) {
			if (val === (options.valueAccessor ? options.valueAccessor(item) : item)) { counter++; }
		});
		// if value is external even 1 same value in collection means the value is not unique
		return counter < (!!external ? 1 : 2);
	},
	message: 'Please make sure the value is unique.'
};


//now register all of these!
(function () {
	kv.registerExtenders();
}());
;// The core binding handler
// this allows us to setup any value binding that internally always
// performs the same functionality
ko.bindingHandlers['validationCore'] = (function () {

	return {
		init: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
			var config = kv.utils.getConfigOptions(element);
			var observable = valueAccessor();

			// parse html5 input validation attributes, optional feature
			if (config.parseInputAttributes) {
				kv.utils.async(function () { kv.parseInputValidationAttributes(element, valueAccessor); });
			}

			// if requested insert message element and apply bindings
			if (config.insertMessages && kv.utils.isValidatable(observable)) {

				// insert the <span></span>
				var validationMessageElement = kv.insertValidationMessage(element);

				// if we're told to use a template, make sure that gets rendered
				if (config.messageTemplate) {
					ko.renderTemplate(config.messageTemplate, { field: observable }, null, validationMessageElement, 'replaceNode');
				} else {
					ko.applyBindingsToNode(validationMessageElement, { validationMessage: observable });
				}
			}

			// write the html5 attributes if indicated by the config
			if (config.writeInputAttributes && kv.utils.isValidatable(observable)) {

				kv.writeInputValidationAttributes(element, valueAccessor);
			}

			// if requested, add binding to decorate element
			if (config.decorateInputElement && kv.utils.isValidatable(observable)) {
				ko.applyBindingsToNode(element, { validationElement: observable });
			}
		}
	};

}());

// override for KO's default 'value' and 'checked' bindings
kv.makeBindingHandlerValidatable("value");
kv.makeBindingHandlerValidatable("checked");


ko.bindingHandlers['validationMessage'] = { // individual error message, if modified or post binding
	update: function (element, valueAccessor) {
		var obsv = valueAccessor(),
			config = kv.utils.getConfigOptions(element),
			val = unwrap(obsv),
			msg = null,
			isModified = false,
			isValid = false;

		if (!obsv.isValid || !obsv.isModified) {
			throw new Error("Observable is not validatable");
		}

		isModified = obsv.isModified();
		isValid = obsv.isValid();

		var error = null;
		if (!config.messagesOnModified || isModified) {
			error = isValid ? null : obsv.error;
		}

		var isVisible = !config.messagesOnModified || isModified ? !isValid : false;
		var isCurrentlyVisible = element.style.display !== "none";

		if (config.allowHtmlMessages) {
			koUtils.setHtml(element, error);
		} else {
			ko.bindingHandlers.text.update(element, function () { return error; });
		}

		if (isCurrentlyVisible && !isVisible) {
			element.style.display = 'none';
		} else if (!isCurrentlyVisible && isVisible) {
			element.style.display = '';
		}
	}
};

ko.bindingHandlers['validationElement'] = {
	update: function (element, valueAccessor, allBindingsAccessor) {
		var obsv = valueAccessor(),
			config = kv.utils.getConfigOptions(element),
			val = unwrap(obsv),
			msg = null,
			isModified = false,
			isValid = false;

		if (!obsv.isValid || !obsv.isModified) {
			throw new Error("Observable is not validatable");
		}

		isModified = obsv.isModified();
		isValid = obsv.isValid();

		// create an evaluator function that will return something like:
		// css: { validationElement: true }
		var cssSettingsAccessor = function () {
			var css = {};

			var shouldShow = ((!config.decorateElementOnModified || isModified) ? !isValid : false);

			// css: { validationElement: false }
			css[config.errorElementClass] = shouldShow;

			return css;
		};

		//add or remove class on the element;
		ko.bindingHandlers.css.update(element, cssSettingsAccessor, allBindingsAccessor);
		if (!config.errorsAsTitle) { return; }

		ko.bindingHandlers.attr.update(element, function () {
			var
				hasModification = !config.errorsAsTitleOnModified || isModified,
				title = kv.utils.getOriginalElementTitle(element);

			if (hasModification && !isValid) {
				return { title: obsv.error, 'data-orig-title': title };
			} else if (!hasModification || isValid) {
				return { title: title, 'data-orig-title': null };
			}
		});
	}
};

// ValidationOptions:
// This binding handler allows you to override the initial config by setting any of the options for a specific element or context of elements
//
// Example:
// <div data-bind="validationOptions: { insertMessages: true, messageTemplate: 'customTemplate', errorMessageClass: 'mySpecialClass'}">
//      <input type="text" data-bind="value: someValue"/>
//      <input type="text" data-bind="value: someValue2"/>
// </div>
ko.bindingHandlers['validationOptions'] = (function () {
	return {
		init: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
			var options = unwrap(valueAccessor());
			if (options) {
				var newConfig = extend({}, kv.configuration);
				extend(newConfig, options);

				//store the validation options on the node so we can retrieve it later
				kv.utils.setDomData(element, newConfig);
			}
		}
	};
}());
;// Validation Extender:
// This is for creating custom validation logic on the fly
// Example:
// var test = ko.observable('something').extend{(
//      validation: {
//          validator: function(val, someOtherVal){
//              return true;
//          },
//          message: "Something must be really wrong!',
//          params: true
//      }
//  )};
ko.extenders['validation'] = function (observable, rules) { // allow single rule or array
	forEach(kv.utils.isArray(rules) ? rules : [rules], function (rule) {
		// the 'rule' being passed in here has no name to identify a core Rule,
		// so we add it as an anonymous rule
		// If the developer is wanting to use a core Rule, but use a different message see the 'addExtender' logic for examples
		kv.addAnonymousRule(observable, rule);
	});
	return observable;
};

//This is the extender that makes a Knockout Observable also 'Validatable'
//examples include:
// 1. var test = ko.observable('something').extend({validatable: true});
// this will ensure that the Observable object is setup properly to respond to rules
//
// 2. test.extend({validatable: false});
// this will remove the validation properties from the Observable object should you need to do that.
ko.extenders['validatable'] = function (observable, options) {
	if (!kv.utils.isObject(options)) {
		options = { enable: options };
	}

	if (!('enable' in options)) {
		options.enable = true;
	}

	if (options.enable && !kv.utils.isValidatable(observable)) {
		var config = kv.configuration.validate || {};
		var validationOptions = {
			throttleEvaluation : options.throttle || config.throttle
		};

		observable.error = ko.observable(null); // holds the error message, we only need one since we stop processing validators when one is invalid

		// observable.rules:
		// ObservableArray of Rule Contexts, where a Rule Context is simply the name of a rule and the params to supply to it
		//
		// Rule Context = { rule: '<rule name>', params: '<passed in params>', message: '<Override of default Message>' }
		observable.rules = ko.observableArray(); //holds the rule Contexts to use as part of validation

		//in case async validation is occuring
		observable.isValidating = ko.observable(false);

		//the true holder of whether the observable is valid or not
		observable.__valid__ = ko.observable(true);

		observable.isModified = ko.observable(false);

		// a semi-protected observable
		observable.isValid = ko.computed(observable.__valid__);

		//manually set error state
		observable.setError = function (error) {
			observable.error(error);
			observable.__valid__(false);
		};

		//manually clear error state
		observable.clearError = function () {
			observable.error(null);
			observable.__valid__(true);
			return observable;
		};

		//subscribe to changes in the observable
		var h_change = observable.subscribe(function () {
			observable.isModified(true);
		});

		// we use a computed here to ensure that anytime a dependency changes, the
		// validation logic evaluates
		var h_obsValidationTrigger = ko.computed(extend({
			read: function () {
				var obs = observable(),
					ruleContexts = observable.rules();

				kv.validateObservable(observable);

				return true;
			}
		}, validationOptions));

		extend(h_obsValidationTrigger, validationOptions);

		observable._disposeValidation = function () {
			//first dispose of the subscriptions
			observable.isValid.dispose();
			observable.rules.removeAll();
			if (observable.isModified.getSubscriptionsCount() > 0) {
				observable.isModified._subscriptions['change'] = [];
			}
			if (observable.isValidating.getSubscriptionsCount() > 0) {
				observable.isValidating._subscriptions['change'] = [];
			}
			if (observable.__valid__.getSubscriptionsCount() > 0) {
				observable.__valid__._subscriptions['change'] = [];
			}
			h_change.dispose();
			h_obsValidationTrigger.dispose();

			delete observable['rules'];
			delete observable['error'];
			delete observable['isValid'];
			delete observable['isValidating'];
			delete observable['__valid__'];
			delete observable['isModified'];
		};
	} else if (options.enable === false && observable._disposeValidation) {
		observable._disposeValidation();
	}
	return observable;
};

function validateSync(observable, rule, ctx) {
	//Execute the validator and see if its valid
	if (!rule.validator(observable(), (ctx.params === undefined ? true : unwrap(ctx.params)))) { // default param is true, eg. required = true

		//not valid, so format the error message and stick it in the 'error' variable
		observable.setError(kv.formatMessage(
					ctx.message || rule.message,
					unwrap(ctx.params),
					observable));
		return false;
	} else {
		return true;
	}
}

function validateAsync(observable, rule, ctx) {
	observable.isValidating(true);

	var callBack = function (valObj) {
		var isValid = false,
			msg = '';

		if (!observable.__valid__()) {

			// since we're returning early, make sure we turn this off
			observable.isValidating(false);

			return; //if its already NOT valid, don't add to that
		}

		//we were handed back a complex object
		if (valObj['message']) {
			isValid = valObj.isValid;
			msg = valObj.message;
		} else {
			isValid = valObj;
		}

		if (!isValid) {
			//not valid, so format the error message and stick it in the 'error' variable
			observable.error(kv.formatMessage(
				msg || ctx.message || rule.message,
				unwrap(ctx.params),
				observable));
			observable.__valid__(isValid);
		}

		// tell it that we're done
		observable.isValidating(false);
	};

	//fire the validator and hand it the callback
	rule.validator(observable(), unwrap(ctx.params || true), callBack);
}

kv.validateObservable = function (observable) {
	var i = 0,
		rule, // the rule validator to execute
		ctx, // the current Rule Context for the loop
		ruleContexts = observable.rules(), //cache for iterator
		len = ruleContexts.length; //cache for iterator

	for (; i < len; i++) {

		//get the Rule Context info to give to the core Rule
		ctx = ruleContexts[i];

		// checks an 'onlyIf' condition
		if (ctx.condition && !ctx.condition()) {
			continue;
		}

		//get the core Rule to use for validation
		rule = ctx.rule ? kv.rules[ctx.rule] : ctx;

		if (rule['async'] || ctx['async']) {
			//run async validation
			validateAsync(observable, rule, ctx);

		} else {
			//run normal sync validation
			if (!validateSync(observable, rule, ctx)) {
				return false; //break out of the loop
			}
		}
	}
	//finally if we got this far, make the observable valid again!
	observable.clearError();
	return true;
};
;
//quick function to override rule messages
kv.localize = function (msgTranslations) {

	var msg, rule;

	//loop the properties in the object and assign the msg to the rule
	for (rule in msgTranslations) {
		if (kv.rules.hasOwnProperty(rule)) {
			kv.rules[rule].message = msgTranslations[rule];
		}
	}
};;ko.applyBindingsWithValidation = function (viewModel, rootNode, options) {
	var len = arguments.length,
		node, config;

	if (len > 2) { // all parameters were passed
		node = rootNode;
		config = options;
	} else if (len < 2) {
		node = document.body;
	} else { //have to figure out if they passed in a root node or options
		if (arguments[1].nodeType) { //its a node
			node = rootNode;
		} else {
			config = arguments[1];
		}
	}

	kv.init();

	if (config) { kv.utils.setDomData(node, config); }

	ko.applyBindings(viewModel, rootNode);
};

//override the original applyBindings so that we can ensure all new rules and what not are correctly registered
var origApplyBindings = ko.applyBindings;
ko.applyBindings = function (viewModel, rootNode) {

	kv.init();

	origApplyBindings(viewModel, rootNode);
};

ko.validatedObservable = function (initialValue) {
	if (!kv.utils.isObject(initialValue)) { return ko.observable(initialValue).extend({ validatable: true }); }

	var obsv = ko.observable(initialValue);
	obsv.errors = kv.group(initialValue);
	obsv.isValid = ko.observable(initialValue.isValid());	
	obsv.errors.subscribe(function (errors) {
		obsv.isValid(errors.length === 0);
	});

	return obsv;
};
;}));

// knockout-jqAutocomplete 0.2.1 | (c) 2013 Ryan Niemeyer |  http://www.opensource.org/licenses/mit-license
;(function(factory) {
    if (typeof define === "function" && define.amd) {
        // AMD anonymous module
        define(["knockout", "jquery", "jquery.ui"], factory);
    } else {
        // No module loader - put directly in global namespace
        factory(window.ko, jQuery);
    }
})(function(ko, $) {
    var JqAuto = function() {
        var self = this,
            unwrap = ko.utils.unwrapObservable; //support older KO versions that did not have ko.unwrap

        //binding's init function
        this.init = function(element, valueAccessor, allBindings, data, context) {
            var options = unwrap(valueAccessor()),
                config = {},
                filter = typeof options.filter === "function" ? options.filter : self.defaultFilter;

            //extend with global options
            ko.utils.extend(config, self.options);
            //override with options passed in binding
            ko.utils.extend(config, options.options);

            //get source from a function (can be remote call)
            if (typeof options.source === "function" && !ko.isObservable(options.source)) {
                config.source = function(request, response) {
                    //provide a wrapper to the normal response callback
                    var callback = function(data) {
                        self.processOptions(valueAccessor, null, data, request, response);
                    };

                    //call the provided function for retrieving data
                    options.source.call(context.$data, request.term, callback);
                };
            }
            else {
                //process local data
                config.source = self.processOptions.bind(self, valueAccessor, filter, options.source);
            }

            //handle updating the actual value
            config.select = function(event, ui) {
                if (ui.item && ui.item.actual) {
                    options.value(ui.item.actual);

                    if (ko.isWriteableObservable(options.dataValue)) {
                        options.dataValue(ui.item.data);
                    }
                }
            };

            //user made a change without selecting a value from the list
            config.change = function(event, ui) {
                if (!ui.item || !ui.item.actual) {
                    options.value(event.target && event.target.value);

                    if (ko.isWriteableObservable(options.dataValue)) {
                        options.dataValue(null);
                    }
                }
            };

            //initialize the widget
            var widget = $(element).autocomplete(config).data("ui-autocomplete");

            //render a template for the items
            if (options.template) {
                widget._renderItem = self.renderItem.bind(self, options.template, context);
            }

            //destroy the widget if KO removes the element
            ko.utils.domNodeDisposal.addDisposeCallback(element, function() {
                if (widget && typeof widget.destroy === "function") {
                    widget.destroy();
                    widget = null;
                }
            });
        };

        //the binding's update function. keep value in sync with model
        this.update = function(element, valueAccessor) {
            var options = unwrap(valueAccessor()),
                value = unwrap(options && options.value);

            element.value = value;
        };

        //if dealing with local data, the default filtering function
        this.defaultFilter = function(item, term) {
            term = term && term.toLowerCase();
            return (item || item === 0) && ko.toJSON(item).toLowerCase().indexOf(term) > -1;
        };

        //filter/map options to be in a format that autocomplete requires
        this.processOptions = function(valueAccessor, filter, data, request, response) {
            var item, index, length,
                items = unwrap(data) || [],
                results = [],
                props = this.getPropertyNames(valueAccessor);

            //filter/map items
            for (index = 0, length = items.length; index < length; index++) {
                item = items[index];

                if (!filter || filter(item, request.term)) {
                    results.push({
                        label: props.label ? item[props.label] : item.toString(),
                        value: props.input ? item[props.input] : item.toString(),
                        actual: props.value ? item[props.value] : item,
                        data: item
                    });
                }
            }

            //call autocomplete callback to display list
            response(results);
        };

        //if specified, use a template to render an item
        this.renderItem = function(templateName, context, ul, item) {
            var $li = $("<li></li>").appendTo(ul),
                itemContext = context.createChildContext(item.data);

            //apply the template binding
            ko.applyBindingsToNode($li[0], { template: templateName }, itemContext);

            //clean up
            $li.one("remove", ko.cleanNode.bind(ko, $li[0]));

            return $li;
        };

        //retrieve the property names to use for the label, input, and value
        this.getPropertyNames = function(valueAccessor) {
            var options = ko.toJS(valueAccessor());

            return {
                label: options.labelProp || options.valueProp,
                input: options.inputProp || options.labelProp || options.valueProp,
                value: options.valueProp
            };
        };

        //default global options passed into autocomplete widget
        this.options = {
            autoFocus: true,
            delay: 50
        };
    };

    ko.bindingHandlers.jqAuto = new JqAuto();
});
/*jslint forin: true, sloppy: true, vars: true, white: true */
/*global document, jQuery, log */

/**
 * Our way for Prototypal Inheritance
 * 
 * @see javascript.crockford.com/prototypal.html
 * @author Douglas Crockford <douglas@crockford.com>
 */
if (typeof Object.create !== 'function') {
    Object.create = function (o) {
        function F() {}
        F.prototype = o;
        return new F();
    };
}

/*jslint forin: true, sloppy: true, unparam: true, vars: true, white: true */
/*global document, jQuery, log */

/**
* Bridge to add plugins that are based on defined objects
* 
 * With the following approach it is possible to access the underlying
* object via the data method of jQuery, e.g. the following code would
* open the second expandable element on the page:
* jQuery(".expandable").eq(1).data("expandable").open();
* 
 * @author Finn Pröpper, Sapient GmbH <fproepper@sapient.com>
*/
jQuery.createPlugin = function(name, object) {
    var $ = jQuery;
    $.fn[name] = function(options) {
        return this.each(function() {
            if (!$.data(this, name)) {
                $.data(this, name, Object.create(object).construct($(this), options));
            }
        });
    };
};


var eonde = window.eonde || {};

(function(window, document, $, eonde) {
    
    eonde.plugin = eonde.plugin || {};
    
    /**
     * Clickable teaser
     * 
     * Makes a complete teaser area clickable. The script first looks for
     * a more link ("a.action"). If it finds exactly one it transforms the
     * cursor to a pointer on hover and forwards the client to the URL of
     * that link on a click.
     * If the clickable area is a video, no click event is fired to maintain
     * the video functionality.
     * 
     * @author Finn Pröpper, Sapient GmbH <fproepper@sapient.com>
     * @author Robin Rush, Sapient GmbH <rrush@sapient.com>
     */
    eonde.plugin.clickableTeaser = {
        /**
         * Default values
         * 
         * @type {object}
         */
        options : {
            moreLinkHoverClassName : "hover"
        },
        
        /**
         * Mouseenter event
         * 
         * Called when cursor enters the teaser.
         * 
         * @param {event} e The jQuery event object
         */
        mouseEnterEvent : function(e) {
            $(e.currentTarget).css("cursor", "pointer");
            this.moreLink.addClass(this.options.moreLinkHoverClassName);
        },
        
        /**
         * Mouseleave event
         * 
         * Called when cursor leaves the teaser.
         * 
         * @param {event} e The jQuery event object
         */
        mouseLeaveEvent : function(e) {
            $(e.currentTarget).css("cursor", "");
            this.moreLink.removeClass(this.options.moreLinkHoverClassName);
        },
        
        /**
         * Click event
         * 
         * Called when user clicks anywhere in the teaser.
         * 
         * @param {event} e The jQuery event object
         */
        clickEvent : function(e) {
			var targetURL = this.moreLink.attr("href") != '#' ? this.moreLink.attr("href") : this.moreLink.data("ova-url");
            if ($(e.target).closest(".mejs-container").length) {
                return;
            }
			if ($(e.target).closest(".stage").length) {
                return;
            }
            if ($(e.target).is("a")) {
                return;
            }
            if (this.moreLink.attr("class").indexOf("lightbox-") !== -1) {
                this.moreLink.trigger("click");
                return;
            }
            if (this.moreLink.attr("target") !== "_blank") {
                window.location.href = targetURL;
            } else {
                window.open(targetURL);
            }
        },

        /**
         * Constructor function
         * 
         * @see init()
         * @param {jQuery} Element which shall be used for the expandable
         * @param {object} Optional parameters
         */
        construct : function(element, options) {
            // Default stuff
            this.options = $.extend({}, this.options, options);
            this.element  = element;
            this.domElement = element.get(0);
            // Collect more links
            this.moreLink = this.element.find("a");
            // Init object
            this.init();
            return this;
        },
        
        /**
         * Init function
         */
        init : function() {
            if (this.moreLink.length !== 1) {
                return;
            }
            var self = this;
            this.element
                .hover(
                    function (e) {
                        self.mouseEnterEvent(e);
                    },
                    function (e) {
                        self.mouseLeaveEvent(e);
                    }
                )
                .bind("click", function(e) {
                    self.clickEvent(e);
                })
            ;
        }

    };
    
    // Define plugin
    $.createPlugin("clickableTeaser", eonde.plugin.clickableTeaser);

    // Controller
    eonde.clickableTeasers = (function () {
        var init = function() {
            /**
             * We have one teaser type that links to more than one page.
             * That's why there is some more magic below.
             */
            //var productInfo = $('.product_info').parent('article.teaser');
            $('article, .article, .js-onlineOrder, .js-downloadContainer').each(function() {
					var teaser = $(this);
					if (teaser.find(".videoWrapper").length == 0 && teaser.find(".videoContainer").length == 0) {
						var moreLinks = teaser.find("a");
						var moreArticles = teaser.find(".article");
						if (moreLinks.length === 1) {
							teaser.clickableTeaser();
						}
						if (moreLinks.length === moreArticles.length) {
							moreArticles.clickableTeaser();
						}
					}
                })
            ;
        };
        return {
            init : init
        };
    }());
    
}(window, document, jQuery, eonde));

// Bind init function to DOM load
jQuery(eonde.clickableTeasers.init);



/**
 * So, the story for this best bugfix ever goes like this:
 * There was this clever webdeveloper (me) who was using a very flexible
 * grid system that was not based on ugly fixed pixels but on relative
 * values. A very modern approach with several advantages and only little
 * disadvantages. One of these disadvantages were recurrend
 * comma-separated pixel values (eeek) like 472.5 Pixes. Now, we all know
 * that browsers don't like that so much but browsers are clever, too.
 * Browsers find solutions for these kind of problems and fix them
 * pretty well. So we indeed had one teaser now with a calculated width
 * of 472.5 Pixels. And there was an image placed in that teaser with a
 * width of 473 Pixels. Some browsers adjusted the width of the teaser to
 * 472 Pixels. So there was one pixel over for the image. Well, this
 * teaser got highlighted now - means: It got a red background color.
 * And suddenly this one pixel gap was visible. What a drama!
 * 
 * Now honestly, that's just one pixel. Who cares for one pixel? Most
 * people go to a website and read content or look at nasty pictures of
 * naked ladies. But there are some guys who call themself "Quality
 * Assurance Master of the Universe". They care about pixels. Even the
 * client does not care. Really, I know our main contact for this fancy
 * project here. He's a clever guy. He would say something like "C'mon,
 * get a life, I don't care about a pixel. You can write tenthousand
 * better lines of code while solving this problem, so go and write some
 * elegant frontend code for me instead of caring for one fucking pixel."
 * But these QA guys are not like the client. They need to log defects.
 * They love defects. They love to place defects in systems like JIRA.
 * When they go to amusement parks they buy gingerbread hearts for their
 * beloved defects at home. Most of the time there is something like
 * "I <3 BUGS" written on these hearts.
 * 
 * And so it came that for this one pixel a defect was opened. And it was
 * assigned to me. Well, sometimes I hate my job. But this time my dear
 * friend, this time you won't get me. So I decided to write one of the
 * most dirty fixes I ever wrote. And within ten seconds the lines below
 * were written. I have to admit: Somehow I like this little guy. It
 * fulfills all requirements that a nasty hotfix needs: Short, stupid,
 * unexpected, not maintainable, not understandable, for one specific
 * purpose only. It's a masterpiece. Please treat it with care, I'm
 * really proud.
 * 
 * PS: Don't take life too serious. And the QA people on this project
 * were in fact cool guys. I just couldn't resist ;-)
 */
jQuery(function() {
    $("#content .teaser-main-multi-highlight").each(function() {
        var victim = $(this);
        if (victim.find("img.visual").width() !== 473) {
            return;
        }
        victim.css("width", 473);
    });
});

/*This is indeed a masterpiece. Not just the bug fix, but also the 
reason behind it. Too bad many people either won't get 
to read this or even understand what these four beautiful lines do.*/
$(document).ready( function() {

    function resetVisitorTypes() {

	if (typeof CQ_Analytics != 'undefined'
			&& typeof CQ_Analytics.ClientContextUtils != 'undefined') {

        if(CQ.WCM && CQ.WCM.isEditMode(true)) {
            CQ_Analytics.ClientContextUtils.onStoreInitialized("profile", function(
				event) {
				 if(CQ_Analytics.ClientContextMgr.getVisitorId()==''){  
		                CQ_Analytics.ProfileDataMgr.loadProfile("anonymous");}
				resetAllVisitorSwitchesFromUserType();

			});
        }
        else {
		 if(CQ_Analytics.ClientContextMgr.getVisitorId()==''){  
		                CQ_Analytics.ProfileDataMgr.loadProfile("anonymous");}
				resetAllVisitorSwitchesFromUserType();
			CQ_Analytics.ClientContextUtils.onStoreInitialized("profile", function(
				event) {


		});
        }
	}
}

function resetAllVisitorSwitchesFromUserType() {
	var userType=$("#switcher_Type").attr("data-cq-attr");
	
	if (userType=="pk") {
		CQ_Analytics.ProfileDataMgr.setProperty('userType', 'RC');

	} else if (userType=="gk") {
		CQ_Analytics.ProfileDataMgr.setProperty('userType', 'BC');
	} 

	var userType = CQ_Analytics.ProfileDataMgr.getProperty('userType');

	if (userType != null && userType != '' && $("#switcher_Type").length > 0 ) {
		updateVisitorSwitcher(userType);
	}

}

var rcSwitchScript = "CQ_Analytics.ProfileDataMgr.setProperty('userType','RC')";
var bcSwitchScript = "CQ_Analytics.ProfileDataMgr.setProperty('userType','BC')";

function updateVisitorSwitcher(vt) {

	if (vt == "BC") {
		switchBC();
	} else if (vt == "RC") {
		switchRC();
	}
}

function switchBC() {

    var homePathPath=$("#switcher_URL").attr("data-cq-attr");
	$(".vtSwitchText").each(function(index) {
		$(this).text(eonde.i18n.get("rcSwitchText"));
	});

	$(".vtSwitchLink").each(function(index) {
		$(this).attr('onmousedown', rcSwitchScript);
	});

	$(".vtLink").each(function(index) {
		$(this).attr('href', homePathPath);
	});

}

function switchRC() {
    var homePathPath=$("#switcher_URL").attr("data-cq-attr");

	$(".vtSwitchText").each(function(index) {
		$(this).text(eonde.i18n.get("bcSwitchText"));
	});
	$(".vtSwitchLink").each(function(index) {
		$(this).attr('onmousedown', bcSwitchScript);
	});

	$(".vtLink").each(function(index) {
		$(this).attr('href', homePathPath);
	});

}

resetVisitorTypes();

});
// jQuery.XDomainRequest.js
// Author: Jason Moon - @JSONMOON
// IE8+
(function($){

if (!$.support.cors && $.ajaxTransport && window.XDomainRequest) {
  var httpRegEx = /^https?:\/\//i;
  var getOrPostRegEx = /^get|post$/i;
  var sameSchemeRegEx = new RegExp('^'+location.protocol, 'i');
  var htmlRegEx = /text\/html/i;
  var jsonRegEx = /\/json/i;
  var xmlRegEx = /\/xml/i;
  
  // ajaxTransport exists in jQuery 1.5+
  $.ajaxTransport('* text html xml json', function(options, userOptions, jqXHR){
    // XDomainRequests must be: asynchronous, GET or POST methods, HTTP or HTTPS protocol, and same scheme as calling page
    if (options.crossDomain && options.async && getOrPostRegEx.test(options.type) && httpRegEx.test(options.url) && sameSchemeRegEx.test(options.url)) {
      var xdr = null;
      var userType = (userOptions.dataType||'').toLowerCase();
      return {
        send: function(headers, complete){
          xdr = new XDomainRequest();
          if (/^\d+$/.test(userOptions.timeout)) {
            xdr.timeout = userOptions.timeout;
          }
          xdr.ontimeout = function(){
            complete(500, 'timeout');
          };
          xdr.onload = function(){
            var allResponseHeaders = 'Content-Length: ' + xdr.responseText.length + '\r\nContent-Type: ' + xdr.contentType;
            var status = {
              code: 200,
              message: 'success'
            };
            var responses = {
              text: xdr.responseText
            };
            try {
              if (userType === 'html' || htmlRegEx.test(xdr.contentType)) {
                responses.html = xdr.responseText;
              } else if (userType === 'json' || (userType !== 'text' && jsonRegEx.test(xdr.contentType))) {
                try {
                  responses.json = $.parseJSON(xdr.responseText);
                } catch(e) {
                  status.code = 500;
                  status.message = 'parseerror';
                  //throw 'Invalid JSON: ' + xdr.responseText;
                }
              } else if (userType === 'xml' || (userType !== 'text' && xmlRegEx.test(xdr.contentType))) {
                var doc = new ActiveXObject('Microsoft.XMLDOM');
                doc.async = false;
                try {
                  doc.loadXML(xdr.responseText);
                } catch(e) {
                  doc = undefined;
                }
                if (!doc || !doc.documentElement || doc.getElementsByTagName('parsererror').length) {
                  status.code = 500;
                  status.message = 'parseerror';
                  throw 'Invalid XML: ' + xdr.responseText;
                }
                responses.xml = doc;
              }
            } catch(parseMessage) {
              throw parseMessage;
            } finally {
              complete(status.code, status.message, responses, allResponseHeaders);
            }
          };
          // set an empty handler for 'onprogress' so requests don't get aborted
          xdr.onprogress = function(){};
          xdr.onerror = function(){
            complete(500, 'error', {
              text: xdr.responseText
            });
          };
          var postData = '';
          if (userOptions.data) {
            postData = ($.type(userOptions.data) === 'string') ? userOptions.data : $.param(userOptions.data);
          }
          xdr.open(options.type, options.url);
          xdr.send(postData);
        },
        abort: function(){
          if (xdr) {
            xdr.abort();
          }
        }
      };
    }
  });
}

})(jQuery);

jQuery(document).ready(function(){
    var loginContainer = $('.loginClass');
    if (loginContainer.length === 0) {
        return;
    }
    

    // Declaring variables for search-results page
    var sprachenFilter=$('.sprachen').attr('data-cq-attr');
    var typFilter=$('.typ').attr('data-cq-attr');
    var sortierenNachFilter=$('.sortierenNach').attr('data-cq-attr');
    var UserTypeFilter=$('.UserTypeFilter').attr('data-cq-attr');
    var authorizationHeaderVal = eonde.Config.serviceURLs.authorization;
	var loginMaintenanceUrl=eonde.Config.serviceURLs.loginMaintenanceURL;


    // filter reset gfunctionality for search-results page
    $('.search-form-container .filterReset').on('click',function(){
        $('.search-form-container .sprachen').find('label.radio input').removeAttr('checked');
        $('.search-form-container .typ').find('label.radio input').removeAttr('checked');
        $('.search-form-container .typ').find('label.radio input[value='+typFilter+']').attr("checked","checked");

        $('.search-form-container .sortierenNach').find('label.radio input').removeAttr('checked');
        $('.search-form-container .sortierenNach').find('label.radio input[value='+sortierenNachFilter+']').attr("checked","checked");

        $('.search-form-container .UserTypeFilter').find('label.radio input').removeAttr('checked');
        $('.search-form-container .UserTypeFilter').find('label.radio input[value='+UserTypeFilter+']').attr("checked","checked");

        $('.search-form-container .sprachen').find('label.radio input[value='+sprachenFilter+']').trigger('click');



    });

     $('.login-container').on('click',function(){
        if($('.dl-trigger').hasClass('dl-active')){
            $('.dl-trigger').trigger("click");
        }
         if($('.search-form-container').hasClass('activeSearch')){
            $('.searchform').trigger("click");
         }
    });

    
    $('.navbar-form .search-form-container').on('click',function(e){
        if($('.dl-trigger').hasClass('dl-active')){
            $('.dl-trigger').trigger("click");
        }
        if($('.login-container').hasClass('open')){
            $('.login-container').trigger("click"); 
        }
        if(($(window).width() <= 1023)){
            if(e.target.id =="search-form-submit") {
                return;
            }
            else {
                e.preventDefault();
                if ($('.searchBox.search-form-container').css ("display") == "block") {
                    $('.searchBox.search-form-container').css ("display", "none");
                } else {
                    $('.searchBox.search-form-container').css ("display", "block");
                }
                $(this).toggleClass('activeSearch');
            }
        }
        
    });
    
    $('.search-accordion .panel-default .panel-heading .panel-title a').on('click',function(){
        var self=$(this);
        if(self.children('span').hasClass('icon-stage_teaser_pfeil_oben')){
            self.children('span').removeClass('icon-stage_teaser_pfeil_oben').addClass('icon-stage_teaser_pfeil_unten');
        }
        else{
            self.children('span').removeClass('icon-stage_teaser_pfeil_unten').addClass('icon-stage_teaser_pfeil_oben');
        }

    });

    $(window).on("resize", function () {

        /*If the browser is IE8 then do nothing. Also it's not advisable to use $.browser.msie because 
        * sometimes IE8 is slow and $.browser is undefined.*/
        if (eonde.Utils.isIE8) {
            return;
        }

        var windowWidth = $(window).width();

        if (windowWidth > 1023){
            $('.search-form-container').removeClass('activeSearch');
            $('.searchBox.search-form-container').removeAttr('style');
            $('.searchDiv').removeClass('searchBorder');
        }

        //force the width of login component to have same size as header for viewport M
        if (windowWidth < 1024) {
            $(".dropdown-menu .loginClass").css("width", windowWidth + "px");
        } else {
            $(".dropdown-menu .loginClass").removeAttr ("style");
        }

    });

    $('#pageGenTime').val(new Date().getTime());
    $('.pageGenTime').val(new Date().getTime());

    $('#headerDiv .loginClass').on('click', function (e) { 
        e.stopPropagation(); 
    });
    
    // Following code is responsible to prevent drop-down getting hide on right click
     if (!/MSIE/.test(navigator.userAgent)) {
        // obtain a reference to the original handler
        var _clearMenus = $._data(document, "events").click.filter(function (el) {
            return el.namespace === 'bs.data-api.dropdown' && el.selector === undefined
        })[0].handler;

        // disable the old listener
        $(document)
        .off('click.bs.data-api.dropdown', _clearMenus)
        .on('click.bs.data-api.dropdown', function (e) {
            // call the handler only when not right-click
            e.button === 2 || _clearMenus()
        })
    }
    
    
    ko.validation.init({
        parseInputAttributes: false,
        decorateInputElement: true,
        errorElementClass: 'loginElementError',
        errorMessageClass: 'loginInputError',
        insertMessages: false,
        messagesOnModified: true
    });
    
    
    var headerLoginModel = ValidatedViewModel(function (container) {
        var self = this;
        self.showLogin = ko.observable(true);
        var $container = $(container); //caching the container object
        /*There must be a better way to detect IE11*/
        if($.browser && $.browser.msie  && parseInt($.browser.version, 10) > 10) {
            $('input:text, input:password, textarea').each(function(){
                var $this = $(this);
                $this.data('placeholder', $this.attr('placeholder'))
                .focus(function(){$this.removeAttr('placeholder');})
                .blur(function(){$this.attr('placeholder', $this.data('placeholder'));});
            });
            }
            if(!$('html').hasClass('no-touch')){
            $('input.form-text').bind('copy paste', function (e) {
                e.preventDefault();
            });
        }
        var $overlay = $container.find('.forOverlay');
        //Adding radio button label handling
        $container.find("label[for=conumptionOption1], label[for=conumptionOption2]").click(function(e) {
            $(this).parents("ul").find("input[type=radio]").trigger("click");
        });
        
        
        //observable init
        self.optionUser = ko.observable('option1');
        self.email = ko.observable();
        self.password = ko.observable();
        self.logError = ko.observable('');
        self.userType = ko.observable();
        
        var formdata = {
            mail : self.email,
            pass : self.password
        }
        self.removeOverlay = function() {
            $overlay.removeClass('overlay');
        }

        self.addOverlay = function() {
            $overlay.addClass('overlay');
        }

        //navigation init
        self.currentStep = ko.observable();
        var path = CQ.shared.HTTP.getPath();

        if (path.indexOf("/pk/") >= 0) {
            CQ_Analytics.ProfileDataMgr.setProperty('userType', 'RC');

        } else if (path.indexOf("/gk/") >= 0) {
    
            CQ_Analytics.ProfileDataMgr.setProperty('userType', 'BC');
        }
        var customerChecker =  CQ_Analytics.ProfileDataMgr.getProperty('userType');



        self.getAction=function(item,event) {
			var isFormSubmit=true;
            var isHeaderLogin=$('#header_login').attr('data-attr');
            var bcScgURL1=$('#bc_scg_url_1').attr('data-attr');
			var bcScgURL2=$('#bc_scg_url_2').attr('data-attr');

            if(customerChecker=="RC") {
				item.action=$('#rc_login_service_url').attr('data-attr');
            } else {
                if(isHeaderLogin && self.optionUser()=="option1" && bcScgURL1.length >0) {
					var newWin = window.open(bcScgURL1,"_blank");
					newWin.focus();
					isFormSubmit=false;
                } else if(isHeaderLogin && self.optionUser()=="option2" && bcScgURL2.length >0) {
					var newWin = window.open(bcScgURL2,"_blank");
					newWin.focus();
					isFormSubmit=false;
				}else if(self.optionUser()=="option1") {
					item.action=$('#rc_login_service_url').attr('data-attr');
                } else {
					 item.action=$('#bc_login_service_url').attr('data-attr');
                }

            }
            return isFormSubmit;

        }
        var callbackMaintenance = function(data, event) {
            if(data.showMaintenancePage === true){
                self.showLogin(false);
                if(self.optionUser()=="option1" && customerChecker=="BC") { 
                    self.changeSection(self.currentStep() + 1, event);
                }
            } else if(data.showMaintenancePage === false){
                self.showLogin(true);
               // self.showLogin(false);
                if(self.optionUser()=="option1" && customerChecker=="BC") { 
                    self.changeSection(self.currentStep() + 1, event);
                }
        
            }
        }
        self.maintenance = function(event) {
            self.addOverlay();
            $.ajax({
                beforeSend: function(xhr) {
                    xhr.setRequestHeader('Authorization', authorizationHeaderVal);
                },
                dataType: "json",
                type : 'GET',
                url:  loginMaintenanceUrl,
                timeout: 15000
            }).done(function(data){
                callbackMaintenance(data, event);
                self.removeOverlay();
            }).fail(function(data){
                //No response from maintenance web service; so make showLogin true
                //self.showLogin(true);
                self.showLogin(false);
                if(self.optionUser()=="option1" && customerChecker=="BC") { 
                    self.changeSection(self.currentStep() + 1, event);
                }
                self.removeOverlay();
            }).error(function(){
                self.showLogin(false);
                if(self.optionUser()=="option1" && customerChecker=="BC") { 
                    self.changeSection(self.currentStep() + 1, event);
                }
                self.removeOverlay();
            });
        }
        if(customerChecker === "BC"){

            self.currentStep(1);
            self.userType(1);
        } else {
            self.maintenance();
            self.currentStep(2);
            self.optionUser("option1");
        }

        

        self.stepForward = function (item, event) {
            
            if(self.currentStep()>=1){
                if(self.optionUser()=="option1" && customerChecker=="BC") {
                    self.maintenance(event);
                }
                else {
                self.changeSection(self.currentStep() + 1, event);
            }
                
            }
        }

        self.stepBack = function () {
            self.currentStep(1);
            self.email('');
            self.password('');
            self.changeSection(self.currentStep());
            /*        if (self.currentStep() > 1) {
            self.changeSection(self.currentStep() - 1);
            }*/
        }
        
        self.changeSection = function(destIdx, event){
            try { self.removeConstraintGroup('step2'); } catch (e) { }
            if(destIdx>1) { 
                try{
					//var password=$('.loginPassword').val();
                    var password = $(event.target).closest('.loginClass form').find('.loginPassword').val();
                    self.password(password);
                    self.applyConstraintGroup('step' + self.currentStep());
                } 
                catch(e){} 
            }
            
            var errorCount = self.errors().length;
            self.errors.showAllMessages();
            if(self.currentStep() === 1 ) {
                errorCount = 0;
                self.email.isModified(false);
                self.password.isModified(false);
            }
            if(errorCount===0){
                
                if(destIdx === 3){
                    $(event.target).closest('.loginClass form').submit();
                    self.email('');
                    self.password('');
                    self.email.isModified(false);
                    self.password.isModified(false);
                }  
                else{
                    self.currentStep(destIdx);
                }
                return true;
            }   
            return false;
        }

        
        self.constraintGroups = {
            step1: {
                optionUser: { required: true}
            },
            step2: {
                email: { 
                    required: {message : eonde.i18n.get('login.error.required')},
                    email: {message : eonde.i18n.get('login.error.validID')}                
                },
                password: { 
                    required: {message : eonde.i18n.get('login.error.password')}
                }
            }
        }    
        this.errors = ko.validation.group(this);
        var errorMessage = [], errorContent = '';
        var $backendError = $('span.loginBackError');
        if($backendError.attr('data-message') !== ''){

    		var errorCode = $backendError.attr('data-message');
    		
            if(errorCode !==''){
                errorCode = eonde.i18n.get(errorCode);
                errorMessage.push({
                    message: errorCode
                });
            }

            for(var i = 0; i < errorMessage.length; i++){
                errorContent += '<p>'+errorMessage[i].message+'</p>';
            };
    		
            if(errorContent !== '' && !$("#content").hasClass("home_page")){ 
                $('div.loginbackendError').html(errorContent);
                $('div.loginbackendError').removeClass("hide");
            }
        }
    });
    
    $('.loginClass').each(function(){ 
        var loginObj = new headerLoginModel(this); 
        //loginObj.init();
        ko.applyBindings(loginObj, this); 
		$(this).css("height" , "auto").css("overflow", "auto");
        if (eonde.Utils.isLargeViewPort()) {
            $(this).css("min-height" , "330px");
        } else if (eonde.Utils.isMediumViewPort()) {
            $(this).css("min-height" , "386px");
        } else {
            $(this).css("min-height" , "auto");
        }
	});
    $('.one-column .loginClass').each(function(){
        $(this).css("min-height" , "initial");
    });
    $('.dropdown-menu .loginClass').each(function(){
        $(this).css("min-height" , "initial");
    });
});
$(document).ready(function() {
	 if($('.lt-ie9').length) {
        setTimeout(function() {
                $('.com-100-smarthelp').removeAttr('style');
        },7000);
    }
    else{
		$('.com-100-smarthelp').removeAttr('style');
    }
	
	$('.widerServiceContact').removeAttr('style');
    var widerServiceContactDiv = $('.widerServiceContact');
    /*if (widerServiceContactDiv.length === 0) {
        return;
    } removing as was creating the component was hidden in GK page*/
    var resizeFlag=true;
    var windowSize=$(window).width();
	$('#serviceContactDiv').removeAttr('style');
	if(!eonde.Utils.isLargeViewPort()){
		$('#serviceContactDiv.smarthelp_container_m .smarthelp_servicecontact').removeAttr('style');
	} else{
		$('.smarthelp_servicecontact').removeAttr('style');
    }

	$(window).on("resize", function (resizeEvent) {
		if(eonde.Utils.isLargeViewPort()) {
            var windowResized=$(window).width();
            if(windowSize!=windowResized){
			$('#serviceContactDiv.smarthelp_container-xs').removeClass('smarthelp_container_m');
            $('#serviceContactDiv .smarthelpholder figure').removeAttr('style');
            $('#serviceContactDiv .smarthelp_servicecontact').removeAttr('style');

            windowSize=windowResized;
            }

			var open = false;
			$("#serviceContactDiv.smarthelp_container-md .ApsContainer").css({
				'height' : '0px' ,
				'display' : 'none'
			});
            var apsLength = $("#serviceContactDiv.smarthelp_container-md .ApsContainer").length;

			$("#serviceContactDiv.smarthelp_container-md .heading").on('click',function(e){
					$(".ui-autocomplete").each(function(){
						if($(this).css('z-index') == '9001'){
							$(this).css('position', 'fixed');
							return;
						}
					});
					e.stopImmediatePropagation();
                	$('.darkener').toggleClass('hidden');

                if(apsLength > 0){
                    if(open ){
                        $("#serviceContactDiv.smarthelp_container-md .ApsContainer").animate({height : '0px'}, function(){
                            $('#serviceContactDiv.smarthelp_container-md .ApsContainer').css('display', 'none');
                        });
                        open = false;
                    }
                    else {
						$('.login-container').removeClass('open');
                        $("#serviceContactDiv.smarthelp_container-md .ApsContainer").css("display","block");
                        $("#serviceContactDiv.smarthelp_container-md .ApsContainer").animate(	{'height':"320px"}, function(){
							$("#serviceContactDiv.smarthelp_container-md .ApsContainer").css("height","auto");
                        });

                        open = true;
                    }
                }

                else{
				if($("#serviceContactDiv .service-contact-row-2").height() > 0){
					$("#serviceContactDiv .service-contact-row-2").animate({'height':"0px"},function(){
					$("#serviceContactDiv .service-contact-row-2").css("display","none");
					$("#serviceContactDiv.smarthelp_container-md").trigger("mouseleave");
					});
					}
					else{
					$('.login-container').removeClass('open');
					//$("#serviceContactDiv .service-contact-row-2").removeAttr("style");
					$("#serviceContactDiv .service-contact-row-2").css("display","block");
					$("#serviceContactDiv .service-contact-row-2").animate({'height':"299px"},function(){
					$("#serviceContactDiv .service-contact-row-2").css("height","auto");
					});
					}
           		 }
				
			});

			$('#serviceContactDiv .closeButton').click(function(e) {

				e.stopImmediatePropagation();
				//$("#serviceContactDiv .service-contact-row-2").slideUp();
                    if(apsLength > 0) {
                        $("#serviceContactDiv.smarthelp_container-md .ApsContainer").animate({'height':"0px"},function(){
                            $("#serviceContactDiv.smarthelp_container-md .ApsContainer").css("display","none");
                            $("#serviceContactDiv.smarthelp_container-md").trigger("mouseleave");
                        });
					apsContactClosed = false;
                    }
                    else {
						$("#serviceContactDiv .service-contact-row-2").animate({'height':"0px"},function(){
							$("#serviceContactDiv .service-contact-row-2").css("display","none");
                            $("#serviceContactDiv.smarthelp_container-md").trigger("mouseleave");
						});}


				$('.darkener').addClass('hidden');
            });
			$(function() {
				var $pCont = $("#serviceContactDiv.smarthelp_container-md");
				$pCont.css('margin-right','-360px');
				$("#serviceContactDiv.smarthelp_container-md").hover(function(ev) { 
				$('#serviceContactDiv .smarthelpholder').stop(true, false).fadeOut("fast");
				$pCont.animate({"margin-right":"-62px"}, {queue: false});
				},function(ev){
				if($('#serviceContactDiv .service-contact-row-2').css('display') == 'block' ) {
						//ev.stopImmediatePropagation();
						$pCont.stop();
					}
				else{
				$('#serviceContactDiv .smarthelpholder').stop(true, true).fadeIn("slow");
				$pCont.animate({"margin-right":"-360px"}, {queue: false});
				}
				}
					//$pCont.stop().animate({marginRight: ev.type=="mouseenter" ? 0 : -330}, 700);
				);
				/*$(".smarthelp_container-md").mouseleave(function() {
					if($('#serviceContactDiv .service-contact-row-2').css('display') == 'block' && $pCont.css('margin-right') == '0px') {
						$pCont.stop();
					}
				});*/

			});
		};
		if(!eonde.Utils.isLargeViewPort()){
            var windowResized=$(window).width();
            if(windowSize!=windowResized){
                $("#serviceContactDiv .smarthelpholder").removeAttr('style');
                $("#serviceContactDiv.smarthelp_container-md").off('hover');
                $("#serviceContactDiv.smarthelp_container-md .heading").off('click');
                $('#serviceContactDiv .closeButton').off('click');
                $('#serviceContactDiv .smarthelp_servicecontact .service-contact-row-2').removeAttr('style');
				windowSize=windowResized;
            }

			$(function () {
				$('#serviceContactDiv.smarthelp_container-xs').addClass('smarthelp_container-xs smarthelp_container_m');
				var $pCont = $("#serviceContactDiv.smarthelp_container_m .smarthelp_servicecontact");
                if(resizeFlag){
                    var $pContHeight=$('.service-contact-row-1').height()+$('.service-contact-row-2').height();;
                    $pCont.css('bottom','0px');
                }
                else{
                    $pCont.css({'bottom':'55px',"height":"auto"});
                }

				$("#serviceContactDiv.smarthelp_container_m .smarthelpholder #servicecontact").click(function() {
					resizeFlag=false;
					if(eonde.Utils.isSmallViewPort()){

                        $pCont.animate({height:$pContHeight+'px'},10,function(){
                            $pCont.css("height","auto");
                        });
                        $('#serviceContactDiv.smarthelp_container_m .smarthelp_servicecontact').css({"bottom":"55px","display":"block"});

                    }
					else {
                       $pCont.animate({height:$pContHeight+'px',width:'44%'},10,function(){
							$pCont.css('height','auto');
                        });
                        $('#serviceContactDiv.smarthelp_container_m .smarthelp_servicecontact').css({"bottom":"55px","display":"block"});
                    }
					$('.darkener').toggleClass('hidden');
					$('#serviceContactDiv.smarthelp_container_m .smarthelp_servicecontact h3 figure').animate({'bottom':'1'},10);
                    $('#serviceContactDiv #servicecontact').parent('figure').css('display', 'none');
					$('#serviceContactDiv .closeButton').parent('figure').css('display', 'block');
                    $('#serviceContactDiv .smarthelp_servicecontact').css({'overflow':'visibile'});

				});
			});
			$('#serviceContactDiv .closeButton').click(function() {
                resizeFlag=true;
				$("#serviceContactDiv.smarthelp_container_m .smarthelp_servicecontact").animate({height: '0'});
				$('.darkener').addClass('hidden');
				$('#serviceContactDiv.smarthelp_container_m .smarthelp_servicecontact h3 figure').animate({'bottom':'-62'});
                $('#serviceContactDiv.smarthelp_container_m .smarthelp_servicecontact').css({"bottom":"-2px","display":"none"});
				$('#serviceContactDiv #servicecontact').parent('figure').css('display', 'block');
				$('#serviceContactDiv .closeButton').parent('figure').css('display', 'none');
			});
		}
	});
});
$(document).ready(function() {
	 if($('.lt-ie9').length) {
        setTimeout(function() {
                $('.com-100-smarthelp').removeAttr('style');
        },7000);
    }
    else{
		$('.com-100-smarthelp').removeAttr('style');
    }
	
	$('.widerServiceContact').removeAttr('style');
    var widerServiceContactDiv = $('.widerServiceContact');
    /*if (widerServiceContactDiv.length === 0) {
        return;
    } removing as was creating the component was hidden in GK page*/
    var resizeFlag=true;
    var windowSize=$(window).width();
	$('#serviceContactDiv').removeAttr('style');
	if(!eonde.Utils.isLargeViewPort()){
		$('#serviceContactDiv.smarthelp_container_m .smarthelp_servicecontact').removeAttr('style');
	} else{
		$('.smarthelp_servicecontact').removeAttr('style');
    }

	$(window).on("resize", function (resizeEvent) {
		if(eonde.Utils.isLargeViewPort()) {
            var windowResized=$(window).width();
            if(windowSize!=windowResized){
			$('#serviceContactDiv.smarthelp_container-xs').removeClass('smarthelp_container_m');
            $('#serviceContactDiv .smarthelpholder figure').removeAttr('style');
            $('#serviceContactDiv .smarthelp_servicecontact').removeAttr('style');

            windowSize=windowResized;
            }

			var open = false;
			$("#serviceContactDiv.smarthelp_container-md .ApsContainer").css({
				'height' : '0px' ,
				'display' : 'none'
			});
            var apsLength = $("#serviceContactDiv.smarthelp_container-md .ApsContainer").length;

			$("#serviceContactDiv.smarthelp_container-md .heading").on('click',function(e){
					$(".ui-autocomplete").each(function(){
						if($(this).css('z-index') == '9001'){
							$(this).css('position', 'fixed');
							return;
						}
					});
					e.stopImmediatePropagation();
                	$('.darkener').toggleClass('hidden');

                if(apsLength > 0){
                    if(open ){
                        $("#serviceContactDiv.smarthelp_container-md .ApsContainer").animate({height : '0px'}, function(){
                            $('#serviceContactDiv.smarthelp_container-md .ApsContainer').css('display', 'none');
                        });
                        open = false;
                    }
                    else {
						$('.login-container').removeClass('open');
                        $("#serviceContactDiv.smarthelp_container-md .ApsContainer").css("display","block");
                        $("#serviceContactDiv.smarthelp_container-md .ApsContainer").animate(	{'height':"320px"}, function(){
							$("#serviceContactDiv.smarthelp_container-md .ApsContainer").css("height","auto");
                        });

                        open = true;
                    }
                }

                else{
				if($("#serviceContactDiv .service-contact-row-2").height() > 0){
					$("#serviceContactDiv .service-contact-row-2").animate({'height':"0px"},function(){
					$("#serviceContactDiv .service-contact-row-2").css("display","none");
					$("#serviceContactDiv.smarthelp_container-md").trigger("mouseleave");
					});
					}
					else{
					$('.login-container').removeClass('open');
					//$("#serviceContactDiv .service-contact-row-2").removeAttr("style");
					$("#serviceContactDiv .service-contact-row-2").css("display","block");
					$("#serviceContactDiv .service-contact-row-2").animate({'height':"299px"},function(){
					$("#serviceContactDiv .service-contact-row-2").css("height","auto");
					});
					}
           		 }
				
			});

			$('#serviceContactDiv .closeButton').click(function(e) {

				e.stopImmediatePropagation();
				//$("#serviceContactDiv .service-contact-row-2").slideUp();
                    if(apsLength > 0) {
                        $("#serviceContactDiv.smarthelp_container-md .ApsContainer").animate({'height':"0px"},function(){
                            $("#serviceContactDiv.smarthelp_container-md .ApsContainer").css("display","none");
                            $("#serviceContactDiv.smarthelp_container-md").trigger("mouseleave");
                        });
					apsContactClosed = false;
                    }
                    else {
						$("#serviceContactDiv .service-contact-row-2").animate({'height':"0px"},function(){
							$("#serviceContactDiv .service-contact-row-2").css("display","none");
                            $("#serviceContactDiv.smarthelp_container-md").trigger("mouseleave");
						});}


				$('.darkener').addClass('hidden');
            });
			$(function() {
				var $pCont = $("#serviceContactDiv.smarthelp_container-md");
				$pCont.css('margin-right','-360px');
				$("#serviceContactDiv.smarthelp_container-md").hover(function(ev) { 
				$('#serviceContactDiv .smarthelpholder').stop(true, false).fadeOut("fast");
				$pCont.animate({"margin-right":"-62px"}, {queue: false});
				},function(ev){
				if($('#serviceContactDiv .service-contact-row-2').css('display') == 'block' ) {
						//ev.stopImmediatePropagation();
						$pCont.stop();
					}
				else{
				$('#serviceContactDiv .smarthelpholder').stop(true, true).fadeIn("slow");
				$pCont.animate({"margin-right":"-360px"}, {queue: false});
				}
				}
					//$pCont.stop().animate({marginRight: ev.type=="mouseenter" ? 0 : -330}, 700);
				);
				/*$(".smarthelp_container-md").mouseleave(function() {
					if($('#serviceContactDiv .service-contact-row-2').css('display') == 'block' && $pCont.css('margin-right') == '0px') {
						$pCont.stop();
					}
				});*/

			});
		};
		if(!eonde.Utils.isLargeViewPort()){
            var windowResized=$(window).width();
            if(windowSize!=windowResized){
                $("#serviceContactDiv .smarthelpholder").removeAttr('style');
                $("#serviceContactDiv.smarthelp_container-md").off('hover');
                $("#serviceContactDiv.smarthelp_container-md .heading").off('click');
                $('#serviceContactDiv .closeButton').off('click');
                $('#serviceContactDiv .smarthelp_servicecontact .service-contact-row-2').removeAttr('style');
				windowSize=windowResized;
            }

			$(function () {
				$('#serviceContactDiv.smarthelp_container-xs').addClass('smarthelp_container-xs smarthelp_container_m');
				var $pCont = $("#serviceContactDiv.smarthelp_container_m .smarthelp_servicecontact");
                if(resizeFlag){
                    var $pContHeight=$('.service-contact-row-1').height()+$('.service-contact-row-2').height();;
                    $pCont.css('bottom','0px');
                }
                else{
                    $pCont.css({'bottom':'55px',"height":"auto"});
                }

				$("#serviceContactDiv.smarthelp_container_m .smarthelpholder #servicecontact").click(function() {
					resizeFlag=false;
					if(eonde.Utils.isSmallViewPort()){

                        $pCont.animate({height:$pContHeight+'px'},10,function(){
                            $pCont.css("height","auto");
                        });
                        $('#serviceContactDiv.smarthelp_container_m .smarthelp_servicecontact').css({"bottom":"55px","display":"block"});

                    }
					else {
                       $pCont.animate({height:$pContHeight+'px',width:'44%'},10,function(){
							$pCont.css('height','auto');
                        });
                        $('#serviceContactDiv.smarthelp_container_m .smarthelp_servicecontact').css({"bottom":"55px","display":"block"});
                    }
					$('.darkener').toggleClass('hidden');
					$('#serviceContactDiv.smarthelp_container_m .smarthelp_servicecontact h3 figure').animate({'bottom':'1'},10);
                    $('#serviceContactDiv #servicecontact').parent('figure').css('display', 'none');
					$('#serviceContactDiv .closeButton').parent('figure').css('display', 'block');
                    $('#serviceContactDiv .smarthelp_servicecontact').css({'overflow':'visibile'});

				});
			});
			$('#serviceContactDiv .closeButton').click(function() {
                resizeFlag=true;
				$("#serviceContactDiv.smarthelp_container_m .smarthelp_servicecontact").animate({height: '0'});
				$('.darkener').addClass('hidden');
				$('#serviceContactDiv.smarthelp_container_m .smarthelp_servicecontact h3 figure').animate({'bottom':'-62'});
                $('#serviceContactDiv.smarthelp_container_m .smarthelp_servicecontact').css({"bottom":"-2px","display":"none"});
				$('#serviceContactDiv #servicecontact').parent('figure').css('display', 'block');
				$('#serviceContactDiv .closeButton').parent('figure').css('display', 'none');
			});
		}
	});
});

jQuery(document).ready(function($){
    if ($(window).width() >= 768 && $(window).width() <= 1023) {
        var count = 1;
        $('.box .teaser .carousel').each(function() {
            jQuery(this).attr("id", "stage-carousel-" + count);
            jQuery(this).on("slid", function(e) {
                
            });
            jQuery(this).find(".bullet").each(function() {
                jQuery(this).attr("data-target", "#stage-carousel-" + count);
            });
            jQuery(this).siblings(".indicator").find(".bullet").each(function() {
                jQuery(this).attr("data-target", "#stage-carousel-" + count);
            });
            count++;
            if (!$("body").hasClass("cq-author")) {
                jQuery(this).carousel();
            }
        });
    }

    if ($(window).width() >= 768 && $(window).width() <= 1023 || $(window).width() >= 320 && $(window).width() <= 640) {
        var count = 0;
        $('.box .teaser .containerCarousel').each(function() {
            jQuery(this).attr("id", "s" + count);
            jQuery(this).on("slid", function(e) {
                
            });
            jQuery(this).find(".bullet").each(function() {
                jQuery(this).attr("data-target", "#s"+ count);
            });
            jQuery(this).siblings(".indicator").find(".bullet").each(function() {
                jQuery(this).attr("data-target", "#s"+ count);
            });
            count++;
            if (!$("body").hasClass("cq-author")) {
                jQuery(this).carousel();
            }
        });
    }

});

jQuery(document).ready(function(){
    if (!$("#content").hasClass("home_page")) {
        return;
    }
    var stageBoxes = jQuery(".stage.box");
    var kampagneBox = jQuery(".kampagne.box");
    var authorMode = $("body").hasClass("cq-author");
    var app = new App();
    app.init();
    
    function App(){
        var ignoreClicks = false;
        this.init = function(){
            
            if (authorMode == false) {
                stageBoxes.click(handleBoxContainerClicked);
                stageBoxes.on("slide", handleBoxContainerClicked);
                stageBoxes.find(".stageteaser-close").click(handleBoxCloseBtnClicked);
                // attach events to campaign box
                jQuery(document).on("click", ".kampagne.box", handleBoxContainerClicked);
                jQuery(document).on("click", ".kampagne.box .stageteaser-close", handleBoxCloseBtnClicked);
                addCampaignEventListener();
            }
            
            $(document).on("eonde.kampagne.ready", function() {
                kampagneBox = jQuery(".kampagne.box");
                if(authorMode == false) {					
                    addCampaignEventListener();
                }
            });
            //Defect fix for ESSONG-4148
            $(".paTeaserDiv").mousedown(function() {
                ignoreClicks = true;
                $(this).mouseup(function() {
                    ignoreClicks = false;
                });
            });
        };
        
        var addCampaignEventListener = function() {
            kampagneBox.find("a.external-145-link").click(function(e){
                e.stopPropagation();
            });
            // hack to trigger click on kampange box
            kampagneBox.find(".question, .answer, .closedvisible").click(function(e) {
                $(this).parents(".kampagne.box:first").trigger("click");
                e.stopPropagation();
            });
        };
        
        var closeBox = function() {
            var box = $(this);
            box.removeClass("open");
            var height = box.hasClass("kampagne") ? 160 : eonde.Utils.isMediumViewPort() ? 260 : 180; 
			box.animate({height: height}, {duration:800, easing:"swing", queue: false});
            box.find('.view1 p').css("display","none"); // not sure what this is for?
            jQuery(box).find(".teaserctrl-container .input").animate({top: eonde.Utils.isMediumViewPort() ? 70 : 10 }, {duration:1200, easing:"swing", queue: false});
            jQuery(box).find(".paTeaserDiv .pateaser").removeClass("open");
            if(!eonde.Utils.isSmallViewPort()) {
                box.addClass("miniature");
                jQuery(box).find('.carousel-inner').show();
            }
        };

        var handleBoxCloseBtnClicked = function(e){
            if(eonde.Utils.isSmallViewPort()) {
                return;
            }
            var box = jQuery(this).parents(".box.open:first");
            if (box.length > 0) {
                e.stopPropagation();
                closeBox.apply(box);
            }
        };
               
        var handleBoxContainerClicked = function(e) {
            if (eonde.Utils.isSmallViewPort()) {
                return;
            }
            /*Trident is a string for all IE browsers. We cannot use $.browser.msie because IE11 emulates Mozilla. Defect fix for ESSONG-4148*/
            if ((e.type == 'slide') && /trident/i.test(navigator.userAgent)) {
                ignoreClicks = true;
            } else if (e.type == 'click' && ignoreClicks == true) {
                ignoreClicks = false;
                return;
            }
            if ($(this).hasClass("open") && targetIsComponent(e.target)) {
                return;
            }
            e.stopPropagation();
            if ($(this).hasClass("open")) {
                closeBox.apply($(this));
                return;
            } else {
                stageBoxes.not($(this)).filter(".open").each(closeBox);
                kampagneBox.not($(this)).filter(".open").each(closeBox);

            }
            
            var box = $(this);
            
            var inputFocusScroll = function() {
                if (!$(box).hasClass("open")) {
                    return;
                }
                scrollDocument(e.target);
            };

            if (jQuery(this).height() < 280) {
                //
                if (jQuery(this).hasClass("kampagne")) {
                    if (eonde.Utils.isMediumViewPort()) {
                        jQuery(this).animate({height: '540px'}, 1000, "swing");
                    } else {
                        jQuery(this).animate({height: '430px'}, 1000, "swing");
                    }
                    jQuery(this).addClass("open").removeClass("miniature");
                } else {
                    var teaser = $(this).find(".teaser:first");

                    var maxCarouselHeight = calculateTeaserCarouselContainerHeight(teaser);
                    
                    if (maxCarouselHeight !== -1) {
                        teaser.height(maxCarouselHeight);
                    }
                    
                    respositionStageBoxTeaserCarouseItems($(this));
                    
                    jQuery(this).addClass("open").removeClass("miniature");
                    
                    animateStageBox(jQuery(this), inputFocusScroll);
                    
                    $(this).find('.carousel-inner').fadeIn(1000);
                }
                //
                jQuery(this).find(".paTeaserDiv .pateaser").addClass("open");
                //
                
                //
                jQuery(this).find('.view1 p').css("display", "block");
                //
                

            }
            return true;
        };
    }
    
            
    function scrollDocument(target) {
        if (($(target).is("input") || $(target).is("a.ui-tabs-anchor") || $(target).is("div[class*='icon-']") || $(target).is("[class*='ui-slider-']") || $(target).is("div.bar")) && targetIsComponent(target)) {
            var component = getTargetsComponent(target);
            $('html, body').animate({
                scrollTop: component.offset().top - $("#headerDiv").height() - 60
            }, 1000);
        }
        else {
            var component = getTargetComponentClicked(target);
            $('html, body').animate({
                scrollTop: component.offset().top - $("#headerDiv").height() - 60
            }, 1000);
        }
    }

    function targetIsComponent(target) {
        return $(target).filter(".stage.box,.kampagne.box").length===0 && getTargetsComponent(target).length > 0;
    }
        
    function getTargetsComponent(target) {
        return $(target).parentsUntil(".box").filter(".parbase,.parsys,.teaser,.teaser_17x,.videoWrapper,.videoContainer");
    }

    function getTargetComponentClicked(target){
		return $(target).parents("div.box:first").find(".parbase,.parsys,.teaser,.teaser_17x,.videoWrapper,.videoContainer");
    }
            
    if(!eonde.Utils.isSmallViewPort()) {
        if (authorMode == false) {
            jQuery("#content .paTeaserDiv .pateaser").removeClass("open");
        }
    } else {
        stageBoxes.find('.stageteaser-close').trigger("click");
        kampagneBox.find('.stageteaser-close').trigger("click");
    }
    
    function calculateTeaserCarouselContainerHeight(teaser) {
        var maxCarouselHeight = -1;
        teaser.find(".carousel .item").each(function() {
            maxCarouselHeight = Math.max($(this).height(), maxCarouselHeight);
        });
        
        return maxCarouselHeight;
    };
    
    function animateStageBox(box, callback) {
        if (eonde.Utils.isSmallViewPort()) {
            return;
        }
        var teaser = box.find(".teaser:first");
        var t1 = teaser.position().top;
        var h1 = teaser.height();
        var h2 = $(box).find('.secondContainer .teaser').height();
		var bottomPadding = 10;
		if (h2 > 1) {
			bottomPadding = 30;
		}
		var totalHeight = (t1 + h1 + h2 + bottomPadding);
        
        var animateTeaserDuration = 1200;

        var animateTeaser = function(animateTeaserCallback) {
            var componentHeight = jQuery(box).find(".teaserctrl-container").find(".parsys > div, .parbase > div").height();
            if (componentHeight!=null) {
                jQuery(box).find(".teaserctrl-container .input").height(componentHeight);
            } else {
                componentHeight = jQuery(box).find(".teaserctrl-container .input").height();
            }
            //
            jQuery(box).find(".teaserctrl-container .input").animate({top: h1 + t1 - componentHeight - 20}, {duration: animateTeaserDuration, easing: "swing", queue: false, complete: animateTeaserCallback});
        };
        
        animateTeaser($.noop);
        
        jQuery(box).animate({height: totalHeight}, {duration:800, easing:"swing", complete:function() {
            if ($(box).hasClass("open")) {
                animateTeaserDuration = 600;
                animateTeaser(callback);
            }
        }, queue: false});
        
        
        
    }
    
    function repositionAllStageBoxesTeaserCarouselItems() {
        if (!eonde.Utils.isSmallViewPort()) {
            stageBoxes.each(function() {
                var teaser = $(this).find(".teaser:first");
                var maxCarouselHeight = calculateTeaserCarouselContainerHeight(teaser);
                if (maxCarouselHeight !== -1) {
                    teaser.height(maxCarouselHeight);
                }
            });
        }
        stageBoxes.each(function() {
            respositionStageBoxTeaserCarouseItems($(this));
        });
    };
    
    function respositionStageBoxTeaserCarouseItems(box) {
        var teaser = $(box).find(".teaser:first");
        if (eonde.Utils.isLargeViewPort()) {
            /*Adding delay to allow the height of 170 teasers to be calculated properly*/
            setTimeout(function() {
                teaser.find(".carousel .item").each(function() {
                    $(this).css({top: $(teaser).height() - $(this).height()});
                });
            }, 1000);
            if (!authorMode) {
                teaser.find(".carousel").carousel(0);
                teaser.find(".carousel").carousel("pause");
                teaser.find(".carousel").fadeIn(1200);
            }
        } else {
            teaser.find(".carousel .item").css("top", "auto");
            if(teaser.find(".carousel .item .teaserctrl_140_4").children().length <= 0){
				teaser.find(".carousel ol.carousel-indicators").removeClass('visible-sm').addClass('hidden-sm');
            }
            if (eonde.Utils.isSmallViewPort()) {
                teaser.height("");
                $(box).find(".teaserctrl-container .input:first").css({top:"auto", height:"auto"});
            } else if (eonde.Utils.isMediumViewPort()) {
                if (!authorMode) {
                    teaser.find(".carousel").carousel("cycle");
                }
            }
        }
        if ($(box).hasClass("open")) {
            animateStageBox($(box));
        } else {
            $(box).find(".teaserctrl-container .input").animate({top: eonde.Utils.isMediumViewPort() ? 70 : 10}, {duration:600, easing:"swing", queue: false});
        }
    }
       
    if (authorMode) {
        stageBoxes.each(function() {
            animateStageBox($(this));
        });
    }
    
    var currentViewPort = eonde.Utils.isLargeViewPort() ? 1 : eonde.Utils.isMediumViewPort() ? 2 : 3;
                    

    $(window).on("debouncedresize", function() {
        var viewport = eonde.Utils.isLargeViewPort() ? 1 : eonde.Utils.isMediumViewPort() ? 2 : 3;
        repositionAllStageBoxesTeaserCarouselItems();
        if (viewport === currentViewPort) {
            return;
        } else {
            currentViewPort = viewport;
        }
        if (eonde.Utils.isSmallViewPort()) {
            stageBoxes.removeClass('miniature');
            kampagneBox.filter('.open').find('.question').css('visibility', 'hidden');
            kampagneBox.removeClass('open');
            kampagneBox.removeClass('miniature');
            
        } else {
            if(!kampagneBox.hasClass('miniature')){
				kampagneBox.addClass('open');
            }

            kampagneBox.filter('.open').find('.question').css('visibility', 'visible');
            if (eonde.Utils.isMediumViewPort()) {
                kampagneBox.filter('.open').animate({height: '540px'}, 1000, "swing");
            } else {
                kampagneBox.filter('.open').animate({height: '430px'}, 1000, "swing");
            }
        }
        
        repositionAllStageBoxesTeaserCarouselItems();        
     });



    /* enable click for entire teaser area, with first URL in the section */
    var redefineClickArea = function (selector){
        var $teaser, loc;

        $(selector).each(function(){
            $teaser = $(this);
            if ($teaser.find(".videoWrapper").length > 0 || $teaser.find(".videoContainer").length > 0) {
                    return;
            }
            if( $teaser.find("a").length != 1){ 
                return; //Cancel in case of multiple links OR no links
            }
            loc = $teaser.find("a").first().attr("href");

            if(typeof loc  != "undefined"){
              $teaser.css({"cursor":"pointer"});
              $teaser.on("click", function(event){

				var newLoc=$(this).find("a").first().attr("href");
                var target=$(this).find("a").first().attr("target");

                if("_blank" == target){
                 	window.open(newLoc);
                }else{
                 	location.href=newLoc;  
                }
                event.preventDefault();
                event.stopPropagation();
              });
            }
        });
    };

    // Calling for 145-stage-teaser
    redefineClickArea (".stageteaser_145 .answer");
    // Calling for 140-stage-teasers
    redefineClickArea (".stageteaser_140 .teaser_17x");

});
/*!
* apssearch.js
* This file contains the code for the APS Search Component.
* 
* @project   E.ON DE
* @date      2014-04-09 
* @author    DIVYAM RASTOGI, SapientNitro <drastogi4@sapient.com>
* @licensor  E.ON
* @NOTE
*/
$(document).ready(function () {
    var apsContainers = $('.ApsContainer');
    if (apsContainers.length === 0) {
        return;
    }
    
    var prevScreenWidth = $(window).width();
    $(window).on("resize", function (resizeEvent) {
        var currentScreenWidth = $(window).width();
        if(currentScreenWidth != prevScreenWidth){
            prevScreenWidth=currentScreenWidth;
            $('.com-100-smarthelp dt.active').next('dd').css('display','none');
            $('.com-100-smarthelp dt.active').removeClass('active');
            $('.com-100-smarthelp dt').removeClass('inactive');
        }

    });
    
    ko.validation.configure({
        registerExtenders: true,
        messagesOnModified: true,
        insertMessages: false,
        parseInputAttributes: true,
        messageTemplate: null
    });
    ko.validation.init({errorsAsTitle: false}, true);

    var zipcodeServiceURL = eonde.Config.serviceURLs.zipcodeService;
    var apsContactPersonURL = eonde.Config.serviceURLs.apsContactService;
    var authorizationHeaderVal = eonde.Config.serviceURLs.authorization;
    var availableProducts,
        stromOptions,
        warmeOptions,
        erdgasOptions;
    if(apsContainers.length > 0) {
        availableProducts = [{id: "", description:eonde.i18n.get('apssearch.value.default.text')}, 
                                    {id: eonde.i18n.get('apssearch.producttype.power'), description:eonde.i18n.get('apssearch.producttype.power')}, 
                                    {id: eonde.i18n.get('apssearch.producttype.naturalgas'), description:eonde.i18n.get('apssearch.producttype.naturalgas')},
                                    {id: apsContainers.find('.thermalEnergy').attr('data-attr'), description : eonde.i18n.get('apssearch.producttype.thermalenergy')}];
        var stromJSON = $.parseJSON(apsContainers.find('#powerJson').val());
        var erdgasJSON = $.parseJSON(apsContainers.find('#naturalgasJson').val());
        var warmeJSON = $.parseJSON(apsContainers.find('#thermalEnergyJson').val());

        stromOptions = [];
        erdgasOptions = [];
        warmeOptions = [];

        $.each(stromJSON, function (key, value) {
            stromOptions.push({id : key, description : value});
        });

        $.each(erdgasJSON, function (key, value) {
            erdgasOptions.push({id : key, description : value});
        });

        $.each(warmeJSON, function (key, value) {
            warmeOptions.push({id : key, description : value});
        });
    }
    
    var ApsViewModel = function (containerDiv) {
        var self = this;
        var BUSINESS = "gw";
        var PRIVATE = "pk";
        var customerChecker = CQ_Analytics.ProfileDataMgr.getProperty('userType');
        var user = "gw";
        var keyClientContext = user + "_zipcode";
        var key = user + "[zip]"
        var keyKid = user + "[kid]";
        var keyMob = user + "[mob]";
        var keyFax = user + "[fax]";
        var keyCity = user + "[city]";
        var keyFirstName = user + "[name]";
        var keyLastName = user + "[lastName]";
        var keyBusinessUnit = user + "[businessUnit]";
        var keyEmail = user + "[email]";
        var keyConsumption = user + "[consumption]";
        var keyConsumptionRange = user + "[consumptionRange]"
        var keyProductType=user+"_productaffinity";
        var keyView = user + '[view]';
        var viewNum2 = eonde.Utils.getIStorageValue(keyView, 1);
        var $containerDiv = $(containerDiv);
        var $overlay = containerDiv.find('.forOverlay');
        var $plz = containerDiv.find('input.zipClass');

        self.zipCode = ko.observable('');
        self.choices = ko.observableArray([]);
        self.firstName = ko.observable("");
        self.lastName = ko.observable("");
        self.email = ko.observable("");
        self.businessUnit = ko.observable("");
        self.telephone = ko.observable("");
        self.fax = ko.observable("");
        self.viewBC = ko.observable(viewNum2);
        self.kid = ko.observable("");
        self.contactPersonImage = ko.observable('');
        self.consumptionRange = ko.observable(eonde.i18n.get('apssearch.value.default.text'));
        self.product = ko.observable('');
        self.selectedConsumption = ko.observable('');
        self.productOptions = availableProducts;
        self.strom = stromOptions;
        self.warme = warmeOptions;
        self.erdgas = erdgasOptions;
        self.energyOptions = ko.observableArray();
        self.isWiderContainer = ko.observable(false);
        self.isMediumViewPort = ko.observable(false);
        self.addWideClass = ko.observable(false);
        self.hasBackendErrors = ko.observable(false);
        self.backendErrors = ko.observable("");
        self.zipCitiesList = ko.observableArray();
        //Adding custom zip code validation as part of EONWKT-4307
        self.zipErrorMsg = ko.observable("");
        self.zipFromRequest = ko.observable(false);
        self.enterKeyPressed = ko.observable(false);
        //Variables holding values of type and consumption range from page properties
        self.productTypePageProps = ko.observable();
        self.consumptionPageProps = ko.observable();
        //Variable to indicate that user has modified the type and consumption range values
        self.userModification = ko.observable(true);

        self.validateZipValue = function (item, event) {
            if (item.length < 3) {
                self.zipErrorMsg(eonde.i18n.get("zip.validationerror.atleastthreedigits"));
            } else if(!$.isNumeric(item) && typeof($plz.data("autocomplete"))!=="undefined" && !$plz.autocomplete("widget").is(':visible')) {
                self.zipErrorMsg(eonde.i18n.get("zip.validationerror.nonnumericnoresults"));
            } else if (!/^\d{4,5}\s+[^0-9\s]+.*$/.test(item)) {
                self.zipErrorMsg(eonde.i18n.get("zip.validationerror.entermoredigits"));
            }
            if (!/^\d{4,5}\s+[^0-9\s]+.*$/.test(item)) {
                return false;
            } else {
                if (item !== null && item !== '') {
                    var zipCity = item.replace(/ +(?= )/g,'');
                    if (!/^\d{5}.*$/.test(item) || self.zipCitiesList().length == 0) {
                        self.zipErrorMsg(eonde.i18n.get("zip.validationerror.entermoredigits"));
                    } 
                    if (!self.zipFromRequest() && (self.zipCitiesList().length == 0 || (self.zipCitiesList().length > 0 && self.zipCitiesList().indexOf(zipCity) < 0))) {
                        self.zipErrorMsg(eonde.i18n.get("zip.validationerror.unknowncombination"));
                        return false;
                    }
                }
                return true;
            }
        }

        self.zipCodeInput = ko.observable("");
        self.zipCodeInput.extend({
            validation: {validator: self.validateZipValue, message: function() { return self.zipErrorMsg();}},
            minlength: 6,
            required: {message: eonde.i18n.get("zip.validationerror.defaultmessage")}
        });
        self.zipCodeThrottled = ko.computed(self.zipCodeInput);
        self.zipCodeThrottled.extend({ rateLimit: { timeout: 200, method: "notifyWhenChangesStop" } });
        self.zipCodeThrottled.subscribe(function (val) {
            if (typeof($plz.data("autocomplete"))!=="undefined" && 
                typeof($plz.data("autocomplete").menu)!=="undefined" && 
                    $plz.data("autocomplete").menu.element.is(":visible")) {
                return;
            }
            if (val==="" || val==="PLZ") {
                this.zipCode("");
                this.zipCode.isModified(false);
                this.zipCodeInput.isModified(false);
            } else {
                this.zipCode(val);
                this.zipCode.notifySubscribers(val);
            }
            
        }, this);

        self.recomputeValues = function() {
            self.isWiderContainer(($containerDiv.width() > 0.5 * $containerDiv.parents('.container').width()) || ($containerDiv.parents('.box.stage').length == 0)) ;
            self.isMediumViewPort(eonde.Utils.isMediumViewPort() &&  !eonde.Utils.isSmallViewPort());
            self.addWideClass(eonde.Utils.isLargeViewPort() || ((self.isMediumViewPort() && self.isWiderContainer()) && $containerDiv.parents('dd').length == 0));
        }
        
        /*Checks which viewport it is and adds necessary classes. Needs to be done because of unusual and incoherent design in PSDs.*/
        self.checkViewPort = ko.computed(function() {
            if(self.addWideClass()) {
                $containerDiv.addClass('wide');
            } else {
                $containerDiv.removeClass('wide');
            }
            if(!self.isWiderContainer() || ($containerDiv.width() < 0.5 * $containerDiv.parents('.container').width()))
                $containerDiv.addClass('small');
            else
                $containerDiv.removeClass('small');
            //Showing the APS Search component only after the DOM manipulations.
            $containerDiv.removeClass('invisible');
        });

        self.getMail = ko.computed(function() {
            return "mailto:" + self.email();
        });

        /*Re-computes necessary variables on resize/change of viewport*/
        $(window).on("debouncedresize", function() {
            self.recomputeValues();
        });

        self.updateDD = function() {
            setTimeout(function() {
                    if($('.chosen-container').length){
                        $("select:not(.no-custom-dd)").trigger("chosen:updated")
                    }
                }, 100);
        };

        self.handleBackendErrors = function(data) {
            var errorString = eonde.Utils.showBackendErrors(data, "", "", "");
            if (errorString !== null && errorString !== "") {
                self.hasBackendErrors(true);
                self.backendErrors(errorString);
                viewNum2=1;
                self.viewBC(viewNum2);
                eonde.Utils.setIStorageValue(keyView, viewNum2);
            }
        }

        self.product.subscribe(function (val) {
            if (val == "Wärme") {
                if (self.consumptionRange.isModified) 
                    self.consumptionRange.isModified(false);
                self.energyOptions(self.warme);
                self.updateDD();
            } else if (val == "Erdgas") {
                if (self.consumptionRange.isModified)
                    self.consumptionRange.isModified(false);
                self.energyOptions(self.erdgas);
                self.updateDD();
            } else if (val == "Strom") {
                if (self.consumptionRange.isModified)
                    self.consumptionRange.isModified(false);
                self.energyOptions(self.strom);
                self.updateDD();
            }else if(val == ''){
                self.updateDD();
            }
            //EONWKT-5363 To identify if product type value has been changed by user
            if (val === self.productTypePageProps()) {
                self.userModification(false);
            } else {
                self.userModification(true);
            }
        }, this);
        
        self.checkProduct = function (val) {
            if (val === eonde.i18n.get("apssearch.value.default.text") ||
                val === '') {
                
                return false;
            } else {
                
                setTimeout(function(){
                    if($('.chosen-container').length){
                        $("select:not(.no-custom-dd)").trigger("chosen:updated");
                    }
                }, 10);


                return true;
            }
        }

        self.product.extend({
            validation: {
                validator: self.checkProduct,
                message: ''
            }
        });

        self.zipCode.extend({
            validation: {validator: self.validateZipValue, message: function() { return self.zipErrorMsg();}},
            minlength: 6,
            required: {message: eonde.i18n.get("zip.validationerror.defaultmessage")}
        });

        self.selectedConsumption.extend({
            required : true
        });

        self.consumptionRange.extend({
            required : true
        });

        self.everythingValid = function() {
            return self.zipCodeInput.isValid() && self.product.isValid() && self.consumptionRange.isValid();
        }
        
        /*Gets the values from local storage if user has already entered his requirements recently.*/
        self.getValuesFromStorage = function(){
            self.zipCodeInput(eonde.Utils.getIStorageValue(key) + " " + eonde.Utils.getIStorageValue(keyCity));
            self.telephone(eonde.Utils.getIStorageValue(keyMob), "");
            self.fax(eonde.Utils.getIStorageValue(keyFax), "");
            self.email(eonde.Utils.getIStorageValue(keyEmail), "");
            self.firstName(eonde.Utils.getIStorageValue(keyFirstName), "");
            self.lastName(eonde.Utils.getIStorageValue(keyLastName), "");
            self.businessUnit(eonde.Utils.getIStorageValue(keyBusinessUnit), "");
            self.consumptionRange(eonde.Utils.getIStorageValue(keyConsumptionRange), "");
            self.selectedConsumption(eonde.Utils.getIStorageValue(keyConsumption), "");
            self.product(eonde.Utils.getIStorageValue(keyProductType), "");
            self.viewBC(eonde.Utils.getIStorageValue(keyView, 1));
            
            $.ajax({
                type: 'GET',
                url: '/bin/eon/servlets/dam',
                data: 'asset=' + eonde.Utils.getIStorageValue(keyKid),
                success: function (data) {
                    if (data != "") {
                        self.contactPersonImage(data);
                    } else {
                        self.contactPersonImage("/etc/designs/eonde/assets/images/default.png");

                    }
                },
                error: function () {

                }
            });
        };

        // preventing default form submit action
        $('#serviceContactDiv #aps-form').submit(function(e){
            e.preventDefault();
        });
        var consumptionSpanVal=$('#apsConsumptionRange').val();
        self.consumptionRange.subscribe(function(val) {
            if (consumptionSpanVal !=="" && consumptionSpanVal) {
                self.selectedConsumption(consumptionSpanVal);
            } else {
                self.selectedConsumption('');
            }
            //EONWKT-5363 To identify if consumption range value has been changed by user
            if (val === self.consumptionPageProps()) {
                self.userModification(false);
            } else {
                self.userModification(true);
            }
        });

        self.zipCode.subscribe(function(val) {
            self.hasBackendErrors(false);
            if(self.zipCode.isValid() && self.checkProduct(val)) {
                
                //self.updateCustomDD();
            }
        });

        self.updateView = function () {
            if(viewNum2 < 2) {
                self.viewBC(++viewNum2);
                eonde.Utils.setIStorageValue(keyView, viewNum2);
            }
        }
        self.decrementView = function () {
            self.viewBC(--viewNum2);
            eonde.Utils.setIStorageValue(keyView, viewNum2)
        }

        /*Clears all values from local storage*/
        self.clearStorageValues = function () {
            CQ_Analytics.ProfileDataMgr.removeProperty(keyClientContext);
            eonde.Utils.clearIStorageValue(key);
            eonde.Utils.clearIStorageValue(keyCity);
            eonde.Utils.clearIStorageValue(keyMob);
            eonde.Utils.clearIStorageValue(keyFax);
            eonde.Utils.clearIStorageValue(keyKid);
            eonde.Utils.clearIStorageValue(keyFirstName);
            eonde.Utils.clearIStorageValue(keyLastName);
            eonde.Utils.clearIStorageValue(keyEmail);
            eonde.Utils.clearIStorageValue(keyBusinessUnit);
            eonde.Utils.clearIStorageValue(keyConsumption);
            eonde.Utils.clearIStorageValue(keyProductType);
            eonde.Utils.clearIStorageValue(keyConsumptionRange);
        }

        /*Store all values in local storage*/
        self.setValuesInLocalStorage = function() {
            //EONWKT-5363 Added condition to check if user has modified value before saving to local storage
            if (self.userModification()) {
            eonde.Utils.setIStorageValue(keyMob, self.telephone());
            eonde.Utils.setIStorageValue(keyKid, self.kid());
            eonde.Utils.setIStorageValue(keyFax, self.fax());
            eonde.Utils.setIStorageValue(keyFirstName, self.firstName());
            eonde.Utils.setIStorageValue(keyLastName, self.lastName());
            eonde.Utils.setIStorageValue(keyBusinessUnit, self.businessUnit());
            eonde.Utils.setIStorageValue(keyEmail, self.email());
                eonde.Utils.setIStorageValue(keyConsumptionRange, self.consumptionRange());
                eonde.Utils.setIStorageValue(keyConsumption, self.selectedConsumption());
                eonde.Utils.setIStorageValue(keyProductType , self.product());
            }
            eonde.Utils.setIStorageValue(key, self.zipCodeInput().substring(0, 5));
            CQ_Analytics.ProfileDataMgr.setProperty(keyClientContext, self.zipCodeInput().substring(0, 5));
            eonde.Utils.setIStorageValue(keyCity, self.zipCodeInput().substring(6));
            if (self.zipCodeInput() !== null && self.zipCodeInput() !== "") {
                self.updatePaModel();
                self.updatePdpModel();
            }
        }

        self.clearLocalBindings = function () {
            self.firstName("");
            self.lastName("");
            self.fax("");
            self.telephone("");
            self.email("");
            self.businessUnit("");
            self.selectedConsumption('');
            self.kid('');
            
            self.consumptionRange('');
            self.zipCodeInput('');
            self.product('');
            self.zipCodeInput.isModified(false);
            self.product.isModified(false);
            self.selectedConsumption.isModified(false);
            self.consumptionRange.isModified(false);

            self.zipCode('');
            self.zipFromRequest(false);
            self.zipCode.isModified(false);
        };
        
        self.goBack = function () {
            self.firstName("");
            self.lastName("");
            self.fax("");
            self.telephone("");
            self.email("");
            self.businessUnit("");
            self.kid('');
        };

        var gwZipcode = CQ_Analytics.ProfileDataMgr.getProperty(keyClientContext);

        self.removeOverlay = function() {
            $plz.removeAttr('readonly');
            $overlay.removeClass('overlay');
        }

        self.addOverlay = function() {
            $plz.attr('readonly', true);
            $overlay.addClass('overlay');
        }

        self.searchZipCode = function (item, event) {
            if(event != undefined){
                $overlay.addClass('overlay');
            }

            var contactPersonURL = apsContactPersonURL + 'clientId=eonde&zipCode=' + 
                                   encodeURI(self.zipCodeInput().substring(0, 5))+"&city="+
                                   encodeURI(self.zipCodeInput().substr(6))+ '&type=' + encodeURI(self.product()) + 
                                   '&consumptionRangeId=' + encodeURI(self.consumptionRange());
            
            $('#u121_input option').each(function() {
                if($(this).val() == self.consumptionRange()){
                    self.selectedConsumption($(this).text());
                }
            });

            eonde.Utils.trackVirtualPageCall("/contactperson");

            $.ajax({
                beforeSend: function (xhr) {
                    xhr.setRequestHeader('Authorization', authorizationHeaderVal);
                },
                dataType: "json",
                type: 'GET',
                url: contactPersonURL
            }).done(function (data) {
                self.hasBackendErrors("");
                if(event != undefined){
                    eonde.Utils.delayIfIE8(self.removeOverlay);
                    $plz.parents('.ApsContainer').find(".apsSearchImage").attr("src","");
                }
                if (typeof (data.telephoneNumber) != "undefined") {
                    self.telephone(data.telephoneNumber);
                } else {
                    self.telephone("0800-8 433 589");
                }

                if (typeof (data.eonPrimFax) != "undefined") {
                    self.fax(data.eonPrimFax);
                } 
                if (typeof (data.mail) != "undefined") {
                    self.email(data.mail);
                } else {
                    self.email("info@eon.de");
                }

                self.firstName(data.givenName);
                self.lastName(data.sn);
                self.businessUnit(data.businessUnit);
                self.getContactPersonImage(data.kid);
                if (typeof (data.kid) != "undefined") {
                    self.kid(data.kid);
                    $.ajax({
                        type: 'GET',
                        url: '/bin/eon/servlets/dam',
                        data: 'asset=' + data.kid ,
                        success: function (data) {
                            if (data != "") {
                            self.contactPersonImage(data);
                            } else {
                            self.contactPersonImage("/etc/designs/eonde/assets/images/default.png");
                            }
                        },
                        error: function () {

                        }
                    });

                    }
                 else {
                    self.kid("default");
                    if(event != undefined){
                        self.contactPersonImage("/etc/designs/eonde/assets/images/default.png");
                    }
                }
                    
                self.setValuesInLocalStorage();
                eonde.Utils.delayIfIE8(self.updateView);
                if($('#productDetailPage').length || $('#paStromDiv').length && self.consumptionRange()) {
                    viewNum2 = 2;
                    self.viewBC(viewNum2);
                    eonde.Utils.setIStorageValue(keyView, viewNum2);
                }

            }).fail(function (data) {
                if(event != undefined){
                    eonde.Utils.delayIfIE8(self.removeOverlay);
                }
                self.clearStorageValues();
                self.handleBackendErrors(data);
            });
        }

        self.getContactPersonImage = function(imageKid) {
            if (typeof (imageKid) != "undefined") {
                self.kid(imageKid);
                $.ajax({
                    type: 'GET',
                    url: '/bin/eon/servlets/dam',
                    data: 'asset=' + imageKid ,
                    success: function (data) {
                        if (data != "") {
                            self.contactPersonImage(data);
                        } else {
                            self.contactPersonImage("/etc/designs/eonde/assets/images/default.png");
                        }
                    },
                    error: function () {

                    }
                });

            }
            else {
                self.kid("default");
                if(event != undefined){
                    self.contactPersonImage("/etc/designs/eonde/assets/images/default.png");
                }
            }
            
        }

        //If the Mobile and Fax exist in local storage, then display the contact information directly.
        if (eonde.Utils.getIStorageValue(key) && eonde.Utils.getIStorageValue(keyMob)) {
            self.getValuesFromStorage();
            self.zipFromRequest(true);
        }
        else{
            if (eonde.Utils.getIStorageValue(key)){
                self.zipCodeInput(eonde.Utils.getIStorageValue(key) + " " + eonde.Utils.getIStorageValue(keyCity));
                self.zipFromRequest(true);
            }
            //EONWKT-5363 Added logic for handling default product type and consumption range values set in Page Properties
            var productTypePageProperties = $('#apsProductType').val();
            var consumptionPageProperties = $('#apsConsumptionRange').val();
            if (productTypePageProperties !== null && productTypePageProperties !== '') {
                self.productTypePageProps(productTypePageProperties);
                self.product(productTypePageProperties);
                if (consumptionPageProperties !== null && consumptionPageProperties !== '') {
                    var energyOpts = self.energyOptions();
                    if (energyOpts !== null && energyOpts.length > 0) {
                        for (var i = 0; i < energyOpts.length; i++) {
                            if (energyOpts[i]['description'] === consumptionPageProperties) {
                                self.consumptionPageProps(energyOpts[i]['id']);
                                self.selectedConsumption(energyOpts[i]['description']);
                                self.consumptionRange(energyOpts[i]['id']);

                                if(self.everythingValid() && self.zipCodeInput().length >= 4) {
                                    var fakeObj = {};
                                    /*Passing empty object to escape the overlay condition.*/
                                    self.searchZipCode(fakeObj, fakeObj);
                                }
                                break;
                            }
                        }
                    }
                }
            }

            viewNum2=1;
            self.viewBC(viewNum2);
        }

        self.backButton = function () {
            self.decrementView();
            self.goBack();
        }
        
        self.enterPressed = function(data, event) {
            if(event.which == 13) {
                self.enterKeyPressed(true);
                if(!$overlay.hasClass('overlay') && self.everythingValid() && self.validateZipValue($plz.val(), event)) {
                    self.searchZipCode(self.zipCodeInput(), event);
            }
                return false;
            } else
                self.enterKeyPressed(false);
            return true;
        };

        self.updatePaModel=function() {
            if($('#paStromDiv').length){
                var pamodel=ko.dataFor(document.getElementById("paStromDiv"));
                if(pamodel.zipSelectedInput() != self.zipCodeInput()){
                    ko.dataFor(document.getElementById("paStromDiv")).zipSelected(self.zipCodeInput());
                    ko.dataFor(document.getElementById("paStromDiv")).zipSelectedInput(self.zipCodeInput());
                    ko.dataFor(document.getElementById("paStromDiv")).zipFromRequest(true);
                    ko.dataFor(document.getElementById("paStromDiv")).submitPage();
                }
            }
        }
        
		self.updatePdpModel=function() {
            if($('#productDetailPage').length) {
                var regionalizationBarVm = ko.dataFor(document.getElementById("product_detail_regionalization_bar"));
                if(regionalizationBarVm.zipCodeInput() != self.zipCodeInput() && self.zipCodeInput.isValid()) {
                    regionalizationBarVm.zipFromRequest(true);
                    regionalizationBarVm.zipCodeInput(self.zipCodeInput());
                    regionalizationBarVm.showZipCode(false);
                    ko.dataFor(document.getElementById('productDetailPage')).init();
                }
            }
        }
        
        var cache = {};
        var oldterm;
        self.getZipCityList = function (data, more) {
            var zipCityList = new Array();
            self.zipCitiesList.removeAll();
            var i = 0;
            $.each(data, function (index, value) {
                $.each(value.cities, function (idx, val) {
                    zipCityList[i++] = value.zipCode + " " + val;
                    self.zipCitiesList.push(value.zipCode + " " + val);
                });
            });
            if(zipCityList.length > 0) {
                self.zipCodeInput(zipCityList[0]);
                self.zipCode(zipCityList[0]);
                $plz.val(zipCityList[0]);
            }
            if (more) {
                zipCityList=zipCityList.splice(0,10);
                zipCityList.push(eonde.i18n.get("autocomplete.load.more.text"));
            }
            return zipCityList;
        }

       var cache = {};
       var oldterm, finalResultData, loadMoreDivResult=false, requestUrl="", loadMoreValue='0';

        self.request = ko.observable("");
        self.response = ko.observable("");
        self.limitExists = ko.observable(false);
        self.zipCodeServiceCall = function(request, response) {
            //cache = {};
            self.addOverlay();
            var element = this.element;
            eonde.Utils.trackVirtualPageCall("/zipcodes");
            self.request(request);
            self.response(response);

            if(self.limitExists() && loadMoreValue=='1'){
                requestUrl =eonde.Config.serviceURLs.zipcodeService+'clientId=eonde&query=' + encodeURIComponent(request.term); 
            } else 
                requestUrl = eonde.Config.serviceURLs.zipcodeService+'clientId=eonde&limit=10&query=' + encodeURIComponent($plz.val());

            $.ajax({
                dataType: "json",
                type : 'GET',
                url: requestUrl,
                beforeSend: function(xhr) {
                    xhr.setRequestHeader('Authorization', authorizationHeaderVal);
                }
            }).done( function(data) {
                if(data && data.zipCodes && data.zipCodes.length == 0) {
                    /*In case of invalid zip codes, a response is sent with an empty zipCode array. Useful much?*/
                    self.enterKeyPressed(false);
                    $plz.blur();
                }
                $('.ui-helper-hidden-accessible').css('display', 'none');
                oldterm = request.term;
                self.removeOverlay();
                cache[request.term] = data;
                //add load more named row to autocomplete menu
                if(data.more){
                    loadMoreDivResult=data.more;
                    loadMoreValue=1;
                } else{
                 loadMoreDivResult=false;
                 loadMoreValue=0;
                }
                
                response($.map(self.getZipCityList(data.zipCodes,data.more), function (item) {
                    return {
                        value: item
                    }
                }));
                if(self.enterKeyPressed()) {
                    $plz.blur();
                    if(self.everythingValid() && self.zipCodeInput().length >= 4) {
                        var fakeObj = {};
                        /*Passing empty object to escape the overlay condition.*/
                        self.searchZipCode(fakeObj, fakeObj);
                    }
                }
                //add a custom name to the autocomplete
                $plz.autocomplete("widget").addClass("APSAutocomplete");
                if(data.more){
                    $('.APSAutocomplete').css('height','120px','important');
                } else $('.APSAutocomplete').css('height','auto');
                if(loadMoreDivResult){
                    $plz.autocomplete("widget").on('click', "li:last-child a", function(event) {
                        self.limitExists(true);
                        $plz.autocomplete("widget").hide();
                        $plz.autocomplete("search", self.request().term);
                        event.stopImmediatePropagation();                   
                    });
                }
                $('.ui-menu').scrollTop(0);
            }).fail(function() {
                self.removeOverlay();
            });            
        }
        self.updateZipValue = function (event, ui) {
            $(this).val(ui.item.zipCode).blur();
            return false;
        }

        self.updateZipValue2 = function (event, ui) {
            self.zipCodeInput($(this).val());
            return false;
        }

        self.checkDefaultText = function(e){
            var val = jQuery(this).val();
            if(val == "" || val == jQuery(this).attr("defaulttext")){
                jQuery(this).val(jQuery(this).attr("defaulttext"));
                self.zipCode.isModified(false);
            }
        }

        self.removeDefaultText = function(e){
            if(jQuery(this).val() == jQuery(this).attr("defaulttext")){
                    jQuery(this).val("");
            }
        }

        self.clearZip = function () {
            self.zipCode('');
            self.zipCodeInput('');
            self.product('');
            self.consumptionRange('');
            self.selectedConsumption('');
            self.zipFromRequest(false);
            self.selectedConsumption.isModified(false);
            self.consumptionRange.isModified(false);
            self.zipCodeInput.isModified(false);
            self.product.isModified(false);
            $plz.focus();
            $plz.blur();
            self.updateDD();
            $plz.focus();
        }

        self.resetButton = function () {
            self.clearLocalBindings();
            self.decrementView();
            //Reset triggers error as zipCode is a required field and it was set to null.
            $containerDiv.find('.error').css('display', 'none');
            $containerDiv.children().removeClass('.loginElementError');
            //Clear the local storage
            self.clearStorageValues();
            self.updateDD();
            $plz.focus();
            $plz.blur();
        }

        self.updateValues = function() {
            var aps;
            $('.ApsContainer').each(function() {
                if(self !== this) {
                    aps = ko.dataFor(this);
                    aps.firstName(self.firstName());
                    aps.lastName(self.lastName());
                    aps.businessUnit(self.businessUnit());
                    aps.telephone(self.telephone());
                    aps.fax(self.fax());
                    aps.email(self.email());
                    aps.zipCode(self.zipCode());
                    aps.product(self.product());
                    aps.selectedConsumption(self.selectedConsumption());
                    aps.getContactPersonImage(self.kid());
                }
            });
        };
        
        self.init = function() {
            self.consumptionRange.isModified(false);
            self.zipCodeInput.isModified(false);
            self.product.isModified(false);
            self.recomputeValues();
            if($('#productDetailPage').length || $('#paStromDiv').length ){
                if( self.consumptionRange() && self.zipCodeInput()){
                    self.searchZipCode();
                    viewNum2=2;
                    self.viewBC(viewNum2);
                    eonde.Utils.setIStorageValue(keyView, viewNum2);
                }
            }
        }
    }

    apsContainers.each(function () {
        var vm = new ApsViewModel($(this));
        ko.applyBindings(ko.validatedObservable(vm), this);
        vm.init();
        var $this = $(this);
        $(this).find('#aps-form input').on("keydown", function(event) {
            if ($(this).val() === eonde.i18n.get("autocomplete.load.more.text")) {
                if (event.keyCode !== 13) {
                    event.preventDefault();
                    event.stopPropagation();
                    event.stopImmediatePropagation();
                }
            }
        }).autocomplete({
            appendTo: $(this).find('#aps-form input').parent(),
            source: vm.zipCodeServiceCall,
            minLength: 3,
            messages: {
                noResults: '',
                results: function () {}
            },
            select: function (event, ui) {
                if(ui.item.value === eonde.i18n.get("autocomplete.load.more.text")){
                    return false;
                }
                vm.zipCodeInput(ui.item.value);
                vm.enterPressed(vm, event);
                return false;
            },
            close: function(event, ui) {
                var val = $this.find('input.zipClass').val();
                vm.zipCode(val);
                if (val==="") {
                    vm.zipCode.isModified(false);
                }
            }
        }).keyup(function (event) {
            if (event.keyCode == 13) {
                if ($(this).val() === eonde.i18n.get("autocomplete.load.more.text")) {
                    vm.limitExists(true);
                    $(this).val(vm.zipCitiesList().length > 0 ? vm.zipCitiesList()[0] : vm.request().term);
                    vm.zipCode.isModified(false);
                    $(this).autocomplete("search", vm.request().term);
                }
            }
            eonde.Utils.changeDelayZipAutocomplete(this);
        });
        var $plz = jQuery(this).find('.zipClass');
        $plz.focusout().on('focus', function(e){
            if ($(this).closest('.flyoutDiv') !== undefined && $(this).closest('.flyoutDiv').length > 0) {
                $(this).closest('.flyoutDiv').attr('style', 'height:auto !important');
            }
        }).on('blur', function(e){
            if ($(this).closest('.flyoutDiv') !== undefined && $(this).closest('.flyoutDiv').length > 0) {
                $(this).closest('.flyoutDiv').removeAttr('style');
            }
        }); 
        
        $plz.focusin(vm.removeDefaultText);
        $plz.focusout(vm.checkDefaultText);
    });
});
$(window).load(function() {	
	
	$('.teaser-176-container button').on('click',function(e){
		e.preventDefault();
	}); 

});
$(document).ready(function(){
	$('.teaser-content ul li span.icon-check_2, .teaser-content ol li span.icon-check_2').parent().addClass('RTEcheckbx');
    $('.teaser-content ul li, .teaser-content ol li').not(':has(span.icon-check_2)').wrapInner('<span></span>');
    if(eonde.Utils.isIE8 && $('.teaser-170-container .teaser-content ul:not(.linklist)').length > 0) {
    	$('.teaser-170-container .teaser-content ul:not(.linklist)').addClass('p-l-3');
    }
});
$(document).ready(function () {
    var $regionalizationDiv = $("#product_detail_regionalization_bar");
    if ($regionalizationDiv.length === 0) {
        return;
    }

    ko.validation.configure({
        registerExtenders: true,
        messagesOnModified: false,
        insertMessages: false,
        parseInputAttributes: true,
        messageTemplate: null
    });
    
    // Hidding DOM Elements on page load
    $('.regionalization-bar,.productDetailTeaser').removeClass('hidden');
    
    $(window).on("debouncedresize", function () {
        if ($(window).width() < 641 &&  $('.regionalizationbar-bc').length) {
            $('.regionalizationbar-bc .regionalizationSlider').removeAttr('style');
        }
        else {
            $('.regionalizationbar-bc .regionalizationSlider').removeAttr('style');
        }
    });
       
    var ViewModel = function () {
        var self = this;

        //Constant values Declaration
        var PRIVATE = 'pk';
        var BUSINESS = 'gw';
        var ENERGY = 'Strom';
        var GAS = 'Erdgas';
        var KWH_DEFAULT = "2.500";
        var KWH_GAS_DEFAULT = "11.700";
        var KWH_BUSINESS_DEFAULT = "15.000";
        var KWH_GAS_BUSINESS_DEFAULT = "50.000";

        //Private variables used inside the View Model
        var _userType = '';
        var _percentNT = '';
        var _productsMaster = "";
        var _consumption = '';
        var _productName = $('.productName').attr('data-attr');
        var _productType = $('.productType').attr('data-attr') != '' ? $('.productType').attr('data-attr') : ENERGY;

        var $zipCodeContainer = $('.leftDiv .regionalization-bar-rc-zipcode-input');
        var $zipCode = $zipCodeContainer.find('.zipcode-input');
        var $overlay = $regionalizationDiv.find('.forZipOverlay');
        var $zipCodeSpan = $zipCodeContainer.find('.zipcodeSpan');
        var $zipReq = $('.zipCode');
        var $cityReq = $('.city');
        var $consumption = $('.consumption');
        var $consumptionInput = $('.consumption-input');

        var viewNumb = 0;
        var imageNumb = 0;

        self.percentageSign = ko.observable(false);
        self.view2 = ko.observable(false);
        self.sliderView = ko.observable(viewNumb);
        self.imageView = ko.observable(imageNumb);
        self.percentage = ko.observable("0");
        self.zipCitiesList = ko.observableArray();
        self.zipFromRequest = ko.observable(false);
        self.selectedChoice = ko.observable();
        self.buttonclick = ko.observable();
        self.showZipCode = ko.observable(true);
        self.zipCodeInput = ko.observable("");
        self.zipCodeThrottled = ko.computed(self.zipCodeInput);
        /*Checks whether the enter event was captured or not.*/
        self.enterKeyPressed = ko.observable(false);

        try {
            var customerChecker = CQ_Analytics.ProfileDataMgr.getProperty('userType');
            if (customerChecker == "BC") {
                _userType = BUSINESS;
            } else {
                _userType = PRIVATE;
            }
        } catch (e) {
            _userType = BUSINESS;
        }
        
        var cache = {};
        var oldterm, finalResultData, limitExists=false, loadMoreDivResult=false, requestUrl="", loadMoreValue='0';
        var authorizationHeaderVal = eonde.Config.serviceURLs.authorization;
        var $regionalizePLZ = $zipCode;
        self.request = ko.observable("");
        self.response = ko.observable("");
        
        //Adding custom zip code validation as part of EONWKT-4307 -- This is also the fix for EONSUP-5302. Please do not remove.
        /*I do not wish for the heavens to strike you down if you delete this, instead I'll be the one holding Zeus' lightning.*/
        self.zipErrorMsg = ko.observable(eonde.i18n.get("zip.validationerror.defaultmessage"));
        self.validateZipValue = function (item, event) {
            var zipCity = item.replace(/ +(?= )/g,'');
            var invalidCombination = !self.zipFromRequest() && (self.zipCitiesList().length == 0 || (self.zipCitiesList().length > 0 && self.zipCitiesList().indexOf(zipCity) < 0));
            var minThreeDigits = item.length < 3;
            var moreDigits = !/^\d{4,5}\s+[^0-9\s]+.*$/.test(item);
            var nonnumeric = !$.isNumeric(item) && typeof($zipCode.data("autocomplete"))!=="undefined" && !$zipCode.autocomplete("widget").is(':visible');
            if (minThreeDigits) {
                self.zipErrorMsg(eonde.i18n.get("zip.validationerror.atleastthreedigits"));
            } else if (nonnumeric) {
                self.zipErrorMsg(eonde.i18n.get("zip.validationerror.nonnumericnoresults"));
            } else if (moreDigits) {
                self.zipErrorMsg(eonde.i18n.get("zip.validationerror.entermoredigits"));
            }
            if (moreDigits) {
                return false;
            } else {
                if (item !== null && item !== '') {
                    if (!/^\d{5}.*$/.test(item) || self.zipCitiesList().length == 0) {
                        self.zipErrorMsg(eonde.i18n.get("zip.validationerror.entermoredigits"));
                    } 
                    if (invalidCombination) {
                        self.zipErrorMsg(eonde.i18n.get("zip.validationerror.unknowncombination"));
                        return false;
                    }
                }
                return true;
            }
        }
        
        self.zipCodeInput.extend({
            validation: {validator: self.validateZipValue, message: function() { return self.zipErrorMsg();}},
            minlength: 6,
            required: {message: eonde.i18n.get("zip.validationerror.defaultmessage")}
        });

        self.zipCodeThrottled.extend({ rateLimit: { timeout: 200, method: "notifyWhenChangesStop" } });
        self.zipCodeThrottled.subscribe(function (val) {
            if (typeof($zipCode.data("autocomplete"))!=="undefined" && 
                typeof($zipCode.data("autocomplete").menu)!=="undefined" && 
                    $zipCode.data("autocomplete").menu.element.is(":visible")) {
                return;
            }
            if (val==="" || val==="PLZ") {
                this.selectedChoice("");
                //this.selectedChoice.isModified(false);
                self.zipCodeInput.isModified(false);
            } else {
                if(self.validateZipValue(val, {})) {
                    this.selectedChoice(val);
                    this.selectedChoice.notifySubscribers(val);
                }
            }

        }, this);

        self.updateZipValue = function (event, ui) {
            if(ui.item.value === eonde.i18n.get("autocomplete.load.more.text")){
                return false;
            }
            self.zipCodeInput.isModified(false);
            self.zipCodeInput(ui.item.value.toString());
            if(self.zipCodeInput.isValid())
                self.selectedChoice(ui.item.value.toString());
            $zipCode.blur();
            return true;
        }

        self.getZip = function (request, response) {
                self.zipFromRequest(false);
                        cache = {};
                        $regionalizePLZ.addClass('loadImage').attr('readonly', true);
                        eonde.Utils.ajaxInit();
                        self.trackWebServiceCall("/zipcodes");
                        $overlay.addClass('zipOverlay');
                        self.request(request);
                        self.response(response);
                        if(limitExists && loadMoreValue=='1'){
                            requestUrl =eonde.Config.serviceURLs.zipcodeService+'clientId=eonde&query=' + encodeURIComponent(request.term); 
                        } else requestUrl = eonde.Config.serviceURLs.zipcodeService+'clientId=eonde&limit=10&query=' + encodeURIComponent($regionalizePLZ.val());

                        $.ajax({
                            beforeSend: function (xhr) {
                                xhr.setRequestHeader('Authorization', authorizationHeaderVal);
                            },
                            cache:false,
                            dataType: "json",
                            type: 'GET',
                            url: requestUrl,
                            autoFocus: true
                        }).done(function (data) {
                            self.currentData=data;
                            oldterm = request.term;
                            $regionalizePLZ.removeClass('loadImage').removeAttr('readonly');
                            $overlay.removeClass('zipOverlay');
                            cache[request.term] = data;
                            //add load more named row to autocomplete menu
                            if(data.more){
                                loadMoreDivResult=data.more;
                                loadMoreValue=1;
                            } else {
                             loadMoreDivResult=false;
                             loadMoreValue=0;
                            }
                            
                            response($.map(self.getZipCityList(data.zipCodes,data.more), function (item, index) {
                                return {
                                    value: item
                                }
                }));
                if(self.enterKeyPressed())
                    $zipCode.blur();
                            //add a custom name to the autocomplete
                            $regionalizePLZ.autocomplete("widget").addClass("regionalizationAutocomplete");
                            if(loadMoreDivResult){
                                $('.regionalizationAutocomplete li:last-child a').on('click', function(event) {
                                    limitExists=true;
                                    $('.regionalizationAutocomplete').hide();
                                    $regionalizePLZ.autocomplete("search", self.request().term);
                                    event.stopImmediatePropagation();                   
                                });
                            }
                            $('.ui-menu').scrollTop(0);
                        }).fail(function(xhr) {                           
                            $regionalizePLZ.removeClass('loadImage').removeAttr('readonly');
                            $overlay.removeClass('zipOverlay');
                            self.currentData="";
                        });
        };

        $regionalizePLZ.keydown(function(event){
            if (event.keyCode !== 13) {
                if ($(this).val() === eonde.i18n.get("autocomplete.load.more.text")) {
                    event.stopImmediatePropagation();
                    event.stopPropagation();
                    event.preventDefault();
                    return false;
                }
            }
        }).autocomplete({
            source: self.getZip,
            minLength: 3,
            select: self.updateZipValue,
            autoFocus : false
            }).keyup(function (event) {
                if (event.keyCode == 13) {
                    self.enterKeyPressed(true);
                    if (this.value === eonde.i18n.get("autocomplete.load.more.text")) {
                        limitExists=true;
                        $(this).val(self.request().term);
                        self.enterKeyPressed(false);
                        $regionalizePLZ.autocomplete("search", self.request().term);
                    }
                } else
                    self.enterKeyPressed(false);
                eonde.Utils.changeDelayZipAutocomplete(this);
        });

        // Fetching percentNt value from local storage
        var percentValue=eonde.Utils.getIStorageValue(_userType+"[percentNt]",$('.percentNt').attr('data-attr'));
        var zipCodeURL= eonde.Config.serviceURLs.zipcodeService;

        /*
        @private trackWebServiceCall - used to send the Web Service call (AJAX calls) to Google Tag Manager, 
        * this is done for each ajax call that is done from any part of the page
        */
        self.trackWebServiceCall = function(serviceName) {
            if (typeof dataLayer != 'undefined' && dataLayer != null) {
                dataLayer.push({
                    'event': 'customView', 
                    'page': document.location.pathname + serviceName
                });
            }
        };

        var regionalizationsliderChanged = function (event, slider) {
            //var values = ["0","20","40","60","80","100"];
            var $selects = jQuery(".selectman");
            for (var i = 0; i <= 100; i++) {
                if (i <= slider.value) {
                    self.percentage(i);
                }
            }
            eonde.Utils.setIStorageValue(_userType+"[percentNt]",self.percentage());
        }

        self.calculatezipCodeSpanWidth = function() {
            var leftDivWidth = $zipCodeSpan.closest('.leftDiv').width();
            var extraWidth = $zipCodeSpan.parent().siblings('.zipcode-label').width() + $zipCodeSpan.siblings('figure').width() + 50;
            var maxWidth = leftDivWidth - extraWidth;
            if(eonde.Utils.winWidth <= 400) {
                $zipCodeSpan.css('max-width', maxWidth + 'px');
            }
            else if(eonde.Utils.winWidth > 400 && eonde.Utils.winWidth < 767) {
                $zipCodeSpan.css('max-width', (maxWidth-30) + 'px');
            } else {
                $zipCodeSpan.removeAttr('style');
            }
        }

        $(window).on('debouncedresize', self.calculatezipCodeSpanWidth);

        if(percentValue >0){
            var finalPercent=percentValue;
            self.percentage(percentValue);
            self.view2(false);
            self.percentageSign(true);
            if(self.percentage()=="0" || self.percentage()=="") {
                self.buttonclick(0);
            }
            self.imageView(++imageNumb);
            if(self.percentage()=="0" || self.percentage()==""){
                self.buttonclick(0);
            }
            else{
                self.buttonclick(1);
            }
        }
        else{
            var finalPercent=0;
        }

         $(".regionalizationSlider").slider({
            min: 0,
            range: "min",
            max: 100,
            step: 1,
            animate:"slow",
            value: finalPercent,
            slide: regionalizationsliderChanged
        });

        $('.regionalizationbar-bc .kwh').keyup(function(){
            var changedVal=$(this).val();
            $(".regionalizationSlider").slider("value",changedVal);
            regionalizationsliderChanged(null, {value:changedVal});
        });
        
        self.addStylesToComponent = function() {
            if(eonde.Utils.isSmallViewPort()) {
                $regionalizationDiv.find('.rightDiv').addClass('zipIsSpan');
            }
        };

        self.removeStylesFromComponent = function() {
            $('.regionalization-bar-rc-zipcode-input').removeAttr('style');
            $regionalizationDiv.find('.rightDiv').removeClass('zipIsSpan');
        };
        
        self.getZipFromStorage = function () {
            var zipFromStorage;
            if ($zipReq.length > 0 && $zipReq.attr('data-attr').length > 0) {
                if ($cityReq.length > 0) {
                    zipFromStorage = $zipReq.attr('data-attr') + " " + $cityReq.attr('data-attr');
                } else {
                    zipFromStorage = $zipReq.attr('data-attr');
                }
                self.zipFromRequest(true);
            } else {
                if (eonde.Utils.getIStorageValue(_userType + "[zip]")) {
                    if (eonde.Utils.getIStorageValue(_userType + "[city]")) {
                        zipFromStorage = eonde.Utils.getIStorageValue(_userType + "[zip]") + " " + eonde.Utils.getIStorageValue(_userType + "[city]");
                    } else {
                        zipFromStorage = eonde.Utils.getIStorageValue(_userType + "[zip]")
                    }
                    self.zipFromRequest(true);
                }
            }
            if(zipFromStorage && zipFromStorage.length > 0) {
                self.zipCodeInput(zipFromStorage);
                self.showZipCode(false);
                self.zipCodeInput.isModified(false);
                
                if (eonde.Utils.isIE8) {
                    $zipCode.css('padding-top', '5px');
                    $zipCodeContainer.find('img').css('top','2px');
                }
            }
            return zipFromStorage;
        }

        self.getZipFromStorage();

        self.selectedChoice.subscribe(function(val) {
            if(self.zipCodeInput.isValid()) {
                $zipCodeContainer.find('#clear').css('left','5px');
                self.addStylesToComponent();
                self.calculatezipCodeSpanWidth();
            }
            if(val.length == 0) {
                self.removeStylesFromComponent();
            }
        });

        self.tabPressed = function(data, event) {
            var tabPress = event.keyCode == 9 && $overlay.hasClass('zipOverlay');
            var enterPressedOnIE8 = event.keyCode == 13 && !$overlay.hasClass('zipOverlay') && eonde.Utils.isIE8;
            if(tabPress) {
                event.stopImmediatePropagation();
                return false;
            } else if(enterPressedOnIE8) {
                self.blurOnZip(data, event);
                return false;
            }
            return true;
        }

        self.blurOnZip = function(data, event) {
            if(self.zipCodeInput.isValid() && event.isTrigger) {
                self.showZipCode(false);
                self.selectedChoice(self.zipCodeThrottled());
                self.zipCodeInput(self.zipCodeThrottled());
                self.zipCodeInput.isModified(false);
                self.updateZip();
                self.updatePDP();
            }
            if(eonde.Utils.isSmallViewPort()) {
                self.addStylesToComponent();
            }
        };

        $(".kwh").keydown(function(event) {
            // Allow only backspace and delete
            if ( event.keyCode == 46 || event.keyCode == 8 ) {
                // let it happen, don't do anything
            }
            else {
                // Ensu that it is a number and stop the keypress
                if (event.keyCode < 48 || (event.keyCode > 57 && event.keyCode < 96) || event.keyCode > 105 || $('.kwh').val().length > 3 || $('.kwh').val() > 100 ) {
                    event.preventDefault();
                }
            }
        });

        self.updateView = function () {
            self.buttonclick(1);
            $('#glyphicon-down span').toggleClass('up');
            if ($('#glyphicon-down span').hasClass('up')) {
                self.percentageSign(false);
                self.sliderView(++viewNumb);
                imageNumb = 0;
                self.imageView(imageNumb);
                self.view2(true);
            } else {
                self.sliderView(--viewNumb);
                self.view2(false);
                self.percentageSign(true);
                if(self.percentage()=="0" || self.percentage()=="") {
                    self.buttonclick(0);
                }
            }
        }
        
        self.buttonClick = function () {
            self.updateView();
            self.imageView(++imageNumb);
            if(self.percentage()=="0" || self.percentage()==""){
                self.buttonclick(0);
            }
            else{
                self.buttonclick(1);
            }
            window.location.reload(true);
        }

        self.clearConsumption = function () {
            self.buttonclick(0);
            self.percentage("");
            imageNumb = 0;
            self.imageView(imageNumb);
            self.percentageSign(false);
            self.showZipCode(true);
            $zipCode.focus();
            $(".regionalizationSlider").slider("value",0);
            regionalizationsliderChanged(null, {value:0});
            window.location.reload(true);
        }
        
        if($consumption.length > 0 && $consumption.attr('data-attr').length > 0) {
            self.consumeValue = ko.observable($consumption.attr('data-attr'));
        } else {
            if (_userType == PRIVATE && _productType == ENERGY) {
                self.consumeValue = ko.observable(eonde.Utils.getIStorageValue(_userType + "[consumption]" + "[" + _productType + "]", KWH_DEFAULT));
            } else if (_userType == PRIVATE && _productType == GAS) {
                self.consumeValue = ko.observable(eonde.Utils.getIStorageValue(_userType + "[consumption]" + "[" + _productType + "]", KWH_GAS_DEFAULT));
            } else if (_userType == BUSINESS && _productType == ENERGY) {
                self.consumeValue = ko.observable(eonde.Utils.getIStorageValue(_userType + "[consumption]" + "[" + _productType + "]", KWH_BUSINESS_DEFAULT));
            } else if (_userType == BUSINESS && _productType == GAS) {
                self.consumeValue = ko.observable(eonde.Utils.getIStorageValue(_userType + "[consumption]" + "[" + _productType + "]", KWH_GAS_BUSINESS_DEFAULT));
            } else{
                self.consumeValue=ko.observable(KWH_DEFAULT);
            }
        }
        //Slider should be hidden in case the product type is GAS and user is business.

        if (_userType == BUSINESS) {
            if(_productType == GAS) {
                $('.regionalizationbar-bc').css('display', 'none');
            }
        }
        //Remove borders in case there is a consumption value.
        if(!self.consumeValue() == '') {
            $('.kwh').addClass('noBorders');
        }

        $consumptionInput.val(self.consumeValue());

        if(eonde.Utils.getIStorageValue(_userType + "[consumption]" + "[" + _productType + "]", KWH_DEFAULT) === KWH_DEFAULT) {
            eonde.Utils.setIStorageValue(_userType + "[consumption]" + "[" + _productType + "]", self.consumeValue());
        }

        if ($consumptionInput.length > 0) {
            $consumptionInput.on('change',function(){
                var selfInp=$(this);
                if($.isNumeric(selfInp.val().replace(/[\.\,]/g,''))){
                    selfInp.val(eonde.Utils.formatConsumption(selfInp.val()));
                }
                else{
                    selfInp.val(eonde.Utils.formatConsumption("2500"));
                }
                self.consumeValue($consumptionInput.val());
                if (_productType) {
                    eonde.Utils.setIStorageValue(_userType + "[consumption]" + "[" + _productType + "]", self.consumeValue());
                    CQ_Analytics.ProfileDataMgr.setProperty(_userType+"_"+ _productType +"_consumption", self.consumeValue());
                }
            });

        }
                
        self.onClearZip = function (data, event) {
            if(!eonde.productDetailVm.editableZipCode())
                return false;
            $zipCodeSpan.hide();
            self.zipCodeInput("");
            self.zipCodeInput.isModified(false);
            self.selectedChoice("");
            self.zipFromRequest(false);
            self.showZipCode(true);
            eonde.Utils.clearIStorageValue(_userType + "[zip]");
            CQ_Analytics.ProfileDataMgr.removeProperty(_userType + "_zipcode");
            eonde.Utils.clearIStorageValue(_userType + "[city]");
            eonde.regionalnav.getNav();
            //Added to bring focus to zip field on clearing, EONSUP-5703
            $zipCode.focus();
        };

        self.updateZip = function() {
            CQ_Analytics.ProfileDataMgr.setProperty(_userType + "_zipcode", self.zipCodeInput().substring(0,5));
            eonde.Utils.setIStorageValue(_userType + "[zip]", self.zipCodeInput().substring(0, 5));
            eonde.Utils.setIStorageValue(_userType + "[city]", self.zipCodeInput().substring(6));
            $('#productDetailPage').removeClass('hidden');
        }

        self.updatePDP = function() {
            $('#productDetailPage .tabs ,#productDetailPage .extraContainerForParsys,#productDetailPage .extraContainerForParsys,#productDetailPage .additionalContentArea ').addClass('hidden');
            $('#productDetailPage .pdpOverlay').addClass('addOverlay');
            setTimeout(function() {
                $('#productDetailPage .tabs ,#productDetailPage .extraContainerForParsys,#productDetailPage .extraContainerForParsys,#productDetailPage .additionalContentArea ').removeClass('hidden');
                $('#productDetailPage .pdpOverlay').removeClass('addOverlay');
                ko.dataFor(document.getElementById('productDetailPage')).init();
                eonde.regionalnav.getNav();
            }, 500);
        }

        self.currentData = self.zipCodeInput();

        self.reload=function(e) {
            
            if(self.zipCodeInput() == null || self.zipCodeInput() == ""){
                self.zipCodeInput.isModified(true);
                return false;
            }

            if(self.currentData.length > 1) {
                $('ul.ui-autocomplete').css("display","none");
            }

            if(self.currentData.length==1) {
                $('ul.ui-autocomplete').css("display","none");
                self.zipCodeInput(self.currentData[0].zipCode+" "+self.currentData[0].cities);
                self.updateZip();
                self.updatePDP();
            }

            if(self.isValid()) {
                self.updateZip();
                self.updatePDP();
            }
        }
        
        self.getZipCityList = function (data, more) {
            var zipCityList = new Array();
            self.zipCitiesList.removeAll();
            var i = 0;
            $.each(data, function (index, value) {
                $.each(value.cities, function (idx, val) {
                    zipCityList[i++] = value.zipCode + " " + val;
                    self.zipCitiesList.push(value.zipCode + " " + val);
                });
            });
            if(zipCityList.length > 0 && !eonde.Utils.isIE8) {
                self.zipCodeInput(zipCityList[0]);
                self.showZipCode(true);
                self.zipCodeInput.isModified(false);
            }
            if (more) {
                zipCityList=zipCityList.splice(0,10);
                zipCityList.push(eonde.i18n.get("autocomplete.load.more.text"));
            }
            return zipCityList;
        }
    };

    var vm = ko.validatedObservable(new ViewModel());
    if ($regionalizationDiv.get(0)) {
        ko.applyBindings(vm, $regionalizationDiv.get(0));
    }

});
$(document).ready(function() {
    $(".conversionContainer").click(function(e){
        e.stopImmediatePropagation();
		$(this).find(".orderOnlineButton").click();
        return false;
    }).find(".orderOnlineButton").click(function(e) {
        e.stopPropagation();
        return true;
    });
});
/*!
* product-advisor-page.js
* This file contains the code for the Product Advisor Page Component.
* 
* @project   E.ON DE
* @date      2014-04-09 
* @author    DEEPIKA RATHORE, SapientNitro <drathore@sapient.com>
* @licensor  E.ON
* @NOTE
*/

$(document).ready(function(){

    var paStromDiv = $("#paStromDiv");
    if (paStromDiv.length === 0) {
        return;
    }

	var delete_cookie = function(name) {
		document.cookie = name + '=;expires=Thu, 01 Jan 1970 00:00:01 GMT;';
	};
	var getCookie=function(cname) {
			var name = cname + "=";
			var ca = document.cookie.split(';');
			for(var i=0; i<ca.length; i++) {
				var c = ca[i];
				while (c.charAt(0)==' ') c = c.substring(1);
				if (c.indexOf(name) == 0) {
					return c.substring(name.length,c.length);
				}
			}
			return "";
	};
	

	/*
	@public PAPageViewModel: Knockout View Model for the Product Advisor Page Component
	*	The View Model is common for Residential and Business Customers as well as for
	*	different type of products e.g. Strom and Gas. The View Model contains all the 
	* 	Knockout data binding and validation logic as well as acts as a closure for all
	*	public/private methods and variables being utilized in the component.
	*/
	var PAPageViewModel = function() {
		//Saving the 'this' instance to be used through the View Model
		var self=this;
		
		var highGasUsageUrl = $('.highGasUsageUrl') && $('.highGasUsageUrl').length > 0 ? $('.highGasUsageUrl').attr("data-service-url") : "";
		var highPowerUsageUrl = $('.highPowerUsageUrl') && $('.highPowerUsageUrl').length > 0 ? $('.highPowerUsageUrl').attr("data-service-url") : "";
		var extremeGasUsageUrl = $('.extremeGasUsageUrl') && $('.extremeGasUsageUrl').length > 0 ? $('.extremeGasUsageUrl').attr("data-service-url") : "";
		var extremePowerUsageUrl = $('.extremePowerUsageUrl') && $('.extremePowerUsageUrl').length > 0 ? $('.extremePowerUsageUrl').attr("data-service-url") : "";
		
        var clientId = $('span.client').attr('data-clientid');

		//Private variables used inside the View Model
		self._rcStromKwhValues = ["1.500","2.500","3.000","4.000","5.000","7.000"];
		self._bcStromStepValues = ["10.000", "15.000", "50.000", "500.000", "5.000.000", "50.000.000"];
		self._bcErdgasStepValues = ["20.000", "50.000", "150.000", "1.000.000", "10.000.000", "100.000.000"];
		var _productType = '';
		var _userType = '';
		var _tariffType = '';
		var _percentNT = '';
		var _productsMaster = "";
		var _kwhDefault = "";
		var _kwhThreshold = "";
		var _kwhMaxThreshold = "";
		var _kwhUMaxThreshold = "";
        var percentNtVal= 0;
		var _doubleRateMeterVisible="";
		var _cscMode="";
		var _zipCode="";
		var _signedCustomer="";
		var _city="";
		//Constant values Declaration
		var PRIVATE = 'pk';
		var BUSINESS = 'gw';
		var CSC_MODE_HOME_MOVE="HM";
		var CSC_MODE_PRODUCT_SWITCH="PS";
		var ENERGY = 'Strom';
		var GAS = 'Erdgas';
		var KWH_DF_ENERGY_PRI_FB = "2.500";
		var KWH_DF_GAS_PRI_FB = "11.700";
		var KWH_DF_ENERGY_BUS_FB = "15.000";
		var KWH_DF_GAS_BUS_FB = "50.000";
		var KWH_TH_ENERGY_PRI_FB = "8.000";
		var KWH_TH_GAS_PRI_FB = "50.0000";
		var KWH_TH_ENERGY_L_MAX_BUS_FB = "100.000";
		var KWH_TH_GAS_L_MAX_BUS_FB = "300.000";
		var KWH_TH_ENERGY_U_MAX_BUS_FB = "100.000";
		var KWH_TH_GAS_U_MAX_BUS_FB = "300.000";
		
		var CONSUMPTION_EXPIRY = {TTL: 3600000};
		var SWITCH_CONTINUE_EXPIRY = {TTL: 3600000};

        

		//jQuery reused object variables
		var $rateBtn = $('.rateopenbtn');
		var $plz = jQuery("#paStromDiv").find("#plz");
		var $sliderRC = jQuery("#paStromDiv").find(".sliderRC");
		var $sliderRCGas = jQuery("#paStromDiv").find(".sliderRCGas");
		var $sliderBC = jQuery("#paStromDiv").find(".sliderBC");
		var $sliderBCGas = jQuery("#paStromDiv").find(".sliderBCGas");
		var $sliderRate = jQuery("#paStromDiv").find(".sliderrate");
		var $qm = jQuery("#paStromDiv").find("#qm");
		var $stromBar = jQuery("#paStromDiv").find(".selectbar1.strom, .selectbar2.strom, .selectbar3.strom, .selectbar4.strom");
		var $gasBar = jQuery("#paStromDiv").find(".selectbar1.erdgas, .selectbar2.erdgas, .selectbar3.erdgas, .selectbar4.erdgas");
		var $manSlider = jQuery("#paStromDiv").find(".selectman");
		var $filterOptions = paStromDiv.find('.filterOptions .checkbox');
		var $overlayDiv = paStromDiv.find('.input .forZipOverlay');
		var storageqmVal=eonde.Utils.getIStorageValue("[livingArea]") >0?eonde.Utils.getIStorageValue("[livingArea]"):100;
		
		/* Filter attributes configuration in product advisor page properties by editor */
		var _hideEcology=paStromDiv.find('span.hideEcology').length > 0 ? paStromDiv.find("span.hideEcology").attr("data-filter-attr") : "";
		var _hideOfflineProduct=paStromDiv.find('span.hideOfflineProduct').length > 0 ? paStromDiv.find("span.hideOfflineProduct").attr("data-filter-attr") : "";
		var _hidePriceGuarantee=paStromDiv.find('span.hidePriceGuarantee').length > 0 ? paStromDiv.find("span.hidePriceGuarantee").attr("data-filter-attr") : "";
		var _hideFlexibility=paStromDiv.find('span.hideFlexibility').length > 0 ? paStromDiv.find("span.hideFlexibility").attr("data-filter-attr") : "";
		var _ecology=paStromDiv.find('span.ecology').length > 0 ? paStromDiv.find("span.ecology").attr("data-filter-attr") : "";
		var _offlineProduct=paStromDiv.find('span.offlineProduct').length > 0 ? paStromDiv.find("span.offlineProduct").attr("data-filter-attr") : "";
		var _priceGuarantee=paStromDiv.find('span.priceGuarantee').length > 0 ? paStromDiv.find("span.priceGuarantee").attr("data-filter-attr") : "";
		var _flexibility=paStromDiv.find('span.flexibility').length > 0 ? paStromDiv.find("span.flexibility").attr("data-filter-attr") : "";
		var _hideAll=paStromDiv.find('span.hideAll').length > 0 ? paStromDiv.find("span.hideAll").attr("data-filter-attr") : "";
		var $partnerURL=jQuery(".productadvisorpage").find('input[name="partnerURL"]');
		//Defining observable fields for data binding to the UI
		self.view = ko.observable(1);
        self.qmValue = ko.observable(storageqmVal);
		self.zipSelected = ko.observable("");
		self.zipSelectedInput = ko.observable("");
		self.zipSelectedThrottled = ko.computed(self.zipSelectedInput);
        self.zipSelectedThrottled.extend({ rateLimit: { timeout: 200, method: "notifyWhenChangesStop" } });
        self.zipSelectedThrottled.subscribe(function (val) {
            if (typeof($plz.data("autocomplete"))!=="undefined" && 
                typeof($plz.data("autocomplete").menu)!=="undefined" && 
                    $plz.data("autocomplete").menu.element.is(":visible")) {
                return;
            }
            if (val==="" || val==="PLZ") {
                this.zipSelected("");
                this.zipSelected.isModified(false);
                this.zipSelectedInput.isModified(false);
            } else {
                this.zipSelected(val);
                this.zipSelected.notifySubscribers(val);
            }
        }, this);
        self.zipCitiesList = ko.observableArray();
		self.kwhValue = ko.observable();
		self.kwhGasBCValue = ko.observable();
		self.kwhBCValue = ko.observable();
		self.kwhGasValue = ko.observable();
		self.ubernclicked = ko.observable();
		self.percentage = ko.observable(percentNtVal);
		self.percentage_display = ko.observable("0");
		self.sliderView = ko.observable(false);
		self.productData = ko.observable();
		self.resultsCount = ko.observable("-1");
		self.highThreshold = ko.observable("false");
		self.veryHighThreshold = ko.observable("false");
		self.threshold = ko.observable("");
		/*Checks whether the enter event was captured or not.*/
		self.enterKeyPressed = ko.observable(false);
        self.hasBackendErrors = ko.observable(false);
		self.backendErrors = ko.observable("");
		self.zipFromRequest = ko.observable(false);
		self.footnoteIndices = ko.observableArray();
		/* Observable for csc mode */
		self.isCSCMode=ko.observable(false);
		self.isPSMode=ko.observable(false);
		self.isSignedCustomer=ko.observable(false);
		/*Observables for initial filter on the basis of URL parameteres.*/
		self.ecologyURL = ko.observable(false);
		self.offlineProductURL = ko.observable(false);
		self.priceGuaranteeURL = ko.observable(false);
		self.flexibilityURL = ko.observable(false);
		self.isHideAll=ko.observable(false);
		/*Observale for teaser configuration set or not.*/
		self.teaserHideAttributes = ko.observable(false);
		self.isTeaserFilterAttributes = ko.observable(false);
		self.isFiltersInURL=ko.observable(false);
		
		/*JSON object to load all the the product detail pages present in site corresponding to customer type and product type */
		self.productDetailPages=ko.observable();
		var authorizationHeaderVal = eonde.Config.serviceURLs.authorization;
		
		if ($('.productadvisorpage .advisorKWH').length > 0) {
            $('.productadvisorpage .advisorKWH').on('change',function(){
                var selfInp=$(this);
                selfInp.val(eonde.Utils.formatConsumption(selfInp.val()));
            });

        }
		$('#paStromDiv').removeAttr('style');	

		
		
		/*
		@private populateRequestValues : method to populate input parameters from the request url to
		*	support direct access. These values are given priority over the values in page properties
		*/
		self.populateRequestValues = function() {
			var $zipReq = jQuery(".productadvisorpage").find('input[name="zipCode"]');
			var $cityReq = jQuery(".productadvisorpage").find('input[name="city"]');
			var $signedCustomer = jQuery(".productadvisorpage").find('input[name="signedCustomer"]');
			var $cscModeReq = jQuery(".productadvisorpage").find('input[name="mode"]');
			var $kwhReq = jQuery(".productadvisorpage").find('input[name="consumption"]');
			var $userTypeReq = jQuery(".productadvisorpage").find('input[name="customerType"]');
			var $productTypeReq = jQuery(".productadvisorpage").find('input[name="productType"]');
			var $tariffTypeReq = jQuery(".productadvisorpage").find('input[name="tariffType"]');
			var $percentNTReq = jQuery(".productadvisorpage").find('input[name="percentNT"]');
			var $ecologyURL = jQuery(".productadvisorpage").find('input[name="ecology"]');
			var $offlineProductURL = jQuery(".productadvisorpage").find('input[name="offlineProduct"]');
			var $priceGuaranteeURL = jQuery(".productadvisorpage").find('input[name="priceGuarantee"]');
			var $flexibilityURL = jQuery(".productadvisorpage").find('input[name="flexibility"]');
			_doubleRateMeterVisible=$('.doubleRateMeterVisible').attr('data-attr');


			_userType = $userTypeReq.length > 0 ? $userTypeReq.val() : _userType;
			_productType = $productTypeReq.length > 0 ? $productTypeReq.val() : _productType;
			_tariffType = $tariffTypeReq.length > 0 ? $tariffTypeReq.val() : _tariffType;
			_percentNT = $percentNTReq.length > 0 ? $percentNTReq.val() : _percentNT;
			_cscMode = $cscModeReq.length > 0 && _userType == PRIVATE? $cscModeReq.val() : _cscMode;
			_zipCode = $zipReq.length > 0 ? $zipReq.val() : _zipCode;
			_city = $cityReq.length > 0 ? $cityReq.val() : _city;
			_signedCustomer=$signedCustomer.length > 0 ? $signedCustomer.val() : "";
			percentNtVal = (_userType == BUSINESS && _productType == ENERGY) ? eonde.Utils.getIStorageValue("gw[percentNt]",0) : 0;
			// Setting the percentNt value if found in local storage
			if(percentNtVal >0){
				self.percentage(percentNtVal);
				self.percentage_display(self.percentage());
				$sliderRate.slider("value",self.percentage());
				self.sliderrateChanged(null, {value:self.percentage()});
			}
			
			if (!isNaN(parseFloat(_percentNT)) && parseFloat(_percentNT) > 0) {
				var percentVal = parseInt(parseFloat(_percentNT) * 100);
				self.percentage(percentVal);
				self.percentage_display(percentVal);
				$sliderRate.slider("value",percentVal);
			}
			
			if (_userType == BUSINESS && parseInt(self.percentage(), 10) > 0) {
				_tariffType = "dt";
			}
			
			if(_cscMode.length > 0) {
				productServiceURL=eonde.Config.serviceURLs.cscModeProductsServiceURL;
				self.isCSCMode(true);
				if(_cscMode == CSC_MODE_PRODUCT_SWITCH) {
					self.isPSMode(true);
				}
				if(_signedCustomer.length > 0 && _signedCustomer == "true") {
					self.isSignedCustomer(true);;
				}
				/* Clear CSC mode cookies and store it in session storage */
				var customerJSONString=decodeURIComponent(getCookie(_cscMode+"_customer"));
				var encryptedcustomerData=decodeURIComponent(getCookie(_cscMode+"_customer"+"_encrypted"));
				sessionStorage.setItem(_cscMode+"_customer",customerJSONString);
				sessionStorage.setItem(_cscMode+"_customer"+"_encrypted",encryptedcustomerData);
				delete_cookie(_cscMode+"_customer");
				delete_cookie(_cscMode+"_customer"+"_encrypted");
			}
			var zipCode = "";
			if ($zipReq.length > 0 && ((self.isCSCMode() == true && self.isPSMode() == true) || self.isCSCMode() == false)) {
				if ($cityReq.length > 0) {
					zipCode = $zipReq.val() + " " + decodeURIComponent($cityReq.val());
				} else {
					zipCode = $zipReq.val();
				}
				self.zipFromRequest(true);
			} else {
				/*
					CSC Mode check is required since zipcode needs not be loaded from local storage if it is home move process from user
				*/
				if (eonde.Utils.getIStorageValue(_userType + "[zip]") && self.isCSCMode() == false) {
					if (eonde.Utils.getIStorageValue(_userType + "[city]")) {
						zipCode = eonde.Utils.getIStorageValue(_userType + "[zip]") + " " + eonde.Utils.getIStorageValue(_userType + "[city]");
					} else {
						zipCode = eonde.Utils.getIStorageValue(_userType + "[zip]")
					}
					self.zipFromRequest(true);
				}
			}
			
			self.zipSelectedInput(zipCode);
			self.zipSelected(zipCode);
			
			/* Idetnify if URL contains any filters attributes */
			if($ecologyURL.length > 0 || $offlineProductURL.length > 0 || $priceGuaranteeURL.length > 0 || $flexibilityURL.length > 0) {
				self.isFiltersInURL(true);
			}
			/*Clear local storage for attributes when page load via URL*/
			if(($ecologyURL.length > 0 || $offlineProductURL.length > 0 || $priceGuaranteeURL.length > 0 || $flexibilityURL.length > 0) && self.isTeaserFilterAttributes() == false){ 
				$filterOptions.each(function() {
					var filterValue=jQuery(this).attr('data-refine');
					self.removeFilterFromStorage(filterValue);					
				});				
			}
			
			/*Initializing product attribute check-boxes on the basis of URL parameters*/ 
			($ecologyURL.length > 0 && $ecologyURL.val() === "true" && self.isTeaserFilterAttributes() == false) ? self.ecologyURL(true) : self.ecologyURL(false);
			($offlineProductURL.length > 0 && $offlineProductURL.val() === "true" && self.isTeaserFilterAttributes() == false) ? self.offlineProductURL(true) : self.offlineProductURL(false);
			($priceGuaranteeURL.length > 0 && $priceGuaranteeURL.val() === "true" && self.isTeaserFilterAttributes() == false) ? self.priceGuaranteeURL(true) : self.priceGuaranteeURL(false);
			($flexibilityURL.length > 0 && $flexibilityURL.val() === "true" && self.isTeaserFilterAttributes() == false) ? self.flexibilityURL(true) : self.flexibilityURL(false);
			
			$filterOptions.each(function() {
				var $checkbox = $(this);
				if($checkbox.attr('data-refine') == 'ecology' && self.ecologyURL()){
					$checkbox.addClass('icon-check');
					self.addFilterToStorage($checkbox.attr('data-refine'));
				}
				else if($checkbox.attr('data-refine') == 'offlineProduct' && self.offlineProductURL()){
					$checkbox.addClass('icon-check');
					self.addFilterToStorage($checkbox.attr('data-refine'));
				}
				else if($checkbox.attr('data-refine') == 'priceGuarantee' && self.priceGuaranteeURL()){
					$checkbox.addClass('icon-check');
					self.addFilterToStorage($checkbox.attr('data-refine'));
				}
				else if($checkbox.attr('data-refine') == 'flexibility' && self.flexibilityURL()){
					$checkbox.addClass('icon-check');
					self.addFilterToStorage($checkbox.attr('data-refine'));
				}
			});
			

			if (_userType == PRIVATE && _productType == ENERGY) {
				self.kwhValue($kwhReq.length > 0 ? $kwhReq.val() : eonde.Utils.getIStorageValue(_userType + "[consumption][" + _productType + "]", _kwhDefault));
			} else if (_userType == PRIVATE && _productType == GAS) {
				self.kwhGasValue($kwhReq.length > 0 ? $kwhReq.val() : eonde.Utils.getIStorageValue(_userType + "[consumption][" + _productType + "]", _kwhDefault));
			} else if (_userType == BUSINESS && _productType == ENERGY) {
				self.kwhBCValue($kwhReq.length > 0 ? $kwhReq.val() : eonde.Utils.getIStorageValue(_userType + "[consumption][" + _productType + "]", _kwhDefault));
			} else if (_userType == BUSINESS && _productType == GAS) {
				self.kwhGasBCValue($kwhReq.length > 0 ? $kwhReq.val() : eonde.Utils.getIStorageValue(_userType + "[consumption][" + _productType + "]", _kwhDefault));
			}
		}

        self.zipSelectedInput.subscribe(function() {
            self.hasBackendErrors(false);
        });

		self.percentage.subscribe(function(tariffPercent) {
			if (parseInt(tariffPercent, 10) > 0) {
				_tariffType = "dt";
			} else {
				_tariffType = "et";
			}
		});
		
		/*
		@private populateDefaultThresholdValues : method to populate the default and threshold values for consumption
		*/
		self.populateDefaultThresholdValues = function() {
			//Populate consumption default and threshold values
			var $dataThreshold = jQuery("." + _userType + "threshold").attr("data-threshold");
			var $dataDefault = jQuery("." + _userType + "default").attr("data-default");
			
			if (defaultJSON != undefined && $dataDefault != undefined && $dataDefault.length > 0) {
				var defaultJSON = jQuery.parseJSON($dataDefault);
				if (_productType == ENERGY) {
					if (_userType == PRIVATE) {
						_kwhDefault = defaultJSON.strom_default != undefined && defaultJSON.strom_default != "" ? defaultJSON.strom_default : KWH_DF_ENERGY_PRI_FB;
					} else {
						_kwhDefault = defaultJSON.strom_default != undefined && defaultJSON.strom_default != "" ? defaultJSON.strom_default : KWH_DF_ENERGY_BUS_FB;
					}
				} else if (_productType == GAS) {
					if (_userType == PRIVATE) {
						_kwhDefault = defaultJSON.gas_default != undefined && defaultJSON.gas_default != "" ? defaultJSON.gas_default : KWH_DF_ENERGY_BUS_FB;
					} else {
						_kwhDefault = defaultJSON.gas_default != undefined && defaultJSON.gas_default != "" ? defaultJSON.gas_default : KWH_DF_GAS_BUS_FB;
					}
				}
			}
			if ($dataThreshold != undefined && $dataThreshold.length > 0) {
				var thresholdJSON = jQuery.parseJSON($dataThreshold);
				if (_productType == ENERGY) {
					if (_userType == PRIVATE) {
						_kwhThreshold = (thresholdJSON.strom_threshold != undefined && thresholdJSON.strom_threshold != "") ? thresholdJSON.strom_threshold : KWH_TH_ENERGY_PRI_FB;
						_kwhMaxThreshold = (thresholdJSON.strom_maxthreshold != undefined && thresholdJSON.strom_maxthreshold != "") ? thresholdJSON.strom_maxthreshold : KWH_TH_ENERGY_L_MAX_BUS_FB;
					} else if (_userType == BUSINESS) {
						_kwhMaxThreshold = (thresholdJSON.strom_maxthreshold != undefined && thresholdJSON.strom_maxthreshold != "") ? thresholdJSON.strom_maxthreshold : KWH_TH_ENERGY_L_MAX_BUS_FB;
					}
					//_kwhUMaxThreshold = KWH_TH_ENERGY_U_MAX_BUS_FB;
					
				} else if (_productType == GAS) {
					if (_userType == PRIVATE) {
						_kwhThreshold = (thresholdJSON.gas_threshold != undefined && thresholdJSON.gas_threshold != "") ? thresholdJSON.gas_threshold : KWH_TH_GAS_PRI_FB;
						_kwhMaxThreshold = (thresholdJSON.gas_maxthreshold != undefined && thresholdJSON.gas_maxthreshold != "") ? thresholdJSON.gas_maxthreshold : KWH_TH_GAS_L_MAX_BUS_FB;
					} else if (_userType == BUSINESS) {
						_kwhMaxThreshold = (thresholdJSON.gas_maxthreshold != undefined && thresholdJSON.gas_maxthreshold != "") ? thresholdJSON.gas_maxthreshold : KWH_TH_GAS_L_MAX_BUS_FB;
					}
					//_kwhUMaxThreshold = KWH_TH_GAS_U_MAX_BUS_FB;
				}
			}
		}
		
		self.openOVAForm = function(productname, multigridoperators, tariffType, gridoperator, item, event) {
			var ovaLink = $(event.target).attr("data-ova-url");
			if (ovaLink.indexOf("?") >= 0 ) {
				ovaLink += "&productName=" + encodeURIComponent(productname);
			} else {
				ovaLink += "?productName=" + encodeURIComponent(productname);
			}

			ovaLink += "&productType=" + _productType + "&customerType=" + _userType + "&tariffType=" + tariffType;
				
			if (_userType == BUSINESS) {
				ovaLink += "&multiGridOperators=" + encodeURIComponent(multigridoperators);
				if (multigridoperators && gridoperator) {
					ovaLink += "&gridOperator=" + encodeURIComponent(gridoperator);
				}
				
				if (tariffType == 'dt') {
					var percentNTStr = _percentNT != '' ? parseInt(parseFloat(_percentNT) * 100) : self.percentage();
					ovaLink += "&percentNt=" + parseInt(percentNTStr, 10)/100;
				}
			} else {
				ovaLink +="&multiGridOperators=false";
			}
			
			if($partnerURL.length > 0) {
				ovaLink+="&partnerURL="+$partnerURL.val();
			}
			if(self.isCSCMode() == true) {
				if(self.isPSMode() == true) {
					ovaLink +="&mode="+CSC_MODE_PRODUCT_SWITCH;
				} else {
					ovaLink +="&mode="+CSC_MODE_HOME_MOVE;
				}
				if (_userType == PRIVATE && _productType == ENERGY) {
					ovaLink +="&consumption="+ self.kwhValue();
				} else if(_userType == PRIVATE && _productType == GAS) {
					ovaLink +="&consumption="+ self.kwhGasValue();
				}
				if (_userType == PRIVATE && self.isPSMode() == true) {
						ovaLink +="&zipCode="+_zipCode;
						ovaLink +="&city="+_city;
				}
			}
			event.stopImmediatePropagation();
			window.location.href = ovaLink + "#no-back";
		}
		
		self.initThresholdVM = function(thresholdValue, modalDiv) {
			var thresholdVM = new PAThresholdViewModel();
			thresholdVM.threshold(thresholdValue);
			ko.applyBindings(thresholdVM, document.getElementById(modalDiv));
		}
		
		self.storeCityZip = function() {
			var zipCodeFull = self.zipSelectedInput();
			
			kwhValue = self.fetchKwhValue();
			
			//Store consumption to Local Storage based on customer type value
			
			eonde.Utils.setIStorageValue(_userType + "[consumption][" + _productType + "]",kwhValue, CONSUMPTION_EXPIRY);
            CQ_Analytics.ProfileDataMgr.setProperty(_userType+"_"+_productType+"_consumption", kwhValue);

			if (zipCodeFull !== "" && kwhValue != "") {
				var zipCity = zipCodeFull.split(' ');
				var zipCityName = zipCodeFull.substr(zipCodeFull.indexOf(' ')+1);
				
				CQ_Analytics.ProfileDataMgr.setProperty(_userType+"_zipcode", zipCity[0]);
            
				//Store zip code and city in Local Storage based on customer type value
				
				eonde.Utils.setIStorageValue(_userType+"[zip]",zipCity[0]);
				if (zipCity.length > 1 && zipCityName != null && zipCityName != undefined) {
					eonde.Utils.setIStorageValue(_userType+"[city]",zipCityName);
				}	
			}
			
			self.productData("");
			self.resultsCount("-1");
			self.view("2");
		}

		/*
		@private submitPage : method to check the input fields and show error messages if any
		@param e: event object of the triggered event
		*/
		self.submitPage = function(e){

			if($('.productadvisorpage .doublerate ').length){
            	$sliderRate.slider("value",self.percentage());
            }

			if (self.isValid()) {
				var kwhVal = self.fetchKwhValue();
				if (_userType == PRIVATE)  {
					var kwhValInt = parseInt(kwhVal.replace(/\./g,''));
					if (kwhValInt >= parseInt(_kwhThreshold.replace(/\./g,''), 10) && kwhValInt <= parseInt(_kwhMaxThreshold.replace(/\./g,''), 10) && self.isCSCMode() == false) {
						self.highThreshold("false");
						self.veryHighThreshold("false");
						if (eonde.Utils.getIStorageValue(_userType + "[switch][" + _productType + "]")) {
							continueAction({data: {id: "#modalConsumptionPA", actionId: "switch"}});
						} else {
							jQuery('#hdnBtn').trigger('click');
							self.initThresholdVM(_kwhThreshold, "modalConsumptionPA");	
						}
					} else if (kwhValInt > parseInt(_kwhMaxThreshold.replace(/\./g,''), 10)) {
						self.highThreshold("true");
						self.veryHighThreshold("false");
						self.threshold(_kwhMaxThreshold);
						if ($plz.val() != "" && $plz.val() != "PLZ") {
							self.zipSelectedInput($plz.val());
						}
						self.storeCityZip();
						e && e.preventDefault();
						return true;
					} else {
						self.highThreshold("false");
						self.veryHighThreshold("false");
						if ($plz.val() != "" && $plz.val() != "PLZ") {
							if(!self.zipSelectedInput().length){
								self.zipSelectedInput($plz.val());
							}
						}
						self.productData("");
						self.resultsCount("-1");
						self.findProducts();
						e && e.preventDefault();
						return true;
					}
				} else if (_userType == BUSINESS) {
					var kwhValInt = parseInt(kwhVal.replace(/\./g,''));
					if (kwhValInt > parseInt(_kwhMaxThreshold.replace(/\./g,''), 10)) {
						self.highThreshold("true");
						self.veryHighThreshold("false");
						self.threshold(_kwhMaxThreshold);
						if ($plz.val() != "" && $plz.val() != "PLZ") {
							self.zipSelectedInput($plz.val());
						}
						self.storeCityZip();
						e && e.preventDefault();
						return true;
					} else {
						self.highThreshold("false");
						self.veryHighThreshold("false");
						if ($plz.val() != "" && $plz.val() != "PLZ") {
							self.zipSelectedInput($plz.val());
						}
						self.productData("");
						self.resultsCount("-1");
						self.findProducts();
						e && e.preventDefault();
						return true;
					}
				} else {
					self.highThreshold("false");
					self.veryHighThreshold("false");
					if ($plz.val() != "") {
						self.zipSelectedInput($plz.val());
					}
					self.productData("");
					self.resultsCount("-1");
					self.findProducts();
					e && e.preventDefault();
					return true;
				}
				eonde.Utils.setIStorageValue("[livingArea]",self.qmValue());

			} else {
				self.errors.showAllMessages(true);
				return false;
			}

		}
		self.handleBackendErrors = function(data) {
			var errorString = eonde.Utils.showBackendErrors(data, "", "", "");
			if (errorString !== null && errorString !== "") {
				self.hasBackendErrors(true);
				self.backendErrors(errorString);
                self.view("1");
			}
		}
		self.fetchKwhValue= function() {
			var kwhValue = "";
			
			//Finding consumption value based on customer and product type
			if (_userType == PRIVATE && _productType == ENERGY) {
				kwhValue = self.kwhValue();
			} else if (_userType == PRIVATE && _productType == GAS) {
				kwhValue = self.kwhGasValue();
			} else if (_userType == BUSINESS && _productType == ENERGY) {
				kwhValue = self.kwhBCValue();
			} else if (_userType == BUSINESS && _productType == GAS) {
				kwhValue = self.kwhGasBCValue();
			}
			return kwhValue;
		}
		
		/*
		@private getProductsServiceURL : method to fetch the products service url
		*/		
        var productServiceURL = eonde.Config.serviceURLs.productsServiceURL;
        

		self.getProductsServiceURL = function() {
	      return jQuery(".productsServiceUrl").length > 0 ? jQuery(".productsServiceUrl").attr("data-service-url") : "";
	      return jQuery(".productsServiceUrl").length > 0 ? jQuery(".productsServiceUrl").attr("data-service-url") : "";
	    }
		
		/*
		@private updateNewProduct : method to set the new product in case it exists
		*/
		self.updateNewProduct = function(productObj) {
			var result = productObj;
			if (productObj && productObj !== null && productObj.newCustomer) {
				if (productObj.newCustomer.newProduct) {
					result.newCustomer.currentProduct = productObj.newCustomer.newProduct;
				}
			}
			return result;
		}
		
		/*
		@private findProducts : method to call the products service and get the list of products
		*/
		self.findProducts = function() {
			var kwhValue;
			var zipCodeFull = self.zipSelectedInput();
			
			kwhValue = self.fetchKwhValue();
			
			//Store consumption to Local Storage based on customer type value
			eonde.Utils.setIStorageValue(_userType + "[consumption][" + _productType + "]",kwhValue, CONSUMPTION_EXPIRY);
            CQ_Analytics.ProfileDataMgr.setProperty(_userType+"_"+_productType+"_consumption", kwhValue);

			self.resultsCount("-1");
			
			if (zipCodeFull !== "" && kwhValue != "") {
				var zipCity = zipCodeFull.split(' ');
				var zipCityName = zipCodeFull.substr(zipCodeFull.indexOf(' ')+1)
				//Store zip code and city in Local Storage based on customer type value
				
				eonde.Utils.setIStorageValue(_userType+"[zip]",zipCity[0]);
				if (zipCity.length > 1 && zipCityName != null && zipCityName != undefined) {
					eonde.Utils.setIStorageValue(_userType+"[city]",zipCityName);
				} 

                CQ_Analytics.ProfileDataMgr.setProperty(_userType+"_zipcode", zipCity[0]);
                
				
				//Go to next step
				self.view(2);
				
				//Adding in progress image
				jQuery("#paStromDiv .results .forOverlay").addClass("overlay");
				jQuery("#paStromDiv .results .forOverlay").removeClass("hide");					
				
				//Populating url for products service
				var productsUrl = productServiceURL+ 'clientId='+clientId+'&zipCode=' + zipCity[0] + '&productType=' + _productType + '&consumption=' + kwhValue + '&customerType=' + _userType + '&tariffType=' + _tariffType;
				
				
				//if (zipCity.length > 1 && zipCityName != null && zipCityName != undefined) {
				productsUrl += '&city=' + encodeURIComponent(zipCityName);
                //}

				if (_userType == BUSINESS) {
					var percentNTStr = _percentNT != '' ? parseInt(parseFloat(_percentNT) * 100) : self.percentage();
					productsUrl += '&percentNt=' + parseInt(percentNTStr, 10)/100;
				}				
				if(self.isCSCMode() == true) {
					if(self.isPSMode() == true) {
						productsUrl +="&mode="+CSC_MODE_PRODUCT_SWITCH;
					} else {
						productsUrl +="&mode="+CSC_MODE_HOME_MOVE;
					}
					if(self.isSignedCustomer() == true) {
						productsUrl +="&signedCustomer=true";
					} else {
						productsUrl +="&signedCustomer=false";
					}
				}
				//Making the AJAX Call
				eonde.Utils.ajaxInit();
				eonde.Utils.trackVirtualPageCall("/products");

				var methodType="GET";
				var jsonData={};
				
				if(self.isCSCMode() == true) {
					methodType="POST";
					jsonData=JSON.stringify({data : sessionStorage.getItem(_cscMode+"_customer"+ "_encrypted") });
				}
				
				$.ajax({
					beforeSend: function(xhr) {
						xhr.setRequestHeader('Authorization', authorizationHeaderVal);
					},
					contentType: "application/json; charset=utf-8",
					data: jsonData,
					dataType: "json",
					type: methodType,
					url: productsUrl
				}).done( function(data) {
					if(data != null && data.products != null) {
                        self.hasBackendErrors("");
						self.resultsCount(data.products.length);
						
						$.each(data.products, function(index,item) {
								if(self.isCSCMode() == true && item.signedCustomer !== undefined) {
									item.customer=item.signedCustomer;
								} else if(item.newCustomer !== undefined) {
									item.customer=item.newCustomer;
								}
							});
						
						
						data.products = self.populateProductInfo(data.products);
						
						self.productData(data);
						_productsMaster = data.products;
                        
						self.applyInitialFilter();
						self.initializeFiltersFromStorage();
						self.disableFilters();
						
						$(document).trigger("eonde.productlising.ready");
                        var mappedProducts = ko.mapping.fromJS(data.products);
                        var productsLength = mappedProducts().length;
                        var infoIconString = [];
                        
                            for(var i = 0; i < productsLength; i++){
							
                            if (_userType == PRIVATE) {

                                var bonusNetRounded = mappedProducts()[i].customer.bonusVatEuroRounded()
                                .toLocaleString($('.locale').attr('data-attr'));
                                
                                var x;
                                var netRoundedPrice = mappedProducts()[i].customer.
                                currentProduct.allRoundPriceYearVatEuroRounded().toLocaleString($('.locale').attr('data-attr'));
                                if(bonusNetRounded >0){
                                    x=eonde.i18n.get('productdetail.info.text.part1') + netRoundedPrice
                                    + " Euro " + eonde.i18n.get('productdetail.info.text.part2') + eonde.i18n.get('productdetail.info.text.part3') + kwhValue.toLocaleString($('.locale').attr('data-attr')) 
                                    + " " + eonde.i18n.get('productdetail.tab2.kwh.suffix');
                                }
                                else{
                                    x=eonde.i18n.get('productdetail.info.text.part1') + netRoundedPrice
                                    +" " +"Euro "+
                                        eonde.i18n.get('productdetail.info.text.part3') + kwhValue.toLocaleString($('.locale').attr('data-attr')) 
                                        + " " + eonde.i18n.get('productdetail.tab2.kwh.suffix');
                                }
                                infoIconString.push(x);
                            }
                            else{
                                var bonusNetRounded = mappedProducts()[i].customer.bonusNetEuroRounded()
                                .toLocaleString($('.locale').attr('data-attr'));
                                
                                
                                var x;
                                var netRoundedPrice = mappedProducts()[i].customer.
                                currentProduct.allRoundPriceYearNetEuroRounded().toLocaleString($('.locale').attr('data-attr'));
                                if(bonusNetRounded >0){
                                    x=eonde.i18n.get('productdetail.info.text.part1') + netRoundedPrice
                                    + " " +"Euro "+ eonde.i18n.get('productdetail.info.text.part2') + eonde.i18n.get('productdetail.info.text.part3') + kwhValue.toLocaleString($('.locale').attr('data-attr')) 
                                    + " " + eonde.i18n.get('productdetail.tab2.kwh.suffix');
                                }
                                else {
                                    x=eonde.i18n.get('productdetail.info.text.part1') + netRoundedPrice
                                    + " " +"Euro " +
                                        eonde.i18n.get('productdetail.info.text.part3') + kwhValue.toLocaleString($('.locale').attr('data-attr')) 
                                        + " " + eonde.i18n.get('productdetail.tab2.kwh.suffix');
                                }
                                infoIconString.push(x);
                            }
                        }
                        i = 0;
                        
                        $('.js-priceTableInfoIcon').each(function(){
							var $element = $(this);
                            $element.attr('data-content', infoIconString[i]);
                            i++;
                            
                        });
						infoIcon();
						if (eonde.clickableTeasers && jQuery (eonde.clickableTeasers)) {
							jQuery(eonde.clickableTeasers.init);
						}
                    }
					
					jQuery('#paStromDiv .box.stromerdgas.bc').removeClass('boxshadow');
					jQuery('#paStromDiv .box.stromerdgas.rc').removeClass('boxshadow');
					jQuery("#paStromDiv .results .forOverlay").removeClass("overlay");
					jQuery("#paStromDiv .results .forOverlay").addClass("hide");
					self.triggerConversionBar();
					eonde.regionalnav.getNav();
				}).fail(function(data) {
                    self.handleBackendErrors(data);
					jQuery("#paStromDiv .results .forOverlay").removeClass("overlay");
					jQuery("#paStromDiv .results .forOverlay").addClass("hide");
					self.resultsCount("0");	
					self.productData("");	
				});
				
				
			}
		}

		self.formatPrice = function(val) {
			if (val != undefined && val != null) {
				return val.toString().replace(".",",");
			} else {
				return "";
			}
		}
		
		/*
		@private replaceNumericSuffix : method to dynamically replace the numeric suffix in an image file
		@param text: the input text (an image url)
		@param suffix: the suffix to replace the original numeric suffix with (i.e. switching to a different image file)
		*/
		self.replaceNumericSuffix = function(text, suffix) {
		    var numericSuffixPattern = /^(.+)(_|-)([0-9]+)(\.[^/]+)/g;
		    var modifiedText = text.replace(numericSuffixPattern, '$1$2' + suffix + '$4');
		    return modifiedText;
		}
		self.getProductDetailJSON=function(userType,productType) {
			var productJSONObject={};
		
			var url="/etc/eonde/getproductdetailpages";
			if(userType != null) {
				url+="."+userType;
			}
			if(productType != null) {
				url+="."+productType;
			}
			if(clientId != null) {
				url+="."+clientId;
			}
			url+=".json";
                
			if(userType != null) {
				$.ajax({
					dataType: "json",
					type : 'GET',
					url: url
				}).done( function(data) {
					self.productDetailPages(data);
				}).fail(function() {
				});
			} else {
				self.productDetailPages(productJSONObject);
			}
           
		}
		self.populateProductInfo = function(products) {
			var productJSONObject=self.productDetailPages();
               
			var pathJSON={};
			var imageJSON={};
			
			if (productJSONObject!= null && productJSONObject.hasOwnProperty("ProductURL") ) {
				pathJSON= productJSONObject.ProductURL;            
			}
			if (productJSONObject!= null && productJSONObject.hasOwnProperty("ProductImage")) {
                imageJSON= productJSONObject.ProductImage;
			}

			$.each(products, function(key, productObj) {
				productObj = self.updateNewProduct(productObj);
				productObj.productInformation.tariffType = productObj.customer.currentProduct.counterType == "Eintarif" ? 'et' : 'dt';
				
				
		
				var prodPathFound = false;
				if (self.isCSCMode() == false && pathJSON != undefined && pathJSON != null) {
					$.each(pathJSON, function(tariffType,tariffTypeJSON) {
						$.each(tariffTypeJSON,function(key,value) {
							if (productObj.productInformation.productName == value && productObj.customer.currentProduct.counterType == tariffType ) {
								productObj.prodDetailURL = key;
								if($partnerURL.length > 0 ){
									if(productObj.prodDetailURL.indexOf("?") > 0 ) {
										productObj.prodDetailURL+="&partnerURL="+$partnerURL.val();
									} else {
										productObj.prodDetailURL+="?partnerURL="+$partnerURL.val();
									}
								}
								prodPathFound = true;
							
							}
							
						});
					});
				}
				
				productObj.bonusInfoColor="red";
                if (productJSONObject!= null && productJSONObject.hasOwnProperty("ProductBonusColor")) {
                    var bonusJSON= productJSONObject.ProductBonusColor;
					
					tariffTypeJSON = bonusJSON[productObj.customer.currentProduct.counterType];
					
                 
                    $.each(tariffTypeJSON,function(key,value) {
                        if (productObj.productInformation.productName == key) {
                            productObj.bonusInfoColor=value;
                        }
                    });
                }
				
				if (!prodPathFound) {
					productObj.prodDetailURL = "";
				}
				
				var prodImageFound = false;
				if (pathJSON != undefined && pathJSON != null) {
					$.each(imageJSON, function(tariffType,tariffTypeJSON) {
						$.each(tariffTypeJSON, function(key,value) {
						
                            if (productObj.productInformation.productName == key && productObj.customer.currentProduct.counterType == tariffType) {
                                var extension = value.split(".").pop();
                                productObj.productImage = value;
                                // dynamically change image file name to enforce a specific aspect ratio depending on the viewport
                                productObj.productImageSmall = self.replaceNumericSuffix(value, '02') + ".transform/productheader_viewportS/image." + extension;
                                productObj.productImageMedium = self.replaceNumericSuffix(value, '01') + ".transform/productheader_viewportM/image." + extension;
                                productObj.productImageLarge = self.replaceNumericSuffix(value, '01') + ".transform/productheader_viewportL/image." + extension;
								prodImageFound = true;
							}
						});
					});
				}
				if (!prodImageFound) {
					productObj.productImage = "";
                    productObj.productImageSmall = "";
                    productObj.productImageMedium = "";
                    productObj.productImageLarge = "";
				}
				productObj.customer.currentProduct.allRoundPriceMonthVatEuroRounded = Math.round(productObj.customer.currentProduct.allRoundPriceMonthVatEuroRounded);
				productObj.customer.currentProduct.allRoundPriceMonthNetEuroRounded = Math.round(productObj.customer.currentProduct.allRoundPriceMonthNetEuroRounded);
				
			
				
				var errorURL = jQuery(".errorurlpdf").length > 0 ? jQuery(".errorurlpdf").attr("data-error-url") : "";
				var pdfServiceURL = '';
				
		            pdfServiceURL = eonde.Config.serviceURLs.pdfService;
		        
		        var ovaPdfURL = pdfServiceURL + 'clientId='+clientId+'&type=auftrag&filename=' + productObj.productInformation.productId + '.pdf&errorUrl=' + errorURL;
		        productObj.productInformation.ovaPdfURL = ovaPdfURL;

			});
			
			return products;
		};

		/*Disables filters based on product availability*/
		self.disableFilters = function() {
			var availableFilters = {};
			$filterOptions.each(function() {
				availableFilters[$(this).attr('data-refine')] = false;
			});
			var products = (self.productData() && self.productData() !== null && self.productData() !== "") ? self.productData().products : {};
			for(var i = 0; i < products.length; i++) {
				var attributes = products[i].productInformation.attributes;
				$.each(attributes, function(key, value) {
					$.each(value, function(key, value) {
						availableFilters[key] = availableFilters[key] || value;
					});
				});
			}
			$filterOptions.each(function() {
				if(!availableFilters[$(this).attr('data-refine')]) {
					/*Before disbaling the field, remove the check icon and remove the stored value from local storage.*/
					$(this).removeClass("icon-check").attr('disabled', true);
					$(this).siblings().attr('disabled', true);
					var filterValue=jQuery(this).attr('data-refine');
					CQ_Analytics.ProfileDataMgr.setProperty("filter_"+filterValue, "false");
					self.removeFilterFromStorage(filterValue);
				} else {
					$(this).removeAttr('disabled');
					$(this).siblings().removeAttr('disabled');
				}
			});
		};

		/*Loads the last stored state of all filters for each of the filters on page.*/
		self.initializeFiltersFromStorage = function() {
			var _filterAttributeTeaser = eonde.Utils.getIStorageValue(_userType+"["+_productType+"][filterAttributeTeaser]");
			var _showProductAttributesFilter = eonde.Utils.getIStorageValue(_userType+"["+_productType+"][showProductAttributesFilter]");
			
			if(_filterAttributeTeaser == "true" || _showProductAttributesFilter == "false" || self.ecologyURL() == true || self.offlineProductURL() == true || self.priceGuaranteeURL() == true || self.flexibilityURL() == true) {
				$filterOptions.each(function() {
					var filterAttribute = $(this).attr('data-refine');
					var valueInStorage = eonde.Utils.getIStorageValue(_userType + "[" + _productType + "][" + filterAttribute + "]", false);
					if(valueInStorage) {
						/*Apply click to filter products*/
						$(this).trigger('click');
					}
				});
			} else {
				if(_hideAll == "true" || (_hideEcology == "true" && _hidePriceGuarantee == "true" && _hideOfflineProduct == "true" && _hideFlexibility == "true") ) {
						self.isHideAll(true);
				}
				$filterOptions.each(function() {
					var filterAttribute = $(this).attr('data-refine');
					var filterDisabled=$(this).attr('disabled');
					if(filterAttribute == 'ecology') {
						if(filterDisabled != "disabled" &&  _ecology == "true") {
							$(this).trigger('click');
						}
						if( _hideEcology == "true") {
							$(this).parent().attr('style','display:none');
						}
					}
					if(filterAttribute == 'priceGuarantee') {
						if(filterDisabled != "disabled" && _priceGuarantee == "true") {
							$(this).trigger('click');
						}
						if( _hidePriceGuarantee == "true") {
							$(this).parent().attr('style','display:none');
						}
					}
					if(filterAttribute == 'offlineProduct') {
						if(filterDisabled != "disabled" && _offlineProduct == "true") {
							$(this).trigger('click');
						}
						if( _hideOfflineProduct == "true") {
							$(this).parent().attr('style','display:none');
						}
					}
					if(filterAttribute == 'flexibility') {
						if(filterDisabled != "disabled" && _flexibility == "true") {
							$(this).trigger('click');
						}
						if( _hideFlexibility == "true") {
							$(this).parent().attr('style','display:none');
						}
					}
				});
			}
			
		};

		/*Clears the unchecked filter from storage.
			@params :
			@filterValue : The filter to be removed from local storage.
		*/
		self.removeFilterFromStorage = function(filterValue) {
			eonde.Utils.clearIStorageValue(_userType + "[" + _productType + "][" + filterValue + "]");
		};

		/*Saves the checked filters and their state to local storage for future use.
			@params :
			@filterValue : The filter to be stored in local storage.
		*/
		self.addFilterToStorage = function(filterValue) {
			eonde.Utils.setIStorageValue(_userType + "[" + _productType + "][" + filterValue + "]", true);
		};
		
		/*
		@private toggleCheck : method called on click of checkbox to toggle the UI appearance
		@param e: event object of the triggered event
		*/
		self.toggleCheck = function(e) {
			/*Uncheck icon only if event is from mouse*/
			if (jQuery(this).hasClass("icon-check") && e.originalEvent !== undefined) {
	        	jQuery(this).removeClass("icon-check");
				var filterValue=jQuery(this).attr('data-refine');
		        CQ_Analytics.ProfileDataMgr.setProperty("filter_"+filterValue, "false");
		        self.removeFilterFromStorage(filterValue);
			} else {
				jQuery(this).addClass("icon-check");
				var filterValue=jQuery(this).attr('data-refine');
		        CQ_Analytics.ProfileDataMgr.setProperty("filter_"+filterValue, "true");
				self.addFilterToStorage(filterValue);
			}
			self.filterProducts();
			self.disableFilters();
			$(document).trigger("eonde.productlising.ready");
		}
		
		self.applyInitialFilter = function() {
			var filterAttrs = jQuery(".icon-check");
			var productData = self.productData(); 
			
			if (productData == null || productData == "") {
				return;
			}
			if (filterAttrs.length == 0) {
				self.footnoteIndices.push("NONE");
				return;
			}
			if (filterAttrs.length > 0) {
				var filteredProducts = new Array();
				var k = 0;
				var products = _productsMaster;
				var found = false;
				self.footnoteIndices.removeAll();
				for (i = 0; i < products.length; i++) {
					var attributes = products[i].productInformation.attributes;
					var filterList = "";
					var productFound = false;
					$.each(filterAttrs, function(key,value) {
						filterList += '(';
						for (j = 0; j < attributes.length; j++) {
							filterList += '(attributes[' + j + ']["' + $(this).attr("data-refine") + '"] != undefined && attributes[' + j + ']["' + $(this).attr("data-refine") + '"] == true) || ';
						}
						filterList = filterList.substring(0, filterList.length - 4) + ') && ';
						
					});
					filterList = filterList.substring(0, filterList.length - 4);
					if (eval(filterList)) {
								productFound = true;
							}
					if (productFound) {
						filteredProducts.push(products[i]);

						//EONSUP-5350 Adding footnote index to array if one exists
						if (products[i].customer !== undefined && products[i].customer.bonusDescFootnote !== undefined && $.isNumeric(products[i].customer.bonusDescFootnote)) {
							self.footnoteIndices.push(products[i].customer.bonusDescFootnote + 1);
						}
						
						if (products[i].productInformation !== undefined && products[i].productInformation.advantages !== undefined && products[i].productInformation.advantages.length > 0) {
							$.each(products[i].productInformation.advantages, function(index,item) {
								if(item.footnote !== undefined && $.isNumeric(item.footnote)) {
									self.footnoteIndices.push(item.footnote + 1);
								}
							});
						}
					}
				}
				productData.products = filteredProducts;
				self.resultsCount(filteredProducts.length);
			} else {
				productData.products = _productsMaster;
				self.resultsCount(_productsMaster.length);
			}
			
			self.productData(productData);
		}
		
		self.triggerConversionBar=function(){
            $(".conversionContainer").click(function(e){
                $(this).find(".orderOnlineButton").first().trigger('click');
                return false;
            });
        }
		
		self.filterProducts = function() {
			var filterAttrs = jQuery(".icon-check");
			var productData = self.productData(); 
			if (productData == null || productData == "") {
				return;
			}
			if (filterAttrs.length > 0) {
				var filteredProducts = new Array();
				var k = 0;
				var products = _productsMaster;
				var found = false;
				self.footnoteIndices.removeAll();
				for (i = 0; i < products.length; i++) {
					var attributes = products[i].productInformation.attributes;
					var filterList = "";
					var productFound = false;
					$.each(filterAttrs, function(key,value) {
						filterList += '(';
						for (j = 0; j < attributes.length; j++) {
							filterList += '(attributes[' + j + ']["' + $(this).attr("data-refine") + '"] != undefined && attributes[' + j + ']["' + $(this).attr("data-refine") + '"] == true) || ';
						}
						filterList = filterList.substring(0, filterList.length - 4) + ') && ';
						
					});
					filterList = filterList.substring(0, filterList.length - 4);
					if (eval(filterList)) {
								productFound = true;
							}
					if (productFound) {
						filteredProducts.push(products[i]);

						//EONSUP-5350 Adding footnote index to array if one exists
						if (products[i].customer !== undefined && products[i].customer.bonusDescFootnote !== undefined && $.isNumeric(products[i].customer.bonusDescFootnote)) {
							self.footnoteIndices.push(products[i].customer.bonusDescFootnote + 1);
						}
						if (products[i].productInformation !== undefined && products[i].productInformation.advantages !== undefined && products[i].productInformation.advantages.length > 0) {
							$.each(products[i].productInformation.advantages, function(index,item) {
								if(item.footnote !== undefined && $.isNumeric(item.footnote)) {
									self.footnoteIndices.push(item.footnote + 1);
								}
							});
						}
					}
				}
				productData.products = filteredProducts;
				self.resultsCount(filteredProducts.length);
			} else {
				productData.products = _productsMaster;
				self.resultsCount(_productsMaster.length);
				self.footnoteIndices.push("NONE");
			}
			
			self.productData(productData);
			
			var kwhValue = self.fetchKwhValue();
            
            var mappedProducts = ko.mapping.fromJS(productData.products);
            var productsLength = mappedProducts().length;
            var infoIconString = [];
            
            for(var i = 0; i < productsLength; i++){
                	
                if (_userType == PRIVATE) {
                    /* Customer Object */
					
                    var bonusNetRounded = mappedProducts()[i].customer.bonusVatEuroRounded()
                    .toLocaleString($('.locale').attr('data-attr'));
                    
                    var x;
                    var netRoundedPrice = mappedProducts()[i].customer.
                    currentProduct.allRoundPriceYearVatEuroRounded().toLocaleString($('.locale').attr('data-attr'));
                    if(bonusNetRounded >0){
                        x=eonde.i18n.get('productdetail.info.text.part1') + netRoundedPrice
                        + " " +"Euro "+ eonde.i18n.get('productdetail.info.text.part2') + eonde.i18n.get('productdetail.info.text.part3') + kwhValue.toLocaleString($('.locale').attr('data-attr')) 
                        + " " + eonde.i18n.get('productdetail.tab2.kwh.suffix');
                        
                        
                    }
                    
                    else{
                        x=eonde.i18n.get('productdetail.info.text.part1') + netRoundedPrice
                        + " " +"Euro " +
                            eonde.i18n.get('productdetail.info.text.part3') + kwhValue.toLocaleString($('.locale').attr('data-attr')) 
                            + " " + eonde.i18n.get('productdetail.tab2.kwh.suffix');
                    }
                    infoIconString.push(x);
                }
                
                else{
                    
                    var bonusNetRounded = mappedProducts()[i].customer.bonusNetEuroRounded()
                    .toLocaleString($('.locale').attr('data-attr'));
                    
                    
                    var x;
                    var netRoundedPrice = mappedProducts()[i].customer.
                    currentProduct.allRoundPriceYearNetEuroRounded().toLocaleString($('.locale').attr('data-attr'));
                    if(bonusNetRounded >0){
                        x=eonde.i18n.get('productdetail.info.text.part1') + netRoundedPrice
                        + " " +"Euro "+ eonde.i18n.get('productdetail.info.text.part2') + eonde.i18n.get('productdetail.info.text.part3') + kwhValue.toLocaleString($('.locale').attr('data-attr')) 
                        + " " + eonde.i18n.get('productdetail.tab2.kwh.suffix');
                    }
                    else {
                        x=eonde.i18n.get('productdetail.info.text.part1') + netRoundedPrice
                        + " " +"Euro " +
                            eonde.i18n.get('productdetail.info.text.part3') + kwhValue.toLocaleString($('.locale').attr('data-attr')) 
                            + " " + eonde.i18n.get('productdetail.tab2.kwh.suffix');
                    }
                    infoIconString.push(x);
                }
                
                
                
            }
            i = 0;
            
            $('.js-priceTableInfoIcon').each(function(){
				var $element = $(this);
                $element.attr('data-content', infoIconString[i]);
                i++;
			});
			self.triggerConversionBar();
			infoIcon();
		}
		
		/*
		@private changeView : method called to switch between views
		@param e: event object of the triggered event
		*/
		self.changeView = function(item, event) {
			var $obj = $(event.target);
			jQuery('#paStromDiv .box.stromerdgas.bc').addClass('boxshadow');
			jQuery('#paStromDiv .box.stromerdgas.rc').addClass('boxshadow');
			if ($obj.prev(".cutText").find('#selectedZipTxt').length > 0) {
				if(self.isCSCMode() == true && self.isPSMode() == true) {
					return;
				}
				self.clearPLZ();
				eonde.Utils.clearIStorageValue(_userType+"[zip]");
				CQ_Analytics.ProfileDataMgr.removeProperty(_userType+"_zipcode");
				eonde.Utils.clearIStorageValue(_userType+"[city]");
				self.view(1);
				$plz.focus();
				eonde.regionalnav.getNav();
				self.zipFromRequest(false);
			} else if ($obj.prev(".cutText").find('#selectedKwhTxt').length > 0) {
				self.view(1);
				jQuery("#paStromDiv").find("#kwh").focus();
			}
			if($('.productadvisorpage .doublerate ').length) {
				$sliderRate.slider("value",self.percentage());
				self.sliderrateChanged(null, {value:self.percentage()});
            }
		}
		
		self.enterPressed = function(data, event) {
            if(event.which == 13) {
            	self.enterKeyPressed(true);
            	if(!$overlayDiv.hasClass('zipOverlay')) {
            		$plz.blur();
            		$('#kwh').blur();
	                data.submitPage();
	                return false;
	            }
            } else
            	self.enterKeyPressed(false);
            return true;
        }
		
		/*
		@private expandCollapse : method called for expanding, collapsing the search results
		@param e: event object of the triggered event
		*/
		self.expandCollapse = function(event, item) {
			var $clicked = jQuery(event.target);
			//Added classes for info icon to prevent expand collapse on open and close of info icon EONWKT-4735
            if($clicked.hasClass('detailsarrow') || $clicked.hasClass('icon-info_icon') || $clicked.hasClass('close')){
                return true;
            } else {
				var buttonIcon=$clicked.parents('.panel-default').find('.panel-heading').find('.firstRow').find('button');
                if(buttonIcon.hasClass('icon-stage_teaser_pfeil_unten')){
                    buttonIcon.removeClass('icon-stage_teaser_pfeil_unten').addClass('icon-stage_teaser_pfeil_oben');
                    $clicked.parents('.panel-default').find('.panel-collapse').show();
                }
                else{
                    buttonIcon.removeClass('icon-stage_teaser_pfeil_oben').addClass('icon-stage_teaser_pfeil_unten');
                    $clicked.parents('.panel-default').find('.panel-collapse').hide();
                } 
            }
		}

		
		self.openProductDetail = function (test) {
			if (test != null && test != undefined) {
				window.location=test;				
			}
		}
		
		/*
		@private checkDefaultText : method called to show default text when any input text box is cleared
		@param e: event object of the triggered event
		*/
		self.checkDefaultText = function(e){
			var val = jQuery(this).val();
			if(val == ""){
				self.zipSelected.isModified(false);
				self.zipSelectedInput.isModified(false);
			}
		}

		/*
		@private clearPLZ : method to clear the selected zip code value on click of cross button
		@param e: event object of the triggered event
		*/
		self.clearPLZ = function(e){
			$plz.val(jQuery(this).attr("defaulttext"));
			self.zipSelectedInput("");
            self.zipSelected("");
            self.zipSelectedInput.isModified(false);
            self.zipSelected.isModified(false);
			eonde.Utils.clearIStorageValue(_userType + "[zip]");
			$plz.focus();
		};
		
		/*
		@private updateView : method called to expand/collapse the double rate section
		@param e: event object of the triggered event
		*/
		self.updateView = function(event) {
			if(self.sliderView()) {
				$rateBtn.removeClass("uparrow").addClass("downarrow");
				$("#paStromDiv .bigarrow").css("display", "inline-block");
			} else {
				$rateBtn.removeClass("downarrow").addClass("uparrow");
				$("#paStromDiv .bigarrow").css("display", "block");
			}
			self.sliderView(!self.sliderView());
			
			if (self.ubernclicked() == 1) {
				self.productData("");
				self.resultsCount("0");
				self.submitPage();
				//self.findProducts();
				self.ubernclicked(0);
			}
		}
		
		/*
		@private buttonClick : method called on select of double rate % value
		*/
		self.buttonClick = function() {
			self.ubernclicked(1);
			self.updateView();
			self.percentage_display(self.percentage());
 			eonde.Utils.setIStorageValue("gw[percentNt]",self.percentage());
		}
		
		/*
		@private clearPercentage : method to clear double rate % value and reset slider on click of cross button
		@param e: event object of the triggered event
		*/
		self.clearPercentage = function() {
			self.percentage("0");
			self.percentage_display("0");
			eonde.Utils.setIStorageValue("gw[percentNt]",0);
			self.productData("");
			self.resultsCount("0");
			self.findProducts();
			$sliderRate.slider("value",0);
		}

		/*
		@private sliderRCChanged : method called on change of the RC strom slider
		@param e: event object of the triggered event
		@param slider: slider object of the jQuery slider function
		*/
		self.sliderRCChanged = function(event, slider){
			$manSlider.removeClass("icon-verbrauch_strom selectman active");
			for(var i=0;i<$manSlider.length;i++){
				if(i<=slider.value-1){
					$manSlider.eq(i).addClass("active");
					self.kwhValue(self._rcStromKwhValues[i]);
				}
			}
            $manSlider.addClass("icon-verbrauch_strom selectman");
		};
		
		/*
		@private sliderGasChanged : method called on change of the RC gas slider
		@param e: event object of the triggered event
		@param slider: slider object of the jQuery slider function
		*/
		self.sliderGasChanged = function(event, slider){
			self.qmValue(slider.value);
            var qmVal = slider.value;
			if (qmVal <= 100) {
                self.kwhGasValue((qmVal * 0.117).toFixed(3));
            } else {
                self.kwhGasValue((qmVal * 0.164).toFixed(3));
            }

		};

		/*
		@private sliderBCChanged : method called on change of the BC strom slider
		@param e: event object of the triggered event
		@param slider: slider object of the jQuery slider function
		*/		
		self.sliderBCChanged = function(event, slider){
			
			for(var i=0;i<$stromBar.length;i++){
				if(i<=slider.value - 1){
					$stromBar.eq(i).addClass("active");
					self.kwhBCValue(self._bcStromStepValues[i]);
				}else{
					$stromBar.eq(i).removeClass("active");
				}
			}			
			self.kwhBCValue(self._bcStromStepValues[slider.value]);
		}
		
		/*
		@private sliderBCGasChanged : method called on change of the BC gas slider
		@param e: event object of the triggered event
		@param slider: slider object of the jQuery slider function
		*/
		self.sliderBCGasChanged = function(event, slider){
			
			for(var i=0;i<$gasBar.length;i++){
				if(i<=slider.value - 1){
					$gasBar.eq(i).addClass("active");
					self.kwhGasBCValue(self._bcErdgasStepValues[i]);
				}else{
					$gasBar.eq(i).removeClass("active");
				}
			}
			
			self.kwhGasBCValue(self._bcErdgasStepValues[slider.value]);
		}
		
		/*
		@private sliderrateChanged : method called on change of the double rate meter slider
		@param e: event object of the triggered event
		@param slider: slider object of the jQuery slider function
		*/
		self.sliderrateChanged = function(event, slider){			
			self.percentage(slider.value);
		}
		
		// Moving Slider with value change
		
		 $('#paStromDiv input.ratepercent').each(function(){
            var self=$(this);
			self.keydown(function(event) {
                // Allow only backspace and delete
                if ( event.keyCode == 46 || event.keyCode == 8 ) {
                    // let it happen, don't do anything
                }
                else {
                    // Ensure that it is a number and stop the keypress
                    if (event.keyCode < 48 || (event.keyCode > 57 && event.keyCode < 96) || event.keyCode > 105 || self.val() > 100 || self.val().length > 3 ) {
                        return false; 
                    } 
                }

        	});
        });

        $('#paStromDiv .ratepercent').keyup(function(){
            var changedVal=$(this).val();
			$sliderRate.slider("value",changedVal);
            self.sliderrateChanged(null, {value:changedVal});
		});

		
		/*
		@private selectmanClicked : method called on click of man symbol for the RC strom slider
		@param e: event object of the triggered event
		*/
		self.selectmanClicked = function(e){
			var id=jQuery(this).index();

			$sliderRC.slider("value",id+1);
			self.sliderRCChanged(null, {value:id+1});
			$manSlider.hide();
			$manSlider.show();
		}
		
		
		
		/*
		@private selectBarClicked : method called on click of the bars symbol for the BC strom slider
		@param e: event object of the triggered event
		*/
		self.selectBarClicked = function(e){
			var id=jQuery(this).index();

			$sliderBC.slider("value",id);
			self.sliderBCChanged(null, {value:id});
		}
		
		/*
		@private selectGasBarClicked : method called on click of the bars symbol for the BC gas slider
		@param e: event object of the triggered event
		*/
		self.selectGasBarClicked = function(e){
			var id=jQuery(this).index();
			$sliderBCGas.slider("value",id);
			self.sliderBCGasChanged(null, {value:id});
		}
		
		/*
		@private qmChanged : method called to update the qm slider on change of qm input text value
		@param e: event object of the triggered event
		*/
		self.qmChanged = function(e){
			var val = jQuery(this).val();
			var newVal = val;
			
			if (val >=30 && val <=200) {
				if (val % 5 > 0) { newVal = val - val % 5; }

				$sliderRCGas.slider("value",newVal);
				self.sliderGasChanged(null, {value:newVal});
			}
		}
		
		/*
		@private qmOutOfRange : method called to validate the range of qm entered in the text field
		@param e: event object of the triggered event
		*/
		self.qmOutOfRange = function(e) {
			var val = jQuery(this).val();
			var newVal = val;
			if (val < 30) {
				$qm.val(30);
				newVal = 30;
			}
			else if (val >200) {
				$qm.val(200);
				newVal = 200;
			}
			$sliderRCGas.slider("value",newVal);
			self.sliderGasChanged(null, {value:newVal});
		}

		/*
		@private toggleCheck : method called on select of value from the auto complete zip code list
		@param event: event object of the triggered event
		@param ui: ui object of the selected value
		*/
		self.plzSelected = function (event, ui) {
			if(ui.item.value === eonde.i18n.get("autocomplete.load.more.text")){
				return false;
			}		
			self.zipSelectedInput(ui.item.value.toString());
			$(event.target).focus();
			/*Propagating the enter key press for select in autocomplete.*/
            self.enterPressed(self, event);
		}
		
		self.getZipCityList = function (data, more) {
			var zipCityList = new Array();
			self.zipCitiesList.removeAll();
			var i = 0;
			$.each(data, function(index, value) {
				$.each(value.cities, function (idx, val) {
					zipCityList[i++] = value.zipCode + " " + val;
					self.zipCitiesList.push(value.zipCode + " " + val);
				});
			});
			if(zipCityList.length > 0) {
				self.zipSelectedInput(zipCityList[0]);
				self.zipSelected(zipCityList[0]);
				$plz.val(zipCityList[0]);
			}
			if (more) {
				zipCityList=zipCityList.splice(0,10);
				zipCityList.push(eonde.i18n.get("autocomplete.load.more.text"));
			}
			return zipCityList;
		}		
		
		/*
		@private init : method called immediately after the view model is created to initialize 
		*	and get results if input parameters are present
		*/
		self.init = function() {
			//Populate product and customer type values
			if (jQuery(".productadvisorpage").find("input[name='hdnproducttype']").length > 0) {
				var productUserType = jQuery(".productadvisorpage").find("input[name='hdnproducttype']").val().split('_');
				_productType = productUserType[0];
				_userType = productUserType[1];
			}
			if (jQuery(".productadvisorpage").find("input[name='hdntarifftype']").length > 0) {
				_tariffType = jQuery(".productadvisorpage").find("input[name='hdntarifftype']").val();
			}
			/*Check is there any product filter configured via teaser. Remember this will have priority over*/
			if(eonde.Utils.getIStorageValue(_userType + "["+_productType+"][showProductAttributesFilter]") === "false"){
				self.teaserHideAttributes(true);
			}
			
			if(eonde.Utils.getIStorageValue(_userType + "["+_productType+"][filterAttributeTeaser]") === "true"){
				self.isTeaserFilterAttributes(true);
			}
			//Populate request values
			self.populateRequestValues();
			
			//Populate default and threshold consumption values
			self.populateDefaultThresholdValues();
			
			//Set product type in Local Storage
            eonde.Utils.setIStorageValue(_userType + "[productType]", _productType );
						
			if(_userType == "pk") {
				self.getProductDetailJSON("pk",_productType);
			} else {
				self.getProductDetailJSON("gk",_productType);
			}
						
			if (self.zipSelectedInput() !== "" && self.zipSelectedInput() !== null && self.zipSelectedInput() !== undefined) {
				self.submitPage();
			}
			self.resultsCount("-1");
			jQuery('body').on('click', '#paStromDiv #accordion .panellink', self.expandCollapse);
		}

		//Adding events to all the actionable fields/buttons
		jQuery("#buttonweiter").click(self.submitPage);
		$filterOptions.click(self.toggleCheck);
		
		$manSlider.off("click").on("click", function(){
			var id= $(this).index() + 1;
				
			$manSlider.removeClass("active");
			
			for(var i=0;i<id;i++){
				$manSlider.eq(i).addClass("active").hide();
			}
			
			$manSlider.show();
			
			$sliderRC.slider("value",id);
			self.kwhValue(self._rcStromKwhValues[id-1]);
			
		});
		$stromBar.click(self.selectBarClicked);
		$gasBar.click(self.selectGasBarClicked);
		$qm.keyup(self.qmChanged);
		$qm.change(self.qmOutOfRange);
		$plz.focusout(self.checkDefaultText);
		
		
		
		//Initializing sliders for all the input fields which take their value from an slider
		if ($sliderRC) {
			$sliderRC.slider({animate: true,
									range: "min",
									min:1,
									max:6,
									step:1,
									value:2,
									slide:self.sliderRCChanged,
									disabled:false});
		}
		if ($sliderRCGas) {
			$sliderRCGas.slider({animate: true,
									range: "min",
									min:30,
									max:200,
									step:5,
									value:storageqmVal,
									slide:self.sliderGasChanged,
									disabled:false});
		}
		if ($sliderBC) {
			$sliderBC.slider({animate: true,
									range: "min",
									min: 0,
									max: self._bcStromStepValues.length - 1,
									value: 2,
									step: 1,
									slide:self.sliderBCChanged,
									disabled:false});
		}	
		if ($sliderBCGas) {
			$sliderBCGas.slider({animate: true,
									range: "min",
									min: 0,
									max: self._bcErdgasStepValues.length - 1,
									value: 2,
									step: 1,
									slide:self.sliderBCGasChanged,
									disabled:false});
		}	
		if ($sliderRate) {
			$sliderRate.slider({animate: true,
									range: "min",
									min: 0,
									max: 100,
									value: 0,
									step: 1,
									slide:self.sliderrateChanged,
									disabled:false});
		}

		/*
		@private validateKwhValue : method to validate the consumption value entered by user and swtich to default in value is incorrect
		@param item: object that triggered the event
		@param e: event object of the triggered event
		*/
		self.validateKwhValue = function (item, event) {
			if (_userType == PRIVATE && _productType == ENERGY) {
				 if (item != undefined && ($.trim(item) == '' || isNaN(item.replace(/\./g,'')) || (!isNaN(item.replace(/\./g,'')) && parseInt(item.replace(/\./g,''),10) < 0))) {
					$(event.target).val(_kwhDefault);
					self.kwhValue(_kwhDefault);
					$sliderRC.slider("value",2);
					self.sliderRCChanged(null, {value:2});
				} else {
                    var index = eonde.Utils.getClosestRange(self._rcStromKwhValues, item) + 1;
					$sliderRC.slider("value",index);
					self.sliderRCChanged(null, {value:(index)});
					self.kwhValue(eonde.Utils.formatConsumption(item));
				}
			} else if (_userType == PRIVATE && _productType == GAS) {
				 if (item != undefined && ($.trim(item) == '' || isNaN(item.replace(/\./g,'')) || (!isNaN(item.replace(/\./g,'')) && parseInt(item.replace(/\./g,''),10) < 0))) {	
					$(event.target).val(_kwhDefault);
					self.kwhGasValue(_kwhDefault);
					$sliderRCGas.slider("value",100);
					self.sliderGasChanged(null, {value:100});
				} else {
					var consumptionValue= eonde.Utils.formatConsumption(item);
                    var index=100;
					if (parseFloat(consumptionValue) <= parseFloat("11.700")) {
						index = (parseFloat(consumptionValue) / 0.117).toFixed(0);
					} else {
						index = (parseFloat(consumptionValue) / 0.164).toFixed(0);
					}
					if (index >= 200) {
						index = 200;
					}
					$sliderRCGas.slider("value",index);
                    self.sliderGasChanged(null, {value:(index)});
                    self.kwhGasValue(consumptionValue);
				}
			} else if (_userType == BUSINESS && _productType == ENERGY) {
				 if (item != undefined && ($.trim(item) == '' || isNaN(item.replace(/\./g,'')) || (!isNaN(item.replace(/\./g,'')) && parseInt(item.replace(/\./g,''),10) < 0))) {
					$(event.target).val(_kwhDefault);
					self.kwhBCValue(_kwhDefault);
					$sliderBC.slider("value",1);
					self.sliderBCChanged(null, {value:1});
				} else {
					var index = eonde.Utils.getClosestRange(self._bcStromStepValues, item);
					$sliderBC.slider("value", index);
					self.sliderBCChanged(null, {value: (index) });
					self.kwhBCValue(eonde.Utils.formatConsumption(item));
				}
			} else if (_userType == BUSINESS && _productType == GAS) {
				 if (item != undefined && ($.trim(item) == '' || isNaN(item.replace(/\./g,'')) || (!isNaN(item.replace(/\./g,'')) && parseInt(item.replace(/\./g,''),10) < 0))) {
					$(event.target).val(_kwhDefault);
					self.kwhGasBCValue(_kwhDefault);
					$sliderBCGas.slider("value",1);
					self.sliderBCGasChanged(null, {value:1});
				} else {
					var index = eonde.Utils.getClosestRange(self._bcErdgasStepValues, item);
					$sliderBCGas.slider("value", index);
					self.sliderBCGasChanged(null, {value: (index) });
					self.kwhGasBCValue(eonde.Utils.formatConsumption(item));
				}
			}
			return true;
		}
		
        //Adding custom zip code validation as part of EONWKT-4307
		self.zipErrorMsg = ko.observable("");
        self.validateZipValue = function (item, event) {
            if (item.length < 3) {
                self.zipErrorMsg(eonde.i18n.get("zip.validationerror.atleastthreedigits"));
            } else if(!$.isNumeric(item) && typeof($plz.data("autocomplete"))!=="undefined" && !$plz.autocomplete("widget").is(':visible')) {
                self.zipErrorMsg(eonde.i18n.get("zip.validationerror.nonnumericnoresults"));
            } else if (!/^\d{4,5}\s+[^0-9\s]+.*$/.test(item)) {
                self.zipErrorMsg(eonde.i18n.get("zip.validationerror.entermoredigits"));
            }
            if (!/^\d{4,5}\s+[^0-9\s]+.*$/.test(item)) {
                return false;
            } else {
                if (item !== null && item !== '') {
                    var zipCity = item.replace(/ +(?= )/g,'');
                    if (!/^\d{5}.*$/.test(item) || self.zipCitiesList().length == 0) {
                        self.zipErrorMsg(eonde.i18n.get("zip.validationerror.entermoredigits"));
                    } 
                    if (!self.zipFromRequest() && (self.zipCitiesList().length == 0 || (self.zipCitiesList().length > 0 && self.zipCitiesList().indexOf(zipCity) < 0))) {
                        self.zipErrorMsg(eonde.i18n.get("zip.validationerror.unknowncombination"));
                        return false;
                    }
                }
                return true;
            }
        }

		//Adding KO Validations to observable fields
		self.zipSelected.extend({
            validation: {validator: self.validateZipValue, message: function() { return self.zipErrorMsg();}},
            minlength: 6,
            required: {message: 'Bitte geben Sie eine g�ltige PLZ ein.'}
        });

        self.zipSelectedInput.extend({         
			validation: {validator: self.validateZipValue, message: function() { return self.zipErrorMsg();}},
            minlength: 6,
            required: {message: 'Bitte geben Sie eine g�ltige PLZ ein.'}
        });

		self.kwhValue.extend({
			validation: {validator: self.validateKwhValue, message: ""}
		});
		self.kwhGasValue.extend({
			validation: {validator: self.validateKwhValue, message: ""}
		});
		self.kwhBCValue.extend({
			validation: {validator: self.validateKwhValue, message: ""}
		});
		self.kwhGasBCValue.extend({
			validation: {validator: self.validateKwhValue, message: ""}
		});
		
		$plz.focusout();
		
		
		
		self.switchRCAction = function(e) {
			if (e && e.preventDefault) {
				e.preventDefault();
			}
			var prodType = eonde.Utils.getIStorageValue("pk[productType]");
			var zipCode = self.zipSelectedInput().split(" ");
			var zipCityName = self.zipSelectedInput().substr(self.zipSelectedInput().indexOf(' ')+1);
			if (zipCode != null && zipCode.length > 0) {

				eonde.Utils.setIStorageValue("gw[zip]", zipCode[0])
				CQ_Analytics.ProfileDataMgr.setProperty("gw_zipcode", zipCode[0]);
			}
			if (zipCode != null && zipCityName !== null && zipCityName !== undefined) {
				eonde.Utils.setIStorageValue("gw[city]", zipCityName);
			}
			var consumption = self.fetchKwhValue();
			if (consumption != null) {
				eonde.Utils.setIStorageValue("gw[consumption][" + prodType + "]", consumption, CONSUMPTION_EXPIRY);
				CQ_Analytics.ProfileDataMgr.setProperty("gw_consumption_" + prodType, consumption);

			}
			self.storeUserAction("switch");
			window.location = jQuery("#paStromDiv .businessurl").attr("data-business-url");
		}

        self.openPdfLocation = function (urlString) {
			if (urlString != null && urlString != undefined) {
				window.open(urlString,'_blank');
				eonde.Utils.trackVirtualPageCall("/pdf");
			}
		}
		
		self.storeUserAction = function (actionId) {
			eonde.Utils.setIStorageValue(_userType + "[" + actionId + "][" + _productType + "]", true, SWITCH_CONTINUE_EXPIRY);
		}
		
		self.continueHighThreshold = function(e) {
			if (e && e.preventDefault) {
				e.preventDefault();
			}
			if (_productType == ENERGY) {
				window.location = highPowerUsageUrl;
			} else {
				window.location = highGasUsageUrl;
			}
		}
		
		self.continueVeryHighThreshold = function(e) {
			if (e && e.preventDefault) {
				e.preventDefault();
			}
			if (_productType == ENERGY) {
				window.location = extremePowerUsageUrl;
			} else {
				window.location = extremeGasUsageUrl;
			}
		}
		
		jQuery("#modalConsumptionPA .buttonja").click({id: "#modalConsumptionPA", actionId: "switch"}, continueAction);
		//jQuery("#modalLowConsumptionPA .buttonja").click({id: "#modalLowConsumptionPA", actionId: "switch"}, continueAction);
		
		jQuery("#modalConsumptionPA .buttonnein").click(self.switchRCAction);

		//jQuery("#modalLowConsumptionPA .buttonnein").click(self.switchBCAction);
		
		var cache = {};
        var oldterm, finalResultData, limitExists=false, loadMoreDivResult=false, requestUrl="", loadMoreValue='0';

		self.request = ko.observable("");
		self.response = ko.observable("");
		var productOverlay = jQuery("#paStromDiv .box .input .forOverlay");
		self.zipCodeServiceCall = function(request, response) {
			self.zipSelectedInput.isModified(false);
        	self.zipSelected.isModified(false);
			$overlayDiv.addClass('zipOverlay');
			productOverlay.addClass("overlay");
			$plz.addClass("working").attr('readonly', true);
			eonde.Utils.trackVirtualPageCall("/zipcodes");
			self.request(request);
			self.response(response);
			if(limitExists && loadMoreValue=='1') {
				requestUrl =eonde.Config.serviceURLs.zipcodeService+'clientId=eonde&query=' + encodeURIComponent(request.term); 
			} else 
				requestUrl = eonde.Config.serviceURLs.zipcodeService+'clientId=eonde&limit=10&query=' + encodeURIComponent(request.term);
					$.ajax({
						dataType: "json",
						type : 'GET',
				url: requestUrl,
						beforeSend: function(xhr) {
							xhr.setRequestHeader('Authorization', authorizationHeaderVal);
						}
					}).done( function(data) {
						oldterm = request.term;
						productOverlay.removeClass("overlay");
						$overlayDiv.removeClass('zipOverlay');
						$plz.removeClass("working").removeAttr('readonly');
						cache[request.term] = data;
				//add load more named row to autocomplete menu
				if(data.more) {
					loadMoreDivResult=data.more;
					loadMoreValue=1;
				} else {
				 loadMoreDivResult=false;
				 loadMoreValue=0;
				}
				response($.map(self.getZipCityList(data.zipCodes,data.more), function (item) {
							return {
								value: item
							}
				}));
				if(self.enterKeyPressed()) {
					self.submitPage();
					/*Firefox Specific hiding for EONWKT-4306.*/
					$plz.autocomplete("widget").hide();
				}
				//add a custom name to the autocomplete
				$("#paStromDiv").find("#plz").autocomplete("widget").addClass("productAdvisorAutocomplete");
				if(loadMoreDivResult) {
					$('.productAdvisorAutocomplete li:last-child a').on('click', function(event) {
						limitExists=true;
						$('.productAdvisorAutocomplete').hide();
						$plz.autocomplete("search", self.request().term);
						event.stopImmediatePropagation();					
					});
				}				
				$('.ui-menu').scrollTop(0);
					}).fail(function() {
						productOverlay.removeClass("overlay");
						$overlayDiv.removeClass('zipOverlay');
						$plz.removeClass("working").removeAttr('readonly');
					});
				}
		
		//Initializing auto complete for the input Zip Code field
		$plz.on("keydown", function(event) {
            if ($(this).val() === eonde.i18n.get("autocomplete.load.more.text")) {
                if (event.keyCode !== 13) {
                    event.preventDefault();
                    event.stopPropagation();
                    event.stopImmediatePropagation();
                }
            }
        }).autocomplete({
			source : self.zipCodeServiceCall,
			minLength : 3,
			select : self.plzSelected
		}).keyup(function (event) {
			if (event.keyCode == 13 && this.value === eonde.i18n.get("autocomplete.load.more.text")) {
				limitExists=true;
				$(this).val(self.request().term);
				$plz.autocomplete("search", self.request().term);
			}
			eonde.Utils.changeDelayZipAutocomplete(this);
		});
	};

	var PAThresholdViewModel = function(containerDiv) {
		var self = this;

		self.threshold = ko.observable();
	}

	//Initializing KO Validation Configuration
	eonde.Utils.koValidationInit();
	ko.validation.init({errorsAsTitle: false},true);

	//Create View Model and apply binding to component div
	var pavm = new PAPageViewModel()
	var pavvm = ko.validatedObservable(pavm);
	if (paStromDiv.get(0)) {
		pavm.init();
		ko.applyBindings(pavvm, paStromDiv.get(0));
		$(document).on("eonde.productlising.ready",function() {
			picturefill(paStromDiv.find("div.productImage"));
		});
	}
	
	function continueAction(e) {
		if (e && e.preventDefault) {
			e.preventDefault();
		}
		pavm.productData("");
		pavm.resultsCount("-1");
		pavm.findProducts();
		pavm.storeUserAction(e.data.actionId);
		if (jQuery(e.data.id).modal) {
			jQuery(e.data.id).modal('hide');
		}
	}
});
/* ========================================================================
 * Bootstrap: tooltip.js v3.0.3
 * http://getbootstrap.com/javascript/#tooltip
 * Inspired by the original jQuery.tipsy by Jason Frame
 * ========================================================================
 * Copyright 2013 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ======================================================================== */


+function ($) { "use strict";

  // TOOLTIP PUBLIC CLASS DEFINITION
  // ===============================

  var Tooltip = function (element, options) {
    this.type       =
    this.options    =
    this.enabled    =
    this.timeout    =
    this.hoverState =
    this.$element   = null

    this.init('tooltip', element, options)
  }

  Tooltip.DEFAULTS = {
    animation: true
  , placement: 'top'
  , selector: false
  , template: '<div class="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>'
  , trigger: 'hover focus'
  , title: ''
  , delay: 0
  , html: false
  , container: false
  }

  Tooltip.prototype.init = function (type, element, options) {
    this.enabled  = true
    this.type     = type
    this.$element = $(element)
    this.options  = this.getOptions(options)

    var triggers = this.options.trigger.split(' ')

    for (var i = triggers.length; i--;) {
      var trigger = triggers[i]

      if (trigger == 'click') {
        this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))
      } else if (trigger != 'manual') {
        var eventIn  = trigger == 'hover' ? 'mouseenter' : 'focus'
        var eventOut = trigger == 'hover' ? 'mouseleave' : 'blur'

        this.$element.on(eventIn  + '.' + this.type, this.options.selector, $.proxy(this.enter, this))
        this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))
      }
    }

    this.options.selector ?
      (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :
      this.fixTitle()
  }

  Tooltip.prototype.getDefaults = function () {
    return Tooltip.DEFAULTS
  }

  Tooltip.prototype.getOptions = function (options) {
    options = $.extend({}, this.getDefaults(), this.$element.data(), options)

    if (options.delay && typeof options.delay == 'number') {
      options.delay = {
        show: options.delay
      , hide: options.delay
      }
    }

    return options
  }

  Tooltip.prototype.getDelegateOptions = function () {
    var options  = {}
    var defaults = this.getDefaults()

    this._options && $.each(this._options, function (key, value) {
      if (defaults[key] != value) options[key] = value
    })

    return options
  }

  Tooltip.prototype.enter = function (obj) {
    var self = obj instanceof this.constructor ?
      obj : $(obj.currentTarget)[this.type](this.getDelegateOptions()).data('bs.' + this.type)

    clearTimeout(self.timeout)

    self.hoverState = 'in'

    if (!self.options.delay || !self.options.delay.show) return self.show()

    self.timeout = setTimeout(function () {
      if (self.hoverState == 'in') self.show()
    }, self.options.delay.show)
  }

  Tooltip.prototype.leave = function (obj) {
    var self = obj instanceof this.constructor ?
      obj : $(obj.currentTarget)[this.type](this.getDelegateOptions()).data('bs.' + this.type)

    clearTimeout(self.timeout)

    self.hoverState = 'out'

    if (!self.options.delay || !self.options.delay.hide) return self.hide()

    self.timeout = setTimeout(function () {
      if (self.hoverState == 'out') self.hide()
    }, self.options.delay.hide)
  }

  Tooltip.prototype.show = function () {
    var e = $.Event('show.bs.'+ this.type)

    if (this.hasContent() && this.enabled) {
      this.$element.trigger(e)

      if (e.isDefaultPrevented()) return

      var $tip = this.tip()

      this.setContent()

      if (this.options.animation) $tip.addClass('fade')

      var placement = typeof this.options.placement == 'function' ?
        this.options.placement.call(this, $tip[0], this.$element[0]) :
        this.options.placement

      var autoToken = /\s?auto?\s?/i
      var autoPlace = autoToken.test(placement)
      if (autoPlace) placement = placement.replace(autoToken, '') || 'top'

      $tip
        .detach()
        .css({ top: 0, left: 0, display: 'block' })
        .addClass(placement)

      this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)

      var pos          = this.getPosition()
      var actualWidth  = $tip[0].offsetWidth
      var actualHeight = $tip[0].offsetHeight

      if (autoPlace) {
        var $parent = this.$element.parent()

        var orgPlacement = placement
        var docScroll    = document.documentElement.scrollTop || document.body.scrollTop
        var parentWidth  = this.options.container == 'body' ? window.innerWidth  : $parent.outerWidth()
        var parentHeight = this.options.container == 'body' ? window.innerHeight : $parent.outerHeight()
        var parentLeft   = this.options.container == 'body' ? 0 : $parent.offset().left

        placement = placement == 'bottom' && pos.top   + pos.height  + actualHeight - docScroll > parentHeight  ? 'top'    :
                    placement == 'top'    && pos.top   - docScroll   - actualHeight < 0                         ? 'bottom' :
                    placement == 'right'  && pos.right + actualWidth > parentWidth                              ? 'left'   :
                    placement == 'left'   && pos.left  - actualWidth < parentLeft                               ? 'right'  :
                    placement

        $tip
          .removeClass(orgPlacement)
          .addClass(placement)
      }

      var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight)

      this.applyPlacement(calculatedOffset, placement)
      this.$element.trigger('shown.bs.' + this.type)
    }
  }

  Tooltip.prototype.applyPlacement = function(offset, placement) {
    var replace
    var $tip   = this.tip()
    var width  = $tip[0].offsetWidth
    var height = $tip[0].offsetHeight

    // manually read margins because getBoundingClientRect includes difference
    var marginTop = parseInt($tip.css('margin-top'), 10)
    var marginLeft = parseInt($tip.css('margin-left'), 10)

    // we must check for NaN for ie 8/9
    if (isNaN(marginTop))  marginTop  = 0
    if (isNaN(marginLeft)) marginLeft = 0

    offset.top  = offset.top  + marginTop
    offset.left = offset.left + marginLeft

    $tip
      .offset(offset)
      .addClass('in')

    // check to see if placing tip in new offset caused the tip to resize itself
    var actualWidth  = $tip[0].offsetWidth
    var actualHeight = $tip[0].offsetHeight

    if (placement == 'top' && actualHeight != height) {
      replace = true
      offset.top = offset.top + height - actualHeight
    }

    if (/bottom|top/.test(placement)) {
      var delta = 0

      if (offset.left < 0) {
        delta       = offset.left * -2
        offset.left = 0

        $tip.offset(offset)

        actualWidth  = $tip[0].offsetWidth
        actualHeight = $tip[0].offsetHeight
      }

      this.replaceArrow(delta - width + actualWidth, actualWidth, 'left')
    } else {
      this.replaceArrow(actualHeight - height, actualHeight, 'top')
    }

    if (replace) $tip.offset(offset)
  }

  Tooltip.prototype.replaceArrow = function(delta, dimension, position) {
    this.arrow().css(position, delta ? (50 * (1 - delta / dimension) + "%") : '')
  }

  Tooltip.prototype.setContent = function () {
    var $tip  = this.tip()
    var title = this.getTitle()

    $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)
    $tip.removeClass('fade in top bottom left right')
  }

  Tooltip.prototype.hide = function () {
    var that = this
    var $tip = this.tip()
    var e    = $.Event('hide.bs.' + this.type)

    function complete() {
      if (that.hoverState != 'in') $tip.detach()
    }

    this.$element.trigger(e)

    if (e.isDefaultPrevented()) return

    $tip.removeClass('in')

    $.support.transition && this.$tip.hasClass('fade') ?
      $tip
        .one($.support.transition.end, complete)
        .emulateTransitionEnd(150) :
      complete()

    this.$element.trigger('hidden.bs.' + this.type)

    return this
  }

  Tooltip.prototype.fixTitle = function () {
    var $e = this.$element
    if ($e.attr('title') || typeof($e.attr('data-original-title')) != 'string') {
      $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')
    }
  }

  Tooltip.prototype.hasContent = function () {
    return this.getTitle()
  }

  Tooltip.prototype.getPosition = function () {
    var el = this.$element[0]
    return $.extend({}, (typeof el.getBoundingClientRect == 'function') ? el.getBoundingClientRect() : {
      width: el.offsetWidth
    , height: el.offsetHeight
    }, this.$element.offset())
  }

  Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {
    return placement == 'bottom' ? { top: pos.top + pos.height,   left: pos.left + pos.width / 2 - actualWidth / 2  } :
           placement == 'top'    ? { top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2  } :
           placement == 'left'   ? { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth } :
        /* placement == 'right' */ { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width   }
  }

  Tooltip.prototype.getTitle = function () {
    var title
    var $e = this.$element
    var o  = this.options

    title = $e.attr('data-original-title')
      || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)

    return title
  }

  Tooltip.prototype.tip = function () {
    return this.$tip = this.$tip || $(this.options.template)
  }

  Tooltip.prototype.arrow = function () {
    return this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow')
  }

  Tooltip.prototype.validate = function () {
    if (!this.$element[0].parentNode) {
      this.hide()
      this.$element = null
      this.options  = null
    }
  }

  Tooltip.prototype.enable = function () {
    this.enabled = true
  }

  Tooltip.prototype.disable = function () {
    this.enabled = false
  }

  Tooltip.prototype.toggleEnabled = function () {
    this.enabled = !this.enabled
  }

  Tooltip.prototype.toggle = function (e) {
    var self = e ? $(e.currentTarget)[this.type](this.getDelegateOptions()).data('bs.' + this.type) : this
    self.tip().hasClass('in') ? self.leave(self) : self.enter(self)
  }

  Tooltip.prototype.destroy = function () {
    this.hide().$element.off('.' + this.type).removeData('bs.' + this.type)
  }


  // TOOLTIP PLUGIN DEFINITION
  // =========================

  var old = $.fn.tooltip

  $.fn.tooltip = function (option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.tooltip')
      var options = typeof option == 'object' && option

      if (!data) $this.data('bs.tooltip', (data = new Tooltip(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  $.fn.tooltip.Constructor = Tooltip


  // TOOLTIP NO CONFLICT
  // ===================

  $.fn.tooltip.noConflict = function () {
    $.fn.tooltip = old
    return this
  }

}(jQuery);

$(document).ready(function(){

    if ($('.nav-tabs.responsive').length == 0) {
        return;
    }

    var eonde = window.eonde || {};
    var hasVideo = false;
    eonde.responsiveTabs = function (collapseDisplayed) {

        "use strict";
        eonde.currentPosition = 'tabs';
        
        //only select those tabgroup on which responsiveness has not been applied yet
        var tabGroups = $('.nav-tabs.responsive:not(.responsiveness)'),
            hidden    = '',
            visible   = '';
        
        if (collapseDisplayed === undefined) {
            collapseDisplayed = ['xs', 'sm'];
        }
        
        $.each(collapseDisplayed, function () {
            hidden  += ' hidden-' + this;
            visible += ' visible-' + this;
        });

        $.each(tabGroups, function () {
            var $tabGroup   = $(this),
                tabs        = $tabGroup.find('li a'),
                collapseDiv = $("<div></div>", {
                    "class" : "panel-group responsive" + visible,
                    "id"    : 'collapse-' + $tabGroup.attr('id')
                });
            //adding responsiveness class so same tabgroup is not picked twice
            $tabGroup.addClass("responsiveness");
            $.each(tabs, function (index) {
                var defaultLinkClass = "";
                if(index === 0) {
                    defaultLinkClass = "accordion-toggle";
                }
                else {
                    defaultLinkClass = "accordion-toggle collapsed";
                }
                var $this          = $(this),
                    active         = '',
                    oldLinkClass   = $this.attr('class') === undefined ? '' : $this.attr('class'),
                        newLinkClass   = defaultLinkClass,
                            oldParentClass = $this.parent().attr('class') === undefined ? '' : $this.parent().attr('class'),
                                newParentClass = 'panel panel-default';
                
                if (oldLinkClass.length > 0) {
                    newLinkClass += ' ' + oldLinkClass;
                };
                
                if (oldParentClass.length > 0) {
                    oldParentClass = oldParentClass.replace(/\bactive\b/g, '');
                    newParentClass += ' ' + oldParentClass;
                    newParentClass = newParentClass.replace(/\s{2,}/g, ' ');
                    newParentClass = newParentClass.replace(/^\s+|\s+$/g, '');
                };
                
                if ($this.parent().hasClass('active')) {
                    active = ' in';
                }
                
                collapseDiv.append(
                    $('<div>').attr('class', newParentClass).html(
                        $('<div>').attr('class', 'panel-heading').html(
                            $('<h4>').attr('class', 'panel-title clearfix').html(
                                $('<a>', {
                                    'class' : newLinkClass,
                                    'data-toggle': 'collapse',
                                    'data-parent' : '#collapse-' + $tabGroup.attr('id'),
                                    'href' : '#collapse-' + $this.attr('href').replace(/#/g, ''),
                                    'html': $this.html()
                                })
                            )
                        )
                    ).append(
                        $('<div>', {
                            'id' : 'collapse-' + $this.attr('href').replace(/#/g, ''),
                            'class' : 'panel-collapse collapse' + ' in'
                        }).html(
                            $('<div>').attr('class', 'panel-body').html('')
                        )
                    )
                );
            });
            
            $tabGroup.next().after(collapseDiv);
            $tabGroup.addClass(hidden);
            $('.tab-content.responsive').addClass(hidden);
        });
        
        eonde.checkResize();
        eonde.bindTabToCollapse();
    };

    eonde.checkResize = function () {
        
        "use strict";
        if ($(".panel-group.responsive").is(":visible") === true && eonde.currentPosition === 'tabs') {
            eonde.toggleResponsiveTabContent();
            eonde.currentPosition = 'panel';
            $('#collapse-tooltip-tab-kontakt').removeClass('in');
            $('#collapse-collapse-tab-2').removeClass('in');
            $('.paTeaserMain').find('.panel-default:last-child').children('.panel-collapse').removeClass('in');
        } else if ($(".panel-group.responsive").is(":visible") === false && eonde.currentPosition === 'panel') {
            eonde.toggleResponsiveTabContent();
            eonde.currentPosition = 'tabs';
        }
        
    };
    
    eonde.toggleResponsiveTabContent = function () {
        "use strict";
        var tabGroups = $('.nav-tabs.responsive');
        
        $.each(tabGroups, function () {
            var tabs = $(this).find('li a');
            
            $.each(tabs, function () {
                var href         = $(this).attr('href').replace(/#/g, ''),
                    tabId        = "#" + href,
                        panelId      = "#collapse-" + href,
                            tabContent   = $(tabId).html(),
                                panelContent = $(panelId + " div:first-child").html();
                
                $(tabId).html(panelContent);
                $(panelId + " div:first-child").html(tabContent);
            });
            
        });
    };
    
    eonde.bindTabToCollapse = function () {
        "use strict";
        var tabs     = $('.nav-tabs.responsive').find('li a'),
            collapse = $(".panel-group.responsive").find('.panel-collapse');
        
        tabs.on('shown.bs.tab', function (e) {
            var $current  = $($(e.target)[0].hash.replace(/#/, '#collapse-'));
			if (typeof $current.collapse == "function") 
				$current.collapse('show');
            else {
				$('a[href="'+e.target.hash+'"]').parent().addClass('ui-state-active').siblings().removeClass('ui-state-active');
            }

            if(e.relatedTarget){
                var $previous = $($(e.relatedTarget)[0].hash.replace(/#/, '#collapse-'));
                if (typeof $previous.collapse == "function") {
					$previous.collapse('hide');
				}
            }
        });
        
        collapse.on('show.bs.collapse', function (e) {
            var current = $(e.target).context.id.replace(/collapse-/g, '#');
            
            $('a[href="' + current + '"]').tab('show');
        });
    }

    $(window).resize(function () {
        "use strict";
        eonde.checkResize();
    });
    (function($) {
        eonde.responsiveTabs(['xs']);
    })();

    hasVideo = ($('.tabs').find('.videoContainer').length > 0) ? true : false ;
	
	var gotoHashTab = function (customHash) {
		 var hash = customHash || location.hash;
		 if (hash == ''){
			return;
		 }
		 var hashPieces = hash.split('?'),
		  activeTab = $('.tabs [href=' + hashPieces[0] + ']'),
		  inActiveTab=activeTab.parents('.tabs').find('li a').not(activeTab);
		  if($('.tabs')[0]){
				activeTab && activeTab.tab('show');
				if(!activeTab.parents('.panel').index() == 0){
					//activeTab.trigger('click');
				}
		  }
		if(activeTab.length){
			if($('.expandables').length == 0){
					setTimeout(function(){
                        $('html, body').animate({ scrollTop: $(window.location.hash).offset().top-210}, 1000);
                    },1200);
            }
        }
		inActiveTab.parent('li').removeClass('ui-tabs-active ui-state-active');
	}
		// onready go to the tab requested in the page hash
	if($('.tabs').length){
		gotoHashTab(); 
	}
	
    $('.tabs li a, .accordion-toggle').on('click', function(){
		var tabslink = $(this).attr('href');
		if (window.location.hash == tabslink) {
            return;
        }
        var top = $(window).scrollTop();
        location.hash = tabslink;
        try {
            $(window).scrollTop(top);
        } catch(e) {} 
		
		var selectedID = $(this).attr('href'); 
		var videoFlag = ($(selectedID).find('.videoContainer').length > 0) ? true : false ;
		var videoContainer = $(selectedID).find('.videoContainer');
		if(videoFlag){			
            if(typeof updateVideoPlayIconPosition !== "undefined"){
                updateVideoPlayIconPosition();
            }
			videoContainer.each(function(){
				var newVideoWidth = $(this).outerWidth();
				var newVideoHeight = $(this).outerHeight();

				if( $(this).parents('.tab-pane')[0]){
					newVideoWidth = $(selectedID).parents().width();
					newVideoHeight = $(this).parents('.tab-pane').height();
				}

				/* Removed minimum height logic as it was not required. ESSONG-3653 */
				$(this).find($("iframe[src*='www.youtube']")).each(function() {
					var $el = $(this);
					$el.width(newVideoWidth).height(newVideoHeight);
				});
			});
		}
	});
});

/*!
* product-advisor-teaser.js
* This file contains the code for the Product Advisor Teaser Components.
* 
* @project   E.ON DE
* @date      2014-04-09 
* @author    DEEPIKA RATHORE, SapientNitro <drathore@sapient.com>
* @licensor  E.ON
* @NOTE
*/

$(document).ready(function(){
    var paTeaserDivs = jQuery(".paTeaserDiv");
    if (paTeaserDivs.length === 0) {
        return;
    }
    var zipcodeSuggestionURL = eonde.Config.serviceURLs.zipcodeService;
    var authorizationHeaderVal = eonde.Config.serviceURLs.authorization;
    /*
    @public PATeaserViewModel: Knockout View Model for the Product Advisor Page Component
    *   The View Model is common for Residential and Business Customers as well as for
    *   different type of products e.g. Strom and Gas. The View Model contains all the 
    *   Knockout data binding and validation logic as well as acts as a closure for all
    *   public/private methods and variables being utilized in the component.
    */
    var PATeaserViewModel = function(containerDivObj) {
        //Saving the 'this' instance to be used through the View Model
        var self=this;
        
        //Get the Div to which the view model is bound
        var $containerDiv = jQuery(containerDivObj);
        
        //Private variables used inside the View Model
        var _rcStromKwhValues = ["1.500","2.500","3.000","4.000","5.000","7.000"];
        var _bcStromStepValues = ["10.000", "15.000", "50.000", "500.000", "5.000.000", "50.000.000"];
        var _bcErdgasStepValues = ["20.000", "50.000", "150.000", "1.000.000", "10.000.000", "100.000.000"];
        var _productType = $containerDiv.find("input[name='hdnProductType']").length > 0 ? $containerDiv.find("input[name='hdnProductType']").val() : "";
        var _userType = $containerDiv.find("input[name='hdnUserType']").length > 0 ? $containerDiv.find("input[name='hdnUserType']").val() : "";
        var _tariffType = $containerDiv.find("input[name='hdnTariffType']").length > 0 ? $containerDiv.find("input[name='hdnTariffType']").val() : "";
        var _paPagePath = $containerDiv.find("input[name='productAdvisorPath']").length > 0 ? $containerDiv.find("input[name='productAdvisorPath']").val() : "";
        var _filterEcology=$containerDiv.find("span.ecology").length > 0 ? $containerDiv.find("span.ecology").attr("data-attr") : ""; 
		//console.log($containerDiv.find("span.ecology"));
        var _filterOfflineProduct= $containerDiv.find("span.offlineProduct").length > 0 ? $containerDiv.find("span.offlineProduct").attr("data-attr") : "";
		var _filterPriceGuarantee= $containerDiv.find("span.priceGuarantee").length > 0 ? $containerDiv.find("span.priceGuarantee").attr("data-attr") : "";
        var _filterFlexibility= $containerDiv.find("span.flexibility").length > 0 ? $containerDiv.find("span.flexibility").attr("data-attr") : "";
		var _hideProductAttributesFilter= $containerDiv.find("span.hideProductAttributesFilter").length > 0 ? $containerDiv.find("span.hideProductAttributesFilter").attr("data-attr") : "";

		var _cache = {};
        var _oldterm;

        //Constant values Declaration
        var PRIVATE = 'pk';
        var BUSINESS = 'gw';
        var ENERGY = 'Strom';
        var GAS = 'Erdgas';
        var ENERGY_LARGE = 'StromLarge';
        var GAS_LARGE = 'ErdgasLarge';
        var ENERGYSLIDER = 'StromSlider';
        var GASSLIDER = 'ErdgasSlider';
        var ENERGYCONSUMPTION = 'StromConsumption';
        var GASCONSUMPTION = 'ErdgasConsumption';

        var KWH_DEFAULT = "2.500";
        var KWH_GAS_DEFAULT = "11.700";
        var KWH_BUSINESS_DEFAULT = "15.000";
        var KWH_GAS_BUSINESS_DEFAULT = "50.000";
        
        //jQuery reused object variables
        var $plz = $containerDiv.find(".zipCodeInput");
        var $sliderRC = $containerDiv.find(".sliderRC");
        var $sliderRCGas = $containerDiv.find(".sliderGas");
        var $sliderBC = $containerDiv.find(".sliderBC");
        var $qm = $containerDiv.find("#qm");
        var $stromBar = $containerDiv.find(".selectbar1.strom, .selectbar2.strom, .selectbar3.strom, .selectbar4.strom");
        var $gasBar = $containerDiv.find(".selectbar1.erdgas, .selectbar2.erdgas, .selectbar3.erdgas, .selectbar4.erdgas");
        var $manSlider = $containerDiv.find(".selectman");

        //Defining observable fields for data binding to the UI
        var storageqmVal=eonde.Utils.getIStorageValue("[livingArea]") >0?eonde.Utils.getIStorageValue("[livingArea]"):100;
        self.qmValue = ko.observable(storageqmVal);
        self.zipFromRequest = ko.observable(false);
        self.enterKeyPressed = ko.observable(false);
		self.hasBackendErrors = ko.observable(false);
		self.backendErrors = ko.observable("");
        self.zipSelected = ko.observable("");
        self.zipSelectedInput = ko.observable("");
        self.zipSelectedThrottled = ko.computed(self.zipSelectedInput);
        self.zipSelectedThrottled.extend({ rateLimit: { timeout: 200, method: "notifyWhenChangesStop" } });
        self.zipSelectedThrottled.subscribe(function (val) {
            if (typeof($plz.data("autocomplete"))!=="undefined" && 
                typeof($plz.data("autocomplete").menu)!=="undefined" && 
                    $plz.data("autocomplete").menu.element.is(":visible")) {
                return;
            }
            if (val==="" || val==="PLZ") {
                this.zipSelected("");
                this.zipSelected.isModified(false);
                this.zipSelectedInput.isModified(false);
            } else {
                this.zipSelected(val);
                this.zipSelected.notifySubscribers(val);
            }
            
        }, this);
        
        self.zipCitiesList = ko.observableArray();
        
        self.kwhValue = ko.observable();
        //self.kwhGasBCValue = ko.observable();
        //self.kwhBCValue = ko.observable();
        //self.kwhGasValue = ko.observable();
        if ($('.paTeaserDiv .advisorKWH').length > 0) {
            $('.paTeaserDiv .advisorKWH').on('change',function(){
                var selfInp=$(this);
                selfInp.val(eonde.Utils.formatConsumption(selfInp.val()));
            });
        }
        
        /*
        @private submitPage : method to check the input fields and show error messages if any
        @param e: event object of the triggered event
        */
        self.submitPage = function(e){
            if (self.isValid()) {
                self.zipSelectedInput($plz.val());

                var kwhValue = self.kwhValue();
                var zipCity = $plz.val().split(' ');
                var zipCityName = $plz.val().substr($plz.val().indexOf(' ')+1);
                
				var partnerURL=$('span.advisor-teaser-partnerurl').length > 0 ? $('span.advisor-teaser-partnerurl').attr("data-attr") : '';
                
                //Store consumption to Local Storage based on customer type value
                eonde.Utils.setIStorageValue(_userType + "[consumption][" + _productType + "]",kwhValue);
                
                CQ_Analytics.ProfileDataMgr.setProperty(_userType+"_"+_productType+"_consumption", kwhValue);

                CQ_Analytics.ProfileDataMgr.setProperty("productaffinity",_productType);
                //Store zip code and city in Client Context based on customer type value
                CQ_Analytics.ProfileDataMgr.setProperty(_userType+"_zipcode", zipCity[0]);
                //Store zip code and city in Local Storage based on customer type value
                eonde.Utils.setIStorageValue(_userType+"[zip]",zipCity[0]);
                if (zipCity.length > 1 && zipCityName != null && zipCityName != undefined) {
                    eonde.Utils.setIStorageValue(_userType+"[city]",zipCityName);
                }

                if(_userType == "pk") {
                    if (_filterEcology != "" && _filterEcology != null && _filterEcology != undefined) {
                        eonde.Utils.setIStorageValue(_userType+"["+_productType+"][ecology]",_filterEcology);
                    } else {
						eonde.Utils.clearIStorageValue(_userType+"["+_productType+"][ecology]");
                    }
                    if (_filterPriceGuarantee != "" && _filterPriceGuarantee != null && _filterPriceGuarantee != undefined) {
                        eonde.Utils.setIStorageValue(_userType+"["+_productType+"][priceGuarantee]",_filterPriceGuarantee);
                    } else {
                        eonde.Utils.clearIStorageValue(_userType+"["+_productType+"][priceGuarantee]");
                    }
                    if (_filterOfflineProduct != "" && _filterOfflineProduct != null && _filterOfflineProduct != undefined) {
                        eonde.Utils.setIStorageValue(_userType+"["+_productType+"][offlineProduct]",_filterOfflineProduct);
                    } else {
                        eonde.Utils.clearIStorageValue(_userType+"["+_productType+"][offlineProduct]");
                    }
                    if (_filterFlexibility != "" && _filterFlexibility != null && _filterFlexibility != undefined) {
                        eonde.Utils.setIStorageValue(_userType+"["+_productType+"][flexibility]",_filterFlexibility);
                    } else {
                        eonde.Utils.clearIStorageValue(_userType+"["+_productType+"][flexibility]");
                    }
                    if((_filterEcology != "" && _filterEcology != null && _filterEcology != undefined) || (_filterPriceGuarantee != "" && _filterPriceGuarantee != null && _filterPriceGuarantee != undefined) || (_filterOfflineProduct != "" && _filterOfflineProduct != null && _filterOfflineProduct != undefined) || (_filterFlexibility != "" && _filterFlexibility != null && _filterFlexibility != undefined)){
                        eonde.Utils.setIStorageValue(_userType+"["+_productType+"][filterAttributeTeaser]","true");
						 if(_hideProductAttributesFilter == "" || _hideProductAttributesFilter == null || _hideProductAttributesFilter == undefined) {
                            eonde.Utils.setIStorageValue(_userType+"["+_productType+"][showProductAttributesFilter]","true");
                    }
                    else {
                            eonde.Utils.setIStorageValue(_userType+"["+_productType+"][showProductAttributesFilter]","false");
                    }
                    }
                    else {
                        eonde.Utils.clearIStorageValue(_userType+"["+_productType+"][filterAttributeTeaser]");
                        eonde.Utils.setIStorageValue(_userType+"["+_productType+"][showProductAttributesFilter]","true");
                    }
               }


                //Set product type in Local Storage
                eonde.Utils.setIStorageValue(_userType + "[productType]", _productType );
                
				var url="";		
                if (_paPagePath != null && _paPagePath.indexOf("?") > 0) {
                    url+= _paPagePath + "&productType=" + _productType + "&tariffType=" + _tariffType; 
                } else {
                    url+= _paPagePath + "?productType=" + _productType + "&tariffType=" + _tariffType;
                }
				if(partnerURL != "") {
					url+='&partnerURL='+partnerURL;
				}
				window.location=url;				
                eonde.Utils.setIStorageValue("[livingArea]",self.qmValue());
            } else {
                self.errors.showAllMessages(true);
                return false;
            }
        };
        
        /*
        @private checkDefaultText : method called to show default text when any input text box is cleared
        @param e: event object of the triggered event
        */
        self.checkDefaultText = function(e){
            var val = jQuery(this).val();
            if(val == "") {
                //jQuery(this).val(jQuery(this).attr("defaulttext"));
                // self.zipSelected.isModified(false);
            }
        };

        self.clearAutoCompleteSearchTerm = function() {
            var autocomplete = $containerDiv.find(".zipCodeInput").data().autocomplete;
            if (autocomplete) {
                autocomplete.previous = "";
                autocomplete.term = "";
            }
        };
        
        /*
        @private clearPLZ : method to clear the selected zip code value on click of cross button
        @param e: event object of the triggered event
        */
        self.clearPLZ = function(e){
            self.zipSelectedInput("");
            eonde.Utils.clearIStorageValue(_userType + "[zip]");
            CQ_Analytics.ProfileDataMgr.removeProperty(_userType + "_zipcode");
            $plz.focus();
            self.clearAutoCompleteSearchTerm();
        };
        
        /*
        @private sliderRCChanged : method called on change of the RC strom slider
        @param e: event object of the triggered event
        @param slider: slider object of the jQuery slider function
        */
        self.sliderRCChanged = function(event, slider){
            var id = slider.value-1;
            $manSlider.removeClass("icon-verbrauch_strom selectman active");
            for(var i=0;i<=id;i++){
                $manSlider.eq(i).addClass("active");
            }
            $manSlider.addClass("icon-verbrauch_strom selectman");

            self.kwhValue(_rcStromKwhValues[id]);
        };
        
        /*
        @private sliderRCGasChanged : method called on change of the RC gas slider
        @param e: event object of the triggered event
        @param slider: slider object of the jQuery slider function
        */
        self.sliderRCGasChanged = function(event, slider){
            self.qmValue(slider.value);
            var qmVal = slider.value;
            if (qmVal <= 100) {
                self.kwhValue((qmVal * 0.117).toFixed(3));
            } else {
                self.kwhValue((qmVal * 0.164).toFixed(3));
            }
        };
        
        /*
        @private sliderBCChanged : method called on change of the BC strom slider
        @param e: event object of the triggered event
        @param slider: slider object of the jQuery slider function
        */      
        self.sliderBCChanged = function(event, slider){
            
            for(var i=0;i<$stromBar.length;i++){
                if(i<=slider.value - 1){
                    $stromBar.eq(i).addClass("active");
                    if (_productType == ENERGY || _productType == ENERGYSLIDER || _productType == ENERGYCONSUMPTION || _productType == ENERGY_LARGE) {
                        self.kwhValue(_bcStromStepValues[i]);
                    } else if (_productType == GAS || _productType == GASSLIDER || _productType == GASCONSUMPTION || _productType == GAS_LARGE) {
                        self.kwhValue(_bcErdgasStepValues[i]);
                    }
                }else{
                    $stromBar.eq(i).removeClass("active");
                }
            }   
            if (_productType == ENERGY || _productType == ENERGYSLIDER || _productType == ENERGYCONSUMPTION || _productType == ENERGY_LARGE) {
                self.kwhValue(_bcStromStepValues[slider.value]);
            } else if (_productType == GAS || _productType == GASSLIDER || _productType == GASCONSUMPTION || _productType == GAS_LARGE) {
                self.kwhValue(_bcErdgasStepValues[slider.value]);
            }
        };
        
        /*
        @private selectmanClicked : method called on click of man symbol for the RC strom slider
        @param e: event object of the triggered event
        */
        self.selectmanClicked = function(e){
            var id=jQuery(this).index();
            
            $sliderRC.slider("value",id+1);
            self.sliderRCChanged(null, {value:id+1});
            $manSlider.hide();
            $manSlider.show();
        };
        
        /*
        @private selectBarClicked : method called on click of the bars symbol for the BC strom slider
        @param e: event object of the triggered event
        */
        self.selectBarClicked = function(e){
            var id=jQuery(this).index();
            
            $sliderBC.slider("value",id);
            self.sliderBCChanged(null, {value:id});
        };
        
        /*
        @private selectGasBarClicked : method called on click of the bars symbol for the BC gas slider
        @param e: event object of the triggered event
        */
        self.selectGasBarClicked = function(e){
            var id=jQuery(this).index();
            $sliderBC.slider("value",id);
            self.sliderBCChanged(null, {value:id});
        };
        
        /*
        @private qmChanged : method called to update the qm slider on change of qm input text value
        @param e: event object of the triggered event
        */
        self.qmChanged = function(e){
            var val = jQuery(this).val();
            var newVal = val;
            
            if (val >=30 && val <=200) {
                if (val % 5 > 0) { newVal = val - val % 5; }
                
                $sliderRCGas.slider("value",newVal);
                self.sliderRCGasChanged(null, {value:newVal});
            }
        };
        
        /*
        @private qmOutOfRange : method called to validate the range of qm entered in the text field
        @param e: event object of the triggered event
        */
        self.qmOutOfRange = function(e) {
            var val = jQuery(this).val();
            var newVal = val;
            if (val < 30) {
                $qm.val(30);
                newVal = 30;
            }
            else if (val >200) {
                $qm.val(200);
                newVal = 200;
            }
            $sliderRCGas.slider("value",newVal);
            self.sliderRCGasChanged(null, {value:newVal});
        };
        
        /*
        @private toggleCheck : method called on select of value from the auto complete zip code list
        @param event: event object of the triggered event
        @param ui: ui object of the selected value
        */
        self.plzSelected = function (event, ui) {
            if(ui.item.value === eonde.i18n.get("autocomplete.load.more.text")){
                return false;
            }
            self.zipSelectedInput(ui.item.value.toString());
			$(event.target).blur();
			$(event.target).focus();
            $("body").click();
            /*Propagating the enter key press for select in autocomplete.*/
            self.enterPressed(self, event);
        };
            
        self.getZipCityList = function (data, more) {
            var zipCityList = new Array();
            self.zipCitiesList.removeAll();
            var i = 0;
            $.each(data, function(index, value) {
                $.each(value.cities, function (idx, val) {
                    zipCityList[i++] = value.zipCode + " " + val;
                    self.zipCitiesList.push(value.zipCode + " " + val);
                });
            });
            if(zipCityList.length > 0) {
                self.zipSelectedInput(zipCityList[0]);
                self.zipSelected(zipCityList[0]);
                $plz.val(zipCityList[0]);
            }
            if (more) {
                zipCityList=zipCityList.splice(0,10);
                zipCityList.push(eonde.i18n.get("autocomplete.load.more.text"));
            }
            return zipCityList;
        };  
        
        /*
        @private changeView : method called to switch between views
        @param e: event object of the triggered event
        */
        self.changeView = function(item, event) {
            var $obj = $(event.target);
            self.clearPLZ();
            eonde.Utils.clearIStorageValue(_userType+"[zip]");
            CQ_Analytics.ProfileDataMgr.removeProperty(_userType + "_zipcode");
            eonde.Utils.clearIStorageValue(_userType+"[city]");
        };
        
        
        //Adding events to all the actionable fields/buttons
        $containerDiv.find(".buttonweiter").off("click").on("click", self.submitPage);
        
        $manSlider.off("click").on("click", function(){
            var id= $(this).index() + 1;
                
            $manSlider.removeClass("active");

            for(var i=0;i<id;i++){
                $manSlider.eq(i).addClass("active").hide();
            }
            
            $manSlider.show();
            
            $sliderRC.slider("value",id);
            self.kwhValue(_rcStromKwhValues[id-1]);
            
        });
        
        if ($stromBar.length > 0) {
            $stromBar.click(self.selectBarClicked);
        }
        if ($gasBar.length > 0) {
            $gasBar.click(self.selectBarClicked);
        }
        
        if ($qm.length > 0) {
            $qm.change(self.qmOutOfRange);
            $qm.keyup(self.qmChanged);
        }
        $plz.focusout(self.checkDefaultText);
        $containerDiv.find(".plz .icon-loeschen_schliessen").click(self.clearPLZ);
        
        self.getMaxSliderValue = function() {
            if (_productType == ENERGY || _productType == ENERGYSLIDER || _productType == ENERGYCONSUMPTION || _productType == ENERGY_LARGE) {
                return _bcStromStepValues.length - 1;
            } else if (_productType == GAS || _productType == GASSLIDER || _productType == GASCONSUMPTION || _productType == GAS_LARGE) {
                return _bcErdgasStepValues.length - 2;
            }
        };
        
        //Initializing sliders for all the input fields which take their value from an slider
        if ($sliderRC.length > 0) {
            $sliderRC.slider({animate: true,
                              range: "min",
                              min:1,
                              max:6,
                              step:1,
                              value:2,
                              slide:self.sliderRCChanged,
                              disabled:false});
        }
        if ($sliderRCGas.length > 0) {
            $sliderRCGas.slider({animate: true,
                                 range: "min",
                                 min:30,
                                 max:200,
                                 step:5,
                                 value:storageqmVal,
                                 slide:self.sliderRCGasChanged,
                                 disabled:false});
        }
        if ($sliderBC.length > 0 && (_productType == ENERGY || _productType == ENERGYSLIDER || _productType == ENERGYCONSUMPTION || _productType == ENERGY_LARGE)) {
            $sliderBC.slider({animate: true,
                              range: "min",
                              min: 0,
                              max: _bcStromStepValues.length - 1,
                              value: 1,
                              step: 1,
                              slide:self.sliderBCChanged,
                              disabled:false});
        }
        if ($sliderBC.length > 0 && (_productType == GAS || _productType == GASSLIDER || _productType == GASCONSUMPTION || _productType == GAS_LARGE)) {
            $sliderBC.slider({animate: true,
                              range: "min",
                              min: 0,
                              max: _bcErdgasStepValues.length - 1,
                              value: 2,
                              step: 1,
                              slide:self.sliderBCChanged,
                              disabled:false});
        }
        
        /*
        @private formatConsumption : method to format the consumption input value and append thousands separator
        @param nStr: value of the consumption to be formatted
        */

        
        /*
        @private validateKwhValue : method to validate the consumption value entered by user and swtich to default in value is incorrect
        @param item: object that triggered the event
        @param e: event object of the triggered event
        */
        self.validateKwhValue = function (item, event) {
            if (_userType == PRIVATE && (_productType == ENERGY || _productType == ENERGYSLIDER || _productType == ENERGYCONSUMPTION || _productType == ENERGY_LARGE)) {
                if (item != undefined && ($.trim(item) == '' || isNaN(item.replace(/\./g,'')) || (!isNaN(item.replace(/\./g,'')) && parseInt(item.replace(/\./g,''),10) < 0))) {
                    $(event.target).val("2.500");
                    self.kwhValue("2.500");
                    $sliderRC.slider("value",2);
                    self.sliderRCChanged(null, {value:2});
                } else {
					var index = eonde.Utils.getClosestRange(_rcStromKwhValues, item) + 1;
					$sliderRC.slider("value",index);
					self.sliderRCChanged(null, {value:(index)});
					self.kwhValue(eonde.Utils.formatConsumption(item));
                }
            } else if (_userType == PRIVATE && (_productType == GAS || _productType == GASSLIDER || _productType == GASCONSUMPTION || _productType == GAS_LARGE)) {
                if (item != undefined && ($.trim(item) == '' || isNaN(item.replace(/\./g,'')) || (!isNaN(item.replace(/\./g,'')) && parseInt(item.replace(/\./g,''),10) < 0))) {    
                    $(event.target).val("11.700");
                    self.kwhValue("11.700");
                    $sliderRCGas.slider("value",100);
                    self.sliderRCGasChanged(null, {value:100});
                } else {
					var consumptionValue= eonde.Utils.formatConsumption(item);
					var index=100;
					if (parseFloat(consumptionValue) <= parseFloat("11.700")) {
						index = (parseFloat(consumptionValue) / 0.117).toFixed(0);
					} else {
						index = (parseFloat(consumptionValue) / 0.164).toFixed(0);
					}
					if (index >= 200) {
						index = 200;
					}
					$sliderRCGas.slider("value",index);
                    self.sliderRCGasChanged(null, {value:(index)});
                    self.kwhValue(consumptionValue);
                }
            } else if (_userType == BUSINESS && (_productType == ENERGY || _productType == ENERGYSLIDER || _productType == ENERGYCONSUMPTION || _productType == ENERGY_LARGE)) {
                if (item != undefined && ($.trim(item) == '' || isNaN(item.replace(/\./g,'')) || (!isNaN(item.replace(/\./g,'')) && parseInt(item.replace(/\./g,''),10) < 0))) {
                    $(event.target).val("15.000");
                    self.kwhValue("15.000");
                    $sliderBC.slider("value",1);
                    self.sliderBCChanged(null, {value:1});
                } else {
                    var index = eonde.Utils.getClosestRange(_bcStromStepValues, item);
                    $sliderBC.slider("value", index);
                    self.sliderBCChanged(null, {value: (index) });
                    self.kwhValue(eonde.Utils.formatConsumption(item));
                }
            } else if (_userType == BUSINESS && (_productType == GAS || _productType == GASSLIDER || _productType == GASCONSUMPTION || _productType == GAS_LARGE)) {
                if (item != undefined && ($.trim(item) == '' || isNaN(item.replace(/\./g,'')) || (!isNaN(item.replace(/\./g,'')) && parseInt(item.replace(/\./g,''),10) < 0))) {
                    $(event.target).val("50.000");
                    self.kwhValue("50.000");
                    $sliderBC.slider("value",1);
                    self.sliderBCChanged(null, {value:1});
                } else {
                    var index = eonde.Utils.getClosestRange(_bcErdgasStepValues, item);
                    $sliderBC.slider("value", index);
                    self.sliderBCChanged(null, {value: (index) });
                    self.kwhValue(eonde.Utils.formatConsumption(item));
                }
            }
            
            return true;
        };
            
        //Adding custom zip code validation as part of EONWKT-4307
        self.zipErrorMsg = ko.observable("");
        self.validateZipValue = function (item, event) {
            if (item.length < 3) {
                self.zipErrorMsg(eonde.i18n.get("zip.validationerror.atleastthreedigits"));
            } else if(!$.isNumeric(item) && typeof($plz.data("autocomplete"))!=="undefined" && !$plz.autocomplete("widget").is(':visible')) {
                self.zipErrorMsg(eonde.i18n.get("zip.validationerror.nonnumericnoresults"));
            } else if (!/^\d{4,5}\s+[^0-9\s]+.*$/.test(item)) {
                self.zipErrorMsg(eonde.i18n.get("zip.validationerror.entermoredigits"));
            }
            if (!/^\d{4,5}\s+[^0-9\s]+.*$/.test(item)) {
                return false;
            } else {
                if (item !== null && item !== '') {
                    var zipCity = item.replace(/ +(?= )/g,'');
                    if (!/^\d{5}.*$/.test(item) || self.zipCitiesList().length == 0) {
                        self.zipErrorMsg(eonde.i18n.get("zip.validationerror.entermoredigits"));
                    } 
                    if (!self.zipFromRequest() && (self.zipCitiesList().length == 0 || (self.zipCitiesList().length > 0 && self.zipCitiesList().indexOf(zipCity) < 0))) {
                        self.zipErrorMsg(eonde.i18n.get("zip.validationerror.unknowncombination"));
                        return false;
                    }
                }
            return true;
            }
        }
        
        //Adding KO Validations to observable fields
        self.zipSelected.extend({
            validation: {validator: self.validateZipValue, message: function() { return self.zipErrorMsg();}},
            minlength: 6,
            required: {message: 'Bitte geben Sie eine gültige PLZ ein.'}
        });
        self.zipSelectedInput.extend({         
            validation: {validator: self.validateZipValue, message: function() { return self.zipErrorMsg();}},
            minlength: 6,
            required: {message: 'Bitte geben Sie eine gültige PLZ ein.'}
        });
        self.kwhValue.extend({
            validation: {validator: self.validateKwhValue, message: ""}
        });
        
        var cache = {};
        var oldterm, finalResultData, limitExists=false, loadMoreDivResult=false, requestUrl="", loadMoreValue='0';
        self.request = ko.observable("");
        self.response = ko.observable("");
		
		self.handleBackendErrors = function(data) {
			var errorString = eonde.Utils.showBackendErrors(data, "", "", "");
			if (errorString !== null && errorString !== "") {
				self.hasBackendErrors(true);
				self.backendErrors(errorString);
			}
		}
		
        self.zipCodeServiceCall=function(request, response) {
            //_cache = {};
            eonde.Utils.trackVirtualPageCall("/zipcodes");
            $plz.addClass("working").attr('readonly', true);
            $containerDiv.find('.forOverlay').addClass('zipOverlay');
            self.request(request);
            self.response(response);

            if(limitExists && loadMoreValue=='1') {
                requestUrl =eonde.Config.serviceURLs.zipcodeService+'clientId=eonde&query=' + encodeURIComponent(request.term); 
            } else 
                requestUrl = eonde.Config.serviceURLs.zipcodeService+'clientId=eonde&limit=10&query=' + encodeURIComponent($plz.val());

                    $.ajax({
                dataType: "json",
                type : 'GET',
                url: requestUrl,
                        beforeSend: function(xhr) {
                            xhr.setRequestHeader('Authorization', authorizationHeaderVal);
                }
            }).done( function(data) {
				self.hasBackendErrors("");
                if(data && data.zipCodes && data.zipCodes.length == 0) {
                    /*In case of invalid zip codes, a response is sent with an empty zipCode array. Useful much?*/
                    self.enterKeyPressed(false);
                    $plz.blur();
                }
                _oldterm = request.term;
                _cache[request.term] = data;
                self.removeOverlay();
                //add load more named row to autocomplete menu
                if(data.more) {
                    loadMoreDivResult=data.more;
                    loadMoreValue=1;
                } else {
                 loadMoreDivResult=false;
                 loadMoreValue=0;
                }
                
                response($.map(self.getZipCityList(data.zipCodes,data.more), function (item) {
                            return {
                                value: item
                    }
                }));
                
                if(self.enterKeyPressed()) {
                	$plz.blur();
                    self.submitPage();
                }
                //add a custom name to the autocomplete
                //$containerDiv.find('input.zipCodeInput').autocomplete("widget").addClass("productAdvisorTeaserAutocomplete");
                if(loadMoreDivResult){
                    $containerDiv.find('input.zipCodeInput').autocomplete("widget").on('click', "li:last-child a", function(event) {
                        limitExists=true;
                        $containerDiv.find('input.zipCodeInput').autocomplete("widget").hide();
                        $plz.autocomplete("search", self.request().term);
                        event.stopImmediatePropagation();                   
                    });
                }
                $('.ui-menu').scrollTop(0);
            }).fail(function(data) {
				self.handleBackendErrors(data);
                self.removeOverlay();
                self.zipCitiesList.removeAll();
            });
        }
        
        self.removeOverlay = function() {
            $plz.removeClass("working").removeAttr('readonly');
            $containerDiv.find('.forOverlay').removeClass('zipOverlay');
        }

        self.plzAutocompleteMenuClose = function( event, ui ) {
            var val = $plz.val();
            self.zipSelected(val);
            if (val==="") {
                self.zipSelected.isModified(false);
            }
        };
        
        /*Submits the form in case enter key is pressed and related fields are valid
        @param data : The current object context. In terms of KnockoutJS, it is the view model passed as a parameter.
        @param event : event object of the triggered event. Here, it is the keypress event.
        */
        self.enterPressed = function(data, event) {
            if(event.which == 13) {
                self.enterKeyPressed(true);
                if(self.validateZipValue($plz.val(), event) && !$containerDiv.find('.forOverlay').hasClass('zipOverlay')) {
                data.submitPage();
            }
                return false;
            } else
                self.enterKeyPressed(false);
            return true;
        };
        
        var autoCompleteContainer = $containerDiv.parents(".box.stage").length ? $("body") : $containerDiv;
        $containerDiv.find(".zipCodeInput").on("keydown", function(event) {
            if ($(this).val() === eonde.i18n.get("autocomplete.load.more.text")) {
                if (event.keyCode !== 13) {
                event.preventDefault();
                event.stopPropagation();
                event.stopImmediatePropagation();
                }
            }
        }).autocomplete({
            source : self.zipCodeServiceCall,
            minLength : 3,
            select : self.plzSelected,
            appendTo: autoCompleteContainer,
            close : self.plzAutocompleteMenuClose,
            autoFocus : true
        }).keyup(function (event) {
            if (event.keyCode == 13) {
                if ($(this).val() === eonde.i18n.get("autocomplete.load.more.text")) {
                    limitExists=true;
                    $(this).val(self.request().term);
                    $plz.autocomplete("search", self.request().term);
                }
            }
            eonde.Utils.changeDelayZipAutocomplete(this);
        }).on("focus", function() {
            self.clearAutoCompleteSearchTerm();
        });
        /*
        @private populateRequestValues : method to populate input parameters from the request url to
        *   support direct access. These values are given priority over the values in page properties
        */
        self.populateZipConsumptionValues = function() {
            
            var zipFromIStorage = eonde.Utils.getIStorageValue(_userType + "[zip]");
            if (zipFromIStorage != null && zipFromIStorage != undefined && zipFromIStorage != "") {
                self.zipSelectedInput(zipFromIStorage + " " + eonde.Utils.getIStorageValue(_userType + "[city]", ""));
                self.zipFromRequest(true);
            }
            
            if (_userType == PRIVATE && (_productType == ENERGY || _productType == ENERGYSLIDER || _productType == ENERGYCONSUMPTION || _productType == ENERGY_LARGE)) {
                self.kwhValue(eonde.Utils.getIStorageValue(_userType + "[consumption][" + _productType + "]", "2.500"));
            } else if (_userType == PRIVATE && (_productType == GAS || _productType == GASSLIDER || _productType == GASCONSUMPTION || _productType == GAS_LARGE)) {
                self.kwhValue(eonde.Utils.getIStorageValue(_userType + "[consumption][" + _productType + "]", "11.700"));
            } else if (_userType == BUSINESS && (_productType == ENERGY || _productType == ENERGYSLIDER || _productType == ENERGYCONSUMPTION || _productType == ENERGY_LARGE)) {
                self.kwhValue(eonde.Utils.getIStorageValue(_userType + "[consumption][" + _productType + "]", "15.000"));
            } else if (_userType == BUSINESS && (_productType == GAS || _productType == GASSLIDER || _productType == GASCONSUMPTION || _productType == GAS_LARGE)) {
                self.kwhValue(eonde.Utils.getIStorageValue(_userType + "[consumption][" + _productType + "]", "50.000"));
            }
        };
        
        self.init = function() {
            //$containerDiv = jQuery(containerDiv);
            self.populateZipConsumptionValues();
        };
    };
    
    //Initializing KO Validation Configuration
    eonde.Utils.koValidationInit();
    ko.validation.init({errorsAsTitle: false},true);
    
    //Create View Model and apply binding to component div
    paTeaserDivs.each(function() {
        var patvm = new PATeaserViewModel(this);
        var $this = $(this);
        patvm.init();
        var patvvm = ko.validatedObservable(patvm);
        ko.applyBindings(patvvm, this);
        $('.paTeaserMain .accordion-toggle').on('click', function(e){
            var $clicked = $(this);
            var $panelAnchor = $clicked.parents(".panel-heading");
            //event.stopPropagation();
            var $oben = jQuery(this).parents('.paTeaserMain').find('.icon-stage_teaser_pfeil_oben');
            $oben.each(function(){
                jQuery(this).removeClass('icon-stage_teaser_pfeil_oben');
                jQuery(this).addClass('icon-stage_teaser_pfeil_unten');
            });
            if ($panelAnchor.length > 0) {
                var $expButton = $panelAnchor.find('button[name=expcol]');
                var $panelIn = $clicked.parents(".panel").find(".panel-collapse.in");
                if ($panelIn.length <= 0 && $expButton.hasClass('icon-stage_teaser_pfeil_unten')) {
                    $expButton.removeClass('icon-stage_teaser_pfeil_unten');
                    $expButton.addClass('icon-stage_teaser_pfeil_oben');
                } else {
                    $expButton.addClass('icon-stage_teaser_pfeil_unten');
                    $expButton.removeClass('icon-stage_teaser_pfeil_oben');
                }
            }
        });
    });
    
    $('.advisorteaser').each(function(){
        var tabclick = $(this).find('.dummy').attr('data');
        $(this).find('a[href='+tabclick+']').trigger('click');
    });
});
/*!
* product-detail.js
* This file contains the code for the Product Detail Page Component.
* 
* @project   E.ON DE
* @date      2014-04-09 
* @author    DIVYAM RASTOGI, SapientNitro <drastogi4@sapient.com>
* @licensor  E.ON
* @NOTE
*/
$(document).ready(function(){

    var $productDetailPage = $('#productDetailPage');
    var overlayHeight = 0.8*$(window).height();
    if(($productDetailPage.length > 0 || $('#ova').length > 0) && $(window).width() > 1024) {
        var verticalMargin = ($(window).height() - (overlayHeight + 72))/2;
        $('#modalPriceOverlay .modal-dialog').css({
            'margin-top' : verticalMargin + 'px'
        });
    }
    if ($productDetailPage.length === 0) {
        return;
    }

   //Binding handler for preventing knockout binding on contents.
    ko.bindingHandlers.stopBinding = {
        init: function() {
            return { controlsDescendantBindings: true };
        }
    };
    
    ko.virtualElements.allowedBindings.stopBinding = true;

    var ProductViewModel = function () {

        //Saving a reference for the current object.
        var self = this;

        //Defining variables
        var clientId = "",
            productDetailUrl = '',
            productServiceURL = '',
            authorizationHeaderVal = eonde.Config.serviceURLs.authorization,
            currentURL = $(location).attr('href'),
            state = 0,
            productObj = productInformationObj = productNewCustomer = {},
            type,
            area,
            pdfServiceURL,
            errorUrl,
            groupDesc,
            suffix = '';
        clientId = $('span.client').attr('data-clientid');
        
            productServiceURL = eonde.Config.serviceURLs.productServiceURL;
            pdfServiceURL = eonde.Config.serviceURLs.pdfService;
        

        //Private variables used inside the View Model
        var _zipCode = '',
            _city = "",
            _productType = '',
            _userType = '',
            _tariffType = '',
            _percentNT = '',
            _productsMaster = "",
            _productName = '',
            _consumption = '',
            _locale = $('.locale').attr('data-attr');

        //Constant values Declaration
        var PRIVATE = 'pk',
            BUSINESS = 'gw',
            ENERGY = 'Strom',
            GAS = 'Erdgas',
            KWH_DEFAULT = "2.500",
            KWH_GAS_DEFAULT = "11.700",
            KWH_BUSINESS_DEFAULT = "15.000",
            KWH_GAS_BUSINESS_DEFAULT = "50.000",
            ERR_CONSUMPTION_INVALID = "ERR_CONSUMPTION_INVALID",
            ERR_PRODUCT_NOT_FOUND = "ERR_PRODUCT_NOT_FOUND";

        /*Defining variables for jQuery selectors*/
        var $zipReq = $('.zipCode'),
            $cityReq = $('.city'),
            $productId = $('.productId'),
            $productName = $('.productName'),
            $productTypeReq = $('.productType'),
            
            $tariffTypeReq = $('.tariffType'),
            $userTypeReq = $('.customerType'),
            $kwhReq = $('.consumption-input'),
            $clientId = $('.clientId');
			var $partnerURL=$productDetailPage.find('input[name="partnerURL"]');
        
       /*Variable for checking whether user is regionalized or not*/
        self.regionalized = ko.observable(false);
        /*Error message to display when user is not regionalized*/
        self.regionalizedError = ko.observable();
        /*Boolean value which represents whether the zip code in regionalization bar is editable.
          The zip code becomes non-editable when the AJAX product service call is in place and can
          only be edited once the call either finishes or fails. Resolves EONWKT-4521.
          If an ajax call is in progress, then this is false.
          If ajax call is not in progress, then this is true.*/
        self.editableZipCode = ko.observable(true);

        /*Variables for Dynamic conversion bar*/
        self.ovaAvailable = ko.observable(false);
        self.contractPdfAvailable = ko.observable(false);
        self.acquisitionPhoneNum = ko.observable(false);
        self.servicePhoneNum = ko.observable(false);
        
        /*Defining bservables to use on page.*/
        self.zipCode = ko.observable();
        self.kwhValue = ko.observable();
        self.kwhGasBCValue = ko.observable();
        self.kwhBCValue = ko.observable();
        self.kwhGasValue = ko.observable();
        
        /*Error messages for productAvailableZip and productAvailableConsumption conditions*/
        self.errorTitle = ko.observable('');
        self.errorSubtitle = ko.observable('');

        /*Variables that determine error messages for consumption*/
        self.productAvailableZip = ko.observable(false);
        self.productAvailableConsumption = ko.observable(false);

        /*Define observables for page to use.*/
        self.products = ko.observable();
        self.footnotes = ko.observable();
        self.is_customer = ko.observable('no');
        self.customerType = ko.observable();
        self.productType = ko.observable();
        self.product = ko.observable();
        self.productName = ko.observable('');
        self.getNewProduct = ko.observable();
        self.hasConsumptionClusters = ko.observable();
        self.linkPriceInformation = ko.observable();
        self.tariffType = ko.observable();
		self.isHeizstrom = ko.observable(false);

        /*This opens a link from a knockout binding. Currently it is used for opening the linkEnergyMix link.
        @params
        @urlString : The URL to open as a string */
        self.openKnockOutlink = function (urlString) {

            if (urlString != null && urlString != undefined) {
                if (urlString.indexOf("http://") == -1) {
                    urlString = 'http://' + urlString;
                }
                window.location = urlString;
            }
        }

        /*Function for Dynamic conversion bar PDF link*/
        self.openAuftragPdf = function() {
            window.open(self.makeAuftragPdf(), "_blank");
        };

        /*Function that computes the Auftrag PDF link for Dynamic Conversion Bar*/
        self.makeAuftragPdf = ko.computed(function() {
            var completeUrl;
            if(self.products()) {                
                completeUrl = pdfServiceURL + "clientId="+clientId+"&type=auftrag&filename="+self.products().productInformation.productId + ".pdf&errorUrl="+$('.pdf_error').attr('data-attr');
            }
            return completeUrl;
        });

        self.openPDFLink = function(url) {
            window.open(url, "_blank");
        }

        /*This opens up the link to OVA form. Link is configured by editor.
        @params
        @productname : The productName from JSON file as a string,
        @multigridoperators : The multigrid operators from JSON file,
        @item : Some object not in use,
        @event : The event that triggers this function.*/
        self.openOVAForm = function (productname, multigridoperators, gridoperator, item, event) {
            var ovaLink = $(event.target).attr("data-ova-url");
            if (ovaLink.indexOf("?") >= 0) {
                ovaLink += "&productName=" + encodeURIComponent(productname);
            } else {
                ovaLink += "?productName=" + encodeURIComponent(productname);
            }
            ovaLink += "&productType=" + _productType + "&customerType=" + _userType + "&tariffType=" + _tariffType;

            if (_userType == BUSINESS) {
                ovaLink += "&multiGridOperators=" + multigridoperators;
				if (multigridoperators && gridoperator) {
					ovaLink += "&gridOperator=" + encodeURIComponent(gridoperator);
				}
				if (_tariffType == 'dt') {
					ovaLink += "&percentNt=" + _percentNT;
				}
            } else {
                ovaLink += "&multiGridOperators=false";
            }
			if($partnerURL.length > 0) {
				ovaLink+="&partnerURL="+$partnerURL.val();
			}
            window.location = ovaLink + "#no-back";
            event.stopImmediatePropagation();
        }

        /*This method returns a url of the terms and conditions pdf that is to be used in the href of the link*/
        self.openTermsPdf = ko.computed(function() {
            if(self.products() && self.products().areaInformation && self.products().newCustomer && self.getNewProduct() && self.getNewProduct().customerGroupDesc) {
                type = self.products().productInformation.type,
                area = self.products().areaInformation.distributor,
                pdfServiceUrl = pdfServiceURL+'clientId='+clientId+'&type=agb&filename=',
                errorUrl = $('.pdf_error').attr("data-attr"),
                groupDesc = self.getNewProduct().customerGroupDesc;
                if (groupDesc !== null && groupDesc !== undefined && groupDesc.indexOf("Heizstrom") < 0 && _userType === 'gw') {
                    suffix = "_Gewerbe";
                }
                var completeUrl = pdfServiceUrl + 'AGB_' + type + '_' + area + suffix + '.pdf&errorUrl=http://www.eon.de/404/AGB_'+type+'_'+area + suffix +'.pdf';
                //window.open(completeUrl, '_blank');
                return completeUrl;
            }
            return '#';
        });

        self.openTarifPdf = ko.computed(function() {
            if(self.products() && self.products().productInformation && self.products().areaInformation) {
                var distributor = self.products().areaInformation.distributor;
                var productName = self.products().productInformation.productName.replace(/[ ,\/.]/g, '');
                var filename = distributor + '_' + self.pdfFilename() + '.pdf';
                var linkType = 'tarifbeiblatt';
                //EONWKT-4453 Added condition for new legal product category to change type and filename
                if (self.products().productInformation.legalProductCategory && self.products().productInformation.legalProductCategory == 'Grundversorgung') {
                    linkType = 'preiszusammensetzung';
                    filename = self.products().productInformation.productId + '.pdf';
                }
                pdfServiceUrl = eonde.Config.serviceURLs.pdfService+'clientId=eonde&type=' + linkType + '&filename=';
                errorUrl  = 'http://www.eon.de/404/' + encodeURIComponent(filename);

                return pdfServiceUrl + encodeURIComponent(filename) + "&errorUrl=" + errorUrl;
            }
            return '#';
        });

        self.pdfFilename = ko.computed(function(){
            return self.productName().replace(/[Ä]/g, 'Ae').replace(/[Ö]/g, 'Oe').replace(/[Ü]/g, 'Ue').replace(/[ä]/g, 'ae').replace(/[ö]/g, 'oe').replace(/[ü]/g, 'ue').replace(/[ß]/g, 'ss').replace(/[-. ]/g, '').replace(/[\/. ]/g, '').replace(/[\\. ]/g, '');
			
        });

        /*Function to initialize values from page/local storage. This is a must call.*/
        self.init = function () {

            if(CQ.WCM !== undefined) {
                $productDetailPage.on("click", ".ui-tabs-anchor", function() {
                    window.location.reload();
                });
            }

            self.products("");
            self.footnotes("");
            self.hidePageParts();
            $productDetailPage.find('.js-consumptionError').addClass('hidden');
			CQ_Analytics.ProfileDataMgr.setProperty("cstatus", "productdetail"); 

            /*Define fallback user type as business user or private user from CQ Profile Data Manager*/
            try {
                var customerChecker = CQ_Analytics.ProfileDataMgr.getProperty('userType');
                if (customerChecker == "BC") {
                    _userType = BUSINESS;
                } else {
                    _userType = PRIVATE;
                }
            } catch (e) {
                _userType = BUSINESS;
            }
            if ($productTypeReq.length > 0) {
                _productType = $productTypeReq.attr('data-attr');
                if (_productType == "Natural gas") {
                    _productType = "Erdgas";
                } else {
                    _productType = "Strom";
                }
            }

            /*Defining variables from page*/
            _userType = $userTypeReq.length > 0 ? $userTypeReq.attr('data-attr') : _userType;
            _productType = $productTypeReq.length > 0 ? $productTypeReq.attr('data-attr') : _productType;       
            _tariffType = $tariffTypeReq.length > 0 ? $tariffTypeReq.attr('data-attr') : eonde.Utils.getIStorageValue(_userType+"[tariffType]["+_productType+"]", "et");
            _productName = $productName.attr('data-attr');
            _productId = $productId.attr('data-attr');
            _clientId = $clientId.attr('data-attr');
            _percentNT = eonde.Utils.getIStorageValue(_userType+"[percentNt]", $('.percentNt').attr('data-attr'))/100;

            self.productType(_productType);

            var zipCode = "";/*temporary variable*/

            /*Determining zip code and city */
            if ($zipReq.length > 0 && $zipReq.attr('data-attr').length > 0) {
                if ($cityReq.length > 0) {
                    zipCode = $zipReq.attr('data-attr') + " " + $cityReq.attr('data-attr');
					eonde.Utils.setIStorageValue(_userType + "[zip]", $zipReq.attr('data-attr'));
					eonde.Utils.setIStorageValue(_userType + "[city]", $cityReq.attr('data-attr'));
                } else {
                    zipCode = $zipReq.attr('data-attr');
					eonde.Utils.setIStorageValue(_userType + "[zip]", $zipReq.attr('data-attr'));
                }
            } else {
                if (eonde.Utils.getIStorageValue(_userType + "[zip]")) {
                    if (eonde.Utils.getIStorageValue(_userType + "[city]")) {
                        zipCode = eonde.Utils.getIStorageValue(_userType + "[zip]") + " " + eonde.Utils.getIStorageValue(_userType + "[city]");
                    } else {
                        zipCode = eonde.Utils.getIStorageValue(_userType + "[zip]")
                    }
                }
            }
            self.zipCode(zipCode);
            self.productName(_productName);

            /*If the length of zipCode is proper then extract zip and city from the zip code*/
            if (self.zipCode().length > 6) {
                var zip = self.zipCode().split(' ');
                var zipCityName = self.zipCode().substr(self.zipCode().indexOf(' ')+1);
                _zipCode = zip[0];
                _city = zipCityName ? zipCityName : "";
                if (_zipCode.length > 0)
                    state++;
                if (_city.length > 0)
                    state++;
            }

            /*Defining consumption from page. Fallback for consumption is the local storage.*/
            if (_userType == PRIVATE && _productType == ENERGY) {
                self.kwhValue($kwhReq.length > 0 ? $kwhReq.val() : eonde.Utils.getIStorageValue(_userType + "[consumption][" + _productType + "]", "2.500"));
                _consumption = self.kwhValue();
            } else if (_userType == PRIVATE && _productType == GAS) {
                self.kwhGasValue($kwhReq.length > 0 ? $kwhReq.val() : eonde.Utils.getIStorageValue(_userType + "[consumption][" + _productType + "]", "11.700"));
                _consumption = self.kwhGasValue();
            } else if (_userType == BUSINESS && _productType == ENERGY) {
                self.kwhBCValue($kwhReq.length > 0 ? $kwhReq.val() : eonde.Utils.getIStorageValue(_userType + "[consumption][" + _productType + "]", "15.000"));
                _consumption = self.kwhBCValue();
            } else if (_userType == BUSINESS && _productType == GAS) {
                self.kwhGasBCValue($kwhReq.length > 0 ? $kwhReq.val() : eonde.Utils.getIStorageValue(_userType + "[consumption][" + _productType + "]", "50.000"));
                _consumption = self.kwhGasBCValue();
            }

            /*Set product type in Local Storage*/
            eonde.Utils.setIStorageValue(_userType + "[productType]", _productType);

            /*Connstruct the URL for ajax call.*/
            if (_zipCode.length == 0) {
                productDetailUrl = productServiceURL + "clientId=" + clientId + "&productId=" + encodeURIComponent(_productId) + "&productName=" + encodeURIComponent(_productName) + "&productType=" + _productType + "&customerType=" + _userType + "&tariffType=" + _tariffType + "&consumption=" + _consumption + "&signedCustomer=false";
                self.regionalized(false);
            } else {
                productDetailUrl = productServiceURL + "clientId=" + clientId + "&productId=" +encodeURIComponent(_productId) + "&percentNt="+_percentNT + "&productName=" + encodeURIComponent(_productName) + "&zipCode=" + _zipCode + "&city=" + encodeURIComponent(_city) + "&productType=" + _productType + "&customerType=" + _userType + "&tariffType=" + _tariffType + "&consumption=" + _consumption + "&signedCustomer=false";
                self.regionalized(true);
            }

            self.productServiceCall();
        };
        //end of populate request values.

        /*This was done to make the page user interface smoother. Displaying the hidden blocks once we are done fetching data from EBS backend.*/
        self.showPageParts = function() {
            $productDetailPage.find('.js-conversionBar, .js-productDetail, .js-tableContainer, .js-termTable, .js-hidePage, .js-priceTable').removeClass('hidden'); 
            if(self.productAvailableConsumption() && self.productAvailableZip() ) {
                $productDetailPage.find('.js-extraContainer').removeClass('hidden');
            }
            if($productDetailPage.find('.js-bonusImage').hasClass('hidden')) {
                $productDetailPage.find('.js-bonusImage').removeClass('hidden');
            }
        };

        /*Self explanatory naming of function*/
        self.hidePageParts=function(){
            $productDetailPage.find('.js-conversionBar, .js-productDetail, .js-tableContainer, .js-termTable, .js-hidePage, .js-priceTable').addClass('hidden'); 
            if(CQ.WCM !== undefined) {
                $productDetailPage.find('.js-extraContainer').removeClass('hidden');
            } else {
                $productDetailPage.find('.js-extraContainer').addClass('hidden');
            }
            if(!$productDetailPage.find('.js-bonusImage').hasClass('hidden')) {
                $productDetailPage.find('.js-bonusImage').addClass('hidden');
            }
        }

        /*Defining error messages for consumption available in area*/
        self.defineErrors = function() {

            /*Defining the sub error.*/
            if(!self.productAvailableZip() || !self.productAvailableConsumption()) {
                $('.js-consumptionError').removeClass('hidden');
                switch(_userType) {
                    case PRIVATE : 
                        self.errorSubtitle(eonde.i18n.get("productdetail.error.scenario.message.part2.pk"));
                        break;
                    case BUSINESS : 
                        self.errorSubtitle(eonde.i18n.get("productdetail.error.scenario.message.part2.gw"));
                        break;
                }
            } 

            /*Defining the main error*/
            if(self.productAvailableZip() && !self.productAvailableConsumption()) {
                switch(_userType) {
                    case PRIVATE : 
                        self.errorTitle(eonde.i18n.get("productdetail.error.scenario.message.part1pk"));
                        break;
                    case BUSINESS : 
                        self.errorTitle(eonde.i18n.get("productdetail.error.scenario.message.part1gw"));
                        break;
                }
            } else if(!self.productAvailableZip() && self.productAvailableConsumption()) {
                switch(_userType) {
                    case PRIVATE : 
                        self.errorTitle(eonde.i18n.get("productdetail.error.scenario.message.part2pk"));
                        break;
                    case BUSINESS : 
                        self.errorTitle(eonde.i18n.get("productdetail.error.scenario.message.part2gw"));
                        break;
                }
            } else if(!self.productAvailableZip() && !self.productAvailableConsumption()) {
                switch(_userType) {
                    case PRIVATE : 
                        self.errorTitle(eonde.i18n.get("productdetail.error.scenario.message.part3pk"));
                        break;
                    case BUSINESS : 
                        self.errorTitle(eonde.i18n.get("productdetail.error.scenario.message.part3gw"));
                        break;
                }
            } else if(self.productAvailableZip() && self.productAvailableConsumption()) {
                if(self.regionalized() && !productObj.blockPrices) {
                    $('.js-consumptionError').removeClass('hidden');
                    switch(_userType) {
                        case PRIVATE :
                            self.regionalizedError(eonde.i18n.get("productdetail.error.scenario.message.part1"));
                            break;
                        case BUSINESS :
                            self.regionalizedError(eonde.i18n.get("productdetail.error.scenario.message.part1"));
                            break;
                    }
                }
            }
        };

        /*Prepends 'http://' to a urlString parameter if it didn't exist.*/
        self.getUrl = function(urlString) {
            if (urlString != null && urlString != undefined) {
                if (urlString.indexOf("http://") == -1 && urlString.indexOf("https://") == -1) {
                    urlString = 'http://' + urlString;
                }
                return urlString;
            }
            return '#';
        };

        /*Makes the href link for Energy Mix on PDP*/
        self.linkEnergyMix = ko.computed(function() {
            var urlString = '#';
            if(self.products() && self.products().productInformation && self.products().productInformation.linkEnergyMix) {
                urlString = self.products().productInformation.linkEnergyMix;
                return self.getUrl(urlString);
            }
            return urlString;
        });

        /*Makes the href link for Price Information*/
        self.linkPriceInformation  = ko.computed(function() {
            var urlString = '#';
            if(self.products() && self.products().productInformation && self.products().productInformation.linkPriceInformation) {
                urlString = self.products().productInformation.linkPriceInformation;
                return self.getUrl(urlString);
            }
            return urlString;
        });

        /*Define product data type in case of signed customer or new customer. 
        Not needed for product detail page as by default it is newCustomer. Good to have function.*/
        self.product = ko.computed(function () {
            if (self.products()) {
                var result = {};
                if (self.is_customer() === 'no') {
                    result = self.products().newCustomer;
                } else if (self.is_customer() === 'yes') {
                    result = self.products().signedCustomer;
                }
                return result;
            }
            return "";
        });

        /*Returns the customerType i.e. whether user is a business user(gw) or private customer(pk)*/
        self.customerType = ko.computed(function() {
            if(self.products() && self.products().customerType)
                return self.products().customerType;
            return null;
        });

        /*Handling product price adaptation. Returns the newProduct in case of product adaptation phase. Otherwise returns the currentProduct.*/
        self.getNewProduct = ko.computed(function(){
            if(self.products() && self.products().newCustomer) {
                if(self.products().newCustomer.newProduct) {
                    return self.products().newCustomer.newProduct;
                }
                else if(self.products().newCustomer.currentProduct){
                    return self.products().newCustomer.currentProduct;
                }
            }
            return null;
        });

        /*Handling the case for when the product has consumption clusters i.e. multiple prices for multiple consumptions*/
        self.hasConsumptionClusters = ko.computed(function() {
           if (self.products()) {
               return self.products().blockPrices !== undefined;
           }
           return false;
        });
        
        self.isStandardProduct = ko.computed(function() {
            if (self.products()) {
            	var isStandard = self.products().productInformation.productName.indexOf('E.ON ProfiStrom eFix') == -1 && 
            	self.products().productInformation.productName.indexOf('E.ON ProfiStrom fix') == -1;
            	return isStandard;
            }
            return false;
         });

        self.tariffType = ko.computed(function() {
            if(self.products() && self.products().tariffType)
                return self.products().tariffType;
            return _tariffType;
        });

        /*Sets the annual price text on regionalization bar*/
        self.setAnnualPrice = function() {

            var annualVal = '';
            if (self.getNewProduct() !== null) {
                if(_userType == 'pk')
                    annualVal = self.getNewProduct().allRoundPriceYearVatEuroRounded;
                else 
                    annualVal = self.getNewProduct().allRoundPriceYearNetEuroRounded;
            }
            if (annualVal && annualVal != '') {
                annualVal = $.formatNumber(annualVal, eonde.default_price);
                $('.consumption_annual').show();
                $('.reg_annual_price').text(annualVal);
            }
        };

        /*Defining variables necessary for Dynamic Conversion bar component*/
        self.defineForDynamicConversionBar = function() {

            /*Defining variables for dynamic conversion bar.*/
            /*1. ovaAvailable*/
            self.ovaAvailable(productInformationObj.ovaAvailable);
            /*2. contractPdfAvailable*/
            if(!self.ovaAvailable() && self.getNewProduct() !== null && self.getNewProduct().contractPdfAvailable) {
                self.contractPdfAvailable(true);
            }
            /*3. acquisitionPhoneNum*/
            if(!self.ovaAvailable() && !self.contractPdfAvailable()) {
                if(productInformationObj.acquisitionPhoneNum && productInformationObj.acquisitionPhoneNumCosts)
                    self.acquisitionPhoneNum(true);
            }
            /*4. servicePhoneNum*/
            if(!self.ovaAvailable() && !self.contractPdfAvailable() && !self.acquisitionPhoneNum()) {
                self.servicePhoneNum(true);
            }

        };

        /*Populate content in the infoicon*/
        self.populateInfoIcon = function() {

            var bonusRounded, infoIconConsumption, roundedPrice, infoIconString;
            if (self.products().newCustomer !== undefined) {
                if(_userType == 'pk'){
                    bonusRounded = $.formatNumber(self.product().bonusVatEuroRounded, eonde.integer_number);
                    roundedPrice = $.formatNumber(self.getNewProduct().allRoundPriceYearVatEuroRounded, eonde.default_price);
                } else {
                    bonusRounded = $.formatNumber(self.product().bonusNetEuroRounded, eonde.integer_number);
                    roundedPrice = $.formatNumber(self.getNewProduct().allRoundPriceYearNetEuroRounded, eonde.default_price);
                }
                infoIconConsumption = $.formatNumber(self.products().consumption, eonde.integer_number);
                if(parseInt(bonusRounded) > 0)
                    infoIconString = eonde.i18n.get('productdetail.info.text.part1') + roundedPrice + " "+"Euro "+ " "+ eonde.i18n.get('productdetail.info.text.part2') + eonde.i18n.get('productdetail.info.text.part3') + infoIconConsumption + " " + eonde.i18n.get('productdetail.tab2.kwh.suffix') + ".";
                else 
                    infoIconString = eonde.i18n.get('productdetail.info.text.part1') + roundedPrice + " " + "Euro "+eonde.i18n.get('productdetail.info.text.part3') + infoIconConsumption + " " + eonde.i18n.get('productdetail.tab2.kwh.suffix') + ".";

                $('.js-priceTableInfoIcon').attr('data-content', infoIconString);
            }
            infoIcon();
        }
        
        /*Make the product service call*/
        self.productServiceCall = function() {
            
            eonde.Utils.ajaxInit();
            eonde.Utils.trackVirtualPageCall("/product");
            self.editableZipCode(false);
            $.ajax({
                beforeSend: function(xhr) {
                    xhr.setRequestHeader('Authorization', authorizationHeaderVal);
                },
                dataType: "json",
                type: 'GET',
                url: productDetailUrl
            }).done(function (data) {
                if(data.products != null) {
                $productDetailPage.find('.js-consumptionError').addClass('hidden');
                productObj = data.products;
                productInformationObj = productObj.productInformation;
                productNewCustomer = productObj.newCustomer;
                /**/                
                if(productObj && productInformationObj) {
                    //Initialize productAvailableConsumption and productAvailableZip values from JSON
                    self.productAvailableConsumption(productInformationObj.productAvailableConsumption);
                    self.productAvailableZip(productInformationObj.productAvailableZip);

                    /*Handle the case for a 'Heizstrom' product*/
                    if(productNewCustomer && productNewCustomer.currentProduct) {
                        var productAffinity = productNewCustomer.currentProduct.customerGroupDesc;
                        //Product Affinity Value fetched from Service and set to Client Context
                        if (productAffinity && productAffinity === "Heizstrom") {
                            CQ_Analytics.ProfileDataMgr.setProperty("productaffinity", productAffinity);
							self.isHeizstrom(true);
                        }
                    }
                } else {
                    self.productAvailableZip(false);
                    self.productAvailableConsumption(false);
                    $('.js-extraContainer').addClass('hidden');
                }
                if(self.productAvailableConsumption() && self.productAvailableZip()) {
                    self.showPageParts();
                }
                //Call the define error method in case there are errors on page.
                self.defineErrors();

                //Set the properties for data binding
                self.products(productObj);
                self.footnotes(data.footnotes);
                self.is_customer('no');

                /*Set the value of annual price in the regionalization bar*/
                self.setAnnualPrice();

                /*Set values for dynamic conversion bar*/
                self.defineForDynamicConversionBar();

                /*Self explanatory name of function.*/
                self.populateInfoIcon(data);
                applyBorders();
                if($('.js-bonusImage').length > 0) {
                    $('.js-bonusImage').removeClass('hidden');
                }
                /*Custom event for S viewport*/
                $(document).trigger('eonde.products.pdpReady');
                } else {
                    self.productAvailableZip(false);
                    self.productAvailableConsumption(false);
                }
                self.editableZipCode(true);
            }).fail(function (xhr, textStatus, errorThrown) {
                self.productAvailableZip(false);
                self.productAvailableConsumption(false);
                try {
                    var result = $.parseJSON(xhr.responseText);
                } catch(e) {
                    return;
                }
                var errorCode = '';
                if(result) {
                $.each(result.error, function (key, value) {
                    if (key === 'code') {
                        errorCode = value;
                    }
                });
                    self.errorViewModel = ko.mapping.fromJS(result);
                }
                
                self.hidePageParts();
              
                if(self.regionalized()) {
                    $('.js-consumptionError').removeClass('hidden');
                    switch(_userType) {
                        case PRIVATE : 
                            self.errorSubtitle(eonde.i18n.get("productdetail.error.scenario.message.part2.pk"));
                            break;
                        case BUSINESS : 
                            self.errorSubtitle(eonde.i18n.get("productdetail.error.scenario.message.part2.gw"));
                            break;
                    }
                    switch(errorCode) {
                        case ERR_CONSUMPTION_INVALID :
                            switch(_userType) {
                                case PRIVATE :
                                    self.regionalizedError(eonde.i18n.get("productdetail.error.scenario.message.part1gw"));
                                    break;
                                case BUSINESS :
                                    self.regionalizedError(eonde.i18n.get("productdetail.error.scenario.message.part1gw"));
                                    break;
                                default : 
                                    break;
                            }
                            break;
                        case ERR_PRODUCT_NOT_FOUND :
                            switch(_userType) {
                                case PRIVATE :
                                    self.regionalizedError(eonde.i18n.get("productdetail.error.scenario.message.part2pk"));
                                    break;
                                case BUSINESS :
                                    self.regionalizedError(eonde.i18n.get("productdetail.error.scenario.message.part2gw"));
                                    break;
                                default : 
                                    break;
                            }
                            break;
                        default : 
                            switch(_userType) {
                                case PRIVATE :
                                    self.regionalizedError(eonde.i18n.get("productdetail.error.scenario.message.part3pk"));
                                    break;
                                case BUSINESS :
                                    self.regionalizedError(eonde.i18n.get("productdetail.error.scenario.message.part3gw"));
                                    break;
                                default : 
                                    break;
                            }
                    }
                }
                $('.errorMessage').each(function () {
                    ko.applyBindings(self, this);
                    $(this).removeClass('hidden');
                });
                self.editableZipCode(true);
            });
        };
    };

    var modalHeight = 0;
    if ($('.js-productDetail').length > 0) {

        eonde.productDetailVm = new ProductViewModel();
        eonde.productDetailVm.init();
        ko.applyBindings(eonde.productDetailVm, $productDetailPage.get(0) );

        /* Making page fault tolerant. Sometimes we have enlightened developers who forget to close div elements
        and blame others for their mistakes. Now we all know how javascript is and knockout goes crazy in case we have multiple bindings and hence,
        we apply this binding only if there are no unclosed div elements. */
        if($productDetailPage.find('#modalPriceOverlay').length === 0)
            ko.applyBindings(eonde.productDetailVm, document.getElementById('modalPriceOverlay') );

        if($(window).width() > 767) {
            $('#modalPriceOverlay .modal-body').slimScroll({
                height: overlayHeight,
                railVisible: true,
                alwaysVisible: true,
                railColor: '#5d5d5d',
                color: '#969696',
                size: '10px',
                distance: '5px',
                opacity: 1
            });
        }
		function calculatePriceOverlayHeight() {
			if($(window).width() > 300 ) {
				overlayHeight = 0.8*$(window).height();
				$(window).resize(function() {
					overlayHeight = $(window).height() - 150;
					overlayHeight += 'px';
					$('#modalPriceOverlay').find('.modal-body, .slimScrollDiv').css('height', overlayHeight);
				});
			}
		}
		calculatePriceOverlayHeight();
		
		$('#modalPriceOverlay').on('show.bs.modal', function (e) {
			calculatePriceOverlayHeight();
			$(window).scrollTop(0);
		});
        /*Defect fix for ESSONG-5961.
        Responsive tabs were being structured using js before the ajax call was completed. 
        Hence, after the information is fetched, we use a custom event that will let us know when the product is ready to be displayed.
        After that we re-initialize the responsive tabs so that the information is displayed.*/
        $(document).on("eonde.products.pdpReady",function() {
            if(eonde.Utils.isSmallViewPort() && $('.panel.panel-default .panel-body').html().length < 10) {
                eonde.responsiveTabs(['xs']);
            }
        });
    }
});
/* ========================================================================
 * Bootstrap: tooltip.js v3.0.3
 * http://getbootstrap.com/javascript/#tooltip
 * Inspired by the original jQuery.tipsy by Jason Frame
 * ========================================================================
 * Copyright 2013 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ======================================================================== */


+function ($) { "use strict";

  // TOOLTIP PUBLIC CLASS DEFINITION
  // ===============================

  var Tooltip = function (element, options) {
    this.type       =
    this.options    =
    this.enabled    =
    this.timeout    =
    this.hoverState =
    this.$element   = null

    this.init('tooltip', element, options)
  }

  Tooltip.DEFAULTS = {
    animation: true
  , placement: 'top'
  , selector: false
  , template: '<div class="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>'
  , trigger: 'hover focus'
  , title: ''
  , delay: 0
  , html: false
  , container: false
  }

  Tooltip.prototype.init = function (type, element, options) {
    this.enabled  = true
    this.type     = type
    this.$element = $(element)
    this.options  = this.getOptions(options)

    var triggers = this.options.trigger.split(' ')

    for (var i = triggers.length; i--;) {
      var trigger = triggers[i]

      if (trigger == 'click') {
        this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))
      } else if (trigger != 'manual') {
        var eventIn  = trigger == 'hover' ? 'mouseenter' : 'focus'
        var eventOut = trigger == 'hover' ? 'mouseleave' : 'blur'

        this.$element.on(eventIn  + '.' + this.type, this.options.selector, $.proxy(this.enter, this))
        this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))
      }
    }

    this.options.selector ?
      (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :
      this.fixTitle()
  }

  Tooltip.prototype.getDefaults = function () {
    return Tooltip.DEFAULTS
  }

  Tooltip.prototype.getOptions = function (options) {
    options = $.extend({}, this.getDefaults(), this.$element.data(), options)

    if (options.delay && typeof options.delay == 'number') {
      options.delay = {
        show: options.delay
      , hide: options.delay
      }
    }

    return options
  }

  Tooltip.prototype.getDelegateOptions = function () {
    var options  = {}
    var defaults = this.getDefaults()

    this._options && $.each(this._options, function (key, value) {
      if (defaults[key] != value) options[key] = value
    })

    return options
  }

  Tooltip.prototype.enter = function (obj) {
    var self = obj instanceof this.constructor ?
      obj : $(obj.currentTarget)[this.type](this.getDelegateOptions()).data('bs.' + this.type)

    clearTimeout(self.timeout)

    self.hoverState = 'in'

    if (!self.options.delay || !self.options.delay.show) return self.show()

    self.timeout = setTimeout(function () {
      if (self.hoverState == 'in') self.show()
    }, self.options.delay.show)
  }

  Tooltip.prototype.leave = function (obj) {
    var self = obj instanceof this.constructor ?
      obj : $(obj.currentTarget)[this.type](this.getDelegateOptions()).data('bs.' + this.type)

    clearTimeout(self.timeout)

    self.hoverState = 'out'

    if (!self.options.delay || !self.options.delay.hide) return self.hide()

    self.timeout = setTimeout(function () {
      if (self.hoverState == 'out') self.hide()
    }, self.options.delay.hide)
  }

  Tooltip.prototype.show = function () {
    var e = $.Event('show.bs.'+ this.type)

    if (this.hasContent() && this.enabled) {
      this.$element.trigger(e)

      if (e.isDefaultPrevented()) return

      var $tip = this.tip()

      this.setContent()

      if (this.options.animation) $tip.addClass('fade')

      var placement = typeof this.options.placement == 'function' ?
        this.options.placement.call(this, $tip[0], this.$element[0]) :
        this.options.placement

      var autoToken = /\s?auto?\s?/i
      var autoPlace = autoToken.test(placement)
      if (autoPlace) placement = placement.replace(autoToken, '') || 'top'

      $tip
        .detach()
        .css({ top: 0, left: 0, display: 'block' })
        .addClass(placement)

      this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)

      var pos          = this.getPosition()
      var actualWidth  = $tip[0].offsetWidth
      var actualHeight = $tip[0].offsetHeight

      if (autoPlace) {
        var $parent = this.$element.parent()

        var orgPlacement = placement
        var docScroll    = document.documentElement.scrollTop || document.body.scrollTop
        var parentWidth  = this.options.container == 'body' ? window.innerWidth  : $parent.outerWidth()
        var parentHeight = this.options.container == 'body' ? window.innerHeight : $parent.outerHeight()
        var parentLeft   = this.options.container == 'body' ? 0 : $parent.offset().left

        placement = placement == 'bottom' && pos.top   + pos.height  + actualHeight - docScroll > parentHeight  ? 'top'    :
                    placement == 'top'    && pos.top   - docScroll   - actualHeight < 0                         ? 'bottom' :
                    placement == 'right'  && pos.right + actualWidth > parentWidth                              ? 'left'   :
                    placement == 'left'   && pos.left  - actualWidth < parentLeft                               ? 'right'  :
                    placement

        $tip
          .removeClass(orgPlacement)
          .addClass(placement)
      }

      var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight)

      this.applyPlacement(calculatedOffset, placement)
      this.$element.trigger('shown.bs.' + this.type)
    }
  }

  Tooltip.prototype.applyPlacement = function(offset, placement) {
    var replace
    var $tip   = this.tip()
    var width  = $tip[0].offsetWidth
    var height = $tip[0].offsetHeight

    // manually read margins because getBoundingClientRect includes difference
    var marginTop = parseInt($tip.css('margin-top'), 10)
    var marginLeft = parseInt($tip.css('margin-left'), 10)

    // we must check for NaN for ie 8/9
    if (isNaN(marginTop))  marginTop  = 0
    if (isNaN(marginLeft)) marginLeft = 0

    offset.top  = offset.top  + marginTop
    offset.left = offset.left + marginLeft

    $tip
      .offset(offset)
      .addClass('in')

    // check to see if placing tip in new offset caused the tip to resize itself
    var actualWidth  = $tip[0].offsetWidth
    var actualHeight = $tip[0].offsetHeight

    if (placement == 'top' && actualHeight != height) {
      replace = true
      offset.top = offset.top + height - actualHeight
    }

    if (/bottom|top/.test(placement)) {
      var delta = 0

      if (offset.left < 0) {
        delta       = offset.left * -2
        offset.left = 0

        $tip.offset(offset)

        actualWidth  = $tip[0].offsetWidth
        actualHeight = $tip[0].offsetHeight
      }

      this.replaceArrow(delta - width + actualWidth, actualWidth, 'left')
    } else {
      this.replaceArrow(actualHeight - height, actualHeight, 'top')
    }

    if (replace) $tip.offset(offset)
  }

  Tooltip.prototype.replaceArrow = function(delta, dimension, position) {
    this.arrow().css(position, delta ? (50 * (1 - delta / dimension) + "%") : '')
  }

  Tooltip.prototype.setContent = function () {
    var $tip  = this.tip()
    var title = this.getTitle()

    $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)
    $tip.removeClass('fade in top bottom left right')
  }

  Tooltip.prototype.hide = function () {
    var that = this
    var $tip = this.tip()
    var e    = $.Event('hide.bs.' + this.type)

    function complete() {
      if (that.hoverState != 'in') $tip.detach()
    }

    this.$element.trigger(e)

    if (e.isDefaultPrevented()) return

    $tip.removeClass('in')

    $.support.transition && this.$tip.hasClass('fade') ?
      $tip
        .one($.support.transition.end, complete)
        .emulateTransitionEnd(150) :
      complete()

    this.$element.trigger('hidden.bs.' + this.type)

    return this
  }

  Tooltip.prototype.fixTitle = function () {
    var $e = this.$element
    if ($e.attr('title') || typeof($e.attr('data-original-title')) != 'string') {
      $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')
    }
  }

  Tooltip.prototype.hasContent = function () {
    return this.getTitle()
  }

  Tooltip.prototype.getPosition = function () {
    var el = this.$element[0]
    return $.extend({}, (typeof el.getBoundingClientRect == 'function') ? el.getBoundingClientRect() : {
      width: el.offsetWidth
    , height: el.offsetHeight
    }, this.$element.offset())
  }

  Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {
    return placement == 'bottom' ? { top: pos.top + pos.height,   left: pos.left + pos.width / 2 - actualWidth / 2  } :
           placement == 'top'    ? { top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2  } :
           placement == 'left'   ? { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth } :
        /* placement == 'right' */ { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width   }
  }

  Tooltip.prototype.getTitle = function () {
    var title
    var $e = this.$element
    var o  = this.options

    title = $e.attr('data-original-title')
      || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)

    return title
  }

  Tooltip.prototype.tip = function () {
    return this.$tip = this.$tip || $(this.options.template)
  }

  Tooltip.prototype.arrow = function () {
    return this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow')
  }

  Tooltip.prototype.validate = function () {
    if (!this.$element[0].parentNode) {
      this.hide()
      this.$element = null
      this.options  = null
    }
  }

  Tooltip.prototype.enable = function () {
    this.enabled = true
  }

  Tooltip.prototype.disable = function () {
    this.enabled = false
  }

  Tooltip.prototype.toggleEnabled = function () {
    this.enabled = !this.enabled
  }

  Tooltip.prototype.toggle = function (e) {
    var self = e ? $(e.currentTarget)[this.type](this.getDelegateOptions()).data('bs.' + this.type) : this
    self.tip().hasClass('in') ? self.leave(self) : self.enter(self)
  }

  Tooltip.prototype.destroy = function () {
    this.hide().$element.off('.' + this.type).removeData('bs.' + this.type)
  }


  // TOOLTIP PLUGIN DEFINITION
  // =========================

  var old = $.fn.tooltip

  $.fn.tooltip = function (option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.tooltip')
      var options = typeof option == 'object' && option

      if (!data) $this.data('bs.tooltip', (data = new Tooltip(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  $.fn.tooltip.Constructor = Tooltip


  // TOOLTIP NO CONFLICT
  // ===================

  $.fn.tooltip.noConflict = function () {
    $.fn.tooltip = old
    return this
  }

}(jQuery);

$(document).ready(function(){
	/*$('.textmedia ul li span.icon-check_2, p span.icon-check_2, .textmedia ol li span.icon-check_2').parent().addClass('RTEcheckbx');
	$('.textmedia ul li span.icon-check_2, p span.icon-check_2, .textmedia ol li span.icon-check_2').wrapInner('<span></span>');*/
    $('.textmedia ul li, .textmedia ol li').wrapInner('<span></span>');
});


//! moment.js
//! version : 2.6.0
//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
//! license : MIT
//! momentjs.com
(function(a){function b(){return{empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1}}function c(a,b){function c(){ib.suppressDeprecationWarnings===!1&&"undefined"!=typeof console&&console.warn&&console.warn("Deprecation warning: "+a)}var d=!0;return i(function(){return d&&(c(),d=!1),b.apply(this,arguments)},b)}function d(a,b){return function(c){return l(a.call(this,c),b)}}function e(a,b){return function(c){return this.lang().ordinal(a.call(this,c),b)}}function f(){}function g(a){y(a),i(this,a)}function h(a){var b=r(a),c=b.year||0,d=b.quarter||0,e=b.month||0,f=b.week||0,g=b.day||0,h=b.hour||0,i=b.minute||0,j=b.second||0,k=b.millisecond||0;this._milliseconds=+k+1e3*j+6e4*i+36e5*h,this._days=+g+7*f,this._months=+e+3*d+12*c,this._data={},this._bubble()}function i(a,b){for(var c in b)b.hasOwnProperty(c)&&(a[c]=b[c]);return b.hasOwnProperty("toString")&&(a.toString=b.toString),b.hasOwnProperty("valueOf")&&(a.valueOf=b.valueOf),a}function j(a){var b,c={};for(b in a)a.hasOwnProperty(b)&&wb.hasOwnProperty(b)&&(c[b]=a[b]);return c}function k(a){return 0>a?Math.ceil(a):Math.floor(a)}function l(a,b,c){for(var d=""+Math.abs(a),e=a>=0;d.length<b;)d="0"+d;return(e?c?"+":"":"-")+d}function m(a,b,c,d){var e=b._milliseconds,f=b._days,g=b._months;d=null==d?!0:d,e&&a._d.setTime(+a._d+e*c),f&&db(a,"Date",cb(a,"Date")+f*c),g&&bb(a,cb(a,"Month")+g*c),d&&ib.updateOffset(a,f||g)}function n(a){return"[object Array]"===Object.prototype.toString.call(a)}function o(a){return"[object Date]"===Object.prototype.toString.call(a)||a instanceof Date}function p(a,b,c){var d,e=Math.min(a.length,b.length),f=Math.abs(a.length-b.length),g=0;for(d=0;e>d;d++)(c&&a[d]!==b[d]||!c&&t(a[d])!==t(b[d]))&&g++;return g+f}function q(a){if(a){var b=a.toLowerCase().replace(/(.)s$/,"$1");a=Zb[a]||$b[b]||b}return a}function r(a){var b,c,d={};for(c in a)a.hasOwnProperty(c)&&(b=q(c),b&&(d[b]=a[c]));return d}function s(b){var c,d;if(0===b.indexOf("week"))c=7,d="day";else{if(0!==b.indexOf("month"))return;c=12,d="month"}ib[b]=function(e,f){var g,h,i=ib.fn._lang[b],j=[];if("number"==typeof e&&(f=e,e=a),h=function(a){var b=ib().utc().set(d,a);return i.call(ib.fn._lang,b,e||"")},null!=f)return h(f);for(g=0;c>g;g++)j.push(h(g));return j}}function t(a){var b=+a,c=0;return 0!==b&&isFinite(b)&&(c=b>=0?Math.floor(b):Math.ceil(b)),c}function u(a,b){return new Date(Date.UTC(a,b+1,0)).getUTCDate()}function v(a,b,c){return $(ib([a,11,31+b-c]),b,c).week}function w(a){return x(a)?366:365}function x(a){return a%4===0&&a%100!==0||a%400===0}function y(a){var b;a._a&&-2===a._pf.overflow&&(b=a._a[pb]<0||a._a[pb]>11?pb:a._a[qb]<1||a._a[qb]>u(a._a[ob],a._a[pb])?qb:a._a[rb]<0||a._a[rb]>23?rb:a._a[sb]<0||a._a[sb]>59?sb:a._a[tb]<0||a._a[tb]>59?tb:a._a[ub]<0||a._a[ub]>999?ub:-1,a._pf._overflowDayOfYear&&(ob>b||b>qb)&&(b=qb),a._pf.overflow=b)}function z(a){return null==a._isValid&&(a._isValid=!isNaN(a._d.getTime())&&a._pf.overflow<0&&!a._pf.empty&&!a._pf.invalidMonth&&!a._pf.nullInput&&!a._pf.invalidFormat&&!a._pf.userInvalidated,a._strict&&(a._isValid=a._isValid&&0===a._pf.charsLeftOver&&0===a._pf.unusedTokens.length)),a._isValid}function A(a){return a?a.toLowerCase().replace("_","-"):a}function B(a,b){return b._isUTC?ib(a).zone(b._offset||0):ib(a).local()}function C(a,b){return b.abbr=a,vb[a]||(vb[a]=new f),vb[a].set(b),vb[a]}function D(a){delete vb[a]}function E(a){var b,c,d,e,f=0,g=function(a){if(!vb[a]&&xb)try{require("./lang/"+a)}catch(b){}return vb[a]};if(!a)return ib.fn._lang;if(!n(a)){if(c=g(a))return c;a=[a]}for(;f<a.length;){for(e=A(a[f]).split("-"),b=e.length,d=A(a[f+1]),d=d?d.split("-"):null;b>0;){if(c=g(e.slice(0,b).join("-")))return c;if(d&&d.length>=b&&p(e,d,!0)>=b-1)break;b--}f++}return ib.fn._lang}function F(a){return a.match(/\[[\s\S]/)?a.replace(/^\[|\]$/g,""):a.replace(/\\/g,"")}function G(a){var b,c,d=a.match(Bb);for(b=0,c=d.length;c>b;b++)d[b]=cc[d[b]]?cc[d[b]]:F(d[b]);return function(e){var f="";for(b=0;c>b;b++)f+=d[b]instanceof Function?d[b].call(e,a):d[b];return f}}function H(a,b){return a.isValid()?(b=I(b,a.lang()),_b[b]||(_b[b]=G(b)),_b[b](a)):a.lang().invalidDate()}function I(a,b){function c(a){return b.longDateFormat(a)||a}var d=5;for(Cb.lastIndex=0;d>=0&&Cb.test(a);)a=a.replace(Cb,c),Cb.lastIndex=0,d-=1;return a}function J(a,b){var c,d=b._strict;switch(a){case"Q":return Nb;case"DDDD":return Pb;case"YYYY":case"GGGG":case"gggg":return d?Qb:Fb;case"Y":case"G":case"g":return Sb;case"YYYYYY":case"YYYYY":case"GGGGG":case"ggggg":return d?Rb:Gb;case"S":if(d)return Nb;case"SS":if(d)return Ob;case"SSS":if(d)return Pb;case"DDD":return Eb;case"MMM":case"MMMM":case"dd":case"ddd":case"dddd":return Ib;case"a":case"A":return E(b._l)._meridiemParse;case"X":return Lb;case"Z":case"ZZ":return Jb;case"T":return Kb;case"SSSS":return Hb;case"MM":case"DD":case"YY":case"GG":case"gg":case"HH":case"hh":case"mm":case"ss":case"ww":case"WW":return d?Ob:Db;case"M":case"D":case"d":case"H":case"h":case"m":case"s":case"w":case"W":case"e":case"E":return Db;case"Do":return Mb;default:return c=new RegExp(R(Q(a.replace("\\","")),"i"))}}function K(a){a=a||"";var b=a.match(Jb)||[],c=b[b.length-1]||[],d=(c+"").match(Xb)||["-",0,0],e=+(60*d[1])+t(d[2]);return"+"===d[0]?-e:e}function L(a,b,c){var d,e=c._a;switch(a){case"Q":null!=b&&(e[pb]=3*(t(b)-1));break;case"M":case"MM":null!=b&&(e[pb]=t(b)-1);break;case"MMM":case"MMMM":d=E(c._l).monthsParse(b),null!=d?e[pb]=d:c._pf.invalidMonth=b;break;case"D":case"DD":null!=b&&(e[qb]=t(b));break;case"Do":null!=b&&(e[qb]=t(parseInt(b,10)));break;case"DDD":case"DDDD":null!=b&&(c._dayOfYear=t(b));break;case"YY":e[ob]=ib.parseTwoDigitYear(b);break;case"YYYY":case"YYYYY":case"YYYYYY":e[ob]=t(b);break;case"a":case"A":c._isPm=E(c._l).isPM(b);break;case"H":case"HH":case"h":case"hh":e[rb]=t(b);break;case"m":case"mm":e[sb]=t(b);break;case"s":case"ss":e[tb]=t(b);break;case"S":case"SS":case"SSS":case"SSSS":e[ub]=t(1e3*("0."+b));break;case"X":c._d=new Date(1e3*parseFloat(b));break;case"Z":case"ZZ":c._useUTC=!0,c._tzm=K(b);break;case"w":case"ww":case"W":case"WW":case"d":case"dd":case"ddd":case"dddd":case"e":case"E":a=a.substr(0,1);case"gg":case"gggg":case"GG":case"GGGG":case"GGGGG":a=a.substr(0,2),b&&(c._w=c._w||{},c._w[a]=b)}}function M(a){var b,c,d,e,f,g,h,i,j,k,l=[];if(!a._d){for(d=O(a),a._w&&null==a._a[qb]&&null==a._a[pb]&&(f=function(b){var c=parseInt(b,10);return b?b.length<3?c>68?1900+c:2e3+c:c:null==a._a[ob]?ib().weekYear():a._a[ob]},g=a._w,null!=g.GG||null!=g.W||null!=g.E?h=_(f(g.GG),g.W||1,g.E,4,1):(i=E(a._l),j=null!=g.d?X(g.d,i):null!=g.e?parseInt(g.e,10)+i._week.dow:0,k=parseInt(g.w,10)||1,null!=g.d&&j<i._week.dow&&k++,h=_(f(g.gg),k,j,i._week.doy,i._week.dow)),a._a[ob]=h.year,a._dayOfYear=h.dayOfYear),a._dayOfYear&&(e=null==a._a[ob]?d[ob]:a._a[ob],a._dayOfYear>w(e)&&(a._pf._overflowDayOfYear=!0),c=W(e,0,a._dayOfYear),a._a[pb]=c.getUTCMonth(),a._a[qb]=c.getUTCDate()),b=0;3>b&&null==a._a[b];++b)a._a[b]=l[b]=d[b];for(;7>b;b++)a._a[b]=l[b]=null==a._a[b]?2===b?1:0:a._a[b];l[rb]+=t((a._tzm||0)/60),l[sb]+=t((a._tzm||0)%60),a._d=(a._useUTC?W:V).apply(null,l)}}function N(a){var b;a._d||(b=r(a._i),a._a=[b.year,b.month,b.day,b.hour,b.minute,b.second,b.millisecond],M(a))}function O(a){var b=new Date;return a._useUTC?[b.getUTCFullYear(),b.getUTCMonth(),b.getUTCDate()]:[b.getFullYear(),b.getMonth(),b.getDate()]}function P(a){a._a=[],a._pf.empty=!0;var b,c,d,e,f,g=E(a._l),h=""+a._i,i=h.length,j=0;for(d=I(a._f,g).match(Bb)||[],b=0;b<d.length;b++)e=d[b],c=(h.match(J(e,a))||[])[0],c&&(f=h.substr(0,h.indexOf(c)),f.length>0&&a._pf.unusedInput.push(f),h=h.slice(h.indexOf(c)+c.length),j+=c.length),cc[e]?(c?a._pf.empty=!1:a._pf.unusedTokens.push(e),L(e,c,a)):a._strict&&!c&&a._pf.unusedTokens.push(e);a._pf.charsLeftOver=i-j,h.length>0&&a._pf.unusedInput.push(h),a._isPm&&a._a[rb]<12&&(a._a[rb]+=12),a._isPm===!1&&12===a._a[rb]&&(a._a[rb]=0),M(a),y(a)}function Q(a){return a.replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,function(a,b,c,d,e){return b||c||d||e})}function R(a){return a.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}function S(a){var c,d,e,f,g;if(0===a._f.length)return a._pf.invalidFormat=!0,void(a._d=new Date(0/0));for(f=0;f<a._f.length;f++)g=0,c=i({},a),c._pf=b(),c._f=a._f[f],P(c),z(c)&&(g+=c._pf.charsLeftOver,g+=10*c._pf.unusedTokens.length,c._pf.score=g,(null==e||e>g)&&(e=g,d=c));i(a,d||c)}function T(a){var b,c,d=a._i,e=Tb.exec(d);if(e){for(a._pf.iso=!0,b=0,c=Vb.length;c>b;b++)if(Vb[b][1].exec(d)){a._f=Vb[b][0]+(e[6]||" ");break}for(b=0,c=Wb.length;c>b;b++)if(Wb[b][1].exec(d)){a._f+=Wb[b][0];break}d.match(Jb)&&(a._f+="Z"),P(a)}else ib.createFromInputFallback(a)}function U(b){var c=b._i,d=yb.exec(c);c===a?b._d=new Date:d?b._d=new Date(+d[1]):"string"==typeof c?T(b):n(c)?(b._a=c.slice(0),M(b)):o(c)?b._d=new Date(+c):"object"==typeof c?N(b):"number"==typeof c?b._d=new Date(c):ib.createFromInputFallback(b)}function V(a,b,c,d,e,f,g){var h=new Date(a,b,c,d,e,f,g);return 1970>a&&h.setFullYear(a),h}function W(a){var b=new Date(Date.UTC.apply(null,arguments));return 1970>a&&b.setUTCFullYear(a),b}function X(a,b){if("string"==typeof a)if(isNaN(a)){if(a=b.weekdaysParse(a),"number"!=typeof a)return null}else a=parseInt(a,10);return a}function Y(a,b,c,d,e){return e.relativeTime(b||1,!!c,a,d)}function Z(a,b,c){var d=nb(Math.abs(a)/1e3),e=nb(d/60),f=nb(e/60),g=nb(f/24),h=nb(g/365),i=45>d&&["s",d]||1===e&&["m"]||45>e&&["mm",e]||1===f&&["h"]||22>f&&["hh",f]||1===g&&["d"]||25>=g&&["dd",g]||45>=g&&["M"]||345>g&&["MM",nb(g/30)]||1===h&&["y"]||["yy",h];return i[2]=b,i[3]=a>0,i[4]=c,Y.apply({},i)}function $(a,b,c){var d,e=c-b,f=c-a.day();return f>e&&(f-=7),e-7>f&&(f+=7),d=ib(a).add("d",f),{week:Math.ceil(d.dayOfYear()/7),year:d.year()}}function _(a,b,c,d,e){var f,g,h=W(a,0,1).getUTCDay();return c=null!=c?c:e,f=e-h+(h>d?7:0)-(e>h?7:0),g=7*(b-1)+(c-e)+f+1,{year:g>0?a:a-1,dayOfYear:g>0?g:w(a-1)+g}}function ab(b){var c=b._i,d=b._f;return null===c||d===a&&""===c?ib.invalid({nullInput:!0}):("string"==typeof c&&(b._i=c=E().preparse(c)),ib.isMoment(c)?(b=j(c),b._d=new Date(+c._d)):d?n(d)?S(b):P(b):U(b),new g(b))}function bb(a,b){var c;return"string"==typeof b&&(b=a.lang().monthsParse(b),"number"!=typeof b)?a:(c=Math.min(a.date(),u(a.year(),b)),a._d["set"+(a._isUTC?"UTC":"")+"Month"](b,c),a)}function cb(a,b){return a._d["get"+(a._isUTC?"UTC":"")+b]()}function db(a,b,c){return"Month"===b?bb(a,c):a._d["set"+(a._isUTC?"UTC":"")+b](c)}function eb(a,b){return function(c){return null!=c?(db(this,a,c),ib.updateOffset(this,b),this):cb(this,a)}}function fb(a){ib.duration.fn[a]=function(){return this._data[a]}}function gb(a,b){ib.duration.fn["as"+a]=function(){return+this/b}}function hb(a){"undefined"==typeof ender&&(jb=mb.moment,mb.moment=a?c("Accessing Moment through the global scope is deprecated, and will be removed in an upcoming release.",ib):ib)}for(var ib,jb,kb,lb="2.6.0",mb="undefined"!=typeof global?global:this,nb=Math.round,ob=0,pb=1,qb=2,rb=3,sb=4,tb=5,ub=6,vb={},wb={_isAMomentObject:null,_i:null,_f:null,_l:null,_strict:null,_isUTC:null,_offset:null,_pf:null,_lang:null},xb="undefined"!=typeof module&&module.exports,yb=/^\/?Date\((\-?\d+)/i,zb=/(\-)?(?:(\d*)\.)?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?)?/,Ab=/^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/,Bb=/(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|X|zz?|ZZ?|.)/g,Cb=/(\[[^\[]*\])|(\\)?(LT|LL?L?L?|l{1,4})/g,Db=/\d\d?/,Eb=/\d{1,3}/,Fb=/\d{1,4}/,Gb=/[+\-]?\d{1,6}/,Hb=/\d+/,Ib=/[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i,Jb=/Z|[\+\-]\d\d:?\d\d/gi,Kb=/T/i,Lb=/[\+\-]?\d+(\.\d{1,3})?/,Mb=/\d{1,2}/,Nb=/\d/,Ob=/\d\d/,Pb=/\d{3}/,Qb=/\d{4}/,Rb=/[+-]?\d{6}/,Sb=/[+-]?\d+/,Tb=/^\s*(?:[+-]\d{6}|\d{4})-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,Ub="YYYY-MM-DDTHH:mm:ssZ",Vb=[["YYYYYY-MM-DD",/[+-]\d{6}-\d{2}-\d{2}/],["YYYY-MM-DD",/\d{4}-\d{2}-\d{2}/],["GGGG-[W]WW-E",/\d{4}-W\d{2}-\d/],["GGGG-[W]WW",/\d{4}-W\d{2}/],["YYYY-DDD",/\d{4}-\d{3}/]],Wb=[["HH:mm:ss.SSSS",/(T| )\d\d:\d\d:\d\d\.\d+/],["HH:mm:ss",/(T| )\d\d:\d\d:\d\d/],["HH:mm",/(T| )\d\d:\d\d/],["HH",/(T| )\d\d/]],Xb=/([\+\-]|\d\d)/gi,Yb=("Date|Hours|Minutes|Seconds|Milliseconds".split("|"),{Milliseconds:1,Seconds:1e3,Minutes:6e4,Hours:36e5,Days:864e5,Months:2592e6,Years:31536e6}),Zb={ms:"millisecond",s:"second",m:"minute",h:"hour",d:"day",D:"date",w:"week",W:"isoWeek",M:"month",Q:"quarter",y:"year",DDD:"dayOfYear",e:"weekday",E:"isoWeekday",gg:"weekYear",GG:"isoWeekYear"},$b={dayofyear:"dayOfYear",isoweekday:"isoWeekday",isoweek:"isoWeek",weekyear:"weekYear",isoweekyear:"isoWeekYear"},_b={},ac="DDD w W M D d".split(" "),bc="M D H h m s w W".split(" "),cc={M:function(){return this.month()+1},MMM:function(a){return this.lang().monthsShort(this,a)},MMMM:function(a){return this.lang().months(this,a)},D:function(){return this.date()},DDD:function(){return this.dayOfYear()},d:function(){return this.day()},dd:function(a){return this.lang().weekdaysMin(this,a)},ddd:function(a){return this.lang().weekdaysShort(this,a)},dddd:function(a){return this.lang().weekdays(this,a)},w:function(){return this.week()},W:function(){return this.isoWeek()},YY:function(){return l(this.year()%100,2)},YYYY:function(){return l(this.year(),4)},YYYYY:function(){return l(this.year(),5)},YYYYYY:function(){var a=this.year(),b=a>=0?"+":"-";return b+l(Math.abs(a),6)},gg:function(){return l(this.weekYear()%100,2)},gggg:function(){return l(this.weekYear(),4)},ggggg:function(){return l(this.weekYear(),5)},GG:function(){return l(this.isoWeekYear()%100,2)},GGGG:function(){return l(this.isoWeekYear(),4)},GGGGG:function(){return l(this.isoWeekYear(),5)},e:function(){return this.weekday()},E:function(){return this.isoWeekday()},a:function(){return this.lang().meridiem(this.hours(),this.minutes(),!0)},A:function(){return this.lang().meridiem(this.hours(),this.minutes(),!1)},H:function(){return this.hours()},h:function(){return this.hours()%12||12},m:function(){return this.minutes()},s:function(){return this.seconds()},S:function(){return t(this.milliseconds()/100)},SS:function(){return l(t(this.milliseconds()/10),2)},SSS:function(){return l(this.milliseconds(),3)},SSSS:function(){return l(this.milliseconds(),3)},Z:function(){var a=-this.zone(),b="+";return 0>a&&(a=-a,b="-"),b+l(t(a/60),2)+":"+l(t(a)%60,2)},ZZ:function(){var a=-this.zone(),b="+";return 0>a&&(a=-a,b="-"),b+l(t(a/60),2)+l(t(a)%60,2)},z:function(){return this.zoneAbbr()},zz:function(){return this.zoneName()},X:function(){return this.unix()},Q:function(){return this.quarter()}},dc=["months","monthsShort","weekdays","weekdaysShort","weekdaysMin"];ac.length;)kb=ac.pop(),cc[kb+"o"]=e(cc[kb],kb);for(;bc.length;)kb=bc.pop(),cc[kb+kb]=d(cc[kb],2);for(cc.DDDD=d(cc.DDD,3),i(f.prototype,{set:function(a){var b,c;for(c in a)b=a[c],"function"==typeof b?this[c]=b:this["_"+c]=b},_months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),months:function(a){return this._months[a.month()]},_monthsShort:"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),monthsShort:function(a){return this._monthsShort[a.month()]},monthsParse:function(a){var b,c,d;for(this._monthsParse||(this._monthsParse=[]),b=0;12>b;b++)if(this._monthsParse[b]||(c=ib.utc([2e3,b]),d="^"+this.months(c,"")+"|^"+this.monthsShort(c,""),this._monthsParse[b]=new RegExp(d.replace(".",""),"i")),this._monthsParse[b].test(a))return b},_weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),weekdays:function(a){return this._weekdays[a.day()]},_weekdaysShort:"Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),weekdaysShort:function(a){return this._weekdaysShort[a.day()]},_weekdaysMin:"Su_Mo_Tu_We_Th_Fr_Sa".split("_"),weekdaysMin:function(a){return this._weekdaysMin[a.day()]},weekdaysParse:function(a){var b,c,d;for(this._weekdaysParse||(this._weekdaysParse=[]),b=0;7>b;b++)if(this._weekdaysParse[b]||(c=ib([2e3,1]).day(b),d="^"+this.weekdays(c,"")+"|^"+this.weekdaysShort(c,"")+"|^"+this.weekdaysMin(c,""),this._weekdaysParse[b]=new RegExp(d.replace(".",""),"i")),this._weekdaysParse[b].test(a))return b},_longDateFormat:{LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D YYYY",LLL:"MMMM D YYYY LT",LLLL:"dddd, MMMM D YYYY LT"},longDateFormat:function(a){var b=this._longDateFormat[a];return!b&&this._longDateFormat[a.toUpperCase()]&&(b=this._longDateFormat[a.toUpperCase()].replace(/MMMM|MM|DD|dddd/g,function(a){return a.slice(1)}),this._longDateFormat[a]=b),b},isPM:function(a){return"p"===(a+"").toLowerCase().charAt(0)},_meridiemParse:/[ap]\.?m?\.?/i,meridiem:function(a,b,c){return a>11?c?"pm":"PM":c?"am":"AM"},_calendar:{sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},calendar:function(a,b){var c=this._calendar[a];return"function"==typeof c?c.apply(b):c},_relativeTime:{future:"in %s",past:"%s ago",s:"a few seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},relativeTime:function(a,b,c,d){var e=this._relativeTime[c];return"function"==typeof e?e(a,b,c,d):e.replace(/%d/i,a)},pastFuture:function(a,b){var c=this._relativeTime[a>0?"future":"past"];return"function"==typeof c?c(b):c.replace(/%s/i,b)},ordinal:function(a){return this._ordinal.replace("%d",a)},_ordinal:"%d",preparse:function(a){return a},postformat:function(a){return a},week:function(a){return $(a,this._week.dow,this._week.doy).week},_week:{dow:0,doy:6},_invalidDate:"Invalid date",invalidDate:function(){return this._invalidDate}}),ib=function(c,d,e,f){var g;return"boolean"==typeof e&&(f=e,e=a),g={},g._isAMomentObject=!0,g._i=c,g._f=d,g._l=e,g._strict=f,g._isUTC=!1,g._pf=b(),ab(g)},ib.suppressDeprecationWarnings=!1,ib.createFromInputFallback=c("moment construction falls back to js Date. This is discouraged and will be removed in upcoming major release. Please refer to https://github.com/moment/moment/issues/1407 for more info.",function(a){a._d=new Date(a._i)}),ib.utc=function(c,d,e,f){var g;return"boolean"==typeof e&&(f=e,e=a),g={},g._isAMomentObject=!0,g._useUTC=!0,g._isUTC=!0,g._l=e,g._i=c,g._f=d,g._strict=f,g._pf=b(),ab(g).utc()},ib.unix=function(a){return ib(1e3*a)},ib.duration=function(a,b){var c,d,e,f=a,g=null;return ib.isDuration(a)?f={ms:a._milliseconds,d:a._days,M:a._months}:"number"==typeof a?(f={},b?f[b]=a:f.milliseconds=a):(g=zb.exec(a))?(c="-"===g[1]?-1:1,f={y:0,d:t(g[qb])*c,h:t(g[rb])*c,m:t(g[sb])*c,s:t(g[tb])*c,ms:t(g[ub])*c}):(g=Ab.exec(a))&&(c="-"===g[1]?-1:1,e=function(a){var b=a&&parseFloat(a.replace(",","."));return(isNaN(b)?0:b)*c},f={y:e(g[2]),M:e(g[3]),d:e(g[4]),h:e(g[5]),m:e(g[6]),s:e(g[7]),w:e(g[8])}),d=new h(f),ib.isDuration(a)&&a.hasOwnProperty("_lang")&&(d._lang=a._lang),d},ib.version=lb,ib.defaultFormat=Ub,ib.momentProperties=wb,ib.updateOffset=function(){},ib.lang=function(a,b){var c;return a?(b?C(A(a),b):null===b?(D(a),a="en"):vb[a]||E(a),c=ib.duration.fn._lang=ib.fn._lang=E(a),c._abbr):ib.fn._lang._abbr},ib.langData=function(a){return a&&a._lang&&a._lang._abbr&&(a=a._lang._abbr),E(a)},ib.isMoment=function(a){return a instanceof g||null!=a&&a.hasOwnProperty("_isAMomentObject")},ib.isDuration=function(a){return a instanceof h},kb=dc.length-1;kb>=0;--kb)s(dc[kb]);ib.normalizeUnits=function(a){return q(a)},ib.invalid=function(a){var b=ib.utc(0/0);return null!=a?i(b._pf,a):b._pf.userInvalidated=!0,b},ib.parseZone=function(){return ib.apply(null,arguments).parseZone()},ib.parseTwoDigitYear=function(a){return t(a)+(t(a)>68?1900:2e3)},i(ib.fn=g.prototype,{clone:function(){return ib(this)},valueOf:function(){return+this._d+6e4*(this._offset||0)},unix:function(){return Math.floor(+this/1e3)},toString:function(){return this.clone().lang("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")},toDate:function(){return this._offset?new Date(+this):this._d},toISOString:function(){var a=ib(this).utc();return 0<a.year()&&a.year()<=9999?H(a,"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]"):H(a,"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]")},toArray:function(){var a=this;return[a.year(),a.month(),a.date(),a.hours(),a.minutes(),a.seconds(),a.milliseconds()]},isValid:function(){return z(this)},isDSTShifted:function(){return this._a?this.isValid()&&p(this._a,(this._isUTC?ib.utc(this._a):ib(this._a)).toArray())>0:!1},parsingFlags:function(){return i({},this._pf)},invalidAt:function(){return this._pf.overflow},utc:function(){return this.zone(0)},local:function(){return this.zone(0),this._isUTC=!1,this},format:function(a){var b=H(this,a||ib.defaultFormat);return this.lang().postformat(b)},add:function(a,b){var c;return c="string"==typeof a?ib.duration(+b,a):ib.duration(a,b),m(this,c,1),this},subtract:function(a,b){var c;return c="string"==typeof a?ib.duration(+b,a):ib.duration(a,b),m(this,c,-1),this},diff:function(a,b,c){var d,e,f=B(a,this),g=6e4*(this.zone()-f.zone());return b=q(b),"year"===b||"month"===b?(d=432e5*(this.daysInMonth()+f.daysInMonth()),e=12*(this.year()-f.year())+(this.month()-f.month()),e+=(this-ib(this).startOf("month")-(f-ib(f).startOf("month")))/d,e-=6e4*(this.zone()-ib(this).startOf("month").zone()-(f.zone()-ib(f).startOf("month").zone()))/d,"year"===b&&(e/=12)):(d=this-f,e="second"===b?d/1e3:"minute"===b?d/6e4:"hour"===b?d/36e5:"day"===b?(d-g)/864e5:"week"===b?(d-g)/6048e5:d),c?e:k(e)},from:function(a,b){return ib.duration(this.diff(a)).lang(this.lang()._abbr).humanize(!b)},fromNow:function(a){return this.from(ib(),a)},calendar:function(){var a=B(ib(),this).startOf("day"),b=this.diff(a,"days",!0),c=-6>b?"sameElse":-1>b?"lastWeek":0>b?"lastDay":1>b?"sameDay":2>b?"nextDay":7>b?"nextWeek":"sameElse";return this.format(this.lang().calendar(c,this))},isLeapYear:function(){return x(this.year())},isDST:function(){return this.zone()<this.clone().month(0).zone()||this.zone()<this.clone().month(5).zone()},day:function(a){var b=this._isUTC?this._d.getUTCDay():this._d.getDay();return null!=a?(a=X(a,this.lang()),this.add({d:a-b})):b},month:eb("Month",!0),startOf:function(a){switch(a=q(a)){case"year":this.month(0);case"quarter":case"month":this.date(1);case"week":case"isoWeek":case"day":this.hours(0);case"hour":this.minutes(0);case"minute":this.seconds(0);case"second":this.milliseconds(0)}return"week"===a?this.weekday(0):"isoWeek"===a&&this.isoWeekday(1),"quarter"===a&&this.month(3*Math.floor(this.month()/3)),this},endOf:function(a){return a=q(a),this.startOf(a).add("isoWeek"===a?"week":a,1).subtract("ms",1)},isAfter:function(a,b){return b="undefined"!=typeof b?b:"millisecond",+this.clone().startOf(b)>+ib(a).startOf(b)},isBefore:function(a,b){return b="undefined"!=typeof b?b:"millisecond",+this.clone().startOf(b)<+ib(a).startOf(b)},isSame:function(a,b){return b=b||"ms",+this.clone().startOf(b)===+B(a,this).startOf(b)},min:function(a){return a=ib.apply(null,arguments),this>a?this:a},max:function(a){return a=ib.apply(null,arguments),a>this?this:a},zone:function(a,b){var c=this._offset||0;return null==a?this._isUTC?c:this._d.getTimezoneOffset():("string"==typeof a&&(a=K(a)),Math.abs(a)<16&&(a=60*a),this._offset=a,this._isUTC=!0,c!==a&&(!b||this._changeInProgress?m(this,ib.duration(c-a,"m"),1,!1):this._changeInProgress||(this._changeInProgress=!0,ib.updateOffset(this,!0),this._changeInProgress=null)),this)},zoneAbbr:function(){return this._isUTC?"UTC":""},zoneName:function(){return this._isUTC?"Coordinated Universal Time":""},parseZone:function(){return this._tzm?this.zone(this._tzm):"string"==typeof this._i&&this.zone(this._i),this},hasAlignedHourOffset:function(a){return a=a?ib(a).zone():0,(this.zone()-a)%60===0},daysInMonth:function(){return u(this.year(),this.month())},dayOfYear:function(a){var b=nb((ib(this).startOf("day")-ib(this).startOf("year"))/864e5)+1;return null==a?b:this.add("d",a-b)},quarter:function(a){return null==a?Math.ceil((this.month()+1)/3):this.month(3*(a-1)+this.month()%3)},weekYear:function(a){var b=$(this,this.lang()._week.dow,this.lang()._week.doy).year;return null==a?b:this.add("y",a-b)},isoWeekYear:function(a){var b=$(this,1,4).year;return null==a?b:this.add("y",a-b)},week:function(a){var b=this.lang().week(this);return null==a?b:this.add("d",7*(a-b))},isoWeek:function(a){var b=$(this,1,4).week;return null==a?b:this.add("d",7*(a-b))},weekday:function(a){var b=(this.day()+7-this.lang()._week.dow)%7;return null==a?b:this.add("d",a-b)},isoWeekday:function(a){return null==a?this.day()||7:this.day(this.day()%7?a:a-7)},isoWeeksInYear:function(){return v(this.year(),1,4)},weeksInYear:function(){var a=this._lang._week;return v(this.year(),a.dow,a.doy)},get:function(a){return a=q(a),this[a]()},set:function(a,b){return a=q(a),"function"==typeof this[a]&&this[a](b),this},lang:function(b){return b===a?this._lang:(this._lang=E(b),this)}}),ib.fn.millisecond=ib.fn.milliseconds=eb("Milliseconds",!1),ib.fn.second=ib.fn.seconds=eb("Seconds",!1),ib.fn.minute=ib.fn.minutes=eb("Minutes",!1),ib.fn.hour=ib.fn.hours=eb("Hours",!0),ib.fn.date=eb("Date",!0),ib.fn.dates=c("dates accessor is deprecated. Use date instead.",eb("Date",!0)),ib.fn.year=eb("FullYear",!0),ib.fn.years=c("years accessor is deprecated. Use year instead.",eb("FullYear",!0)),ib.fn.days=ib.fn.day,ib.fn.months=ib.fn.month,ib.fn.weeks=ib.fn.week,ib.fn.isoWeeks=ib.fn.isoWeek,ib.fn.quarters=ib.fn.quarter,ib.fn.toJSON=ib.fn.toISOString,i(ib.duration.fn=h.prototype,{_bubble:function(){var a,b,c,d,e=this._milliseconds,f=this._days,g=this._months,h=this._data;h.milliseconds=e%1e3,a=k(e/1e3),h.seconds=a%60,b=k(a/60),h.minutes=b%60,c=k(b/60),h.hours=c%24,f+=k(c/24),h.days=f%30,g+=k(f/30),h.months=g%12,d=k(g/12),h.years=d},weeks:function(){return k(this.days()/7)},valueOf:function(){return this._milliseconds+864e5*this._days+this._months%12*2592e6+31536e6*t(this._months/12)},humanize:function(a){var b=+this,c=Z(b,!a,this.lang());return a&&(c=this.lang().pastFuture(b,c)),this.lang().postformat(c)},add:function(a,b){var c=ib.duration(a,b);return this._milliseconds+=c._milliseconds,this._days+=c._days,this._months+=c._months,this._bubble(),this},subtract:function(a,b){var c=ib.duration(a,b);return this._milliseconds-=c._milliseconds,this._days-=c._days,this._months-=c._months,this._bubble(),this},get:function(a){return a=q(a),this[a.toLowerCase()+"s"]()},as:function(a){return a=q(a),this["as"+a.charAt(0).toUpperCase()+a.slice(1)+"s"]()},lang:ib.fn.lang,toIsoString:function(){var a=Math.abs(this.years()),b=Math.abs(this.months()),c=Math.abs(this.days()),d=Math.abs(this.hours()),e=Math.abs(this.minutes()),f=Math.abs(this.seconds()+this.milliseconds()/1e3);return this.asSeconds()?(this.asSeconds()<0?"-":"")+"P"+(a?a+"Y":"")+(b?b+"M":"")+(c?c+"D":"")+(d||e||f?"T":"")+(d?d+"H":"")+(e?e+"M":"")+(f?f+"S":""):"P0D"}});for(kb in Yb)Yb.hasOwnProperty(kb)&&(gb(kb,Yb[kb]),fb(kb.toLowerCase()));gb("Weeks",6048e5),ib.duration.fn.asMonths=function(){return(+this-31536e6*this.years())/2592e6+12*this.years()},ib.lang("en",{ordinal:function(a){var b=a%10,c=1===t(a%100/10)?"th":1===b?"st":2===b?"nd":3===b?"rd":"th";return a+c}}),xb?module.exports=ib:"function"==typeof define&&define.amd?(define("moment",function(a,b,c){return c.config&&c.config()&&c.config().noGlobal===!0&&(mb.moment=jb),ib}),hb(!0)):hb()}).call(this);
/* ========================================================================
 * Bootstrap: tooltip.js v3.0.3
 * http://getbootstrap.com/javascript/#tooltip
 * Inspired by the original jQuery.tipsy by Jason Frame
 * ========================================================================
 * Copyright 2013 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ======================================================================== */


+function ($) { "use strict";

  // TOOLTIP PUBLIC CLASS DEFINITION
  // ===============================

  var Tooltip = function (element, options) {
    this.type       =
    this.options    =
    this.enabled    =
    this.timeout    =
    this.hoverState =
    this.$element   = null

    this.init('tooltip', element, options)
  }

  Tooltip.DEFAULTS = {
    animation: true
  , placement: 'top'
  , selector: false
  , template: '<div class="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>'
  , trigger: 'hover focus'
  , title: ''
  , delay: 0
  , html: false
  , container: false
  }

  Tooltip.prototype.init = function (type, element, options) {
    this.enabled  = true
    this.type     = type
    this.$element = $(element)
    this.options  = this.getOptions(options)

    var triggers = this.options.trigger.split(' ')

    for (var i = triggers.length; i--;) {
      var trigger = triggers[i]

      if (trigger == 'click') {
        this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))
      } else if (trigger != 'manual') {
        var eventIn  = trigger == 'hover' ? 'mouseenter' : 'focus'
        var eventOut = trigger == 'hover' ? 'mouseleave' : 'blur'

        this.$element.on(eventIn  + '.' + this.type, this.options.selector, $.proxy(this.enter, this))
        this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))
      }
    }

    this.options.selector ?
      (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :
      this.fixTitle()
  }

  Tooltip.prototype.getDefaults = function () {
    return Tooltip.DEFAULTS
  }

  Tooltip.prototype.getOptions = function (options) {
    options = $.extend({}, this.getDefaults(), this.$element.data(), options)

    if (options.delay && typeof options.delay == 'number') {
      options.delay = {
        show: options.delay
      , hide: options.delay
      }
    }

    return options
  }

  Tooltip.prototype.getDelegateOptions = function () {
    var options  = {}
    var defaults = this.getDefaults()

    this._options && $.each(this._options, function (key, value) {
      if (defaults[key] != value) options[key] = value
    })

    return options
  }

  Tooltip.prototype.enter = function (obj) {
    var self = obj instanceof this.constructor ?
      obj : $(obj.currentTarget)[this.type](this.getDelegateOptions()).data('bs.' + this.type)

    clearTimeout(self.timeout)

    self.hoverState = 'in'

    if (!self.options.delay || !self.options.delay.show) return self.show()

    self.timeout = setTimeout(function () {
      if (self.hoverState == 'in') self.show()
    }, self.options.delay.show)
  }

  Tooltip.prototype.leave = function (obj) {
    var self = obj instanceof this.constructor ?
      obj : $(obj.currentTarget)[this.type](this.getDelegateOptions()).data('bs.' + this.type)

    clearTimeout(self.timeout)

    self.hoverState = 'out'

    if (!self.options.delay || !self.options.delay.hide) return self.hide()

    self.timeout = setTimeout(function () {
      if (self.hoverState == 'out') self.hide()
    }, self.options.delay.hide)
  }

  Tooltip.prototype.show = function () {
    var e = $.Event('show.bs.'+ this.type)

    if (this.hasContent() && this.enabled) {
      this.$element.trigger(e)

      if (e.isDefaultPrevented()) return

      var $tip = this.tip()

      this.setContent()

      if (this.options.animation) $tip.addClass('fade')

      var placement = typeof this.options.placement == 'function' ?
        this.options.placement.call(this, $tip[0], this.$element[0]) :
        this.options.placement

      var autoToken = /\s?auto?\s?/i
      var autoPlace = autoToken.test(placement)
      if (autoPlace) placement = placement.replace(autoToken, '') || 'top'

      $tip
        .detach()
        .css({ top: 0, left: 0, display: 'block' })
        .addClass(placement)

      this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)

      var pos          = this.getPosition()
      var actualWidth  = $tip[0].offsetWidth
      var actualHeight = $tip[0].offsetHeight

      if (autoPlace) {
        var $parent = this.$element.parent()

        var orgPlacement = placement
        var docScroll    = document.documentElement.scrollTop || document.body.scrollTop
        var parentWidth  = this.options.container == 'body' ? window.innerWidth  : $parent.outerWidth()
        var parentHeight = this.options.container == 'body' ? window.innerHeight : $parent.outerHeight()
        var parentLeft   = this.options.container == 'body' ? 0 : $parent.offset().left

        placement = placement == 'bottom' && pos.top   + pos.height  + actualHeight - docScroll > parentHeight  ? 'top'    :
                    placement == 'top'    && pos.top   - docScroll   - actualHeight < 0                         ? 'bottom' :
                    placement == 'right'  && pos.right + actualWidth > parentWidth                              ? 'left'   :
                    placement == 'left'   && pos.left  - actualWidth < parentLeft                               ? 'right'  :
                    placement

        $tip
          .removeClass(orgPlacement)
          .addClass(placement)
      }

      var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight)

      this.applyPlacement(calculatedOffset, placement)
      this.$element.trigger('shown.bs.' + this.type)
    }
  }

  Tooltip.prototype.applyPlacement = function(offset, placement) {
    var replace
    var $tip   = this.tip()
    var width  = $tip[0].offsetWidth
    var height = $tip[0].offsetHeight

    // manually read margins because getBoundingClientRect includes difference
    var marginTop = parseInt($tip.css('margin-top'), 10)
    var marginLeft = parseInt($tip.css('margin-left'), 10)

    // we must check for NaN for ie 8/9
    if (isNaN(marginTop))  marginTop  = 0
    if (isNaN(marginLeft)) marginLeft = 0

    offset.top  = offset.top  + marginTop
    offset.left = offset.left + marginLeft

    $tip
      .offset(offset)
      .addClass('in')

    // check to see if placing tip in new offset caused the tip to resize itself
    var actualWidth  = $tip[0].offsetWidth
    var actualHeight = $tip[0].offsetHeight

    if (placement == 'top' && actualHeight != height) {
      replace = true
      offset.top = offset.top + height - actualHeight
    }

    if (/bottom|top/.test(placement)) {
      var delta = 0

      if (offset.left < 0) {
        delta       = offset.left * -2
        offset.left = 0

        $tip.offset(offset)

        actualWidth  = $tip[0].offsetWidth
        actualHeight = $tip[0].offsetHeight
      }

      this.replaceArrow(delta - width + actualWidth, actualWidth, 'left')
    } else {
      this.replaceArrow(actualHeight - height, actualHeight, 'top')
    }

    if (replace) $tip.offset(offset)
  }

  Tooltip.prototype.replaceArrow = function(delta, dimension, position) {
    this.arrow().css(position, delta ? (50 * (1 - delta / dimension) + "%") : '')
  }

  Tooltip.prototype.setContent = function () {
    var $tip  = this.tip()
    var title = this.getTitle()

    $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)
    $tip.removeClass('fade in top bottom left right')
  }

  Tooltip.prototype.hide = function () {
    var that = this
    var $tip = this.tip()
    var e    = $.Event('hide.bs.' + this.type)

    function complete() {
      if (that.hoverState != 'in') $tip.detach()
    }

    this.$element.trigger(e)

    if (e.isDefaultPrevented()) return

    $tip.removeClass('in')

    $.support.transition && this.$tip.hasClass('fade') ?
      $tip
        .one($.support.transition.end, complete)
        .emulateTransitionEnd(150) :
      complete()

    this.$element.trigger('hidden.bs.' + this.type)

    return this
  }

  Tooltip.prototype.fixTitle = function () {
    var $e = this.$element
    if ($e.attr('title') || typeof($e.attr('data-original-title')) != 'string') {
      $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')
    }
  }

  Tooltip.prototype.hasContent = function () {
    return this.getTitle()
  }

  Tooltip.prototype.getPosition = function () {
    var el = this.$element[0]
    return $.extend({}, (typeof el.getBoundingClientRect == 'function') ? el.getBoundingClientRect() : {
      width: el.offsetWidth
    , height: el.offsetHeight
    }, this.$element.offset())
  }

  Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {
    return placement == 'bottom' ? { top: pos.top + pos.height,   left: pos.left + pos.width / 2 - actualWidth / 2  } :
           placement == 'top'    ? { top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2  } :
           placement == 'left'   ? { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth } :
        /* placement == 'right' */ { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width   }
  }

  Tooltip.prototype.getTitle = function () {
    var title
    var $e = this.$element
    var o  = this.options

    title = $e.attr('data-original-title')
      || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)

    return title
  }

  Tooltip.prototype.tip = function () {
    return this.$tip = this.$tip || $(this.options.template)
  }

  Tooltip.prototype.arrow = function () {
    return this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow')
  }

  Tooltip.prototype.validate = function () {
    if (!this.$element[0].parentNode) {
      this.hide()
      this.$element = null
      this.options  = null
    }
  }

  Tooltip.prototype.enable = function () {
    this.enabled = true
  }

  Tooltip.prototype.disable = function () {
    this.enabled = false
  }

  Tooltip.prototype.toggleEnabled = function () {
    this.enabled = !this.enabled
  }

  Tooltip.prototype.toggle = function (e) {
    var self = e ? $(e.currentTarget)[this.type](this.getDelegateOptions()).data('bs.' + this.type) : this
    self.tip().hasClass('in') ? self.leave(self) : self.enter(self)
  }

  Tooltip.prototype.destroy = function () {
    this.hide().$element.off('.' + this.type).removeData('bs.' + this.type)
  }


  // TOOLTIP PLUGIN DEFINITION
  // =========================

  var old = $.fn.tooltip

  $.fn.tooltip = function (option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.tooltip')
      var options = typeof option == 'object' && option

      if (!data) $this.data('bs.tooltip', (data = new Tooltip(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  $.fn.tooltip.Constructor = Tooltip


  // TOOLTIP NO CONFLICT
  // ===================

  $.fn.tooltip.noConflict = function () {
    $.fn.tooltip = old
    return this
  }

}(jQuery);

$(document).ready(function() {
	check($('#one'));
	check($('#two'));
	check($('#three'));
	check($('#four'));

	/* $('.top button').on('click',function(){
		  $('.panel-collapse').removeClass('collapse').addClass('collapse');
		  $('.panel-group .panel-heading .panel-title').removeClass('active');
		  $('.lastStep h4 span').removeClass('glyphicon-active');
		  $('.para-heading-active').removeClass('para-heading-active');
		  if($(this).children('span').hasClass('glyphicon-minus')){
				$('.panel-collapse').removeClass('in');
			}
		  else{
				$('.panel-collapse').removeClass('collapse');
				$('.panel-collapse').removeClass('in').addClass('in');
				$('.panel-group .panel-heading .panel-title').addClass('active');
				$('.lastStep h4 span').addClass('glyphicon-active');
				$('.lastStep a p').addClass('para-heading-active');
			}
			checkGlyphicon();
	 });*/

	function check(self) {
		if (self.children('span.expandableArrow').hasClass('glyphicon-active')) {
			var clickedElement = true;
		} else {
			clickedElement = false;
		}
		//self.parents('.lastStep').find('.para-heading-active').removeClass('para-heading-active');
		//self.parents('.lastStep').find('.glyphicon-active').removeClass('glyphicon-active');
		//self.parents('.lastStep').find('.panel-group .panel-heading .panel-title').removeClass('active');
		if (clickedElement) {
			self.parent().removeClass('active');
			self.children('p').removeClass('para-heading-active');
			self.children('span.expandableArrow').removeClass('glyphicon-active');
		} else {
			self.parent().addClass('active');
			self.children('span.expandableArrow').addClass('glyphicon-active');
			self.children('p').addClass('para-heading-active');

		}
		checkGlyphicon();
	}

	function checkGlyphicon() {
		$('.lastStep h3 span.expandableArrow').each(function() {
			if ($(this).hasClass('glyphicon-active')) {
				$(this).removeClass('icon-stage_teaser_pfeil_unten').addClass('icon-stage_teaser_pfeil_oben');
			} else {
				$(this).removeClass('icon-stage_teaser_pfeil_oben').addClass('icon-stage_teaser_pfeil_unten');
			}
		});
	}

	$('.lastStep a').on('click', function() {
		var self = $(this);
		check(self);
	});

	$('.helpbox-text').hide().parent().css('padding', '0');
	$('.helpbox-trigger').click(function() {
		$(this).parentsUntil('.helpbox-group').find('.helpbox-text').toggle('fast');
	});
	$('.helpbox-text').click(function() {
		$(this).toggle('fast');
	});

	/*
    // list counter for the status bar in mobile view
    // in case that the counting of the <dfa>-steps have to be counted and included via the FE, add this
    var numberOfSteps = $('.ovaform-pagination li.active');
    var numberOfActiveStep = $('.ovaform-pagination li').index( numberOfSteps ) + 1;
    var activeStepwithNumbers = numberOfActiveStep + " / " + numberOfSteps;
    */
});
/*!
* ova.js
* This file contains the code for the OVA form (4 steps).
* 
* @project   E.ON DE
* @date      2014-05-04 
* @author    FLORIAN FEILER, SapientNitro <ffeiler@sapient.com>
* @licensor  E.ON
* @NOTE
*/

// Declaring namespace parameter
var eonde = eonde || {};

$(function() {

    var ovaDiv = $('#ova');
    if (ovaDiv.length === 0) {
        return;
    }   

    $(document).on('show.bs.popover', ".dynamic-popover", function (e) {
        var popover = $(e.target).data("bs.popover");
        popover.options.content = $($(e.target).attr("data-content-selector")).html();
    });

    var overlayHeight = 0.8*$(window).height();
    if((ovaDiv.length > 0) && $(window).width() > 1024) {
        var verticalMargin = ($(window).height() - (overlayHeight + 72))/2;
        $('#modalDisclaimerOverlay .modal-dialog').css({
            'margin-top' : verticalMargin + 'px'
        });
        $('#modalPriceOverlay .modal-dialog').css({
            'margin-top' : verticalMargin + 'px'
        });
        $('#modalPolicyOverlay .modal-dialog').css({
            'margin-top' : verticalMargin + 'px'
        });
        $('#modalExitIntentOverlay .modal-dialog').css({
            'margin-top' : verticalMargin + 'px'
        });

    }
    
    var knockoutValidationSettings = {
        insertMessages: false,
        decorateElement: true,
        errorMessageClass: 'input-error',
        errorElementClass: 'input-error',
        errorClass: 'input-error',
        errorsAsTitle: true,
        parseInputAttributes: false,
        messagesOnModified: true,
        decorateElementOnModified: true,
        decorateInputElement: true
    };
    ko.validation.init(knockoutValidationSettings, true);

    ko.bindingHandlers.showError = {
        update: function(element, valueAccessor, allBindings, viewModel, bindingContext) {
            $(element).html('');
            $(element).removeClass("error-zone");
            var errorFound = false;
            var errors = ko.utils.unwrapObservable(valueAccessor());
            var fields = allBindings().fields != null ? allBindings().fields.split(',') : [];
            for (var i = 0; i < fields.length; i++) {
                var fieldErrors = $.grep(errors, function(n) {
                    var errorStr = n.split("###");
                    if (errorStr != null && errorStr.length > 0) {
                        if (errorStr[0] == fields[i]) {
                            return n;
                    }
                }
                });                
                for (var j = 0; j < fieldErrors.length; j++) {
                    var errorMsg = fieldErrors[j].split("###")[0] !== "COMMON" ? eonde.Utils.decodeError(fieldErrors[j].split("###")[1]) : eonde.Utils.decodeError("err_service");
                    $(element).append("<p>" + errorMsg + "</p>");
                    errorFound = true;
            }
            }
            if (errorFound) {
                $(element).addClass("error-zone");
        }
    }
    };
        
    ko.bindingHandlers.errorFocus = {
        update: function(element, valueAccessor, allBindings, viewModel, bindingContext) {
            var unwrapped = ko.utils.unwrapObservable(valueAccessor());
            if (unwrapped != null && unwrapped.length > 0) {
                for (var i = 0; i < unwrapped.length; i++) {
                    var errorArr = unwrapped[i].split("###");
                    var fieldArr = allBindings().field != null ? allBindings().field.split(',') : [];
                    for (var j = 0; j < fieldArr.length; j++) {
                        if (fieldArr[j] === errorArr[0]) {
                            $(element).addClass("input-error");
                        }
                    }
                }               
            }
        }
    };
var clientId;
($('span.client').length > 0 && $('span.client').attr('data-clientid') != '')?clientId=$('span.client').attr('data-clientid'):clientId="eonde";
    var streetsServiceURL = eonde.Config.serviceURLs.streetService; 
    var gridOperatorsURL = eonde.Config.serviceURLs.gridOperatorsService;
    var offersServiceURL = '';
    var contractServiceURL = '';
    var bankNamesServiceURL = eonde.Config.serviceURLs.bankNamesService;
    var energyProvidersURL = eonde.Config.serviceURLs.energyProvidersService;
    var zipCodesURL = eonde.Config.serviceURLs.zipcodeService;
    var pdfURL = '';
    var distInfoURL = eonde.Config.serviceURLs.distInfoService;
    var authorizationHeaderVal = eonde.Config.serviceURLs.authorization;
    var completeFormServiceURL = eonde.Config.serviceURLs.completeFormService;
    var OVA_CSTATUS="cstatus";
    var removeClassIE8 = true;
    

    productServiceURL = eonde.Config.serviceURLs.productServiceURL;
    pdfServiceURL = eonde.Config.serviceURLs.pdfService;
    offersServiceURL = eonde.Config.serviceURLs.offersService;
    var cscModeOffersServiceURL=eonde.Config.serviceURLs.cscModeOffersService;
    contractServiceURL = eonde.Config.serviceURLs.contractService;
    var cscModeContractServiceURL = eonde.Config.serviceURLs.cscModeContractService;
    pdfURL = eonde.Config.serviceURLs.contractPdfServiceUrl;
    var cscModePdfURL=eonde.Config.serviceURLs.cscModeContractPdfServiceUrl;
    var CSC_MODE_PRODUCT_SWITCH="PS";
    
    function getCookie(cname) {
            var name = cname + "=";
            var ca = document.cookie.split(';');
            for(var i=0; i<ca.length; i++) {
                var c = ca[i];
                while (c.charAt(0)==' ') c = c.substring(1);
                if (c.indexOf(name) == 0) {
                    return c.substring(name.length,c.length);
                }
            }
            return "";
    }
    
    eonde.vmOVA = function () {
        var self = this;
        var QueryString = eonde.Utils.QueryString;
        
        //Request from csc portal
        var _cscMode=QueryString.mode !== undefined && QueryString.customerType !==undefined && QueryString.customerType == 'pk'? QueryString.mode : ""; 
        var customerJsonString="";
        //Error Messages array
        self.ovaErrorMessages = ko.observable({});
        var pkErrorMessages = {"salutation":"Bitte wählen Sie eine Anrede aus.", "firstName":"Bitte geben Sie Ihren Vornamen ein.", "lastName":"Bitte geben Sie Ihren Nachnamen ein.", "birthdate":"Bitte geben Sie Ihr Geburtsdatum an.", "isCustomer":"Sehr geehrte/r , um Ihren Auftrag bearbeiten zu können, beantworten Sie uns bitte folgende Frage:Sind Sie an dem angegebenen Ort bereits Strom-Kunde der E.ON Energie Deutschland GmbH?"};
        var gwErrorMessages = {"salutation":"Bitte wählen Sie eine Anrede für den/die Geschäftsführer(in)/Inhaber(in) aus.", "firstName":"Um Ihren Auftrag bearbeiten zu können, geben Sie den Vornamen ein.", "lastName":"Um Ihren Auftrag bearbeiten zu können, geben Sie den Nachnamen ein.", "birthdate":"Bitte geben Sie das Geburtsdatum des/der Geschäftsführers/in an.", "isCustomer":"Um Ihren Auftrag bearbeiten zu können, beantworten Sie uns bitte folgende Frage: Ist Ihre Firma an dem angegebenen Ort bereits Strom-Kunde der E.ON Energie Deutschland GmbH?"};
        //hardcoded for now, needs to be clarified
        self.mainNetwork = ko.observable('');
        
        //values for dropdown menus
        self.titles = [ "Prof.", "Dr."];
        self.salutations = [{id: "", description:"Bitte wählen"},{id: "Frau", description:"Frau"},{id: "Herr", description:"Herr"}];
        self.branches = eonde.Utils.getOVAStaticValues("branch");
        self.departments = eonde.Utils.getOVAStaticValues("department");
        self.functions = eonde.Utils.getOVAStaticValues("function");
        
        //coming from URL, they get set in the init function
        var customerInit = $('span.customerInfo').data('customertype');
        self.customerType = ko.observable (customerInit); //pk
        self.tariffType = ko.observable("et"); //dt??
        self.productType = ko.observable("Strom");
        self.multiGridOperators = ko.observable("false");
        self.percentNt = ko.observable ("");
        self.productName = ko.observable("");
        
        //coming from local Storage
        self.consumption = ko.observable();
        self.zipcode = ko.observable();
        self.city = ko.observable();
        self.is_ordernow_focused = ko.observable(false);
    
        // CSC request
        self.isCSCMode=ko.observable(false);
        self.isPSMode=ko.observable(false);
        self.customerData=ko.observable();
        self.nonEmptySalutationInCSCData=ko.observable(false);
        self.nonEmptyBirthdayInCSCData=ko.observable(false);
        self.product_old = ko.observable();
        self.street_old = ko.observable();
        self.street_number_old = ko.observable();
        self.zipcode_old = ko.observable();
        self.city_old = ko.observable();
        self.move_out_date = ko.observable();




        //comes from layer "previous supplier".
        //If URL-parameter "multiGridOperators" is true then the layer will show up (see init function)
        self.gridOperators = ko.observableArray();
        self.gridOperator = ko.observable("Bayernwerk AG");
        
        //comes from interface call to "offer" (see getToken function)
        self.tokenId = ko.observable("");
        
        //keeps track of visibility of form steps and gets modiefied by "submitStep" and "editStep"
        self.step = ko.observable("1");
        
        if(self.step() == '1') {
            CQ_Analytics.ProfileDataMgr.setProperty(OVA_CSTATUS,'ovastep1');
        }
        //today's date - will be used to pre-fill the date of the meter-reading and gets set in the init function        
        self.today = ko.observable ("");
        
        self.products = ko.observable();
        self.footnotes = ko.observable();
        self.ekomiLink = ko.observable();
        self.footnotesArr = ko.observableArray();
        self.showErrorMessages = ko.observable(false);
        self.errorCount = ko.observable(0);
        self.distinfo = ko.observable();
        self.pageErrorMode = ko.observable("error");
        self.errorCodes = ko.observableArray();
        self.errorMessages = ko.observable();
        self.hashIdForComplete = ko.observable();

        //Observables for completion form field visibility
        self.t_a_e_last_supplier_complete = ko.observable("0");
        self.t_a_e_last_customer_id_complete = ko.observable("0");
        self.t_a_meter_number_complete = ko.observable("0");
        self.t_a_e_meter_number_complete = ko.observable("0");
        self.n_e_meter_number_complete = ko.observable("0");
        self.f_e_meter_number_complete = ko.observable("0");
        self.t_a_present_account_complete = ko.observable("0");

        self.contractHashError = ko.observable("0");
        self.contractHashCompleted = ko.observable("0");

        self.completeProductType = ko.observable();
        self.completeTariffType = ko.observable();
        
        self.errorCount.subscribe(function(count) {
            if (count > 10) {
                self.step("error");
                $('#ui-datepicker-div') && $('#ui-datepicker-div').length ? $('#ui-datepicker-div').css('display','none') : '';
            }
        });

        //only used in the placeholder of the input field for the meter reading
        self.unit = ko.computed(function(){
            if (self.productType()==='Strom') {
                return 'kWh';
            } else {
                return 'm³';
            }
        });
        
        /*
        @private formatDate : method to format the user selected date to TT.MM.JJJJ format
        @param dateStr: input date string
        */
        self.formatDate = function(dateStr) {
            var i, n, a = dateStr,
                        o = [],
                        r = "",
                        l = /\D/g,
                        formattedVal;
            o = a.replace(l, ".").split(".");
            for (var c, d = -1; null != (c = o[++d]);)"" == c && (o.splice(d, 1), d--);
            var u = 3 != o.length || o[0].length > 2 || 1 > o[0].length || o[1].length > 2 || 1 > o[1].length || !(4 != o[2].length != (2 != o[2].length));
            if (u) {
                if (6 > a.replace(l, "").length) formattedVal = a;
                o = [], o[0] = a.replace(l, "").substr(0, 2), o[1] = a.replace(l, "").substr(2, 2), o[2] = a.replace(l, "").substr(4, 4)
            }
            o[0] = 2 > o[0].length ? "0" + o[0] : o[0];
            o[1] = 2 > o[1].length ? "0" + o[1] : o[1];
            i = o.join("").length;
            6 == i && (n = parseInt(o[2]), n += n >= 30 ? 1900 : 2e3, o[2] = n, i = o.join("").length);
            r = o.join(".");
            8 == i ? (formattedVal = r) : formattedVal = a;
            return formattedVal;
        };

        self.pdfFilename = ko.computed(function(){
            return "Auftrag_"+self.productName().replace(/[Ä]/g, 'Ae').replace(/[Ö]/g, 'Oe').replace(/[Ü]/g, 'Ue').replace(/[ä]/g, 'ae').replace(/[ö]/g, 'oe').replace(/[ü]/g, 'ue').replace(/[ß]/g, 'ss').replace(/[-. ]/g, '').replace(/[\/. ]/g, '').replace(/[\\. ]/g, '') + "_druckansicht.pdf";
        });
        
        self.hasBackendErrors = ko.observable (false);
        self.backendErrors = ko.observable ("");
        
        //common values for step 1, used both for customerType "gw" and "pk"
        self.street = ko.observable("");
        self.street_number = ko.observable("");
        self.district = ko.observable("");
        self.email = ko.observable("");
        self.phone = ko.observable("");
        self.is_customer = ko.observable("none");
        self.billing_address = ko.observable("no");
        self.billing_zipcode = ko.observable("");
        self.billing_city = ko.observable("");
        self.billing_cities = ko.observableArray();
        self.billing_street = ko.observable("");
        self.billing_street_number = ko.observable("");
        self.salutation = ko.observable("");
        self.title = ko.observable("");
        self.firstname = ko.observable("");
        self.lastname = ko.observable("");
        self.birthday_raw = ko.observable("").extend({notify: 'always'});
        
    //partner observables declaration
        //Step 1
        self.partnerInputField1 = ko.observable("");
        self.partnerInputField2 = ko.observable("");
        self.partnerCheckboxField = ko.observable();
        self.partnerRadioButton = ko.observable("none");
        self.partnerRadioButtonSummary = ko.observable("");
        self.partnerSelectField = ko.observable();
        $("div.OVACoop input:radio" ).each(function(){
            var defaultChecked = $(this).attr('data-checked');
            if((defaultChecked!='undefined' || defaultChecked!='') && defaultChecked == 'checked'){
                self.partnerRadioButton($(this).val());    
            }
        });
        

        //Step 4
        self.partnerLastCheckboxField1 = ko.observable(false);

        self.partnerInputFieldMandatory1 = ko.observable(false);
        self.partnerInputFieldMandatory2 = ko.observable(false);
        self.partnerCheckboxMandatory = ko.observable(false);
        self.partnerRadioMandatory = ko.observable(false);
        self.partnerLastCheckboxField1Mandatory = ko.observable(false);

        if($('span.partnerInputField1').attr('data-mandatory') === 'true'){
            self.partnerInputFieldMandatory1(true);
        }
        if($('span.partnerInputField2').attr('data-mandatory') === 'true'){
            self.partnerInputFieldMandatory2(true);
        }
        if($('span.partnerCheckboxField').attr('data-mandatory') === 'true'){
            self.partnerCheckboxMandatory(true);
        }
        if($('span.partnerRadioButton').attr('data-mandatory') === 'true'){
            self.partnerRadioMandatory(true);
        }
        if($('span.partnerLastCheckboxField1').attr('data-mandatory') === 'true'){
            self.partnerLastCheckboxField1Mandatory(true);
        }
    
    
        //additional values for customerType "gw"
        self.company = ko.observable("");
        //self.branch = ko.observable("");
        //self.register = ko.observable("");
        //self.department_gm = ko.observable("");
        self.function_gm = ko.observable("");
        self.contact_person = ko.observable("no");
        self.salutation_co = ko.observable("");
        self.title_co = ko.observable("");
        self.firstname_co = ko.observable("");
        self.lastname_co = ko.observable("");
        //self.department_co = ko.observable("");
        self.function_co = ko.observable("");
        self.billing_company = ko.observable("");
        
        //values for step 2
        self.type_request = ko.observable("");
        
        
        
self.meter_number_validation = ko.observable("0");
self.present_account_validation = ko.observable("0");

        self.delivery_from = ko.observable("nächstmöglicher Termin");
        self.delivery_from_date_field_raw = ko.observable("");
        self.present_account = ko.observable("");
        self.meter_number = ko.observable("");
        self.present_meter_reading = ko.observable("");
        self.present_meter_reading_ht = ko.observable("");
        self.present_meter_reading_nt = ko.observable("");
        self.last_meter_reading_at_raw = ko.observable(self.today());
        
self.last_supplier_validation = ko.observable("0");
self.last_customer_id_validation = ko.observable("0");

        self.termination = ko.observable("eon");
        self.termination_date_raw = ko.observable("");
        self.last_supplier = ko.observable("");
        self.last_customer_id = ko.observable("");
        self.authorisation_cancelation = ko.observable("");
        self.is_authorisation_cancelation_checked = ko.observable(false);
        self.distributorInformation_servicePhone = ko.observable("");
        self.distributorInformation_serviceSchedule = ko.observable("");
        
        self.authorisation_cancelation = ko.computed (function(){
            if (self.is_authorisation_cancelation_checked()) {
                return "1";
            } else {
                return "0";
            }
        });
        
        self.entry_at_raw = ko.observable("");
        
        //values for step 3
        self.account_holder_name = ko.computed (function(){
            if (self.customerType() === "gw") {
                return self.company();
            } else {
                return self.firstname() + " " + self.lastname();
            }
        });
        self.account_number = ko.observable ("");
        self.bank_code = ko.observable ("");
        self.bank_name = ko.observable ("");
        self.is_directdebit_authorisation_checked = ko.observable (false);
        self.is_directdebit_authorisation = ko.computed (function(){
            if (self.is_directdebit_authorisation_checked()) {
                return "1";
            } else {
                return "0";
            }
        });
        self.is_directdebit = ko.computed (function(){
            if (self.is_directdebit_authorisation_checked() || self.bank_code() !== "" || self.account_number() !== "") {
                return "1";
            } else {
                return "0";
            }
        });
        self.payment_method = ko.computed(function(){
            if (self.is_directdebit_authorisation_checked()) {
                return "SEPA-Lastschriftmandat";
            } else {
                return "Überweisung";
            }
        });
        
        self.is_iban = ko.computed (function(){
            if (isNaN(self.account_number())) {
                self.bank_code("");
                return true;
            } else {
                return false;
            }
        });
        
        self.billing_address.subscribe(function(billingAddress) {
            if(billingAddress == "no" && self.errorCodes()[0] !='' && self.errorCodes()[0] != undefined){
                self.clearErrorZones();
                self.billing_zipcode("");
                self.billing_city("");
                self.billing_street("");
                self.billing_street_number("");
            }
            
        });

        self.account_number.subscribe(function(accNum) {
            if (self.is_iban() && accNum !== null && accNum !== "") {
                accNum = accNum.replace(/\s/g, "");
                accNum = accNum.toUpperCase();
                if(accNum.length >= 22){
                    getBankName(accNum);
                }
            } else if (accNum === "" && self.bank_code() === "") {
                self.bank_name("");
            }
        });
        
        self.bank_code.subscribe(function(bankCode) {
            if (!self.is_iban() && bankCode !== null && bankCode !== "" && bankCode.length >= 8) {
                getBankName();
            } else if (!self.is_iban() && bankCode === "") {
                self.bank_name("");
            }
        });
        
        //values for step 3
        self.type_request_display = ko.computed(function(){
            if (self.type_request() === "is_alternation_to_eon") {
                return "Wechsel zu E.ON";
            } else if (self.type_request() === "is_first_entry") {
                return "Erstbezug";
            } else {
                return "Neueinzug";
            }
        });
        self.termination_display = ko.computed(function(){
            if(self.termination() == "eon") {
                var str = "";
                if (self.customerType() === 'pk') {
                    str += eonde.i18n.get("ova.form.general.instruct.termination.1.private") + " " + self.productType() + eonde.i18n.get("ova.form.general.instruct.termination.2.private");
                } else {
                    str += eonde.i18n.get("ova.form.general.instruct.termination.1.business") + " " + self.productType() + eonde.i18n.get("ova.form.general.instruct.termination.2.business");
                }
                return str;
            } else {
                var str = "";
                if (self.customerType() === 'pk') {
                    str += eonde.i18n.get("ova.form.eneral.instruct.5.first.private") + " " + self.productType() + eonde.i18n.get("ova.form.eneral.instruct.5.second.private");
                } else {
                    str += self.company() + " " + eonde.i18n.get("ova.form.eneral.instruct.5.first.business") + " " + self.productType() + eonde.i18n.get("ova.form.eneral.instruct.5.second.business");
                }
                return str;
            }
        });
        self.delivery_from_display = ko.computed(function(){
            if(self.delivery_from() === "nächstmöglicher Termin") {
                return "nächstmöglicher Termin";
            } else {
                return "Vertragsbeginn zum: " + self.formatDate(self.delivery_from_date_field());
            }
        });
        
        //values for step 4
        self.regionalized = ko.observable(true);
        self.confirmation_ordering_conditions_checked = ko.observable(false);
        self.confirmation_ordering_conditions = ko.computed(function(){
            if (self.confirmation_ordering_conditions_checked()) {
                return "1";
            } else {
                return "0";
            }
        });
        /*self.confirmation_agb_checked = ko.observable(false);
        self.confirmation_agb = ko.computed(function(){
            if (self.confirmation_agb_checked()) {
                return "1";
            } else {
                return "0";
            }
        });
        self.confirmation_disclaimer_checked = ko.observable(false);
        self.confirmation_disclaimer = ko.computed(function(){
            if (self.confirmation_disclaimer_checked()) {
                return "1";
            } else {
                return "0";
            }
        });*/
        self.confirmation_data_checked = ko.observable(false);
        self.confirmation_data = ko.computed(function(){
            if (self.confirmation_data_checked()) {
                return "1";
            } else {
                return "0";
            }
        });
        self.confirmation_advertising_mail_checked = ko.observable(false);
        self.confirmation_advertising_mail = ko.computed(function(){
            if (self.confirmation_advertising_mail_checked()) {
                return "1";
            } else {
                return "0";
            }
        });
        self.confirmation_advertising_phone_checked = ko.observable(false);
        self.confirmation_advertising_phone = ko.computed(function(){
            if (self.confirmation_advertising_phone_checked()) {
                return "1";
            } else {
                return "0";
            }
        });
        
        self.is_not_confirmed = ko.computed(function (e) {
            if (self.customerType() === "pk") {
                if (self.confirmation_ordering_conditions_checked() && self.confirmation_data_checked()) {
                    return false;
                } else {
                    return true;
                }
            } else if (self.customerType() === "gw") {
                if (self.confirmation_ordering_conditions_checked() && self.confirmation_data_checked()) {
                    return false;
                } else {
                    return true;
                }
            }
        });
        
        self.birthday = ko.computed({
            read: function () {
                return self.formatDate(self.birthday_raw());
            },
            write: function (value) {
                // Strip out unwanted characters, parse as float, then write the raw data back to the underlying "price" observable
                if (Modernizr.touch && Modernizr.inputtypes.date) {
                    value = value.split("-").reverse().join(".");
                } else {
                    value = self.formatDate(value);
                }
                self.birthday_raw(value); // Write to underlying storage    
            },
            owner: self            
        }).extend({notify: 'always'});
        
        self.delivery_from_date_field = ko.computed({
            read: function () {
                return self.formatDate(self.delivery_from_date_field_raw());
            },
            write: function (value) {
                // Strip out unwanted characters, parse as float, then write the raw data back to the underlying "price" observable
                if (Modernizr.touch && Modernizr.inputtypes.date) {
                    value = value.split("-").reverse().join(".");
                } else {
                    value = self.formatDate(value);
                }
                self.delivery_from_date_field_raw(value); // Write to underlying storage    
            },
            owner: self            
        });
        
        self.termination_date = ko.computed({
            read: function () {
                return self.formatDate(self.termination_date_raw());
            },
            write: function (value) {
                // Strip out unwanted characters, parse as float, then write the raw data back to the underlying "price" observable
                if (Modernizr.touch && Modernizr.inputtypes.date) {
                    value = value.split("-").reverse().join(".");
                } else {
                    value = self.formatDate(value);
                }
                self.termination_date_raw(value); // Write to underlying storage    
            },
            owner: self            
        });
        
        self.entry_at = ko.computed({
            read: function () {
                return self.formatDate(self.entry_at_raw());
            },
            write: function (value) {
                // Strip out unwanted characters, parse as float, then write the raw data back to the underlying "price" observable
                if (Modernizr.touch && Modernizr.inputtypes.date) {
                    value = value.split("-").reverse().join(".");
                } else {
                    value = self.formatDate(value);
                }
                self.entry_at_raw(value); // Write to underlying storage    
            },
            owner: self            
        });
        
        self.last_meter_reading_at = ko.computed({
            read: function () {
                return self.formatDate(self.last_meter_reading_at_raw());
            },
            write: function (value) {
                // Strip out unwanted characters, parse as float, then write the raw data back to the underlying "price" observable
                if (Modernizr.touch && Modernizr.inputtypes.date) {
                    value = value.split("-").reverse().join(".");
                } else {
                    value = self.formatDate(value);
                }
                self.last_meter_reading_at_raw(value); // Write to underlying storage   
            },
            owner: self            
        });
        
        self.start_contract_date = ko.computed(function() {
            if (self.termination_date() && self.termination_date() != "") {
                var terminationDate = moment(self.formatDate(self.termination_date()), "DD.MM.YYYY");
                terminationDate = terminationDate.add('days', 1);
                return terminationDate.format("DD.MM.YYYY");
            } else {
                return "TT.MM.JJJJ";
            }
        });
        
        self.delivery_from.subscribe(function(deliveryVal) {
            if (deliveryVal === "nächstmöglicher Termin") {
                self.delivery_from_date_field("");
            }
        });
        
        //custom date validation
        ko.validation.rules['greaterThan'] = {
            validator: function (val, otherVal) {
                val = self.formatDate(val);
                var todaysDate = moment();
                var selectedDate = moment(val, "DD.MM.YYYY");
                return todaysDate.diff(selectedDate, 'years', true) > 18;
            },
            message: '{0}'
        };
        
        var accNumErrorMsg = "";
        ko.validation.rules['accountNumberRule'] = {
            validator: function (val, otherVal) {
                if (val !== null && val !== undefined) {
                    if (jQuery.isNumeric(val)) {
                        if (val.length < 4 || val.length > 10) {
                            accNumErrorMsg = "Bitte geben Sie eine gültige Kontonummer an. Diese muss aus mindestens 4 Zeichen bestehen und darf höchstens 10 Zeichen lang sein.";
                            return false;
                        } else {
                            return true;
                        }
                    } else {
                        if (val.length < 22) {
                            accNumErrorMsg = "Bitte geben Sie eine gültige IBAN an. Diese muss aus 22 Zeichen bestehen.";
                            return false;
                        } else if (val.length > 22) {
                            accNumErrorMsg = "Bitte geben Sie eine gültige IBAN an. Diese darf höchstens 22 Zeichen lang sein.";
                            return false;
                        } else {
                            return true;
                        }
                    }
                }
            },
            message: accNumErrorMsg                         
        };
        
        //Custom handler to apply error class on input elements
        ko.bindingHandlers.validationElement = {
        update: function (element, valueAccessor) {
                var valueIsValid = valueAccessor().isValid();
                if ((!valueIsValid && self.showErrorMessages() === true)) {
                    $(element).addClass("input-error");
                } else {
                    $(element).removeClass("input-error");
                }
            }
        }
        
        ko.validation.registerExtenders();
        
        self.storeErrorCodes = function(data) {
            var errorArr = [];
            if (data.responseText) {
                try {
                    var errorObj = jQuery.parseJSON(data.responseText);
                    if (errorObj != null && errorObj.error) {
                        if (errorObj.error.parameter !== undefined && errorObj.error["parameter"] !== null) {
                            if (errorArr.indexOf(errorObj.error["parameter"]) < 0) {
                                errorArr.push(errorObj.error["parameter"] !== "" ? errorObj.error["parameter"] + "###" + errorObj.error["code"] : "COMMON");                            
                            }
                        }
                    } else if (errorObj != null && errorObj.parameter !== undefined) {
                        if (errorObj.parameter !== undefined && errorObj["parameter"] !== null) {
                            if (errorArr.indexOf(errorObj["parameter"]) < 0) {
                                errorArr.push(errorObj["parameter"] !== "" ? errorObj["parameter"] + "###" + errorObj["code"] : "COMMON");      
                            }
                        }
                    } else if(errorObj != null && errorObj.length >0) {
                        for (var i=0; i<errorObj.length; i++) {
                            if (errorObj[i].parameter !== undefined && errorObj[i]["parameter"] !== null) {
                                if (errorArr.indexOf(errorObj[i]["parameter"]) < 0) {
                                    errorArr.push(errorObj[i]["parameter"] !== "" ? errorObj[i]["parameter"] + "###" + errorObj[i]["code"] : "COMMON");     
                                }
                            }                           
                        }                        
                    }
                } catch(e) {}
            }
            self.errorCodes(errorArr);
        }
        
        self.focusSubmit = function() {
            self.is_ordernow_focused(true);
            var jsSubmit = $('.js-submit.xs-lastStepAction');
            $(window).scrollTo(jsSubmit);
            jsSubmit.focus();
        }
        
        self.handleBackendErrors = function(data) {
            self.storeErrorCodes(data);
            var $targetFormErrorField = $('#ova .error-zone:first');
            $('#ova .input-error:first') && $('#ova .input-error:first').length > 0 ? $('#ova .input-error:first').focus() : "";
            if ($(".lt-ie9").length <= 0 && $targetFormErrorField && $targetFormErrorField.length >0) {
                $(window).scrollTo($targetFormErrorField);
            }
        }
        
        self.init = function () {
        
            ($("span.hashId").length > 0 && $("span.hashId").attr("data-hashid")!='')?self.hashIdForComplete($("span.hashId").attr("data-hashid")):self.hashIdForComplete("");
            //initilaize bootstrap modal
            $('#gridoperators').modal({
                show: false,
                backdrop: 'static',
                keyboard: false
            });
            eonde.Utils.ajaxInit();

            
            //ko.validation.init({decorateInputElement: false}, true);
            //get current date and update today()
            var d = new Date();
            self.showErrorMessages(false);
            var m = Number(d.getMonth()+1);
            var dateStr = d.getFullYear()+"-"+(m>9?m:'0'+m)+"-"+d.getDate();
            self.today(dateStr);
            //get parameters from URL and update view model accordingly
            if(self.hashIdForComplete() === ""){
            try {
                self.productName(decodeURIComponent(QueryString.productName.replace(/\+/g, ' ')));
                self.productType(QueryString.productType);
                self.customerType(QueryString.customerType);
                self.tariffType(QueryString.tariffType);
                self.multiGridOperators(decodeURIComponent(QueryString.multiGridOperators));
                self.percentNt(QueryString.percentNt);
                self.mainNetwork(decodeURIComponent(QueryString.gridOperator));
                // Rene
                self.zipcode(QueryString.zipCode);
                self.city(QueryString.city);
                self.consumption(QueryString.consumption);                
                if(_cscMode.length > 0) {
                    self.isCSCMode(true);
                    if(_cscMode == CSC_MODE_PRODUCT_SWITCH) {
                        self.isPSMode(true);
                    }
                    
                    if(self.isPSMode() == true) {
                        self.is_customer("yes");
                        self.zipcode(decodeURIComponent(QueryString.zipCode));
                        self.city(decodeURIComponent(QueryString.city));
                        self.consumption(decodeURIComponent(QueryString.consumption));
                    } else {
                        self.is_customer("no");
                    }
                }
            } catch (e) {
                $('.ovaOverlay').addClass('hide');
                if($('.ovaOverlay.blankBg')[0]){
                    $('.ovaOverlay.blankBg').remove();
                }
                self.step("error");
                self.pageErrorMode("directpageaccess");
            }
            }
            if(self.isCSCMode() == true) {
                customerJsonString=sessionStorage.getItem(_cscMode+"_customer");
                var customerJSONObject=JSON.parse(customerJsonString);
                self.customerData(customerJSONObject);
                
                if(customerJSONObject.firstname !== undefined) {
                    self.firstname(customerJSONObject.firstname);
                }
                if(customerJSONObject.lastname !== undefined) {
                    self.lastname(customerJSONObject.lastname);
                }
                if(customerJSONObject.salutation !== undefined) {
                    if(customerJSONObject.salutation != "" && self.isPSMode() == true) {
                        self.nonEmptySalutationInCSCData(true);
                    }
                    self.salutation(customerJSONObject.salutation);
                }
                if(customerJSONObject.title !== undefined) {
                    self.title(customerJSONObject.title);
                }
                if(customerJSONObject.email !== undefined) {
                    self.email(customerJSONObject.email);
                }
                if(customerJSONObject.phone !== undefined) {
                    self.phone(customerJSONObject.phone);
                }
                if(customerJSONObject.birthday !== undefined) {
                    if(customerJSONObject.birthday != "" && self.isPSMode() == true) {
                        self.nonEmptyBirthdayInCSCData(true);
                    }
                    self.birthday(customerJSONObject.birthday);
                }
                if(customerJSONObject.street !== undefined) {
                    self.street(customerJSONObject.street);
                }
                if(customerJSONObject.street_number !== undefined) {
                    self.street_number(customerJSONObject.street_number);
                }
                if(customerJSONObject.last_customer_id !== undefined) {
                    self.last_customer_id(customerJSONObject.last_customer_id);
                }
                if(customerJSONObject.meter_number!== undefined) {
                    self.meter_number(customerJSONObject.meter_number);
                }
                if(customerJSONObject.present_account!== undefined) {
                    self.present_account(customerJSONObject.present_account);
                }
                if(customerJSONObject.product_old !== undefined) {
                    self.product_old(customerJSONObject.product_old);
                }
                if(customerJSONObject.street_old!== undefined) {
                    self.street_old(customerJSONObject.street_old);
                }
                if(customerJSONObject.move_out_date!== undefined) {
                    self.move_out_date(customerJSONObject.move_out_date);
                }
                if(customerJSONObject.street_number_old !== undefined) {
                    self.street_number_old(customerJSONObject.street_number_old);
                }
                if(customerJSONObject.zipcode_old!== undefined) {
                    self.zipcode_old(customerJSONObject.zipcode_old);
                }
                if(customerJSONObject.city_old!== undefined) {
                    self.city_old(customerJSONObject.city_old);
                }
                
            }
            
            if(self.isCSCMode() == true && self.isPSMode() == false) {
                self.type_request("is_new_entry");
            } else {
                self.type_request("is_alternation_to_eon");
            }
            if (self.customerType() === "pk") {
                self.ovaErrorMessages(pkErrorMessages);
            } else if (self.customerType() === "gw") {
                self.ovaErrorMessages(gwErrorMessages);
            }
            //Set product type in Local Storage
            eonde.Utils.setIStorageValue(self.customerType() + "[productType]", self.productType() );
            self.applyValidations();
			//Populate zip, city and consumption values from local storage based on customer type
			//self.consumption(eonde.Utils.getIStorageValue(self.customerType() + "[consumption][" + self.productType() + "]",''));
			//self.zipcode(eonde.Utils.getIStorageValue(self.customerType() + "[zip]",''));
			//self.city(eonde.Utils.getIStorageValue(self.customerType() + "[city]",''));
            // Rene - Put data into localStorage instead of reading it the get this running
			eonde.Utils.setIStorageValue(self.customerType() + "[consumption][" + self.productType() + "]",self.consumption());
			eonde.Utils.setIStorageValue(self.customerType() + "[zip]",self.zipcode());
			eonde.Utils.setIStorageValue(self.customerType() + "[city]",self.city());                
            
            //Populate zip, city and consumption values from local storage based on customer type only and only if end user 
            if(self.isCSCMode() == false || self.isPSMode() == false) {
                self.consumption(eonde.Utils.getIStorageValue(self.customerType() + "[consumption][" + self.productType() + "]",''));
                self.zipcode(eonde.Utils.getIStorageValue(self.customerType() + "[zip]",''));
                self.city(eonde.Utils.getIStorageValue(self.customerType() + "[city]",''));
            }
            
   
            //Redirect to error page in case zip code or city or consumption is not present in local storage
            if (self.hashIdForComplete() === '' && (self.zipcode() === '' || self.city() === '')) {
                console.log("Error");
                self.step("error");
                self.pageErrorMode("directpageaccess");
                $('.ovaOverlay').addClass('hide');
                if($('.ovaOverlay.blankBg')[0]){
                    $('.ovaOverlay.blankBg').remove();
                }
                return;
            }
            
            //if gridOperator flag is true in the URL then the user has to select a previous supplier in a modal dialog
            //otherwise we can call the getToken function directly
            if (self.step() !== "error" && self.hashIdForComplete() === "") {
                if (self.multiGridOperators() === "true") {
                    self.getGridOperators();
                } else {
                    self.getToken();
                }
            }
            else if(self.step() !="error" && self.hashIdForComplete() != ""){
                self.completeForm();
            }
            
            $("#delivery-from-date-field").focus(function(e) {
                self.delivery_from("Vertragsbeginn zum");
                $("#delivery-from-begin").trigger("change");
                $("label[for=delivery-from-next]").removeClass("checkedInput");
            });

            jQuery("#ova #birth, #ova .js-date").keypress(function (e) {
                var keys = [9, 13, 35, 188, 59],
                    i = $.inArray(e.which, keys) > 0 ? true : false;//keys.indexOf(e.which) >= 0 ? true : false;
                !e.which ||e.which===8 || e.which >= 44 && 57 >= e.which || i || e.preventDefault();
            });
            
            $('#ova input[type=checkbox]').keydown(function(e){      
               //check if the pressed key is Spacebar
               //then trigger the click() on the inner span to toggle the checkbox
               var thisObj = $(this);
               if(e.keyCode == 32){
                    if(!(thisObj).next("label").hasClass('readonlylabel')){
                        if((thisObj).next("label").hasClass('checkedInputCheckbox')){
                            thisObj.next("label").removeClass('checkedInputCheckbox');
                        }
                        else {
                            thisObj.next("label").addClass('checkedInputCheckbox');
                        }
                    } else {
                        return false;
                    }
               }
            });
            self.updateDateFields();
        };
        
        /*
        @private trackOVATransaction - used to send the transaction data to Google Tag Manager
        @param products - products data returned as response from the /contract service which contains
        *   data relevant to the product(s)
        */
        self.trackOVATransaction = function(products, contractId) {
            if (typeof dataLayer != 'undefined') {
                dataLayer.push({
                    'event': 'Transaktion',
                    'transactionId': contractId,
                    'transactionTotal': self.is_customer() == "no" ? products.newCustomer.currentProduct.allRoundPriceYearVatEuroRounded : products.signedCustomer.currentProduct.allRoundPriceYearVatEuroRounded,
                    'transactionTax': self.is_customer() == "no" ? (products.newCustomer.currentProduct.allRoundPriceYearVatEuroRounded - products.newCustomer.currentProduct.allRoundPriceYearNetEuroRounded) : (products.signedCustomer.currentProduct.allRoundPriceYearVatEuroRounded - products.signedCustomer.currentProduct.allRoundPriceYearNetEuroRounded),
                    'transactionShipping': '0.0',
                    'transactionZip': self.zipcode(),
                    'transactionCountry': 'Deutschland',
                    'ovaVG': products.areaInformation.distributor,
                    'ovaVoranbieter': self.last_supplier(),
                    'ovaKwh': eonde.Utils.getIStorageValue(self.customerType() + "[consumption][" + self.productType() + "]", ""),
                    'ovaKundentyp': self.is_customer() == "no" ? "Neukunde" : "Bestandskunde",
                    'transactionProducts': [
                        {
                            'sku': products.productInformation.productId,
                            'name': products.productInformation.productName,
                            'category': self.productType(),
                            'price': self.is_customer() == "no" ? parseFloat(self.parseMeterReading(products.newCustomer.currentProduct.workingPriceNetCentRounded)/100).toFixed(4) : parseFloat(self.parseMeterReading(products.signedCustomer.currentProduct.workingPriceNetCentRounded)/100).toFixed(4), //round in Euro (currently in cent)
                            'quantity': self.parseMeterReading(eonde.Utils.getIStorageValue(self.customerType() + "[consumption][" + self.productType() + "]", ""))
                        },
                        {
                            'sku': products.productInformation.productId + "_G",
                            'name': products.productInformation.productName + " Grundpreis",
                            'category': self.productType(),
                            'price': self.is_customer() == "no" ? products.newCustomer.currentProduct.basicPriceNetEuroRounded : products.signedCustomer.currentProduct.basicPriceNetEuroRounded,
                            'quantity': '1'
                        },
                        {
                            'sku': products.productInformation.productId + "_B",
                            'name': products.productInformation.productName + " Bonus",
                            'category': self.productType(),
                            'price': self.is_customer() == "no" ? products.newCustomer.bonusNetEuroRounded : products.signedCustomer.bonusNetEuroRounded, 
                            'quantity': '1'
                        }
                    ]
                });
            }
        }
        
        self.openDisclaimer = function() {
            $('#modalDisclaimerOverlay').modal('show');
            if($(window).width() > 767) {
                $('#modalDisclaimerOverlay .modal-body').slimScroll({
                    height: overlayHeight,
                    railVisible: true,
                    alwaysVisible: true,
                    railColor: '#5d5d5d',
                    color: '#969696',
                    size: '10px',
                    distance: '13px',
                    opacity: 1
                    
                });
            }
        }
        
        /*
        @private trackOVAErrors - used to send the error data to Google Tag Manager, this is done for each
        * field of the all the steps of the form when their validation fails
        */
        self.trackOVAErrors = function() {
            if (typeof dataLayer != 'undefined' && dataLayer != null) {
                //Step 1 Error Tracking
                if (!self.company.isValid()) {
                    eonde.Utils.trackFormErrorEvent("OVA", "ERR_COMPANY", "1");
                }
                if (!self.salutation.isValid()) {
                    eonde.Utils.trackFormErrorEvent("OVA", "ERR_SALUTATION" + (self.customerType() == "gw" ? "_GM" : "" ), "1");
                }
                if (!self.firstname.isValid()) {
                    eonde.Utils.trackFormErrorEvent("OVA", "ERR_FIRSTNAME" + (self.customerType() == "gw" ? "_GM" : "" ), "1");
                }
                if (!self.lastname.isValid()) {
                    eonde.Utils.trackFormErrorEvent("OVA", "ERR_LASTNAME" + (self.customerType() == "gw" ? "_GM" : "" ), "1");
                }
                if (!self.email.isValid()) {
                    eonde.Utils.trackFormErrorEvent("OVA", "ERR_EMAIL", "1");
                }
                if (!self.birthday.isValid()) {
                    eonde.Utils.trackFormErrorEvent("OVA", "ERR_BIRTHDAY" + (self.customerType() == "gw" ? "_GM" : "" ), "1", "TT.MM.JJJJ");
                }
                if (!self.salutation_co.isValid()) {
                    eonde.Utils.trackFormErrorEvent("OVA", "ERR_SALUTATION_CO", "1");
                }
                if (!self.firstname_co.isValid()) {
                    eonde.Utils.trackFormErrorEvent("OVA", "ERR_FIRSTNAME_CO", "1");
                }
                if (!self.lastname_co.isValid()) {
                    eonde.Utils.trackFormErrorEvent("OVA", "ERR_LASTNAME_CO", "1");
                }
                if (!self.street.isValid()) {
                    eonde.Utils.trackFormErrorEvent("OVA", "ERR_STREET", "1");
                }
                if (!self.street_number.isValid()) {
                    eonde.Utils.trackFormErrorEvent("OVA", "ERR_STREET_NUMBER", "1");
                }
                if (!self.is_customer.isValid()) {
                    eonde.Utils.trackFormErrorEvent("OVA", "ERROR_QUESTION_CUSTOMER", "1");
                } 
                if (!self.billing_zipcode.isValid()) {
                    eonde.Utils.trackFormErrorEvent("OVA", "ERR_BILLING_ZIPCODE", "1");
                }
                if (!self.billing_city.isValid()) {
                    eonde.Utils.trackFormErrorEvent("OVA", "ERR_ADDRESS_CITY", "1");
                }
                if (!self.billing_street.isValid()) {
                    eonde.Utils.trackFormErrorEvent("OVA", "ERR_ADDRESS_POB", "1");
                }
                if (!self.billing_street_number.isValid()) {
                    eonde.Utils.trackFormErrorEvent("OVA", "ERR_STREET_NUMBER", "1");
                }
                //Partner error tracking
                if (!self.partnerInputField1.isValid()) {
                    var errorCode = 'ERR_'+$('input#partnerInputField1').attr('name').toUpperCase();
                    eonde.Utils.trackFormErrorEvent("OVA", errorCode, "1");
                }
                if (!self.partnerInputField2.isValid()) {
                    var errorCode = 'ERR_'+$('input#partnerInputField2').attr('name').toUpperCase();
                    eonde.Utils.trackFormErrorEvent("OVA", errorCode, "1");
                }
                if (!self.partnerCheckboxField.isValid()) {
                    var errorCode = 'ERR_'+$('input#partnerCheckboxField').attr('name').toUpperCase();
                    eonde.Utils.trackFormErrorEvent("OVA", errorCode, "1");
                }
                if (!self.partnerSelectField.isValid()) {
                    var errorCode = 'ERR_'+$('select#partnerSelectField').attr('name').toUpperCase();
                    eonde.Utils.trackFormErrorEvent("OVA", errorCode, "1");
                }
                if (!self.partnerRadioButton.isValid()) {
                    var errorCode = 'ERR_'+$('input#radiobuttons_1').attr('name').toUpperCase();
                    eonde.Utils.trackFormErrorEvent("OVA", errorCode, "1");
                }
                
                //Step 2 Error Tracking
                if (!self.termination_date.isValid()) {
                    eonde.Utils.trackFormErrorEvent("OVA", "ERR_TERMINATION_DATE", "2", "TT.MM.JJJJ");
                }
                if (!self.delivery_from_date_field.isValid()) {
                    eonde.Utils.trackFormErrorEvent("OVA", "ERR_DELIVERY_DATE", "2", "TT.MM.JJJJ");
                }
                if (!self.entry_at.isValid()) {
                    eonde.Utils.trackFormErrorEvent("OVA", "ERR_DELIVERY_FROM", "2", "TT.MM.JJJJ");
                }
                if (!self.last_supplier.isValid()) {
                    eonde.Utils.trackFormErrorEvent("OVA", "ERR_LAST_SUPPLIER", "2");
                }
                if (!self.last_customer_id.isValid()) {
                    eonde.Utils.trackFormErrorEvent("OVA", "ERR_LAST_SUPPLIER_ID", "2");
                }
                if (!self.meter_number.isValid()) {
                    eonde.Utils.trackFormErrorEvent("OVA", "ERR_METER_NUMBER", "2");
                }
                if (!self.is_authorisation_cancelation_checked.isValid()) {
                    eonde.Utils.trackFormErrorEvent("OVA", "ERR_AUTHORISATION_DISCLAIMER", "2");
                }                           
                
                //Step 3 Error Tracking
                if (!self.account_number.isValid()) {
                    if (!jQuery.isNumeric(self.account_number())) {
                        eonde.Utils.trackFormErrorEvent("OVA", "ERR_IBAN_FALSE", "3");
                    }
                    
                    if (!jQuery.isNumeric(self.account_number()) && self.account_number().length < 22) {
                        eonde.Utils.trackFormErrorEvent("OVA", "ERR_IBAN_SHORT", "3");
                    }
                    
                    if (!jQuery.isNumeric(self.account_number()) && self.account_number().length > 22) {
                        eonde.Utils.trackFormErrorEvent("OVA", "ERR_IBAN_LONG", "3");
                    }
                    
                    if (jQuery.isNumeric(self.account_number()) && (self.account_number().length < 4 || self.account_number().length > 10)) {
                        eonde.Utils.trackFormErrorEvent("OVA", "ERR_ACCOUNT_NUMBER_FORMAT", "3");
                    }
                }
                if (!self.bank_code.isValid()) {
                    eonde.Utils.trackFormErrorEvent("OVA", "ERR_BANK_CODE", "3");
                }
                if (!self.is_directdebit_authorisation_checked.isValid()) {
                    eonde.Utils.trackFormErrorEvent("OVA", "ERR_DIRECTDEBIT_AUTHORISATION", "3");
                }
                
                //Step 4 Error Tracking
                if (!self.confirmation_ordering_conditions_checked.isValid()) {
                    eonde.Utils.trackFormErrorEvent("OVA", "ERR_CONFIRMATION_ORDERING_CONDITIONS", "4");
                }
                /*if (!self.confirmation_agb_checked.isValid()) {
                    eonde.Utils.trackFormErrorEvent("OVA", "ERR_CONFIRMATION_AGB", "4");
                }
                if (!self.confirmation_disclaimer_checked.isValid()) {
                    eonde.Utils.trackFormErrorEvent("OVA", "ERR_CONFIRMATION_DISCLAIMER", "4");
                }*/
                if (!self.confirmation_data_checked.isValid()) {
                    eonde.Utils.trackFormErrorEvent("OVA", "ERR_CONFIRMATION_DATA", "4");
                }
                
            }
        }
        
        self.updateNewProduct = function(productObj) {
            var result = productObj;
            if (productObj && productObj !== null && productObj.newCustomer) {
                if (productObj.newCustomer.newProduct) {
                    result.newCustomer.currentProduct = productObj.newCustomer.newProduct;
                }
            }
            if (productObj && productObj !== null && productObj.signedCustomer) {
                if (productObj.signedCustomer.newProduct) {
                    result.signedCustomer.currentProduct = productObj.signedCustomer.newProduct;
                }
            }
            return result;
        }
        
        getStreets = function (searchTerm, callback) {
            var streetsURL = streetsServiceURL+'clientId=eonde&zipCode=' + self.zipcode() + '&streetName=' + encodeURIComponent(searchTerm);
            eonde.Utils.trackVirtualPageCall("/streets");
            $.ajax({
                beforeSend: function(xhr) {
                    xhr.setRequestHeader('Authorization', authorizationHeaderVal);
                },
                dataType: "json",
                type : 'GET',
                url:  streetsURL
                }).done(callback).fail(function(data) {
                    self.clearErrorZones();
                    self.showErrorMessages(false);
                    self.handleBackendErrors(data);
                    $('.ui-autocomplete-loading').removeClass("ui-autocomplete-loading");
                });
                
        };
        
        getBillingStreets = function (searchTerm, callback) {
            
            eonde.Utils.trackVirtualPageCall("/streets");
            $.ajax({
                beforeSend: function(xhr) {
                    xhr.setRequestHeader('Authorization', authorizationHeaderVal);
                },
                dataType: "json",
                type : 'GET',
                url:  streetsServiceURL+'clientId=eonde&zipCode=' + self.billing_zipcode() + '&streetName=' + encodeURIComponent(searchTerm)
                }).done(callback).fail(function(data) {
                    self.clearErrorZones();
                    self.showErrorMessages(false);
                    self.handleBackendErrors(data);
                    $('.ui-autocomplete-loading').removeClass("ui-autocomplete-loading");
                });
                
        };
        
        self.getGridOperators = function (searchTerm, response) {
            $(".ovaOverlay").removeClass("hide");
            eonde.Utils.trackVirtualPageCall("/gridoperators");
            var gridOperatorsServiceURL = gridOperatorsURL+'clientId=eonde&zipCode='+self.zipcode()+'&city='+self.city();
            $.ajax({
                beforeSend: function(xhr) {
                    xhr.setRequestHeader('Authorization', authorizationHeaderVal);
                },
                dataType: "json",
                type: 'GET',
                url: gridOperatorsServiceURL,
                autoFocus: true
            }).done( function(data) {
                $(".ovaOverlay").addClass("hide");
                $('#ovaLoading').removeClass('visible');
                self.clearErrorZones();
                if (data != null) {
                    self.gridOperators (data);
                    $('#gridoperators').modal('show');
                    //$('#hdnGridOpsBtn').trigger('click');
                }
            }).fail(function(data) {
                $(".ovaOverlay").addClass("hide");
                $('#ovaLoading').removeClass('visible');
                self.showErrorMessages(false);
                self.handleBackendErrors(data);
            });
        };
        
        //after having all necessary information call the offer service to fixate the offer and get the tokenId
        self.getToken = function () {
            
            //skip for now as the offer service is not yet available
            //getOffer();
            //return;
            $(".ovaOverlay").removeClass("hide");   
        var requestURL;   
        
        if(self.isCSCMode() == true) {
            requestURL=cscModeOffersServiceURL+"mode="+_cscMode+"&";
        } else {
            requestURL=offersServiceURL;
        }       
        requestURL = requestURL+'clientId='+clientId+'&zipCode='+self.zipcode()+'&city='+ encodeURIComponent(self.city()) + '&productName='+encodeURIComponent(self.productName())+'&productType='+self.productType()+'&consumption='+self.consumption()+'&customerType='+self.customerType()+'&tariffType='+self.tariffType();
            if (self.multiGridOperators() === 'true') {
                requestURL += '&gridOperator='+encodeURIComponent(self.gridOperator());
            }
            if (self.percentNt() !== undefined && self.percentNt() !== "") {
                requestURL += '&percentNt='+self.percentNt();
            }
            
            eonde.Utils.trackVirtualPageCall("/offer");
            var requestType="GET";
            var jsonData={};
            if(self.isCSCMode() == true) {
                requestType="POST";
                jsonData=JSON.stringify({data : sessionStorage.getItem(_cscMode+"_customer"+ "_encrypted") });
            }
            $.ajax({
                beforeSend: function(xhr) {
                    xhr.setRequestHeader('Authorization', authorizationHeaderVal);
                },
                contentType: "application/json; charset=utf-8",
                data: jsonData,
                dataType: "json",
                type: requestType,
                url: requestURL,
                autoFocus: true
            }).done( function(data) {
                $(".ovaOverlay").addClass("hide");
                $('#ovaLoading').removeClass('visible');
                self.clearErrorZones();
                if (data != null && data.tokenId != null) {
                    self.tokenId (data.tokenId);
                    $('#gridoperators').modal('hide');
                    getOffer();
                }
            }).fail(function(data) {
                $(".ovaOverlay").addClass("hide"); 
                $('#ovaLoading').removeClass('visible');
                self.showErrorMessages(false);
                self.handleBackendErrors(data);
            });
        };
        
        //completion form service call and page render
        self.completeForm = function () {
            self.step("6");
            
            $(".ovaOverlay").removeClass("hide");
            $('#ovaLoading').addClass('visible');
            
            var requestURL = completeFormServiceURL+'clientId='+clientId+'&hashId='+self.hashIdForComplete();
                      
            eonde.Utils.trackVirtualPageCall("/complete");
            
            $.ajax({
                beforeSend: function(xhr) {
                    xhr.setRequestHeader('Authorization', authorizationHeaderVal);
                },
                dataType: "json",
                type: 'GET',
                url: requestURL,
                autoFocus: true
            }).done( function(data) {
                $(".ovaOverlay").addClass("hide");
                $('#ovaLoading').removeClass('visible');
                self.clearErrorZones();
                if (data != null) {
                    if($.inArray("t_a_e_last_supplier",data.missingFields)!==-1){
                        self.t_a_e_last_supplier_complete("1")
                    }
                    if($.inArray("t_a_e_last_customer_id",data.missingFields)!==-1){
                        self.t_a_e_last_customer_id_complete("1");
                    }
                    if($.inArray("t_a_meter_number",data.missingFields)!==-1){
                        self.t_a_meter_number_complete("1");
                    }
                    if($.inArray("t_a_e_meter_number",data.missingFields)!==-1){
                        self.t_a_e_meter_number_complete("1");
                    }
                    if($.inArray("n_e_meter_number",data.missingFields)!==-1){
                        self.n_e_meter_number_complete("1");
                    }
                    if($.inArray("f_e_meter_number",data.missingFields)!==-1){
                        self.f_e_meter_number_complete("1");
                    }
                    if($.inArray("t_a_present_account",data.missingFields)!==-1){
                        self.t_a_present_account_complete("1");
                    }
                    self.completeProductType(data.flags["productType"]);
                    self.completeTariffType(data.flags["tariffType"]);
                }
            }).fail(function(data) {
                $(".ovaOverlay").addClass("hide"); 
                $('#ovaLoading').removeClass('visible');
                self.showErrorMessages(false);
                self.handleBackendErrors(data);
                if (data.responseText) {
                    var errorObj = jQuery.parseJSON(data.responseText);
                    var errorCodeCompletion = new Array();
                    if (errorObj != null && errorObj.error) {
                        errorCodeCompletion.push(errorObj.error["code"]);
                    }else if (errorObj != null && errorObj.code) {
                        errorCodeCompletion.push(errorObj["code"]);
                    }else if(errorObj != null && errorObj.length >0) {
                        for (var i=0; i<errorObj.length; i++) {
                            errorCodeCompletion.push(errorObj[i]["code"]);
                        }
                    }
                    if($.inArray("ERR_INVALID_CONTRACT_HASH",errorCodeCompletion)!=-1 || $.inArray("ERR_CONTRACT_DEADLINE_REACHED",errorCodeCompletion)!=-1){
                        self.contractHashError("1");
                        self.step("error");
                    }
                    if($.inArray("ERR_CONTRACT_ALREADY_COMPLETED",errorCodeCompletion)!=-1){
                        self.contractHashCompleted("1");
                        self.step("error");
                    }
                }
            });
        };
        
        getOffer = function () {
            
        var requestURL;
        
        if(self.isCSCMode() == true) {
            requestURL=cscModeOffersServiceURL+"mode="+_cscMode+"&";
        } else {
            requestURL=offersServiceURL;
        }
            requestURL= requestURL+'clientId='+clientId+'&tokenId=' + self.tokenId();
            $(".ovaOverlay").removeClass("hide");
            $('#ovaLoading').addClass('visible');
            eonde.Utils.trackVirtualPageCall("/offer/{" + self.tokenId() + "}");
            var requestType="GET";
            var jsonData={};
            
            if(self.isCSCMode() == true) {
                requestType="POST";     
                jsonData=JSON.stringify({data : sessionStorage.getItem(_cscMode+"_customer"+ "_encrypted") });
            }
            $.ajax({
                beforeSend: function(xhr) {
                    xhr.setRequestHeader('Authorization', authorizationHeaderVal);
                },
                contentType: "application/json; charset=utf-8",
                data:jsonData,
                dataType: "json",
                type: requestType,
                url: requestURL,
                autoFocus: true
            }).done( function(data) {
                $(".ovaOverlay").addClass("hide");
                $('#ovaLoading').removeClass('visible');
                if($('.ovaOverlay.blankBg')[0]){
                    $('.ovaOverlay.blankBg').remove();
                }
                self.clearErrorZones();
                if (data != null ) {
                    //data should be the complex datatype "ProductAdvisor"
                    //use it to populate details in the upper right corner
                    self.hasConsumptionClusters = ko.computed(function() {
                        if (data.products) {
                            return data.products.blockPrices !== undefined;
                        }
                        return false;
                    });
                    self.product = ko.computed(function () {
                        if (data) {
                            var productObj = data.products;
                            var result = {};
                            if (self.is_customer() === 'no') {
                                result = productObj.newCustomer;
                            } else if (self.is_customer() === 'yes') {
                                result = productObj.signedCustomer;
                            } else {
                                result = productObj.newCustomer;
                            }
                            return result;
                        }
                        return {};
                    }); 
                    
                    self.products(self.updateNewProduct(data.products));

                    self.footnotes(data.footnotes);
                    self.footnotesArr(data.footnotes);
                    self.distributorInformation_servicePhone(data.products.distributorInformation.servicePhoneNum);
                    self.distributorInformation_serviceSchedule(data.products.distributorInformation.serviceSchedule);
                    if(data.products === undefined || data.products.areaInformation === undefined) {
                        self.regionalized(false);
                    }
                    infoIcon();
                }
            }).fail(function(data) {
                $(".ovaOverlay").addClass("hide");
                $('#ovaLoading').removeClass('visible');
                self.showErrorMessages(false);
                self.handleBackendErrors(data);
            });
            
        };
        
        self.openKnockOutlink = function (urlString) {
            
            if (urlString != null && urlString != undefined) {
                if(urlString.indexOf("http://") == -1){
                    urlString='http://'+urlString;
                }
                window.location=urlString;
            }
        }
        
        self.company.subscribe(function(company) {
            self.billing_company(company);
        });
        
        self.billing_zipcode.subscribe(function(zipCode) {
            if (zipCode && zipCode.length >= 5) {
                $('#zip-alt').blur();
                eonde.Utils.trackVirtualPageCall("/zipcodes");
                $(".ovaOverlay").removeClass("hide");
                var $altCityLabel = $(".city-alt-div label");
                var $altCityInput = $(".city-alt-div input");
                $.ajax({
                    beforeSend: function(xhr) {
                        xhr.setRequestHeader('Authorization', authorizationHeaderVal);
                    },
                    dataType: "json",
                    type: 'GET',
                    url: zipCodesURL+'clientId=eonde&zipCode='+zipCode,
                    autoFocus: true
                }).done( function(data) {
                   $(".ovaOverlay").addClass("hide");
                    self.clearErrorZones();
                    if (data != null && data != undefined && data.zipCodes && data.zipCodes.length > 0) {
                        //billing_city(data);
                        var cities = data.zipCodes[0].cities;
                        if (cities != undefined && cities != null && cities.length > 0) {
                            if (cities.length > 1) {
                                self.billing_cities(cities);
                                window.setTimeout(function(){
                                    $("select:not(.no-custom-dd)").trigger("chosen:updated");
                                }, 10);
                            } else {
                                self.billing_cities([]);
                            }
                            self.billing_city(cities[0]);
                        } else {
                            self.billing_city("");
                            self.billing_cities([]);
                            self.billing_street("");
                            self.billing_street_number("");
                        }
                        if ($altCityLabel.hasClass("disabled")) {
                            $altCityLabel.removeClass("disabled");
                            $altCityInput.prop('disabled', false);
                        }
                    } else {
                        self.billing_city("");
                        self.billing_cities([]);
                        self.billing_street("");
                        self.billing_street_number("");
                        self.clearErrorZones();
                        self.showErrorMessages(false);
                        self.errorCodes.push("zipCode###ERR_ZIPCODE_INVALID");
                        //Disabled city field in case no city returned by service
                        if (!$altCityLabel.hasClass("disabled")) {
                            $altCityLabel.addClass("disabled");
                            $altCityInput.prop('disabled', true);
                        }
                    }
                }).fail(function(data) {
                    self.clearErrorZones();
                    $(".ovaOverlay").addClass("hide");
                    self.showErrorMessages(false);
                    self.handleBackendErrors(data);
                    self.billing_city("");
                    self.billing_cities([]);
                    self.billing_street("");
                    self.billing_street_number("");
                    if (data.status == 400) {
                        //Disabled city field in case there is input validation error from backend
                        if (!$altCityLabel.hasClass("disabled")) {
                            $altCityLabel.addClass("disabled");
                            $altCityInput.prop('disabled', true);
                        }
                    } else {
                        //Enabled city field in case there is server error so that user can enter manually
                        if ($altCityLabel.hasClass("disabled")) {
                            $altCityLabel.removeClass("disabled");
                            $altCityInput.prop('disabled', false);
                        }
                    }
                });
            }           
        });
        
        self.parseMeterReading = function(val) {
            if (val != "") {
                var type = $('.locale').attr('data-attr'),
                    dec = type === 'de' ? ',' : '.',
                    tho = type === 'de' ? '.' : ',',
                    thoRegex = new RegExp('\\' + tho, 'g'), decRegex = new RegExp('\\' + dec, 'g');
                val = val.replace(thoRegex, '');
                return val.replace(decRegex, '\.'); 
            } else {
                return "";
            }
        }
        
        self.formatConsumption = function(nStr) {
            if(nStr && nStr != null) {
                nStr=nStr.toString().replace(/[\.]/g,'');
                var type = $('.locale').attr('data-attr'),
                    dec = type === 'de' ? ',' : '.',
                    tho = type === 'de' ? '.' : ',',
                    sep = tho;
                    nStr+='';
                    var x = nStr.split(dec),
                    x1 = x[0],
                    x2 = null,
                    rgx = /(\d+)(\d{3})/;
                if (x.length > 1) {
                    x2 = x[1];

                }
                while (rgx.test(x1)) {
                    x1 = x1.replace(rgx, '$1' + sep + '$2');
                }
                if (x2 !== null && x2!=="") {
                  x1 += dec + x2;
                }
                return x1;
            } else {
                return "";
            }
        }
        self.consumption_display = ko.computed(function(value) {
                return self.formatConsumption(self.consumption());
            }, this
        );
        
        self.billing_city.subscribe(function(city) {
            var $altStreetLabel = $(".js-alt-street label");
            var $altStreetInput = $(".js-alt-street input");
            if (city != null && city != "" && $.trim(city) != "") {
                if ($altStreetLabel.hasClass("disabled")) {
                    $altStreetLabel.removeClass("disabled");
                    $altStreetInput.prop('disabled', false);
                    window.setTimeout(function(){
                        $("select:not(.no-custom-dd)").trigger("chosen:updated");
                    }, 10);
                }
            } else {
                if (!$altStreetLabel.hasClass("disabled")) {
                    $altStreetLabel.addClass("disabled");
                    $altStreetInput.prop('disabled', true);
                }
            }
        });
        
        self.applyValidations = function() {
            //Validations for all the fields
            self.salutation.extend({
                required: {onlyIf: function () { return (self.step() == "1"); }, message: self.ovaErrorMessages()["salutation"]}
            });
            self.firstname.extend({
                required: {onlyIf: function () { return (self.step() == "1"); }, message: self.ovaErrorMessages()["firstName"]}
            });
            self.lastname.extend({
                required: {onlyIf: function () { return (self.step() == "1"); }, message: self.ovaErrorMessages()["lastName"]}
            });
            
            self.salutation_co.extend({
                required: {onlyIf: function () { return (self.step() == "1" && self.contact_person() == "yes"); }, message: "Bitte wählen Sie eine Anrede für den/die Ansprechpartner(in) aus."}
            });
            self.firstname_co.extend({
                required: {onlyIf: function () { return (self.step() == "1" && self.contact_person() == "yes"); }, message: "Um Ihren Auftrag bearbeiten zu können, geben Sie den Vornamen ein."}
            });
            self.lastname_co.extend({
                required: {onlyIf: function () { return (self.step() == "1" && self.contact_person() == "yes"); }, message: "Um Ihren Auftrag bearbeiten zu können, geben Sie den Nachnamen ein."}
            });
            
            self.company.extend({
                required: {onlyIf: function () { return (self.step() == "1" && self.customerType() == "gw"); }, message: "Bitte geben Sie einen Firmennamen an."}
            });
            
            self.birthday.extend({
                required: {onlyIf: function () { return (self.step() == "1"); }, message: self.ovaErrorMessages()["birthdate"]}
            });
            
            self.email.extend({
                required: {onlyIf: function () { return (self.step() == "1"); }, message: "Bitte geben Sie eine gültige E-Mail-Adresse ein."},
                email: {onlyIf: function () { return (self.step() == "1"); }, message: "Bitte geben Sie eine gültige E-Mail-Adresse ein."}
            });
            self.street.extend({
                required: {onlyIf: function () { return (self.step() == "1"); }, message: "Bitte geben Sie Ihre Straße an."}
            });
            self.street_number.extend({
                required: {onlyIf: function () { return (self.step() == "1"); }, message: "Bitte geben Sie Ihre Hausnummer an."}
            });
            self.present_account.extend({
                required: {onlyIf: function () { return ((self.step() == "2" && self.is_customer() === "yes" && (self.present_account_validation() == "0" || self.present_account_validation() == "1")) || (self.hashIdForComplete() !='' && self.step() == "6" && self.t_a_present_account_complete() == '1') && self.isCSCMode() == true ); }, message: "Bitte geben Sie Ihr bisheriges Vertragskonto an."},
                minLength: {params: 12, onlyIf: function () { return ((self.step() == "2" && self.is_customer() === "yes" && (self.present_account_validation() == "0" || self.present_account_validation() == "1")) || (self.hashIdForComplete() !='' && self.step() == "6" && self.t_a_present_account_complete() == '1')); }, message: "Bitte geben Sie eine gültige Vertragskontonummer an. Diese darf höchstens aus 12 Zeichen bestehen, muss mit 23, 24, 27 oder 28 beginnen und darf keine Leerzeichen enthalten."},
                pattern: {params: /^(23|24|27|28)\d*/, onlyIf: function () { return ((self.step() == "2" && self.is_customer() === "yes" && (self.present_account_validation() == "0" || self.present_account_validation() == "1")) || (self.hashIdForComplete() !='' && self.step() == "6" && self.t_a_present_account_complete() == '1')); }, message: "Bitte geben Sie eine gültige Vertragskontonummer an. Diese darf höchstens aus 12 Zeichen bestehen, muss mit 23, 24, 27 oder 28 beginnen und darf keine Leerzeichen enthalten."}
            });
            self.meter_number.extend({
                required: {onlyIf: function () { return ((self.step() == "2" || (self.hashIdForComplete() !='' && self.step() == "6" && (self.t_a_meter_number_complete() == '1' || self.t_a_e_meter_number_complete() == '1' || self.n_e_meter_number_complete() == '1' || self.f_e_meter_number_complete() == '1'))) && (self.meter_number_validation() == "0" || self.meter_number_validation() == "1") || (self.step() == "2" && self.isCSCMode() == true ) ); }, message: "Bitte geben Sie die Zählernummer an."}
            });
            self.present_meter_reading.extend({
                pattern : {params: /^[0-9.,]+$/, onlyIf: function () { return (self.step() == "2"); }, message : "Bitte geben Sie den aktuellen Zählerstand im richtigen Format ein, z.B. 1234 oder 1234,567."}
            });
            self.present_meter_reading_nt.extend({
                pattern : {params: /^[0-9.,]+$/, onlyIf: function () { return (self.step() == "2"); }, message : "Bitte geben Sie den aktuellen Zählerstand Niedertarifzeit (NT) im richtigen Format ein, z.B. 1234 oder 1234,567."}
            });
            self.present_meter_reading_ht.extend({
                pattern : {params: /^[0-9.,]+$/, onlyIf: function () { return (self.step() == "2"); }, message : "Bitte geben Sie den aktuellen Zählerstand Hochtarifzeit (HT) im richtigen Format ein, z.B. 1234 oder 1234,567."}
            });
            self.last_supplier.extend({
                required: {
            onlyIf: function () { return ((self.is_customer() === "no" && self.step() == "2" && self.type_request() === 'is_alternation_to_eon' && (self.last_supplier_validation() == "0" || self.last_supplier_validation() == "1")) || (self.hashIdForComplete() !='' && self.step() == "6" && self.t_a_e_last_supplier_complete() == '1')); },
                    message: "Bitte geben Sie Ihren bisherigen Versorger an."
                }
            });
            self.last_customer_id.extend({
                required: {
            onlyIf: function () { return ((self.is_customer() === "no" && self.step() == "2" && self.type_request() === 'is_alternation_to_eon' && (self.last_customer_id_validation() == "0" || self.last_customer_id_validation() == "1")) || (self.hashIdForComplete() !='' && self.step() == "6" && self.t_a_e_last_customer_id_complete() == '1')); },
                    message: "Bitte geben Sie die Kundennummer bei Ihrem bisherigen Versorger an."
                }
            });
            
            self.entry_at.extend({
                required: {
                    onlyIf: function () { return (self.step() == "2" && (self.type_request()==='is_new_entry' || self.type_request()==='is_first_entry')); },
                    message: "Bitte geben Sie einen gewünschten Liefertermin an."
                }
            });
            
            self.termination_date.extend({
                required: {
                    onlyIf: function () { return (self.step() == "2" && self.type_request() === 'is_alternation_to_eon' && self.termination()==='customer'); },
                    message: "Bitte geben Sie das Datum an, zu dem die Kündigung wirksam wird."
                }
            });
            
            self.delivery_from_date_field.extend({
                required: {
                    onlyIf: function () { return (self.step() == "2" && self.type_request() === 'is_alternation_to_eon' && self.delivery_from() == 'Vertragsbeginn zum'); },
                    message: "Bitte geben Sie einen gewünschten Liefertermin an."
                }
            });
            
            
            
            self.account_holder_name.extend({
                required: {onlyIf: function () { return (self.step() == "3"); }, message: "ERR_ACCOUNT_HOLDER_NAME_SEPA"}
            });
            self.account_number.extend({
                required: {onlyIf: function () { return (self.step() == "3" && self.is_directdebit() === "1"); }, message: "Bitte geben Sie eine Kontonummer oder IBAN an."}
            });
            self.bank_code.extend({
                required: {
                    onlyIf: function () { return (!self.is_iban() && self.step() == "3" && self.is_directdebit() === "1"); }, 
                    message: "Bitte geben Sie die Bankleitzahl an."
                }
            });
            self.is_customer.extend({
                notEqual: {params: "none" , onlyIf: function () { return (self.step() == "1"); }, message: "Bitte beantworten Sie uns noch folgende Frage: Sind Sie an dem angegebenen Ort bereits " + self.productType() + "-Kunde bei E.ON?"}
            });
            self.is_directdebit_authorisation_checked.extend({
                equal: {params: true, onlyIf: function () { return (self.step() == "3" && self.is_directdebit() === "1"); }, message: "Sie möchten ein SEPA-Lastschriftmandat (bisher Einzugsermächtigung) erteilen? Bitte bestätigen Sie uns die Ermächtigung zum Lastschrifteinzug."}
            });
            self.confirmation_ordering_conditions_checked.extend({
                equal: {params: true, onlyIf: function () { return (self.step() == "4"); }, message: "Wir können Ihren Auftrag nur ausführen, wenn Sie alle notwendigen Bestätigungen abgeben. Bitte bestätigen Sie die Auftragserteilung, Zustimmung Preis- und Lieferbedingungen und Vollmacht."}
            });
            /*self.confirmation_agb_checked.extend({
                equal: {params: true, onlyIf: function () { return (self.step() == "4"); }, message: "Wir können Ihren Auftrag nur ausführen, wenn Sie alle notwendigen Bestätigungen abgeben. Bitte bestätigen Sie die Allgemeinen Lieferbedingungen."}
            });
            self.confirmation_disclaimer_checked.extend({
                equal: {params: true, onlyIf: function () { return (self.step() == "4" && self.customerType() == "pk"); }, message: "Wir können Ihren Auftrag nur ausführen, wenn Sie alle notwendigen Bestätigungen abgeben. Bitte bestätigen Sie die Kenntnisnahme der Widerrufsbelehrung."}
            });*/
            self.confirmation_data_checked.extend({
                equal: {params: true, onlyIf: function () { return (self.step() == "4"); }, message: "Wir können Ihren Auftrag nur ausführen, wenn Sie alle notwendigen Bestätigungen abgeben. Bitte bestätigen Sie die Kenntnisnahme unserer Datenschutzbestimmungen."}
            });
            self.partnerLastCheckboxField1.extend({
                equal: {params: true, onlyIf: function () { return (self.partnerLastCheckboxField1Mandatory() == true && self.step() == "4"); }, message: "Wir können Ihren Auftrag nur ausführen, wenn Sie alle notwendigen Bestätigungen abgeben."}
            });
            self.billing_company.extend({
                required: {onlyIf: function () { return (self.step() == "1" && self.billing_address() == "yes" && self.customerType() == "gw"); }, message: "Bitte beachten Sie, dass aus technischen Gründen die Änderung des Firmennamens in der alternativen Rechnungsanschrift nicht möglich ist."}
            });
            self.billing_zipcode.extend({
                required: {onlyIf: function () { return (self.step() == "1" && self.billing_address() == "yes"); }, message: "Bitte geben Sie die Postleitzahl für Ihre alternative Rechnungsanschrift an."}
            });
            self.billing_city.extend({
                required: {onlyIf: function () { return (self.step() == "1" && self.billing_address() == "yes"); }, message: "Bitte geben Sie den Ort der alternativen Rechnungsanschrift an."}
            });
            self.billing_street.extend({
                required: {onlyIf: function () { return (self.step() == "1" && self.billing_address() == "yes"); }, message: "Bitte geben Sie Ihre Straße an."}
            });
            self.billing_street_number.extend({
                required: {onlyIf: function () { return (self.step() == "1" && self.billing_address() == "yes"); }, message: "Bitte geben Sie Ihre Hausnummer an."}
            });
            self.is_authorisation_cancelation_checked.extend({
                equal: {params: true, onlyIf: function () { return (self.step() == "2" && self.customerType() == "pk" && self.is_customer()==="no" && self.type_request() != "is_alternation_to_eon" && self.entry_at() !== "" && moment(self.formatDate(self.entry_at()), "DD.MM.YYYY").isBefore(moment(),'day') );}, message: "Ihr Belieferungsbeginn liegt vor dem Ablauf der Widerrufsfrist. Um Sie bereits vor Ablauf der Widerrufsfrist zu beliefern, bitten wir Sie, nachfolgende Erklärung abzugeben, anderenfalls ist uns eine Belieferung nur für die Zukunft möglich. Ihr Widerrufsrecht ist davon unberührt."}
            });
            
        //partner input fields validations

        self.partnerInputField1.extend({
            required: {onlyIf: function () { return (self.step() == "1" && self.partnerInputFieldMandatory1() == true); }, message: "Bitte füllen Sie die als Pflichtfelder markierten Eingabefelder aus."}
        });
        self.partnerInputField2.extend({
            required: {onlyIf: function () { return (self.step() == "1" && self.partnerInputFieldMandatory2() == true); }, message: "Bitte füllen Sie die als Pflichtfelder markierten Eingabefelder aus."}
        });
        self.partnerRadioButton.extend({
            notEqual: {params: "none", onlyIf: function () { return (self.step() == "1" && self.partnerRadioMandatory() == true); }, message: "Wir können Ihren Auftrag nur ausführen, wenn Sie alle notwendigen Bestätigungen abgeben. Bitte bestätigen Sie die Auftragserteilung, Zustimmung Preis- und Lieferbedingungen und Vollmacht."}
        });
        self.partnerCheckboxField.extend({
            equal: {params: true, onlyIf: function () { return (self.step() == "1" && self.partnerCheckboxMandatory() == true); }, message: "Wir können Ihren Auftrag nur ausführen, wenn Sie alle notwendigen Bestätigungen abgeben."}
        });
        
            self.infoMgmtGroup = ko.validation.group([self.company, self.salutation, self.firstname, self.lastname, self.email, self.birthday]);
        self.partnerInfoGroup = ko.validation.group([self.partnerInputField1, self.partnerInputField2, self.partnerRadioButton, self.partnerCheckboxField]);
            self.contactInfoGroup = ko.validation.group([self.salutation_co, self.firstname_co, self.lastname_co]);
            self.deliveryAddGroup = ko.validation.group([self.street, self.street_number]);
            self.billingAddGroupd = ko.validation.group([self.billing_zipcode, self.billing_city, self.billing_street, self.billing_street_number]);
            self.deliveryStartGroup = ko.validation.group([self.delivery_from_date_field, self.last_supplier, self.last_customer_id, self.termination_date, self.present_account]);
            self.isCustomerGroup = ko.validation.group([self.is_customer]);
            self.entryGroup = ko.validation.group([self.entry_at]);
            self.meterGroup = ko.validation.group([self.meter_number, self.present_meter_reading, self.present_meter_reading_ht, self.present_meter_reading_nt, self.is_authorisation_cancelation_checked]);
            self.directDebitGroup = ko.validation.group([self.account_holder_name, self.account_number, self.bank_code, self.is_directdebit_authorisation_checked]);
            self.confirmationGroup = ko.validation.group([self.confirmation_ordering_conditions_checked, self.confirmation_data_checked, self.partnerLastCheckboxField1]);
        }
        
        self.clearErrorZones = function() {
            //Clear errors and error classes for fresh validations
            self.errorCodes([]);
            //$("#ova .error-zone.backend-error") && $("#ova .error-zone.backend-error").length > 0 ? $("#ova .error-zone.backend-error").remove() : "";
            $("input.input-error") && $("input.input-error").length > 0 ? $("input.input-error").each(function(){$(this).removeClass("input-error")}) : "";
        }
        
        //bound to every "Weiter" button
        self.submitStep = function (id, _this, evt) {
            $(evt.target).focus();
            self.showErrorMessages(false);
            if (self.isValid()) {
                self.clearErrorZones();         
                $(".ovaOverlay").removeClass("hide");
                switch (id) {
                    case "1":
                        submitStep1();
                        break;
                    case "2":
                        submitStep2();
                        break;
                    case "3":
                        submitStep3();
                        break;
                    case "4":
                        submitStep4();
                        break;
                    case "6":
                        submitStep6();
                        break;
                    case "7":
                        submitCompletionForm();
                        break;
                }
                //$(window).scrollTop(0);
            } else {
                self.clearErrorZones();
                self.trackOVAErrors();
                if ($(".lt-ie9").length <= 0) {
                    $(window).scrollTop(0);
                }
                self.showErrorMessages(true);
                var errCnt = self.errorCount();
                self.errorCount(errCnt + 1);
                var $targetFormErrorField = $('#ova .error-zone');
        
                if ($(".lt-ie9").length <= 0) {
                    $(window).scrollTo($targetFormErrorField);
                }
                if(id =="2") {
                    if(self.last_supplier_validation() == "1"){
                        self.last_supplier_validation("2");
                        self.last_supplier.extend({required: false});
                    }
                    if(self.last_supplier_validation() == "0" && !self.last_supplier.isValid()){
                        self.last_supplier_validation("1");
                    }

                    if(self.last_customer_id_validation() == "1"){
                        self.last_customer_id_validation("2");
                        self.last_customer_id.extend({required: false});
                    }
                    if(self.last_customer_id_validation() == "0" && !self.last_customer_id.isValid()){
                        self.last_customer_id_validation("1");
                    }

                    if(self.meter_number_validation() == "1"){
                        self.meter_number_validation("2");
                        self.meter_number.extend({required: false});
                    }
                    if(self.meter_number_validation() == "0" && !self.meter_number.isValid()){
                        self.meter_number_validation("1");
                    }

                    if(self.present_account_validation() == "1"){
                        self.present_account_validation("2");
                        self.present_account.extend({required: false});
                    }
                    if(self.present_account_validation() == "0" && !self.present_account.isValid()){
                        self.present_account_validation("1");
                    }

                    if (self.isValid()) {
                        self.clearErrorZones();         
                        $(".ovaOverlay").removeClass("hide");
                        submitStep2();
                        $(window).scrollTop(0);
                    }
                    
                }

        $('#ova .input-error:first').focus();
            }           
        };
        
        
        //bound to every "Zurück" button and to all "Ändern" buttons in step 4
        self.editStep = function (id) {
            if ($(".lt-ie9").length <= 0) {
                $(window).scrollTop(0);
            }
            self.step(id);
            self.clearErrorZones();
            self.showErrorMessages(true);
            $(window).scrollTop(0);
        };
        //called when moving from step 1 to 2 etc
        //user-interface should be disabled until service answers
        //"step" should be updated only when "done", otherwise errormessage should be displayed
        submitStep1 = function () {
            self.last_supplier_validation() == '1' ? self.last_supplier_validation('2'): '';
            self.last_customer_id_validation() == '1' ? self.last_customer_id_validation('2'): '';
            var stepData = {};

            stepData.street = self.street();
            stepData.street_number = self.street_number();
            stepData.zipcode = self.zipcode();
            stepData.city = self.city();
            stepData.district = self.district();
            stepData.email = self.email();
            stepData.phone = self.phone();
            stepData.is_customer = self.is_customer();
            stepData.billing_address = self.billing_address();

            if (self.billing_address() === 'yes') {
                stepData.billing_zipcode = self.billing_zipcode();
                stepData.billing_city = self.billing_city();
                stepData.billing_street = self.billing_street();
                stepData.billing_street_number = self.billing_street_number();
            } else {
                stepData.billing_zipcode = "";
                stepData.billing_city = "";
                stepData.billing_street = "";
                stepData.billing_street_number = "";
            }

            if (self.customerType() === 'pk') {
                stepData.company = self.company();
                stepData.salutation = self.salutation();
                stepData.title = self.title() ? self.title() : "";
                stepData.firstname = self.firstname();
                stepData.lastname = self.lastname();
                stepData.birthday = self.formatDate(self.birthday());
            }

            if (self.customerType() === 'gw') {
                stepData.company = self.company();
                //stepData.branch = self.branch() ? self.branch() : "";
                //stepData.register = self.register() ? self.register() : "";
                stepData.salutation_gm = self.salutation();
                stepData.title_gm = self.title() ? self.title() : "";
                stepData.firstname_gm = self.firstname();
                stepData.lastname_gm = self.lastname();
                stepData.birthday_gm = self.formatDate(self.birthday());
                //stepData.department_gm = self.department_gm() ? self.department_gm() : "";
                stepData.function_gm = self.function_gm() ? self.function_gm() : "";
                stepData.billing_company = self.billing_company();
                stepData.contact_person = self.contact_person();
                
                if (self.contact_person() === 'yes') {
                    stepData.salutation_co = self.salutation_co() ? self.salutation_co() : "";
                    stepData.title_co = self.title_co() ? self.title_co() : "";
                    stepData.firstname_co = self.firstname_co();
                    stepData.lastname_co = self.lastname_co();
                    //stepData.department_co = self.department_co() ? self.department_co() : "";
                    stepData.function_co = self.function_co() ? self.function_co() : "";
                } else {
                    stepData.salutation_co = "";
                    stepData.title_co = "";
                    stepData.firstname_co = "";
                    stepData.lastname_co = "";
                    //stepData.department_co = "";
                    stepData.function_co = "";
                } 
            }
            //json fileds for partner
            if(clientId != 'eonde'){
                if($('input#partnerInputField1').length > 0) {
                    ($('input#partnerInputField1').attr('name')!='') ? stepData[$('input#partnerInputField1').attr('name')] = self.partnerInputField1() : "";
                }
                if($('input#partnerInputField2').length > 0) {
                    ($('input#partnerInputField2').attr('name')!='') ? stepData[$('input#partnerInputField2').attr('name')] = self.partnerInputField2() : "";
                }
                var checkboxFieldVal = self.partnerCheckboxField() ? "1" : "0"; 
                if($('input#partnerCheckboxField').length > 0) {
                    ($('input#partnerCheckboxField').attr('name')!='') ? stepData[$('input#partnerCheckboxField').attr('name')] = checkboxFieldVal : "0";
                }
                if($('input#radiobuttons_1').length > 0) {
                    ($('input#radiobuttons_1').attr('name')!='') ? stepData[$('input#radiobuttons_1').attr('name')] = self.partnerRadioButton() : "";
                }
                if($('select#partnerSelectField').length > 0) {
                    ($('select#partnerSelectField').attr('name')!='') ? stepData[$('select#partnerSelectField').attr('name')] = self.partnerSelectField() : "";
                }
            }
            $("div.OVACoop input:radio" ).each(function(){
                var partnerRadioButtonSummary;
                if (self.partnerRadioButton() == $(this).val()) {
                    partnerRadioButtonSummary = $(this).siblings('label').text();
                    self.partnerRadioButtonSummary(partnerRadioButtonSummary);
                }
            });
            //send JSON to offer service
            submitDataToContract(ko.toJSON(stepData), "2");
            //self.showErrorMessages(false);
            
        };
        
        submitStep2 = function () {
            var stepData = {};
            
            if (self.is_customer() === 'yes') {
                stepData.t_a_delivery_from = self.delivery_from();
                stepData.t_a_delivery_from_datefield = self.formatDate(self.delivery_from_date_field());
                stepData.t_a_present_account = self.present_account();
                stepData.t_a_meter_number = self.meter_number();
                if (self.tariffType() === 'et') {
                    stepData.t_a_present_meter_reading = self.present_meter_reading() ? self.parseMeterReading(self.present_meter_reading()) : "";
                } else {
                    stepData.t_a_present_meter_reading_ht = self.present_meter_reading_ht() ? self.parseMeterReading(self.present_meter_reading_ht()) : "";
                    stepData.t_a_present_meter_reading_nt = self.present_meter_reading_nt() ? self.parseMeterReading(self.present_meter_reading_nt()) : "";
                }
                stepData.t_a_last_meter_reading_at = self.formatDate(self.last_meter_reading_at());
            }
            
            if (self.is_customer() === 'no') {
                stepData.type_request = self.type_request();
                
                if (self.type_request() === 'is_alternation_to_eon') {
                    
                    if (self.termination() != "customer") {
                        stepData.t_a_e_delivery_from_datefield = self.formatDate(self.delivery_from_date_field());
                        stepData.t_a_e_delivery_from = self.delivery_from();
                    } else {
                        stepData.t_a_e_delivery_from_datefield = "";
                        stepData.t_a_e_delivery_from = "";
                    }
                    stepData.t_a_e_termination = self.termination();
                    stepData.t_a_e_termination_date = self.formatDate(self.termination_date());
                    stepData.t_a_e_last_supplier = self.last_supplier();
                    stepData.t_a_e_last_customer_id = self.last_customer_id();
                    stepData.t_a_e_meter_number = self.meter_number();
                    if (self.tariffType() === 'et') {
                        stepData.t_a_e_present_meter_reading = self.present_meter_reading() ? self.parseMeterReading(self.present_meter_reading()) : "";
                    } else {
                        stepData.t_a_e_present_meter_reading_ht = self.present_meter_reading_ht() ? self.parseMeterReading(self.present_meter_reading_ht()) : "";
                        stepData.t_a_e_present_meter_reading_nt = self.present_meter_reading_nt() ? self.parseMeterReading(self.present_meter_reading_nt()) : "";
                    }
                    stepData.t_a_e_last_meter_reading_at = self.formatDate(self.last_meter_reading_at());
                    
                } else if (self.type_request() === 'is_new_entry') {
                    stepData.n_e_new_entry_at = self.formatDate(self.entry_at());
                    stepData.n_e_meter_number = self.meter_number();
                    if (self.tariffType() === 'et') {
                        stepData.n_e_present_meter_reading = self.present_meter_reading() ? self.parseMeterReading(self.present_meter_reading()) : "";
                    } else {
                        stepData.n_e_present_meter_reading_ht = self.present_meter_reading_ht() ? self.parseMeterReading(self.present_meter_reading_ht()) : "";
                        stepData.n_e_present_meter_reading_nt = self.present_meter_reading_nt() ? self.parseMeterReading(self.present_meter_reading_nt()) : "";
                    }
                    stepData.n_e_last_meter_reading_at = self.formatDate(self.last_meter_reading_at());
                    if (self.customerType() === 'pk') {
                        stepData.n_e_authorisation_disclaimer = self.authorisation_cancelation();
                    }
                    
                } else if (self.type_request() === 'is_first_entry') {
                    stepData.f_e_first_entry_at = self.formatDate(self.entry_at());
                    stepData.f_e_meter_number = self.meter_number();
                    if (self.tariffType() === 'et') {
                        stepData.f_e_present_meter_reading = self.present_meter_reading() ? self.parseMeterReading(self.present_meter_reading()) : "";
                    } else {
                        stepData.f_e_present_meter_reading_ht = self.present_meter_reading_ht() ? self.parseMeterReading(self.present_meter_reading_ht()) : "";
                        stepData.f_e_present_meter_reading_nt = self.present_meter_reading_nt() ? self.parseMeterReading(self.present_meter_reading_nt()) : "";
                    }
                    stepData.f_e_last_meter_reading_at = self.formatDate(self.last_meter_reading_at());
                    
                    if (self.customerType() === 'pk') {
                        stepData.f_e_authorisation_disclaimer = self.authorisation_cancelation();
                    }
                }
            }
            applyBorders();
            //send JSON to offer service
            submitDataToContract(ko.toJSON(stepData), "3");
            //self.showErrorMessages(false);
        };
        
        submitStep3 = function () {
            var stepData = {};
            if (self.customerType() === 'pk') {
                stepData.account_holder_name = self.account_holder_name();
            } else {
                stepData.account_holder_company = self.account_holder_name();
            }
            var modifiedAccNum = self.account_number().replace(/\s/g, "");
            modifiedAccNum = modifiedAccNum.toUpperCase();
            self.account_number(modifiedAccNum);
            stepData.account_number = modifiedAccNum;
            stepData.bank_code = self.bank_code();
            stepData.bank_name = self.bank_name();
            if (self.is_directdebit_authorisation() === "1" ) {
            stepData.is_directdebit_authorisation = self.is_directdebit_authorisation();
            } else {
                stepData.is_directdebit_authorisation = "";
            }
            //send JSON to offer service
            submitDataToContract(ko.toJSON(stepData), "4");
            //self.showErrorMessages(false);
            CQ_Analytics.ProfileDataMgr.setProperty(OVA_CSTATUS,'orderconfirmation');
        };
        
        submitStep4 = function () {
            var stepData = {};
            
            stepData.confirmation_ordering_conditions = self.confirmation_ordering_conditions();
            //stepData.confirmation_agb = self.confirmation_agb();
            stepData.confirmation_data = self.confirmation_data();
            stepData.confirmation_advertising_mail = self.confirmation_advertising_mail();
            stepData.confirmation_advertising_phone = self.confirmation_advertising_phone();

            if(clientId!='eonde'){
                var lastCheckboxFieldVal = self.partnerLastCheckboxField1() ? "1" : "0";
                ($('input#partnerLastCheckboxField1').attr('name') && $('input#partnerLastCheckboxField1').attr('name')!='') ? stepData[$('input#partnerLastCheckboxField1').attr('name')] = lastCheckboxFieldVal : "";
            }
            /*if (self.customerType() === 'pk') {
                stepData.confirmation_disclaimer = self.confirmation_disclaimer();
            } else {
                stepData.confirmation_disclaimer = "1";
            }(*/
            //send JSON to offer service
            submitDataToContract(ko.toJSON(stepData), "thankYou");
        };
        submitStep6 = function () {
            $(".ovaOverlay").addClass("hide");
            $("body").scrollTop(0);
            self.step("7");
            eonde.Utils.formProgressSteps();
        };
        submitCompletionForm = function() {
            var stepData = {};
            if(self.t_a_meter_number_complete() == '1'){
                stepData.t_a_meter_number = self.meter_number();
            }
            if(self.t_a_e_meter_number_complete() == '1'){
                stepData.t_a_e_meter_number = self.meter_number();
            }
            if(self.n_e_meter_number_complete() == '1'){
                stepData.n_e_meter_number = self.meter_number();
            }
            if(self.f_e_meter_number_complete() == '1'){
                stepData.f_e_meter_number = self.meter_number();
            }
            if(self.t_a_e_last_customer_id_complete() == '1'){
                stepData.t_a_e_last_customer_id = self.last_customer_id();
            }
            if(self.t_a_e_last_supplier_complete() == '1'){
                stepData.t_a_e_last_supplier = self.last_supplier();
            }
            if(self.t_a_present_account_complete() == '1'){
                stepData.t_a_present_account = self.present_account();
            }
            submitDataToComplete(ko.toJSON(stepData), "thankYouCompletion");
        }
        self.is_authorisation_cancelation_checked_visible = ko.computed(function(){
            if(self.is_customer()==="no" && self.entry_at() !== "" && self.type_request() != "is_alternation_to_eon" && moment(self.formatDate(self.entry_at()), "DD.MM.YYYY").isBefore(moment(),'day')) {
                return 1;
            } else {
                return 0;
            }
        });
        
        submitDataToContract = function(dataObj, nextStep) {
            
            self.hasBackendErrors (false);
        var requestURL;
        if(self.isCSCMode() == true) {
            requestURL=cscModeContractServiceURL+"mode="+_cscMode+"&";
        } else {
            requestURL=contractServiceURL;
        }
        requestURL = requestURL+'clientId='+clientId;
            
            eonde.Utils.trackVirtualPageCall("/contract");
            
            $.ajax({
                beforeSend: function(xhr) {
                    xhr.setRequestHeader('Authorization', authorizationHeaderVal);
                },
                dataType: "json",
                contentType: "application/x-www-form-urlencoded",
                type: 'POST',
                url: requestURL,
                data: 'step=' + self.step() + '&tokenId=' + self.tokenId() + '&data=' + encodeURIComponent(dataObj)
            }).done( function(data) {
                self.clearErrorZones();
                if (data != null ) {

                    //data should be the complex datatype "ProductAdvisor"
                    //use it to populate details in the upper right corner
                    
                    self.products(data.products);
                    self.footnotes(data.footnotes);
                    self.footnotesArr(data.footnotes);
                    if(data.products.areaInformation === undefined) {
                        self.regionalized(false);
                    }
                    if (nextStep != "thankYou") {
                        if ($(".lt-ie9").length <= 0) {
                            $(window).scrollTop(0);
                        }
                        self.step(nextStep);
                        eonde.Utils.formProgressSteps();
                        if (nextStep == "4") {
                            $(document).trigger("pricetable.S.init");
                        }
                    } else {
                        $("html, body").animate({ scrollTop: 0 }, "fast");
                        self.step("5");
                        if (data.ekomiLink && data.ekomiLink !== null) {
                            self.ekomiLink(data.ekomiLink);
                        }

                        self.trackOVATransaction(data.products, data.contractId);
                    }
                    
                }
                $(".ovaOverlay").addClass("hide");  
                self.errorCount(0);
                infoIcon();
            }).fail(function(data) {
                self.clearErrorZones();
                self.showErrorMessages(false);
                self.handleBackendErrors(data);
                var errCnt = self.errorCount();
                self.errorCount(errCnt + 1);
                $(".ovaOverlay").addClass("hide");
            });
            
        };
        
        submitDataToComplete = function(dataObj, nextStep) {
            
            self.hasBackendErrors (false);
            
            var requestURL = completeFormServiceURL+'clientId='+clientId+'&hashId='+self.hashIdForComplete();
            
            eonde.Utils.trackVirtualPageCall("/complete");
            
            $.ajax({
                beforeSend: function(xhr) {
                    xhr.setRequestHeader('Authorization', authorizationHeaderVal);
                },
                dataType: "json",
                contentType: "application/x-www-form-urlencoded",
                type: 'POST',
                url: requestURL,
                data: 'data=' + encodeURIComponent(dataObj)
            }).done( function(data) {
                self.clearErrorZones();
                if (data != null ) {
                    if (nextStep != "thankYouCompletion") {
                        if ($(".lt-ie9").length <= 0) {
                            $(window).scrollTop(0);
                        }
                        self.step(nextStep);
                        eonde.Utils.formProgressSteps();
                    } else {
                        self.step("8");
                    }
                    
                }
                $(".ovaOverlay").addClass("hide");  
                self.errorCount(0);
            }).fail(function(data) {
                self.clearErrorZones();
                self.showErrorMessages(false);
                self.handleBackendErrors(data);
                var errCnt = self.errorCount();
                self.errorCount(errCnt + 1);
                $(".ovaOverlay").addClass("hide");
            });
            
        };
        
        self.openPriceOverlay = function () {
            $("#hdnBtnOVA").trigger("click");
            if($(window).width() > 767) {
                $('#modalPriceOverlay .modal-body').slimScroll({
                    height: overlayHeight,
                    railVisible: true,
                    alwaysVisible: true,
                    railColor: '#5d5d5d',
                    color: '#969696',
                    size: '10px',
                    distance: '13px',
                    opacity: 1
                    
                });
            }
        }

        self.openPolicyOverlay = function () {
            $("#plcyBtnOVA").trigger("click");
            if($(window).width() > 767) {
                $('#modalPolicyOverlay .modal-body').slimScroll({
                    height: overlayHeight,
                    railVisible: true,
                    alwaysVisible: true,
                    railColor: '#5d5d5d',
                    color: '#969696',
                    size: '10px',
                    distance: '13px',
                    opacity: 1
                    
                });
            }
        }

        var exitVal ="",timeOutVal="", modalExitIntentOverlayValue="";
        exitVal= $('.exitIntentPopupEnable').data('cq-attr');
        timeOutVal= $('.timeForAppearance').data('cq-attr');
        modalExitIntentOverlayValue= eonde.Utils.getIStorageValue("phone_disclaimer", "");

        if(modalExitIntentOverlayValue!=="true" && exitVal === true){  
            setTimeout(function() {
                $('#modalExitIntentOverlay').modal('show');
            }, timeOutVal*1000);
        }

        $('#modalExitIntentOverlay .closeModal, #modalExitIntentOverlay .buttonja').click(function(){
            eonde.Utils.setIStorageValue("phone_disclaimer","true");   
            $('#modalExitIntentOverlay').modal('hide');    
        });

        self.downloadTermsPdf = function (productType, salesArea, groupDesc, data, event) {
            var type = productType,
                area = salesArea,
            pdfServiceUrl = eonde.Config.serviceURLs.pdfService+'clientId='+clientId+'&type=agb&filename=',
                    errorUrl = $('.pdf_error').attr("data-attr");
            var suffix = "";
            if (groupDesc !== null && groupDesc !== undefined && groupDesc.indexOf("Heizstrom") < 0 && self.customerType() === "gw") {
                suffix = "_Gewerbe";
            }
            var completeUrl = pdfServiceUrl + 'AGB_' + type + '_' + area + suffix + '.pdf&errorUrl=http://www.eon.de/404/AGB_'+type+'_'+area + suffix +'.pdf';
            
            eonde.Utils.trackVirtualPageCall("/pdf");
            return completeUrl;
        }
        
        self.getPDF = ko.computed(function() {
            var requestURL;
            if (self.is_not_confirmed()) {
                return "javascript:void(0)";
            }
            eonde.Utils.trackVirtualPageCall("/pdf");
            if(self.isCSCMode() == true) {
                requestURL=cscModePdfURL+"mode="+_cscMode+"&";
            } else {
                requestURL=pdfURL;
            }
        var requestURL = requestURL+'clientId='+clientId+'&tokenId=' + self.tokenId() + '&filename=' + self.pdfFilename() + '&confirmation_advertising_phone=' + self.confirmation_advertising_phone() + '&confirmation_advertising_mail=' + self.confirmation_advertising_mail();
            
            return requestURL;            
        });
        
        self.openPrivacyPolicy = function(url, data, event) {
            if (url.indexOf('http://') < 0) {
                window.open('http://' + url, '_blank');
            } else {
                window.open(url, '_blank');
            }
        }
        
        self.openURL = function(url, data,event) {
            window.open(url, '_blank');
        }

        getBankName = function(accNum) {
            var serviceCall = false;
            var requestURL = bankNamesServiceURL+'clientId=eonde&accountNumber=';
            var accountNumber = accNum ? accNum : self.account_number();
            if (accountNumber != "") {
                requestURL += encodeURIComponent(accountNumber);
                serviceCall = true;
                if (!self.is_iban()) {
                    if (self.bank_code() != "") {
                        requestURL += '&bankCode=' + encodeURIComponent(self.bank_code());
                    } else {
                        serviceCall = false;
                        self.bank_name("");
                    }
                }
            } else if (self.bank_code() === "" && accountNumber === "") {
                self.bank_name("");
            }
            if (serviceCall) {          
                eonde.Utils.trackVirtualPageCall("/bankname");
                $(".ovaOverlay").removeClass("hide");
                $.ajax({
                    dataType: "json",
                    type: 'GET',
                    url: requestURL,
                    headers: {'Authorization' : authorizationHeaderVal},
                    autoFocus: true
                }).done( function(data) {
                    $(".ovaOverlay").addClass("hide");
                    self.clearErrorZones();
                    if (data != null ) {
                        self.bank_name(data.bankname);                      
                    }
                }).fail(function(data) {
                    self.clearErrorZones();
                    self.bank_name("");
                    self.showErrorMessages(false);
                    self.handleBackendErrors(data);
                    $(".ovaOverlay").addClass("hide");
                });
            }
        };
        
        self.navigateToAdvisor = function(e) {
            var custType = self.customerType() != null && self.customerType() != "" ? self.customerType() : "pk";
            var $advisorurl = $("." + custType + "productadvisorurl");
            if ($advisorurl !== undefined && $advisorurl.length > 0) {
                window.location = $advisorurl.attr("data-url") + ".html";
            }
        }
        
        self.navigateToBackPage = function(e) {
            if(self.customerType()==='pk' && self.productType()==='Strom'){
                window.location = '/tarifberater-strom';
            }
            else if(self.customerType()==='pk' && self.productType()==='Erdgas'){
                window.location = '/tarifberater-erdgas';
            }
            else if(self.customerType()==='gw' && self.productType()==='Strom'){
                window.location = '/produktberater-gw-strom';
            }
            else if(self.customerType()==='gw' && self.productType()==='Erdgas'){
                window.location = '/produktberater-gw-erdgas';
            }
        }
        
        self.navigatePkToStrom = function(e) {
            window.location = '/tarifberater-strom';
        }
        self.navigatePkToErdgas = function(e) {
            window.location = '/tarifberater-erdgas';
        }
        
        self.navigateGwToStrom = function(e) {
            window.location = '/produktberater-gw-strom';
        }
        self.navigateGwToErdgas = function(e) {
            window.location = '/produktberater-gw-erdgas';
        }
        
        getLastSupplier = function(searchTerm, callback) {
            
            eonde.Utils.trackVirtualPageCall("/energyproviders");
            $.ajax({
                dataType: "json",
                type : 'GET',
                url:  energyProvidersURL+'clientId=eonde&productType=' + self.productType() + '&name=' + encodeURIComponent(searchTerm),
                headers : {'Authorization' : authorizationHeaderVal}
                }).done(callback).fail(function(data) {
                    self.clearErrorZones();
                    self.showErrorMessages(false);
                    self.handleBackendErrors(data);
                    $('.ui-autocomplete-loading').removeClass("ui-autocomplete-loading");
                });
        };
        if(eonde.Utils.isTouchDevice) {
            if($(".druckansicht a").hasClass("tooltip-anchor")){
                $(".druckansicht a").removeClass("tooltip-anchor");
            }
        }
        self.updateDateFields = function(e) {
            if (Modernizr.touch && Modernizr.inputtypes.date) {
                var devicePlateform = navigator.platform;
                $("#ova .js-date").each(function(i, item) { 
                    var $this = $(this);
                    if(/iPad/.test(devicePlateform) || /iPhone/.test(devicePlateform)){
                        /*This is iPad*/
                        var newDateBox = $("<input/>").attr({'type':'date'}).css({'position':'relative', 'top': '0', 'left': '0', 'opacity': 0, 'height': '0px', 'width' : '0px'}).on('change blur', {btn: $this}, function(e){ 
                            if($this.siblings('input[type=radio]').length > 0){
                                $this.closest('div').siblings().find('label').removeClass('checkedInput');
                                $this.siblings('label').addClass('checkedInput');
                                self.delivery_from("Vertragsbeginn zum");
                                $("label[for=delivery-from-next]").removeClass("checkedInput");
                            }
                            if (e.target.valueAsDate !== null) {
                            var valueAsDate = e.target.valueAsDate.toLocaleDateString(); 
                            var value = e.target.value.split('-'); value = value[2] + '.' + value[1] + '.' + value[0]; 
                            e.data.btn.val(value); 
                            e.data.btn.trigger("change");
                            } else {
                                e.data.btn.val(""); 
                                e.data.btn.trigger("change");
                            }
                        }).insertAfter($this); 
                        $this.on('click touchstart',  function(e){ 
                            newDateBox.focus();
                            newDateBox.trigger("click");
                            e.preventDefault();
                            return false; 
                        });
                    }else{
                        var newDateBox = $("<input/>").attr({'type':'date'}).addClass('nCal').on('change blur input', {btn: $this}, function(e){ 
                            if($this.siblings('input[type=radio]').length > 0){
                                $this.closest('div').siblings().find('label').removeClass('checkedInput');
                                $this.siblings('label').addClass('checkedInput');
                                self.delivery_from("Vertragsbeginn zum");
                                $("label[for=delivery-from-next]").removeClass("checkedInput");
                            }
                            if (e.target.valueAsDate !== null) {
                            var valueAsDate = e.target.valueAsDate.toLocaleDateString(); 
                            var value = e.target.value.split('-'); value = value[2] + '.' + value[1] + '.' + value[0]; 
                            e.data.btn.val(value); 
                            e.data.btn.trigger("change");
                            } else {
                                e.data.btn.val(""); 
                                e.data.btn.trigger("change");
                            }
                        }).insertAfter($this.siblings(".icon-calendar"));
                        $this.on('click touchstart focus',  function(e){ 
                            newDateBox.focus();
                            newDateBox.trigger("click");
                            e.preventDefault();
                            return false; 
                        });
                        $this.siblings(".icon-calendar").on('click touchstart',  function(e){ 
                            newDateBox.focus();
                            newDateBox.trigger("click");
                            e.preventDefault();
                            return false; 
                        });
                    }
                    
                });
                $("#ova .icon-calendar").click(function(e) {
                    $(this).prev("input").focus();
                });
            }  else {
                $('#ova .js-date').each(function(){ 
                    var context = this;
                    $(this).datepicker({firstDay: 1,  
                        constrainInput: false, 
                        dayNamesMin: ["So","Mo", "Di", "Mi", "Do", "Fr", "Sa"], 
                        showOtherMonths: true, 
                        monthNames: ["Januar", "Februar", "März", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"], 
                        dateFormat: "dd.mm.yy", showOn: "both", 
                        bttonImageOnly: true,
                        /*Defect fix for ESSONG-5123 IE8 specific. Removes the current-day class that is added by default.*/
                        beforeShowDay: function(date) {
                            var today = new Date();
                            var selectedDate = $(context).datepicker( "getDate" );
                            if (selectedDate==null && today.getDate() === date.getDate()
                                    && today.getMonth() === date.getMonth()
                                    && today.getFullYear() === date.getFullYear()) {
                                return [true, "current-date"];
                            }
                            return [true, ""];
                        }
                    });
                });
                $("#ova .ui-datepicker-trigger").addClass("icon-date-picker");
                $("#ova .ui-datepicker-trigger").addClass("icon-calendar");
                $("#ova span.icon-calendar") && $("#ova span.icon-calendar").length > 0 ? $("#ova span.icon-calendar").remove() : "";
                $("#ui-datepicker-div").addClass("notranslate");
            }
        }        
    };
    
    // apply binding of view model, but only if it exists
    var view = ovaDiv.get(0);
    
    if (view) {
        var ovaVM = new eonde.vmOVA();
        //ovaVM.applyValidations();
        ovaVM.init();
        ko.applyBindings (ko.validatedObservable(ovaVM), view);  
        ovaDiv.css("overflow", "inherit");
        ovaDiv.css("height" , "auto");
        
        
        $(document).bind('keypress', function(e){
            if ( e.keyCode == 13 ) {
                if ($('.ovaOverlay').hasClass('hide')) {
                    $("#ova .js-submit").filter(":visible").trigger("click");
                } else {
                    return false;
                }
            }
        });
        $('#ova label').click(function(e) {
            if($(this).hasClass('readonlylabel')){
                e.preventDefault();
                return false;
            }
        });
        $('#ova :checkbox').change(function(e){
            if ($(e.target) !== null && ($(e.target).is('a') || $(e.target).is('a span'))) {
                return;
            }
            var thisObj = $(this);
            
            if(thisObj.is(':checked')){
                thisObj.siblings('label').addClass('checkedInputCheckbox');
                    }
                    else {
                thisObj.siblings('label').removeClass('checkedInputCheckbox');
                    }
        });
        $('#ova :radio').change(function(e){
            if ($(e.target) !== null && ($(e.target).is('a') || $(e.target).is('a span'))) {
                return;
                }
            var thisObj = $(this);
            thisObj.siblings('label').addClass('checkedInput');
            $('#ova input[name="' + thisObj.attr('name') + '"]').not(thisObj).siblings('label').removeClass('checkedInput');
        });
        $('#ova input.js-date').on("click", function(e){
            if ($(e.target) !== null && ($(e.target).is('a') || $(e.target).is('a span'))) {
                return;
            }
            var thisObj = $(this);
            if(thisObj.siblings('input[type=radio]').length > 0){
                thisObj.closest('div').siblings().find('label').removeClass('checkedInput');
                thisObj.parent().find('label').addClass('checkedInput');
            }
        });
        $('.lt-ie9 #ova input[type=radio]').on('change', function(e){
            var thisObj = $(this);
            thisObj.closest('div').siblings().find('label').removeClass('checkedInput');
            thisObj.siblings('label').addClass('checkedInput');
        });
        
        function calculatePriceOverlayHeight(overlayId) {
            if($(window).width() > 300 ) {
                overlayHeight = 0.8*$(window).height();
                $(window).resize(function() {
                    overlayHeight = $(window).height() - 150;
                    overlayHeight += 'px';
                    $(overlayId).find('.modal-body, .slimScrollDiv').css('height', overlayHeight);
                });
            }
        }
        calculatePriceOverlayHeight();
        
        $('#modalPriceOverlay').on('shown.bs.modal', function (e) {
            calculatePriceOverlayHeight('#modalPriceOverlay');
        });
        $('#modalDisclaimerOverlay').on('shown.bs.modal', function (e) {
            calculatePriceOverlayHeight('#modalDisclaimerOverlay');
        });
        $('#modalPolicyOverlay').on('shown.bs.modal', function (e) {
            calculatePriceOverlayHeight('#modalPolicyOverlay');
        });
        $('#modalExitIntentOverlay').on('shown.bs.modal', function (e) {
            calculatePriceOverlayHeight('#modalExitIntentOverlay');
        });        
        
        //Check wither history.pushState is supported
        var history_api = typeof history.pushState != 'undefined';
        
        // The previous page asks that it not be returned to
        if ( location.hash == '#no-back' ) {
          
            // When the back button is pressed, it will harmlessly change the url
            // hash from "#stay" to "#no-back", which triggers this function
            
            // Push "#no-back" onto the history, making it the most recent "page"
            if ( history_api ) 
                history.pushState(null, '', '#stay');
            else 
                location.hash = '#stay';
        }
        window.onhashchange = function() {
            // User tried to go back; go to previous step instead
            if ( location.hash == '#no-back' ) {
                var step = parseInt(ovaVM.step(), 10);
                if (step > 1 && step < 5) {
                    ovaVM.editStep(step - 1 + "");
                    if ( history_api ) {
                        history.pushState(null, '', '#stay');
                    }
                    else {
                        location.hash = '#stay';
                    }
                } else if (step === 5) {
                    history.back();
                } else if (step === 1) {
                    history.back();
                } 
            }
        }
        
        $("#bank-code, #present-account").on("focusin", function() {
            var dest = $(this);
            dest.val(dest.val().split(" ").join(""));
            $(this).trigger('keydown');
        });
        $("#account-number").on("focusout", function(e) {
            var dest = $(this);
            if($(this).val().length<22) {
                dest.val(dest.val().split(" ").join(""));
                $(this).trigger('keydown');
            }
        });
        $("#bank-code").on("focusout", function(e) {
            var dest = $(this);
            if($(this).val().length<8) {
                dest.val(dest.val().split(" ").join(""));
                $(this).trigger('keydown');
            }
        });
        $("#present-account").on("focusout", function() {
            var dest = $(this);
            dest.val(dest.val().split(" ").join(""));
            $(this).trigger('keydown');
        });
        $("#present-account").bind('cut copy paste', function(e) {
            $(this).attr('maxlength','20');       
        });
        $("#present-account").focusout(function() {
            $(this).attr('maxlength','12');        
        });
        $("#bank-code, #account-number").bind('cut copy paste', function(e) {
            var dest = $(this);
            if(e.type == 'paste'){
            var text = (e.originalEvent || e).clipboardData.getData('text/plain');
            dest.val(text.split(" ").join(""));
            if (e.preventDefault) {
                        e.stopPropagation();
                        e.preventDefault();
                }
            }
        });

        $("#account-number").keyup(function(){
            if($(this).val().length>21){ 
                var dest = $(this);
                dest.val(dest.val().split(" ").join(""));
            }    
        });
        $("#bank-code").keyup(function(){
            if($(this).val().length>7){ 
                var dest = $(this);
                dest.val(dest.val().split(" ").join(""));
            }    
        });
        
    };
});
$(document).ready(function(){
    
    var gotoHashTab = function (customHash) {
        var hash = location.hash;
        var reducedHash=hash.substr(1);
        var reducedSecondHash=hash.substr(3);
        if($(".expandables [id="+reducedHash+"]").length){
            $("[id="+reducedHash+"]").addClass('in');
            chck($("a[href="+hash+"]"));
            setTimeout(function(){
				$('html, body').animate({ scrollTop: $(window.location.hash).offset().top-210}, 1000);
            },1200);
        }
        else{
            $('.expandables').each(function(){
                var expandable=$(this);
				if(expandable.find('span.showFirstExpandable').attr('data-attr')){
					chck(expandable.find('.panel-default:first-child h3 a'));
					expandable.find('.panel-default:first-child').children('.panel-collapse').addClass('in');
				}
                
            });
        } 
		if($('.tabs').length && !$(".expandables [id="+reducedHash+"]").length){
			if (window.location.hash && window.location.hash !== '') {
            setTimeout(function(){
				$('html, body').animate({ scrollTop: $(window.location.hash).offset().top-210}, 1000);
            },1200);
			}
        }
    }
    // onready go to the tab requested in the page hash
    if($('.expandables').length && $('.expandables290').hasClass('publish_mode')){
        gotoHashTab(); 
    } 

    
    
    function chckGlyphicon(self){
        self.parents('.expandables').find('h3 span').each(function(){
            if($(this).hasClass('glyphicon-active')){
                $(this).removeClass('icon-stage_teaser_pfeil_unten').addClass('icon-stage_teaser_pfeil_oben');
            }
            else{
                $(this).removeClass('icon-stage_teaser_pfeil_oben').addClass('icon-stage_teaser_pfeil_unten');
            }
        });
    }
    
    function chck(self){
        if(self.children('span').hasClass('glyphicon-active')){
            var clickedElement=true;
        }
        else{
            clickedElement=false;
        }
        if(self.parents('.expandables').find('.glyphicon-active').length ==1){
            self.parents('.expandables').find('.para-heading-active').removeClass('para-heading-active');
            self.parents('.expandables').find('.glyphicon-active').removeClass('glyphicon-active');
            self.parents('.expandables').find('.panel-group .panel-heading .panel-title').removeClass('active');
            if(!clickedElement){
            	self.parents('.expandables').find('.panel-group .panel-default .panel-collapse').removeClass('in').addClass('collapse');
            }
        }
        
        if(clickedElement){
            self.parent().removeClass('active');
            self.children('p').removeClass('para-heading-active');
            self.children('span').removeClass('glyphicon-active');
        }
        else{
            self.parent().addClass('active');
            self.children('span').addClass('glyphicon-active');
            self.children('p').addClass('para-heading-active');
			
			if(self.parents('.expandables').find('.glyphicon-active').length > 1){
				self.parents('.expandables').find('p.para-heading-active').not(self.children('p')).removeClass('para-heading-active');
                self.parents('.expandables').find('.panel-group .panel-heading .panel-title').not(self.parent('h3')).removeClass('active');
                self.parents('.expandables').find('.glyphicon-active').not(self.children('span.expandableArrow')).removeClass('glyphicon-active');
				chckGlyphicon(self.parents('.expandables').find('p.para-heading-active').not(self.children('p')));
                
            }
            
        }
        chckGlyphicon(self);
    }
    
    
    $('.expandables').each(function(){
        var expandable=$(this);
        if($('.expandables290').hasClass('publish_mode')){
            expandable.find('.panel-default h3.panel-title a').on('click', function(e){
                var self=$(this);
                var tabslink = $(this).attr('href');
                chck(self);
                window.setTimeout(function(){
                    if(typeof updateVideoPlayIconPosition !== "undefined"){
                        updateVideoPlayIconPosition();
                    }
                }, 10);
                
                window.location.hash = tabslink;
                setTimeout(function(){
					$('html, body').animate({ scrollTop: $(window.location.hash).offset().top-210}, 1000, function() { 
                        if(eonde.Utils.isTouchDevice)
                            $(window.location.hash).parent().get(0).scrollIntoView();
                    });
                },200);
            });
            
            expandable.find('.top button').on('click',function(){
                var self=$(this);
                $(this).parents('.expandables').find('.panel-collapse').removeClass('collapse').addClass('collapse');
                $(this).parents('.expandables').find('.panel-group .panel-heading .panel-title').removeClass('active');
                $(this).parents('.expandables').find('h3 span').removeClass('glyphicon-active');
                $(this).parents('.expandables').find('.para-heading-active').removeClass('para-heading-active');
                
                if($(this).children('span').hasClass('icon-expandable_minus-01')){
                    $(this).parents('.expandables').find('.panel-collapse').addClass('collapse').removeClass('in');
                    
                }
                
                else{
                    $(this).parents('.expandables').find('.panel-collapse').removeClass('collapse');
                    $(this).parents('.expandables').find('.panel-collapse').removeClass('in').addClass('in').removeAttr('style');
                    $(this).parents('.expandables').find('.panel-group .panel-heading .panel-title').addClass('active');
                    $(this).parents('.expandables').find(' h3 span').addClass('glyphicon-active');
                    $(this).parents('.expandables').find('a p').addClass('para-heading-active');
                }
                chckGlyphicon(self);
            });
        }
        if($('.expandables290').hasClass('author_mode')){
            expandable.find('.panel-default .panel-collapse').removeClass('collpase').addClass('in');
            expandable.find('.panel-default a').removeAttr('data-toggle').removeAttr('href');
            chck(expandable.find('a'));
        }

    });
});
$(document).ready(function(){
    var sitemapContent = $('.sitemapContainer');
    if (sitemapContent.length === 0) {
        return;
    }
	var linksExpanded = false;
	var $expandableLinks = $('.expandable-link').parent().children('ul').children('li');
	var $sitemapContainer = $('.sitemapContainer').find(".sub_lvl:not(:has('ul'))");
	$sitemapContainer.css({'border-bottom': '1px solid #d5d5d5'});
	$expandableLinks.css('display', 'none' );
	
	$('.expandLink').on('click', function(e){
		e.stopImmediatePropagation();
		var $customHeading = $('.expandable-link').parents().find('.level-4').siblings('.expandable-link');
		if(linksExpanded) {
			$customHeading.removeClass('custom-heading');
			$customHeading.parent().removeClass('noBorder');
			$sitemapContainer.css({'border-bottom': 'none'});
			$('#link_title').html(eonde.i18n.get("sitemap.expand.link"));
			$expandableLinks.animate({'height' : '0px'}, 500, 'easeInExpo', function(){ 
                $(this).remove('style');
				$(this).css('display', 'none');
				$(this).css('height', null);
			});
            $('.sitemapContainer ul:first').removeClass('open');
			linksExpanded = false;

		} else {
			$customHeading.not('.custom-heading').addClass('custom-heading');
			$customHeading.parent().addClass('noBorder');
			$sitemapContainer.css({'border-bottom': '1px solid #d5d5d5'});
			$('#link_title').html(eonde.i18n.get("sitemap.collapse.link"));
			$expandableLinks.animate({'height' : 'auto'}, 500, 'easeOutExpo',function(){ 
                $(this).removeAttr('style');
				$(this).css('display', 'block');
            });
            $('.sitemapContainer ul:first').addClass('open');
			linksExpanded = true;
		}
	});
});
$(document).ready(function(){
    var impressumContainers = $('.impressumContainer');
    if (impressumContainers.length === 0) {
        return;
    }

	ko.validation.configure({
	    registerExtenders: true,
	    messagesOnModified: true,
	    insertMessages: false,
	    parseInputAttributes: true,
	    messageTemplate: null
	});


	 var distInfoSuggestionURL= eonde.Config.serviceURLs.distInfoService;
	 var authorizationHeaderVal = eonde.Config.serviceURLs.authorization;

     var PRIVATE = 'pk';
     var BUSINESS = 'gw';
	 var _userType;
     var customerChecker = CQ_Analytics.ProfileDataMgr.getProperty('userType');
	 if (customerChecker == "BC") {
          _userType = BUSINESS;
     } else {
          _userType = PRIVATE;
     }   

	 var distURL=distInfoSuggestionURL+'clientId=eonde&customerType='+_userType;
	
     if(eonde.Utils.getIStorageValue(_userType + "[zip]")) {
			distURL+='&zipCode='+ eonde.Utils.getIStorageValue(_userType + "[zip]");
        }
	var ImprintContactViewModel = function () {
        var self=this;

        self.servicePhoneNumber=ko.observable("");
        self.serviceFaxNumber=ko.observable("");
        self.distributorMail=ko.observable("");
		self.serviceFaxNumCosts=ko.observable("");
		self.servicePhoneNumCosts=ko.observable("");
        self.serviceSchedule=ko.observable("");
        self.distributorDisclaimer=ko.observable("");
        self.distributorPromotionalOptOutpostOfficeBox=ko.observable("");
        self.distributorPromotionalOptOutpostOfficeBoxPostalCode=ko.observable("");
		self.isError=ko.observable("");
        self.localZip=ko.observable("");
        eonde.Utils.trackVirtualPageCall("/distinfo");
        if(eonde.Utils.getIStorageValue(_userType + "[zip]")) {
            self.localZip("false");
        }
        var ajaxObj = eonde.Utils.getAjaxObj({
				dataType: "json",
	            type : 'GET',
	            url: distURL,
            	headers : {'Authorization' : authorizationHeaderVal},
	            autoFocus: true
		});

        ajaxObj.done( function(data) {
            impressumContainers.closest('.imprintcontact').css("overflow", "inherit");
        		impressumContainers.closest('.imprintcontact').css("height" , "auto");

                if(data.servicePhoneNum) {
                    self.servicePhoneNumber(eonde.i18n.get("imprintcontact.telephonenumber.label") +" "+ data.servicePhoneNum);
                }
                if(data.serviceFaxNum) {
                    self.serviceFaxNumber(eonde.i18n.get("imprintcontact.faxnumber.label") +" "+ data.serviceFaxNum);
                }
                if(data.distributorDialogEmailPk) {
                    self.distributorMail("mailto:"+data.distributorDialogEmailPk);

                }
            	if(data.serviceFaxNumCosts) {
                    self.serviceFaxNumCosts(data.serviceFaxNumCosts);
            	}
            	if(data.servicePhoneNumCosts) {
					self.servicePhoneNumCosts(data.servicePhoneNumCosts);
                }
            	if(data.serviceSchedule) {
					self.serviceSchedule(data.serviceSchedule);
                }
            	if(data.distributorDisclaimer) {
                    self.distributorDisclaimer(data.distributorDisclaimer);
                }
                if(data.distributorPromotionalOptOutpostOfficeBox) {
                    self.distributorPromotionalOptOutpostOfficeBox(data.distributorPromotionalOptOutpostOfficeBox);
                }
            	if(data.distributorPromotionalOptOutpostOfficeBoxPostalCode) {
                    self.distributorPromotionalOptOutpostOfficeBoxPostalCode(data.distributorPromotionalOptOutpostOfficeBoxPostalCode);
            	}


            self.isError("false");


		});

		ajaxObj.error(function() {
            	impressumContainers.closest('.imprintcontact').css("overflow", "inherit");
        		impressumContainers.closest('.imprintcontact').css("height" , "auto");
            	self.isError("");

		});

    }

    impressumContainers.each(function() {
		var vm= new ImprintContactViewModel();
		ko.applyBindings(vm,this);
    });
});
  $(document).ready(function(){
	var datenschutzContainer = $('.datenschutzContainer');
      if (datenschutzContainer.length === 0) {
          return;
      }

	ko.validation.configure({
	    registerExtenders: true,
	    messagesOnModified: true,
	    insertMessages: false,
	    parseInputAttributes: true,
	    messageTemplate: null
	});


	var distInfoSuggestionURL= eonde.Config.serviceURLs.distInfoService;

	var PRIVATE = 'pk';
     var BUSINESS = 'gw';
	 var _userType;
     var customerChecker = CQ_Analytics.ProfileDataMgr.getProperty('userType');
	 if (customerChecker == "BC") {
          _userType = BUSINESS;
     } else {
          _userType = PRIVATE;
     }   
	 var distURL=distInfoSuggestionURL+'clientId=eonde&customerType='+_userType;
	 var authorizationHeaderVal = eonde.Config.serviceURLs.authorization;
     if(eonde.Utils.getIStorageValue(_userType + "[zip]")) {
			distURL+='&zipCode='+ eonde.Utils.getIStorageValue(_userType + "[zip]");
        }

	var PrivacyContactViewModel = function () {
        var self=this;


        self.distributorDisclaimer=ko.observable("");
        self.distributorPromotionalOptOutpostOfficeBox=ko.observable("");
        self.distributorPromotionalOptOutpostOfficeBoxPostalCode=ko.observable("");
		self.servicePhoneNum=ko.observable("");
		self.distributorPromotionalOptOutEmail=ko.observable("");
        self.address=ko.observable("");
        self.distributorCancellationEmail=ko.observable("");
		self.isError=ko.observable("");

		eonde.Utils.trackVirtualPageCall("/distinfo");
        var ajaxObj = eonde.Utils.getAjaxObj({
				dataType: "json",
	            type : 'GET',
	            url: distURL ,
            	headers : {'Authorization' : authorizationHeaderVal},
	            autoFocus: true
		});

        ajaxObj.done( function(data) {

                if(data.distributorCancellationEmail) {
                    self.distributorCancellationEmail("mailto:"+data.distributorCancellationEmail);

                }
                if(data.distributorDisclaimer) {
                    self.distributorDisclaimer(data.distributorDisclaimer);
                }
                if(data.distributorPromotionalOptOutpostOfficeBox) {
                    self.distributorPromotionalOptOutpostOfficeBox(data.distributorPromotionalOptOutpostOfficeBox);
                }
            	if(data.distributorPromotionalOptOutpostOfficeBoxPostalCode) {
                    self.distributorPromotionalOptOutpostOfficeBoxPostalCode(data.distributorPromotionalOptOutpostOfficeBoxPostalCode);
            	}
            	if(data.servicePhoneNum) {
                    self.servicePhoneNum(data.servicePhoneNum);
            	}
            	if(data.distributorPromotionalOptOutEmail) {
                    self.distributorPromotionalOptOutEmail("mailto:"+data.distributorPromotionalOptOutEmail);
                }
            	if(data.address) {
					self.address(data.address);
                }

            	self.isError("false");

		});

		ajaxObj.error(function() {
           	self.isError("");

		});

    }

      datenschutzContainer.each(function() {
           var vm = new PrivacyContactViewModel();
			ko.applyBindings(vm,this);
    });
});

if (!window['YT']) {var YT = {loading: 0,loaded: 0};}if (!window['YTConfig']) {var YTConfig = {'host': 'http://www.youtube.com'};}if (!YT.loading) {YT.loading = 1;(function(){var l = [];YT.ready = function(f) {if (YT.loaded) {f();} else {l.push(f);}};window.onYTReady = function() {YT.loaded = 1;for (var i = 0; i < l.length; i++) {try {l[i]();} catch (e) {}}};YT.setConfig = function(c) {for (var k in c) {if (c.hasOwnProperty(k)) {YTConfig[k] = c[k];}}};var a = document.createElement('script');a.type = 'text/javascript';a.id = 'www-widgetapi-script';a.src = 'https:' + '//s.ytimg.com/yts/jsbin/www-widgetapi-vflf8kghv/www-widgetapi.js';a.async = true;var b = document.getElementsByTagName('script')[0];b.parentNode.insertBefore(a, b);})();}
var currentPlayer = ''; 

if ($('.videoContainer').length>0) {

    function onYouTubeIframeAPIReady() {   
        $(document).ready(function () {
            var videoObject = [];
            
            $('.videoContainer').each(function (idx) {
                var $videoFrame = $(this).children('.videoframe');
                if ($videoFrame != undefined) {
                    videoObject.push({
                        id: $videoFrame.attr('id'),
                        videoId: $videoFrame.attr('data-video')
                    });
                    $(this).attr("index", idx);
                }
            });
            var playerInfoList = videoObject;
            
            if (typeof playerInfoList === 'undefined')
                return;
            
            for (var i = 0; i < playerInfoList.length; i++) {
                var done = false;
                function onPlayerStateChange(event) {
                    if (event.target.getPlayerState() == -1 && typeof dataLayer != 'undefined') {
                        dataLayer.push({
                            'event': 'customEvent',
                            'eventCategory': 'Videos',
                            'eventAction': 'Play',
                            'eventLabel': event.target.getVideoUrl()
                        })
                    }
                    if (event.data == YT.PlayerState.ENDED && typeof dataLayer != 'undefined') { 
                        dataLayer.push({
                            'event': 'customEvent',
                            'eventCategory': 'Videos',
                            'eventAction': 'Watch to End',
                            'eventLabel': event.target.getVideoUrl()
                        });
                    }
                }
                currentPlayer = new YT.Player(playerInfoList[i].id, {
                    height: 310,
                    width: 640,
                    videoId: playerInfoList[i].videoId,
                    playerVars: {
                        html5: (typeof(window.respond) === "undefined") ? 1 : 0,
                        wmode: 'transparent',
                        showinfo: 0,
                        enablejsapi: 1,
                        modestbranding: 1
                    },
                    events: {
                        'onReady': function(){},
                        'onStateChange': onPlayerStateChange
                    }
                });
                playerInfoList[i].player = currentPlayer;
            }
            updateVideoContainerSize();
            $(".modal").on('shown.bs.modal', function () {
                var $video = $(this).find('.videoContainer');
                var player;
                var videoId;
                if (typeof($video.attr("index"))!=="undefined") {
                    var index = parseInt($video.attr("index"));
                    player = playerInfoList[index].player;
                    videoId = playerInfoList[index].videoId;
                }
                
                if (player!=null) {
                    setTimeout(function() {
                        if (!($("html").hasClass("ipadClass") || $("html").hasClass("nexus7"))) {
                            player.seekTo(0);
                            player.playVideo();
                        } else {
                            var htmlEmbedCode = player.getVideoEmbedCode();
                            $video.html(htmlEmbedCode);
                        }

                    }, 200);
                }
                 
            });
            $(".modal").on('hidden.bs.modal', function () {
                var $video = $(this).find('.videoContainer');
                var player;
                if (typeof($video.attr("index"))!=="undefined") {
                    var index = parseInt($video.attr("index"));
                    player = playerInfoList[index].player;
                }
                var $el = $(this);
                if (player!=null) {
                    if (!($("html").hasClass("ipadClass") || $("html").hasClass("nexus7"))) {
                        player.pauseVideo();
                    } else {
                        $video.html("");
                    }
                }
            });
        });
    }
    
    function updateVideoContainerSize(){
        if($(this).parents(".modal-body:first").length > 0) {
            return;
        }
        $('.videoContainer').each(function(){
            var newVideoWidth = $(this).outerWidth();
            var newVideoHeight = $(this).outerHeight();
            
            if( $(this).parents('.tab-pane')[0]){
                newVideoWidth = $(this).parents('.tab-pane').width();
                newVideoHeight = $(this).parents('.tab-pane').height();
            }
            else if( $(this).parents('.expandables')[0]){
                newVideoWidth = $(this).parents('.expandables').width();
                newVideoHeight = $(this).parents('.expandables').height();
            }
        });
    }

    $(document).on('click', '.videoModal .close', function(e){ 
        $(this).closest('.box.stage').removeClass('miniature'); 
    });       
}
/*!
* contactForm.js
* This file contains the code for the contact form (4 steps).
* 
* @project   E.ON DE
* @date      2014-05-27 
* @author    DIVYAM RASTOGI, SapientNitro <drastogi4@sapient.com>
* @licensor  E.ON
* @NOTE
*/

// Declaring namespace parameter
var eonde = eonde || {};

$(function() {
    var contactForms = $('#contactForm');
    if (contactForms.length === 0) {
        return;
    }
	eonde.vmContactForm = function() {
		var self = this;
		var $plz = $('#contactForm #PLZ');
		var $overlay = contactForms.find('.forZipOverlay');
		//Calling all the form related service URLs from eonde.config.js
        var formServiceURL = eonde.Config.serviceURLs.formService;
        var zipcodeServiceURL = eonde.Config.serviceURLs.zipcodeService;
		var authorizationHeaderVal = eonde.Config.serviceURLs.authorization;
		var QueryString = eonde.Utils.QueryString;

		var formId = 'formId=email';
		var pkErrorMessages = {"subject" : eonde.i18n.get('online_err_subject_missing'), "message":eonde.i18n.get('online_err_message_missing'), "salutation":eonde.i18n.get('online_err_salutation_missing'),
		 "firstname":eonde.i18n.get('online_err_firstname_missing'), "lastname":eonde.i18n.get('online_err_lastname_missing'), 
		 "alreadyCustomer":eonde.i18n.get('online_err_contractnumber_missing'),
		  "zipCode" :eonde.i18n.get('online_err_zip_missing'), "phoneNumber" : eonde.i18n.get('online_err_phone_missing') , "phoneNumberOther" : eonde.i18n.get('online_err_telefonnummer_missing'), "email" : eonde.i18n.get('online_err_email_missing') , "company" : "",
		  "invalidZip" : eonde.i18n.get('online_err_zip_invalid')};

		var gwErrorMessages = {"subject" : eonde.i18n.get('online_err_subject_missing'), "message":eonde.i18n.get('online_err_message_missing'), "salutation":eonde.i18n.get('online_err_salutation_missing'), 
		"firstname":eonde.i18n.get('online_err_firstname_missing'), "lastname":eonde.i18n.get('online_err_lastname_missing'), 
		"alreadyCustomer":eonde.i18n.get('online_err_contractnumber_missing'),
		"zipCode" : eonde.i18n.get('online_err_zip_missing'), "company" : eonde.i18n.get('online_err_company_missing') , "phoneNumber" : eonde.i18n.get('online_err_phone_missing'), "phoneNumberOther" : eonde.i18n.get('online_err_telefonnummer_missing'), "email" : eonde.i18n.get('online_err_email_missing'),
		"invalidZip" : eonde.i18n.get('online_err_zip_invalid')};

		//Custom handler to apply error class on input elements
        ko.bindingHandlers.validationElement = {
        update: function (element, valueAccessor) {
                var valueIsValid = valueAccessor().isValid();
                if (!valueIsValid && self.showErrorMessages() === true) {
                    $(element).addClass("input-error");
                } else {
                    $(element).removeClass("input-error");
                }
            }
        }

        //Error messages
		self.cfErrorMessages = ko.observable({});

		//Keeping track of errors in ajax calls
        self.hasBackendErrors = ko.observable (false);
        self.backendErrors = ko.observable ("");
        self.showErrorMessages = ko.observable(false);

		//keeps track of visibility of form steps and gets modiefied by "submitStep" and "editStep"
    	self.step = ko.observable('1');	

    	//values for dropdown menus
        self.titles = [eonde.i18n.get('online.form.dd.title.option2'), eonde.i18n.get('online.form.dd.title.option1')];
        self.salutations = [{id: "", description:eonde.i18n.get('online.form.optiondefault')}, 
							{id: "Herr", description:eonde.i18n.get('online.form.dd.salutation.Herr')}, 
							{id: "Frau", description:eonde.i18n.get('online.form.dd.salutation.Frau')}];

        //Step 1 variables
        self.message = ko.observable('');
        self.subject = ko.observable('');        
        self.alreadyCustomer = ko.observable('0');
        self.contractAccount = ko.observable('');
		/*self.enterKeyPressed = ko.observable(false);*/

		//Step 2 variables
		self.salutation = ko.observable('');
		self.title = ko.observable('');
		self.firstname = ko.observable('');
		self.lastname = ko.observable('');
		self.company = ko.observable('');
		self.zipCode = ko.observable('');
		self.billingCities = ko.observableArray();
		self.billingCity = ko.observable('');
		self.phoneNumber = ko.observable('');
		self.email = ko.observable('');
		self.customerType = ko.observable('');
		self.confirmationMail = ko.observable(false);
		self.confirmationAdvertisingEmail = ko.observable(false);
		self.confirmationAdvertisingPhone = ko.observable(false);

		//Step 3
        self.displaySalutation = ko.observable('');
        self.displaySubject = ko.observable('');
		self.zipCitiesList = ko.observableArray();
		
		self.clearBackendErrors = function() {
			self.hasBackendErrors(false);
			self.backendErrors("");
		}
		
		self.handleBackendErrors = function(data) {
			var errorString = eonde.Utils.showBackendErrors(data, "Online", self.step(), self.customerType());
			if (errorString !== null && errorString !== "") {
				self.hasBackendErrors(true);
				self.backendErrors(errorString);
			}
		}
		var finalResultData, limitExists=false, loadMoreDivResult=false, requestUrl="", loadMoreValue='0';
		self.searchTerm = ko.observable("");
		self.response = ko.observable("");
		getZip = function (searchTerm, response) {
			eonde.Utils.trackVirtualPageCall("/zipcodes");
			self.clearBackendErrors();
			$overlay.addClass('zipOverlay');
			$plz.addClass('ui-autocomplete-loading').attr('readonly', true);
			self.searchTerm(searchTerm);
			self.response(response);
			if(limitExists && loadMoreValue=='1'){
				requestUrl =eonde.Config.serviceURLs.zipcodeService+'clientId=eonde&query=' + encodeURIComponent(self.searchTerm()); 
			} else requestUrl = eonde.Config.serviceURLs.zipcodeService+'clientId=eonde&limit=10&query=' + encodeURIComponent(self.searchTerm());

			$.ajax({
                beforeSend: function(xhr) {
                    xhr.setRequestHeader('Authorization', authorizationHeaderVal);
                },
                dataType: "json",
                type: 'GET',
                url: requestUrl
            }).done( function(data) {
            	$plz.removeClass('ui-autocomplete-loading').removeAttr('readonly');
            	$overlay.removeClass('zipOverlay');

            	//add load more named row to autocomplete menu
				if(data.more){
					loadMoreDivResult=data.more;
					loadMoreValue=1;
				} else{
				 loadMoreDivResult=false;
				 loadMoreValue=0;
				}
				
				finalResultData= eonde.Utils.getZipCodesList(data.zipCodes, self.zipCitiesList);
				if(!limitExists){
					finalResultData=finalResultData.splice(0,10);
				}
				if(loadMoreDivResult){
					finalResultData.push(eonde.i18n.get("autocomplete.load.more.text"));
				}
                response($.map(finalResultData, function (item, index) {
                    if(index == 0) {
                    	self.zipCode(item);
                    }
					return {
						value: item
					}
				}));
				/*if(self.enterKeyPressed()) {
					$plz.blur();
					submitStep(self.step());
				}*/
				limitExists=false;
            	//add a custom name to the autocomplete
				$plz.autocomplete("widget").addClass("contactAutocomplete");
				if(loadMoreDivResult){				
					$('.contactAutocomplete li:last-child a').on('click', function(event) {
						limitExists=true;
						$('.contactAutocomplete').hide();
						$plz.val(self.searchTerm());
						$plz.autocomplete("search", self.searchTerm());
						event.stopImmediatePropagation();					
					});
				}
				$('.ui-menu').scrollTop(0);
            }).fail(function(data) {
            	$plz.removeClass('ui-autocomplete-loading').removeAttr('readonly');
            	$overlay.removeClass('zipOverlay');
            	if(!self.zipCode.isValid() && !self.showErrorMessages()){
            		self.hasBackendErrors();
					self.handleBackendErrors(data);      
					self.backendErrors("Postleitzahl ist ung�ltig, nur Ziffern");
            	}
            });
		};
                
		$plz.keydown(function(event){
            if (event.keyCode !== 13) {
                if ($(this).val() === eonde.i18n.get("autocomplete.load.more.text")) {
					event.stopImmediatePropagation();
					event.stopPropagation();
					event.preventDefault();
					return false;
				}
			}
		}).autocomplete().keyup(function(event) {
			if (event.keyCode == 13) {
				if ($(this).val() === eonde.i18n.get("autocomplete.load.more.text")) {
					limitExists=true;
					$(this).val(self.searchTerm());
					$(this).autocomplete("search", self.searchTerm());
				}
			}
			eonde.Utils.changeDelayZipAutocomplete(this);
        });
		
        //Data to be submitted, accumulated in steps in order to prevent loss of data
        var stepData = {};

		//bound to every "Weiter" button
	    submitStep = function (id) {
	        $("window").scrollTop(0);

			if (self.isValid()) {
				switch (id) {
					case "1":
						submitStep1();
						break;
					case "2":
						submitStep2();
						break;
					case "3":
						submitStep3();
						break;
					case "4":
						submitStep4();
						break;
				}
			} else {
				if(!self.zipCode.isValid()){
					self.clearBackendErrors();
				}
				self.showErrorMessages(true);
			}
	    };

	    //bound to every "Zur�ck" button and to all "�ndern" buttons in step 4
	    editStep = function (id) {
	        $(window).scrollTop(0);
			self.showErrorMessages(false);
            self.hasBackendErrors(false);
	        self.step(id);
	    };
	    var subjectLengthVal = $("#subjectLength").data('cq-attr');
	    var singleSubjectVal = $('.singleSubjectChosen').text();
	    var optInTextVal = $("#optInTextValue").data('cq-attr');

	    //called when customer type Yes/No is selected
	    //changes text in /step2 last fieldset
	    showCustomerText = function(typeOfCustomer) {
	    	if(typeOfCustomer == 'yes') {
	    		$('.ofCustomerTextYes').css('display','block');
	    		$('.ofCustomerTextNo').css('display','none');
	    	}
	    	if(typeOfCustomer == 'no') {
	    		$('.ofCustomerTextYes').css('display','none');
	    		$('.ofCustomerTextNo').css('display','block');
	    	}
	    }

	    //called when moving from step 1 to 2 etc
	    //user-interface should be disabled until service answers
	    //"step" should be updated only when "done", otherwise errormessage should be displayed
	    submitStep1 = function () {
	    	if ( subjectLengthVal > 1 ){
	        	stepData.subject = self.subject();
	        } else stepData.subject = singleSubjectVal;

	        stepData.message = self.message();
            
	        stepData.alreadyCustomer = self.alreadyCustomer();
	        if (stepData.alreadyCustomer == '1') {
	        	stepData.contractNumber = self.contractAccount();
	        	showCustomerText('yes');
	        }
	        else {
	        	showCustomerText('no');
	        }
			var newSubject = self.subject().replace('/','_');
			self.displaySubject(eonde.i18n.get('contact.form.dd.'+newSubject));

	        editStep('2');
			self.showErrorMessages(false);
			eonde.Utils.formProgressSteps();
	    };

	    submitStep2 = function () {
            stepData.salutation = self.salutation();
            stepData.firstname = self.firstname();
            stepData.lastname = self.lastname();
            stepData.company = self.company();
            stepData.zip = self.zipCode().substring(0,5);
            stepData.phone = self.phoneNumber();
            stepData.email = self.email();
            stepData.city = self.billingCity();
            if(self.confirmationMail()){
	        	stepData.confirmationMail = '1';
            }
            else{
	        	stepData.confirmationMail ='0';
            }
            if(optInTextVal){
	            if(self.confirmationAdvertisingEmail()){
		        	stepData.confirmationAdvertisingEmail = '1';
	            }
	            else{
		        	stepData.confirmationAdvertisingEmail ='0';
	            }
	            if(self.confirmationAdvertisingPhone()){
		        	stepData.confirmationAdvertisingPhone = '1';
	            }
	            else{
		        	stepData.confirmationAdvertisingPhone ='0';
	            }
            }
	        editStep('3');
            self.displaySalutation(eonde.i18n.get('online.form.dd.salutation.'+self.salutation()));
            
			self.showErrorMessages(false);
			eonde.Utils.formProgressSteps();
	    };

	    submitStep3 = function () {
	    	stepData.confirmation = true;
			eonde.Utils.formProgressSteps();
			
	    };

	    submitStep4 = function () {
	    	//Call service for submission.
	    	submitDataToContact(ko.toJSON(stepData), '4')
	    }
		
		submitDataToContact = function(dataObj, nextStep) {
	        self.hasBackendErrors(false);
			var requestURL = formServiceURL+'clientId=eonde&formId=email';
	        eonde.Utils.trackVirtualPageCall("/forms");			

	        $.ajax({
	            beforeSend: function(xhr) {
	                xhr.setRequestHeader('Authorization', authorizationHeaderVal);
	            },
	            dataType: "json",
	            type: 'POST',
	            url: requestURL,
	            data: 'data=' + encodeURIComponent(dataObj)
	        }).done( function(data) {
				self.clearBackendErrors();
	            if (data != null ) {
	                self.step(nextStep);
	                $(window).scrollTop(0);
	            }
				eonde.Utils.formProgressSteps();
	        }).fail(function(data) {
				self.hasBackendErrors(true);
				self.handleBackendErrors(data);
				$(window).scrollTop(0);
	        });

		};

        self.enterPressed = function(data, event) {        	            
            if(data.item && data.item.value === eonde.i18n.get("autocomplete.load.more.text")){
                return false;
            }
        	if(event.which == 13 && !$(event.target).is('textarea')) {
        		//self.enterKeyPressed(true);
        		if(!$overlay.hasClass('zipOverlay')) {
            	$(event.target).blur();
                submitStep(data.step());
                return false;
            }
        	}
        	else {
        		/*Reset the enter key press variable on all other key presses.*/
        		//self.enterKeyPressed(false);
        	}
            return true;
        }


		self.init = function() {
			self.showErrorMessages(false);
            if(QueryString.customerType){
				self.customerType(QueryString.customerType);
            }
            else{
				var customerChecker = CQ_Analytics.ProfileDataMgr.getProperty('userType');
                if(customerChecker=='RC'){
                    self.customerType("pk");
                }else{
                    self.customerType("gw");
                }
            }

			if (self.customerType() === "pk") {
				self.cfErrorMessages(pkErrorMessages);
			} else if (self.customerType() === "gw") {
				self.cfErrorMessages(gwErrorMessages);
			}
			var subjectParamVal = $("#betreffValue").data('cq-attr');
			if (subjectParamVal) {
				var subjects = self.subjectDropdown;
				for (var i = 0,len=subjects.length; i < len; i++) {
					if (subjects[i]['betreffId'] === subjectParamVal) {
						self.subject(subjects[i]['id']);
						break;
					}
				}
			}
			self.applyValidations();
			ko.validation.init({insertMessages: false});
		}

        //Adding custom zip code validation as part of EONWKT-4307
        self.zipErrorMsg = ko.observable("");
        self.checkZipCode = function (item, event) {
            if (self.step() == "2") {
                if (item.length < 3) {
                    self.zipErrorMsg(eonde.i18n.get("zip.validationerror.atleastthreedigits"));
                } else if(!$.isNumeric(item) && typeof($plz.data("autocomplete"))!=="undefined" && !$plz.autocomplete("widget").is(':visible')) {
                    self.zipErrorMsg(eonde.i18n.get("zip.validationerror.nonnumericnoresults"));
                } else if (!/^\d{4,5}\s+[^0-9\s]+.*$/.test(item)) {
                    self.zipErrorMsg(eonde.i18n.get("zip.validationerror.entermoredigits"));
                }
                if (!/^\d{4,5}\s+[^0-9\s]+.*$/.test(item)) {
                    return false;
                } else {
                    if (item !== null && item !== '') {
                        var zipCity = item.replace(/ +(?= )/g,'');
                        if (!/^\d{5}.*$/.test(item) || self.zipCitiesList().length == 0) {
                            self.zipErrorMsg(eonde.i18n.get("zip.validationerror.entermoredigits"));
                        } 
                        if ((self.zipCitiesList().length == 0 || (self.zipCitiesList().length > 0 && self.zipCitiesList().indexOf(zipCity) < 0))) {
                            self.zipErrorMsg(eonde.i18n.get("zip.validationerror.unknowncombination"));
                            return false;
                        }
                    }
                    return true;
                }
            } else {
                return true;
            }
        };

		self.applyValidations = function() {

			if ( subjectLengthVal > 1 ){
				self.subject.extend({
					required : {onlyIf: function (){ return (self.step() == "1");}, message: self.cfErrorMessages()["subject"]}
				});
			}

			self.message.extend({
				required : {onlyIf: function () { return (self.step() == "1");}, message : self.cfErrorMessages()["message"]}
			});

			self.salutation.extend({
				required: {onlyIf: function () { return (self.step() == "2"); }, message: self.cfErrorMessages()["salutation"]}
			});
			self.firstname.extend({
				required: {onlyIf: function () { return (self.step() == "2"); }, message: self.cfErrorMessages()["firstname"]},
				pattern : {
                    params : /[a-zA-Z]/,
                    message : self.cfErrorMessages()["firstname"]
                }
			});
			self.lastname.extend({
				required: {onlyIf: function () { return (self.step() == "2"); }, message: self.cfErrorMessages()["lastname"]},
				pattern : {
                    params : /[a-zA-Z]/,
                    message : self.cfErrorMessages()["lastname"]
                }
			});
			self.company.extend({
				required : {onlyIf : function () { return self.step() == "2" && self.customerType()==='gw'}, message : self.cfErrorMessages()["company"]}
			});
			self.zipCode.extend({
				validation : {validator : self.checkZipCode, message : function() { return self.zipErrorMsg();}},
				required : {onlyIf: function () { return (self.step() == "2"); }, message : self.cfErrorMessages()["zipCode"]}
			});
			self.phoneNumber.extend({
				required : {onlyIf: function () { return ((self.step() == "2" && self.subject() ==eonde.i18n.get('contact.form.dd.EONSolar')) || self.confirmationAdvertisingPhone()); }, message : self.cfErrorMessages()["phoneNumberOther"]},
                phoneNumber : {onlyIf: function () { return (self.step() == "2" && self.subject() ==eonde.i18n.get('contact.form.dd.EONSolar')); }, message : self.cfErrorMessages()["phoneNumberOther"], params: true}
			});
			self.email.extend({
				required : {onlyIf: function () { return (self.step() == "2"); }, message : self.cfErrorMessages()["email"]},
                email : {onlyIf: function () { return (self.step() == "2"); }, message : self.cfErrorMessages()["email"], params: true}
			});

			self.stepOneGroup = ko.validation.group([self.subject, self.message]);
			self.stepTwoGroup = ko.validation.group([self.company, self.salutation, self.firstname, self.lastname, self.zipCode, self.phoneNumber, self.email]);
		}

	};
    
    // The binding should be applied only if the form exists
    var contactFormView = contactForms.get(0);
    if (contactFormView) {
		var cfVM = new eonde.vmContactForm();
		cfVM.init();
        ko.applyBindings (ko.validatedObservable(cfVM), contactFormView);      
    }
	$('#contactForm label, #contactForm input').click(function(e){
		if ($(e.target) !== null && ($(e.target).is('a') || $(e.target).is('a span'))) {
			return;
        }
        var thisObj = $(this);
        if(thisObj.siblings('input[type=radio]').length > 0){
            thisObj.closest('div').siblings().find('label').removeClass('checkedInput');
            thisObj.addClass('checkedInput');
        }
        if(thisObj.siblings('input[type=checkbox]').length > 0){
            if(!(thisObj).hasClass('readonlylabel')){
				if((thisObj).hasClass('checkedInputCheckbox')){
					thisObj.removeClass('checkedInputCheckbox');
				}
				else {
					thisObj.addClass('checkedInputCheckbox');
				}
            } else {
				return false;
			}
        }
    });
	$('.lt-ie9 #contactForm input[type=radio]').on('change', function(e){
		var thisObj = $(this);
		thisObj.closest('div').siblings().find('label').removeClass('checkedInput');
		thisObj.siblings('label').addClass('checkedInput');
	});
});

$(document).ready(function(){
    var consumptionEntryrDivs = jQuery(".consumptionEntryrDiv");
    if (consumptionEntryrDivs.length === 0) {
        return;
    }
	else{
		consumptionEntryrDivs.closest('.one-column').addClass('custom-one-colum');
	}

	/*
	@public ConsumptionEntryViewModel: Knockout View Model for the Product Advisor Page Component
	*	The View Model is common for Residential and Business Customers as well as for
	*	different type of products e.g. Strom and Gas. The View Model contains all the 
	* 	Knockout data binding and validation logic as well as acts as a closure for all
	*	public/private methods and variables being utilized in the component.
	*/
	var ConsumptionEntryViewModel = function(containerDivObj) {
		//Saving the 'this' instance to be used through the View Model
		var self=this;

		//Get the Div to which the view model is bound
		var $containerDiv = jQuery(containerDivObj);
		
		//Private variables used inside the View Model
		var _rcStromKwhValues = ["1.500","2.500","3.000","4.000","5.000","7.000"];
		var _bcStromStepValues = ["10.000", "25.000", "100.000", "1.000.000", "20.000.000", "100.000.000"];
        var _bcErdgasStepValues = ["20.000", "50.000", "300.000", "5.000.000", "50.000.000", "200.000.000"];
		var _productType = $containerDiv.find("input[name='hdnProductType']").length > 0 ? $containerDiv.find("input[name='hdnProductType']").val() : "";
		var _userType = 'gw';
		var _cache = {};
        var _oldterm;
				
		//Constant values Declaration
		var PRIVATE = 'pk';
		var BUSINESS = 'gw';
		var ENERGY = 'Strom';
		var GAS = 'Erdgas';
		var KWH_DEFAULT = "2.500";
		var KWH_GAS_DEFAULT = "11.700";
		var KWH_BUSINESS_DEFAULT = "15.000";
		var KWH_GAS_BUSINESS_DEFAULT = "50.000";
		
		//jQuery reused object variables
		var $sliderRC = $containerDiv.find(".sliderRC");
		var $sliderRCGas = $containerDiv.find(".sliderGas");
		var $sliderBC = $containerDiv.find(".sliderBC");
		var $qm = $containerDiv.find("#qm");
		var $stromBar = $containerDiv.find(".selectbar1.strom, .selectbar2.strom, .selectbar3.strom, .selectbar4.strom");
		var $gasBar = $containerDiv.find(".selectbar1.erdgas, .selectbar2.erdgas, .selectbar3.erdgas, .selectbar4.erdgas");
		var $manSlider = $containerDiv.find(".selectman");
		
		//Defining observable fields for data binding to the UI
		self.qmValue = ko.observable(100);
		self.kwhValue = ko.observable();
		
		if ($('.consumptionEntryMain .advisorKWH').length > 0) {
            $('.consumptionEntryMain .advisorKWH').on('change',function(){
                var selfInp=$(this);
                selfInp.val(eonde.Utils.formatConsumption(selfInp.val()));
            });
        }
		/*
		@private submitPage : method to check the input fields and show error messages if any
		@param e: event object of the triggered event
		*/
		self.submitPage = function(e){
			if (self.isValid()) {
				var kwhValue = self.kwhValue();
				
				//Store consumption to Local Storage based on customer type value
				eonde.Utils.setIStorageValue(_userType + "[consumption][" + _productType + "]",kwhValue);
				
				var $urlOptions = jQuery("span.urloption[data-name^='urlOption" + _productType + "']");
				$urlOptions.each(function() {
					if (jQuery(this).attr("data-max") !== "unlimited") {
						if (parseInt(kwhValue.replace(/\./g,'')) >= parseInt(jQuery(this).attr("data-min").replace(/\./g,'')) && parseInt(kwhValue.replace(/\./g,'')) <= parseInt(jQuery(this).attr("data-max").replace(/\./g,''))) {
							window.location = jQuery(this).attr("data-url") + ".html";
						}
					} else {
						if (parseInt(kwhValue.replace(/\./g,'')) >= parseInt(jQuery(this).attr("data-min").replace(/\./g,''))) {
							window.location = jQuery(this).attr("data-url") + ".html";
						}
					}
				});
				
			} else {
				self.errors.showAllMessages(true);
				return false;
			}
		}
		
		/*
		@private checkDefaultText : method called to show default text when any input text box is cleared
		@param e: event object of the triggered event
		*/
		self.checkDefaultText = function(e){
			var val = jQuery(this).val();
			if(val == "" || val == jQuery(this).attr("defaulttext")){
				jQuery(this).val(jQuery(this).attr("defaulttext"));
			}
		}

		/*
		@private removeDefaultText : method called on click of input text box to clear the default text
		@param e: event object of the triggered event
		*/
		self.removeDefaultText = function(e){
			if(jQuery(this).val() == jQuery(this).attr("defaulttext")){
					jQuery(this).val("");
			}
		}

		/*
		@private sliderRCChanged : method called on change of the RC strom slider
		@param e: event object of the triggered event
		@param slider: slider object of the jQuery slider function
		*/
		self.sliderRCChanged = function(event, slider){
			
			for(var i=0;i<$manSlider.length;i++){
				if(i<=slider.value-1){
					$manSlider.eq(i).addClass("active");
					self.kwhValue(_rcStromKwhValues[i]);
				}else{
					$manSlider.eq(i).removeClass("active");
				}
				
			}
			
		}
		
		/*
		@private sliderRCGasChanged : method called on change of the RC gas slider
		@param e: event object of the triggered event
		@param slider: slider object of the jQuery slider function
		*/
		self.sliderRCGasChanged = function(event, slider){
			self.qmValue(slider.value);
			var qmVal = slider.value;
			if (qmVal <= 100) {
                self.kwhValue((qmVal * 0.117).toFixed(3));
			} else {
                self.kwhValue((qmVal * 0.164).toFixed(3));
			}
		}
		
		/*
		@private sliderBCChanged : method called on change of the BC strom slider
		@param e: event object of the triggered event
		@param slider: slider object of the jQuery slider function
		*/		
		self.sliderBCChanged = function(event, slider){
			
			for(var i=0;i<$stromBar.length;i++){
				if(i<=slider.value - 1){
					$stromBar.eq(i).addClass("active");
					if (_productType == ENERGY) {
						self.kwhValue(_bcStromStepValues[i]);
					} else if (_productType == GAS) {
						self.kwhValue(_bcErdgasStepValues[i]);
					}
				}else{
					$stromBar.eq(i).removeClass("active");
				}
			}	
			if (_productType == ENERGY) {
				self.kwhValue(_bcStromStepValues[slider.value]);
			} else if (_productType == GAS) {
				self.kwhValue(_bcErdgasStepValues[slider.value]);
			}
		}
		
		/*
		@private selectmanClicked : method called on click of man symbol for the RC strom slider
		@param e: event object of the triggered event
		*/
		self.selectmanClicked = function(e){
			var id=jQuery(this).index();

			$sliderRC.slider("value",id+1);
			self.sliderRCChanged(null, {value:id+1});
		}
		
		/*
		@private selectBarClicked : method called on click of the bars symbol for the BC strom slider
		@param e: event object of the triggered event
		*/
		self.selectBarClicked = function(e){
			var id=jQuery(this).index();

			$sliderBC.slider("value",id);
			self.sliderBCChanged(null, {value:id});
		}
		
		/*
		@private selectGasBarClicked : method called on click of the bars symbol for the BC gas slider
		@param e: event object of the triggered event
		*/
		self.selectGasBarClicked = function(e){
			var id=jQuery(this).index();
            $sliderBC.slider("value",id);
            self.sliderBCChanged(null, {value:id});
		}
		
		/*
		@private qmChanged : method called to update the qm slider on change of qm input text value
		@param e: event object of the triggered event
		*/
		self.qmChanged = function(e){
			var val = jQuery(this).val();
			var newVal = val;
			
			if (val >=30 && val <=200) {
				if (val % 5 > 0) { newVal = val - val % 5; }

				$sliderRCGas.slider("value",newVal);
				self.sliderRCGasChanged(null, {value:newVal});
			}
		}
		
		/*
		@private qmOutOfRange : method called to validate the range of qm entered in the text field
		@param e: event object of the triggered event
		*/
		self.qmOutOfRange = function(e) {
			var val = jQuery(this).val();
			var newVal = val;
			if (val < 30) {
				$qm.val(30);
				newVal = 30;
			}
			else if (val >200) {
				$qm.val(200);
				newVal = 200;
			}
			$sliderRCGas.slider("value",newVal);
			self.sliderRCGasChanged(null, {value:newVal});
		}

		
		
		/*
		@private changeView : method called to switch between views
		@param e: event object of the triggered event
		*/
		self.changeView = function(item, event) {
			var $obj = $(event.target);
			eonde.Utils.clearIStorageValue(_userType+"[city]");
		}
		
		
		
				
		//Adding events to all the actionable fields/buttons
		$containerDiv.find(".buttonweiter").click(self.submitPage);
		
		if ($manSlider.length > 0) {
			$manSlider.click(self.selectmanClicked);
		}
		if ($stromBar.length > 0) {
			$stromBar.click(self.selectBarClicked);
		}
		if ($gasBar.length > 0) {
            $gasBar.click(self.selectBarClicked);
		}
		
		if ($qm.length > 0) {
			$qm.change(self.qmOutOfRange);
			$qm.keyup(self.qmChanged);
		}

		self.getMaxSliderValue = function() {
			if (_productType == ENERGY) {
				return _bcStromStepValues.length - 1;
			} else if (_productType == GAS) {
				return _bcErdgasStepValues.length - 2;
			}
		}
		
		//Initializing sliders for all the input fields which take their value from an slider
		if ($sliderRC.length > 0) {
			$sliderRC.slider({animate: true,
									range: "min",
									min:1,
									max:6,
									step:1,
									value:2,
									slide:self.sliderRCChanged,
									disabled:false});
		}
		if ($sliderRCGas.length > 0) {
			$sliderRCGas.slider({animate: true,
									range: "min",
									min:30,
									max:200,
									step:5,
									value:100,
									slide:self.sliderRCGasChanged,
									disabled:false});
		}
		if ($sliderBC.length > 0 && _productType == ENERGY) {
			$sliderBC.slider({animate: true,
									range: "min",
									min: 0,
									max: _bcStromStepValues.length - 1,
                              value: 1,
									step: 1,
									slide:self.sliderBCChanged,
									disabled:false});
		}
		if ($sliderBC.length > 0 && _productType == GAS) {
			$sliderBC.slider({animate: true,
									range: "min",
									min: 0,
                              max: _bcErdgasStepValues.length - 1,
									value: 2,
									step: 1,
									slide:self.sliderBCChanged,
									disabled:false});
		}
		
		/*
        @private formatConsumption : method to format the consumption input value and append thousands separator
        @param nStr: value of the consumption to be formatted
        */
        self.formatConsumption = function(nStr) {
            var sep = '.';
            nStr += '';
            x = nStr.split(',');
            x1 = x[0];
            var rgx = /(\d+)(\d{3})/;
            while (rgx.test(x1)) {
                x1 = x1.replace(rgx, '$1' + sep + '$2');
            }
            return x1;
        }
        
        /*
		@private validateKwhValue : method to validate the consumption value entered by user and swtich to default in value is incorrect
		@param item: object that triggered the event
		@param e: event object of the triggered event
		*/
		self.validateKwhValue = function (item, event) {
			if (_userType == PRIVATE && _productType == ENERGY) {
				if (item != undefined && ($.trim(item) == '' || isNaN(item.replace(/\./g,'')) || (!isNaN(item.replace(/\./g,'')) && parseInt(item.replace(/\./g,''),10) < 0))) {
					$(event.target).val("2.500");
					self.kwhValue("2.500");
					$sliderRC.slider("value",2);
					self.sliderRCChanged(null, {value:2});
				} else {
					self.kwhValue(eonde.Utils.formatConsumption(item));
					if (_rcStromKwhValues.indexOf(self.kwhValue()) >= 0) {
						$sliderRC.slider("value",_rcStromKwhValues.indexOf(self.kwhValue()) + 1);
						self.sliderRCChanged(null, {value:_rcStromKwhValues.indexOf(self.kwhValue()) + 1});
					} 
				}
			} else if (_userType == PRIVATE && _productType == GAS) {
				if (item != undefined && ($.trim(item) == '' || isNaN(item.replace(/\./g,'')) || (!isNaN(item.replace(/\./g,'')) && parseInt(item.replace(/\./g,''),10) < 0))) {

					$(event.target).val("11.700");
					self.kwhValue("11.700");
					$sliderRCGas.slider("value",100);
					self.sliderRCGasChanged(null, {value:100});
				} else {
					self.kwhValue(eonde.Utils.formatConsumption(item));
				}
			} else if (_userType == BUSINESS && _productType == ENERGY) {
				 if (item != undefined && ($.trim(item) == '' || isNaN(item.replace(/\./g,'')) || (!isNaN(item.replace(/\./g,'')) && parseInt(item.replace(/\./g,''),10) < 0))) {

					$(event.target).val("15.000");
					self.kwhValue("15.000");
					$sliderBC.slider("value",1);
					//self.sliderBCChanged(null, {value:1});
				} else {
					var index = eonde.Utils.getClosestRange(_bcStromStepValues, item);
					if (self.formatConsumption(item) == "15.000") {
						index = 1;
					}
					$sliderBC.slider("value", index);
					self.sliderBCChanged(null, {value: (index) });
					self.kwhValue(eonde.Utils.formatConsumption(item));
				}
			} else if (_userType == BUSINESS && _productType == GAS) {
				 if (item != undefined && ($.trim(item) == '' || isNaN(item.replace(/\./g,'')) || (!isNaN(item.replace(/\./g,'')) && parseInt(item.replace(/\./g,''),10) < 0))) {

					$(event.target).val("50.000");
					self.kwhValue("50.000");
					$sliderBC.slider("value",1);
					self.sliderBCChanged(null, {value:1});
				} else {
					var index = eonde.Utils.getClosestRange(_bcErdgasStepValues, item);
					$sliderBC.slider("value", index);
					self.sliderBCChanged(null, {value: (index) });
					self.kwhValue(eonde.Utils.formatConsumption(item));
				}
			}
			return true;
		}

		//Adding KO Validations to observable fields
		self.kwhValue.extend({
			validation: {validator: self.validateKwhValue, message: ""}
		});

		/*
		@private populateRequestValues : method to populate input parameters from the request url to
		*	support direct access. These values are given priority over the values in page properties
		*/
		self.populateZipConsumptionValues = function() {
			
			if (_userType == PRIVATE && _productType == ENERGY) {
				self.kwhValue(eonde.Utils.getIStorageValue(_userType + "[consumption][" + _productType + "]", "2.500"));
			} else if (_userType == PRIVATE && _productType == GAS) {
				self.kwhValue(eonde.Utils.getIStorageValue(_userType + "[consumption][" + _productType + "]", "11.700"));
			} else if (_userType == BUSINESS && _productType == ENERGY) {
				self.kwhValue(eonde.Utils.getIStorageValue(_userType + "[consumption][" + _productType + "]", "15.000"));
			} else if (_userType == BUSINESS && _productType == GAS) {
				self.kwhValue(eonde.Utils.getIStorageValue(_userType + "[consumption][" + _productType + "]", "50.000"));
			}
		}
		
		self.init = function() {
			self.populateZipConsumptionValues();
		}
	};
	
	//Initializing KO Validation Configuration
	eonde.Utils.koValidationInit();
	
	//Create View Model and apply binding to component div
	consumptionEntryrDivs.each(function() {
		var patvm = new ConsumptionEntryViewModel(this);
		patvm.init();
		var patvvm = ko.validatedObservable(patvm);
		ko.applyBindings(patvvm, this);
	});
	
	$('.consumptionEntryMain .accordion-toggle').on('click', function(e){
		var $clicked = $(this);
			var $panelAnchor = $clicked.parents(".panel-heading");
			//event.stopPropagation();
			var $oben = jQuery('.consumptionEntryMain .icon-stage_teaser_pfeil_oben');
			$oben.each(function(){
				jQuery(this).removeClass('icon-stage_teaser_pfeil_oben');
				jQuery(this).addClass('icon-stage_teaser_pfeil_unten');
			});
			if ($panelAnchor.length > 0) {
				var $expButton = $panelAnchor.find('button[name=expcol]');
				var $panelIn = $clicked.parents(".panel").find(".panel-collapse.in");
				if ($panelIn.length <= 0 && $expButton.hasClass('icon-stage_teaser_pfeil_unten')) {
					$expButton.removeClass('icon-stage_teaser_pfeil_unten');
					$expButton.addClass('icon-stage_teaser_pfeil_oben');
				} else {
					$expButton.addClass('icon-stage_teaser_pfeil_unten');
					$expButton.removeClass('icon-stage_teaser_pfeil_oben');
				}
			}
	});
    $('.conversionelements').each(function(){

        var tabclick = $(this).find('.dummy').attr('data');
        $(this).find('a[href='+tabclick+']').trigger('click');
    });

});
/*!
* 463_form_offer.js
* This file contains the code for the offer form (4 steps).
* 
* @project   E.ON DE
* @date      2014-06-02 
* @author    FLORIAN FEILER, SapientNitro <ffeiler@sapient.com>
* @licensor  E.ON
* @NOTE
*/

// Declaring namespace parameter
var eonde = eonde || {};

$(function() {

    var offerform = $('#offerform');
    if (offerform.length === 0) {
        return;
    }

    eonde.vmOfferform = function () {

        var self = this;

        //Calling all the form related service URLs from eonde.config.js
        var formServiceURL = eonde.Config.serviceURLs.formService;
        var zipcodeServiceURL = eonde.Config.serviceURLs.zipcodeService;
        var authorizationHeaderVal = eonde.Config.serviceURLs.authorization;
        var $overlay = offerform.find('.forZipOverlay');
		var subjectLengthVal = $("#subjectLength").data('cq-attr');
	    var singleSubjectVal = $('.singleSubjectChosen').text();

        //Custom handler to apply error class on input elements
        ko.bindingHandlers.validationElement = {
        update: function (element, valueAccessor) {
                var valueIsValid = valueAccessor().isValid();
                if (!valueIsValid && self.showErrorMessages() === true) {
                    $(element).addClass("input-error");
                } else {
                    $(element).removeClass("input-error");
                }
            }
        }
        
        self.showErrorMessages = ko.observable(false);
        self.hasBackendErrors = ko.observable(false);
        self.backendErrors = ko.observable("");

        //keeps track of visibility of form steps and gets modiefied by "submitStep" and "editStep"
        self.step = ko.observable("1");
        /*Storing enter key press*/
        /*self.enterKeyPressed = ko.observable(false);*/

        //values for dropdown menus
        self.titles = [eonde.i18n.get('online.form.dd.title.option1'), eonde.i18n.get('online.form.dd.title.option2')];
        self.salutations = [{id: "", description:eonde.i18n.get('online.form.optiondefault')}, {id: "Herr", description:eonde.i18n.get('online.form.dd.salutation.Herr')}, {id: "Frau", description:eonde.i18n.get('online.form.dd.salutation.Frau')}];
		
        //step 1 inputs:
        
        self.consumption = ko.observable("");
        self.company = ko.observable("");
        self.companyAddon = ko.observable("");
        self.street = ko.observable("");
        self.zip = ko.observable("");
        self.city = ko.observable("");
		self.subject = ko.observable('');    
		self.displaySubject = ko.observable("");
        //step 2 inputs:
        self.salutation = ko.observable("");        
        self.title = ko.observable("");
        self.firstname = ko.observable("");
        self.lastname = ko.observable("");
        self.phone = ko.observable("");
        self.email = ko.observable("");

        //Step 3
        self.displaySalutation = ko.observable("");
		self.zipCitiesList = ko.observableArray();
		self.confirmationAdvertising=ko.observable(false);
        ko.validation.registerExtenders();

        self.init = function () {
			
            self.applyValidations();
            ko.validation.init({insertMessages: false});
			
			$('#offerform input[type=checkbox]').keydown(function(e){      
               //check if the pressed key is Spacebar
               //then trigger the click() on the inner span to toggle the checkbox
               var thisObj = $(this);
               if(e.keyCode == 32){
                    if(!(thisObj).next("label").hasClass('readonlylabel')){
                        if((thisObj).next("label").hasClass('checkedInputCheckbox')){
                            thisObj.next("label").removeClass('checkedInputCheckbox');
                        }
                        else {
                            thisObj.next("label").addClass('checkedInputCheckbox');
                        }
                    } else {
                        return false;
                    }
               }
            });
        };

        self.enterPressed = function(data, event) {            
            if(data.item && data.item.value === eonde.i18n.get("autocomplete.load.more.text")){
                return false;
            }
            if(event.which == 13 && !$(event.target).is('textarea')) {
                if(!$overlay.hasClass('zipOverlay')) {
                $(event.target).blur();
                submitStep(data.step());
                return false;
            }
                //self.enterKeyPressed(true);
            } else {
                /*Reset the enter key press variable on all other key presses.*/
                //self.enterKeyPressed(false);
            }
            return true;
        }
        
        //bound to every "Weiter" button
        submitStep = function (id) {
        $(window).scrollTop(0);
            if (self.isValid()) {
                self.showErrorMessages(false);
                switch (id) {
                    case "1":
                        submitStep1();
                        break;
                    case "2":
                        submitStep2();
                        break;
                    case "3":
                        submitStep3();
                        break;
                    case "4":
                        submitStep4();
                        break;
                }
            } else {
                if(!self.zip.isValid()){
                    self.clearBackendErrors();
                }
                $(window).scrollTop(0);
                self.showErrorMessages(true);
            }
        };

        //bound to every "Zurück" button and to all "Ändern" buttons
        editStep = function (id) {
            self.hasBackendErrors (false);
            self.showErrorMessages(false);
            $(window).scrollTop(0);
            self.step(id);
        };
        
		
        self.clearBackendErrors = function() {
            self.hasBackendErrors(false);
            self.backendErrors("");
        }
        
        self.handleBackendErrors = function(data) {
            var errorString = eonde.Utils.showBackendErrors(data, "Online", self.step());
            if (errorString !== null && errorString !== "") {
                self.hasBackendErrors(true);
                self.backendErrors(errorString);
            }
        }

        submitStep1 = function () {
            self.step("2");
            eonde.Utils.formProgressSteps();
        };
        submitStep2= function () {
            self.step("3");
            self.displaySubject(eonde.i18n.get('offer.form.'+self.subject()) ? eonde.i18n.get('offer.form.'+self.subject()) : self.subject());
            self.displaySalutation(eonde.i18n.get('online.form.dd.salutation.'+self.salutation()));
            eonde.Utils.formProgressSteps();
            
            
        };
        submitStep3 = function () {

            var stepData = {};

			if ( subjectLengthVal > 1 ){
	        	stepData.type = self.subject();
	        } else stepData.type = singleSubjectVal;

            stepData.salutation = self.salutation();
            stepData.title = self.title() ? self.title : "";
            stepData.firstname = self.firstname();
            stepData.lastname = self.lastname();
            stepData.phone = self.phone();
            stepData.email = self.email();
            stepData.zip = self.zip().substring(0,5);
            stepData.city = self.zip().substring(6);
            
            stepData.consumption = self.consumption();
            stepData.company = self.company();
            stepData.companyAddon = self.companyAddon() ? self.companyAddon() : "n/a";
            stepData.street = self.street();
			if(self.confirmationAdvertising() == true) {
				stepData.confirmationAdvertising="1";
			} else {
				stepData.confirmationAdvertising="0";
			}
			
            submitDataToService(ko.toJSON(stepData), "4");
            self.showErrorMessages(false);

            
        };
        var finalResultData, limitExists=false, loadMoreDivResult=false, requestUrl="", loadMoreValue='0';
        self.searchTerm = ko.observable("");
        self.response = ko.observable("");
        getZip = function (searchTerm, response) {
            eonde.Utils.trackVirtualPageCall("/zipcodes");
            self.clearBackendErrors();
            $overlay.addClass('zipOverlay');
            $('#offerform #PLZ').addClass('ui-autocomplete-loading').attr('readonly', true);
            self.searchTerm(searchTerm);
            self.response(response);
            if(limitExists && loadMoreValue=='1'){
                requestUrl =eonde.Config.serviceURLs.zipcodeService+'clientId=eonde&query=' + encodeURIComponent(self.searchTerm()); 
            } else requestUrl = eonde.Config.serviceURLs.zipcodeService+'clientId=eonde&limit=10&query=' + encodeURIComponent(self.searchTerm());

            $.ajax({
                beforeSend: function(xhr) {
                    xhr.setRequestHeader('Authorization', authorizationHeaderVal);
                },
                dataType: "json",
                type: 'GET',
                url: requestUrl
            }).done( function(data) {
                $('#offerform #PLZ').removeClass('ui-autocomplete-loading');
                $('#offerform #PLZ').removeClass('ui-autocomplete-loading').removeAttr('readonly');
				$overlay.removeClass('zipOverlay');

                //add load more named row to autocomplete menu
                if(data.more){
                    loadMoreDivResult=data.more;
                    loadMoreValue=1;
                } else{
                 loadMoreDivResult=false;
                 loadMoreValue=0;
                }
                
                finalResultData= eonde.Utils.getZipCodesList(data.zipCodes, self.zipCitiesList);
                if(!limitExists){
                    finalResultData=finalResultData.splice(0,10);
                }
                if(loadMoreDivResult){
                    finalResultData.push(eonde.i18n.get("autocomplete.load.more.text"));
                }
                response($.map(finalResultData, function (item, index) {
                    if(index == 0) {
                        self.zip(item);
                    }
                    return {
                        value: item
                    }
                }));
                /*if(self.enterKeyPressed())
                    submitStep(self.step());*/
                limitExists=false;
                //add a custom name to the autocomplete
                $('#offerform #PLZ').autocomplete("widget").addClass("offerAutocomplete");
                if(loadMoreDivResult){
                    $('.offerAutocomplete li:last-child a').on('click', function(event) {
                        limitExists=true;
                        $('.offerAutocomplete').hide();
                        $('#offerform #PLZ').val(self.searchTerm());
                        $('#offerform #PLZ').autocomplete("search", self.searchTerm());
                        event.stopImmediatePropagation();                   
                    });
                }
                $('.ui-menu').scrollTop(0);
            }).fail(function(data) {
                $('#offerform #PLZ').removeClass('ui-autocomplete-loading');
                $('#offerform #PLZ').removeClass('ui-autocomplete-loading').removeAttr('readonly');
                $overlay.removeClass('zipOverlay');
                if(!self.zip.isValid() && !self.showErrorMessages()){
                    self.hasBackendErrors();
                    self.handleBackendErrors(data);      
                    self.backendErrors("Postleitzahl ist ungÃ¼ltig, nur Ziffern");
                }
            });
        };

        $("#offerform #PLZ").keydown(function(event){
            if (event.keyCode !== 13) {
                if ($(this).val() === eonde.i18n.get("autocomplete.load.more.text")) {
                    event.stopImmediatePropagation();
                    event.stopPropagation();
                    event.preventDefault();
                    return false;
                }
            }
        }).autocomplete().keyup(function(event) {
            if (event.keyCode == 13) {
                if ($(this).val() === eonde.i18n.get("autocomplete.load.more.text")) {
                    limitExists=true;
                    $(this).val(self.searchTerm());
                    $(this).autocomplete("search", self.searchTerm());
                }
            }
            eonde.Utils.changeDelayZipAutocomplete(this);   
        });
        submitDataToService = function(dataObj, nextStep) {
            self.hasBackendErrors(false);       
            var requestURL = formServiceURL+'clientId=eonde&formId=offerrequest';
            eonde.Utils.trackVirtualPageCall("/forms");
            
            $.ajax({
                beforeSend: function(xhr) {
                    xhr.setRequestHeader('Authorization', authorizationHeaderVal);
                },
                dataType: "json",
                type: 'POST',
                url: requestURL,
                data: 'data=' + encodeURIComponent(dataObj)
            }).done( function(data) {
                self.clearBackendErrors();
                if (data != null ) {
                    $(window).scrollTop(0);
                    self.step(nextStep);
                }
                eonde.Utils.formProgressSteps();

            }).fail(function(data) {
                self.hasBackendErrors(true);
                self.handleBackendErrors(data);
                $(window).scrollTop(0);
            });

        };

        //Adding custom zip code validation as part of EONWKT-4307
        self.zipErrorMsg = ko.observable("");
        self.checkZipCode = function (item, event) {
            if (self.step() == "1") {
                if (item.length < 3) {
                    self.zipErrorMsg(eonde.i18n.get("zip.validationerror.atleastthreedigits"));
                } else if(!$.isNumeric(item) && typeof($('#offerform #PLZ').data("autocomplete"))!=="undefined" && !$('#offerform #PLZ').autocomplete("widget").is(':visible')) {
                    self.zipErrorMsg(eonde.i18n.get("zip.validationerror.nonnumericnoresults"));
                } else if (!/^\d{4,5}\s+[^0-9\s]+.*$/.test(item)) {
                    self.zipErrorMsg(eonde.i18n.get("zip.validationerror.entermoredigits"));
                }
                if (!/^\d{4,5}\s+[^0-9\s]+.*$/.test(item)) {
                    return false;
                } else {
                    if (item !== null && item !== '') {
                        var zipCity = item.replace(/ +(?= )/g,'');
                        if (!/^\d{5}.*$/.test(item) || self.zipCitiesList().length == 0) {
                            self.zipErrorMsg(eonde.i18n.get("zip.validationerror.entermoredigits"));
                        } 
                        if ((self.zipCitiesList().length == 0 || (self.zipCitiesList().length > 0 && self.zipCitiesList().indexOf(zipCity) < 0))) {
                            self.zipErrorMsg(eonde.i18n.get("zip.validationerror.unknowncombination"));
                            return false;
                        }
                    }
                    return true;
                }
            } else {
                return true;
            }
        };

        self.applyValidations = function () {
			
			if ( subjectLengthVal > 1 ){
				self.subject.extend({
					required : {onlyIf: function (){ return (self.step() == "1");}, message: eonde.i18n.get('online_err_category_missing')}
				});
			}
			
            self.consumption.extend({
                required: {onlyIf: function () { return (self.step() == "1"); }, message: eonde.i18n.get('online_err_consumption_missing')}
            });
            self.company.extend({
                required: {onlyIf: function () { return (self.step() == "1"); }, message: eonde.i18n.get('online_err_company_missing')}
            });
            self.street.extend({
                required: {onlyIf: function () { return (self.step() == "1"); }, message: eonde.i18n.get('online_err_street_missing')}
            });
            self.zip.extend({
                validation : {validator : self.checkZipCode, message : function() { return self.zipErrorMsg();}},
                required: {onlyIf: function () { return (self.step() == "1"); }, message: eonde.i18n.get('online_err_zip_missing')}
            });

            self.salutation.extend({
                required: {onlyIf: function () { return (self.step() == "2"); }, message: eonde.i18n.get('online_err_salutation_missing')}
            });
            self.firstname.extend({
                required: {onlyIf: function () { return (self.step() == "2"); }, message: eonde.i18n.get('online_err_firstname_missing')}
            });
            self.lastname.extend({
                required: {onlyIf: function () { return (self.step() == "2"); }, message: eonde.i18n.get('online_err_lastname_missing')}
            });
            self.phone.extend({
                required: {onlyIf: function () { return (self.step() == "2"); }, message: eonde.i18n.get('online_err_phone_missing')},
                pattern: {
                    message: eonde.i18n.get('online_err_phone_invalid'),
                    params: /^[0-9\-\+()#]/
                }
            });

            self.email.extend({
                required: {onlyIf: function () { return (self.step() == "2"); }, message: eonde.i18n.get('online_err_email_missing')},
                email : {onlyIf: function () { return (self.step() == "2"); }, message: eonde.i18n.get('online_err_email_invalid'), params: true}
            });

            self.registerGroup = ko.validation.group([self.subject,self.consumption, self.company, self.street, self.zip]);
            self.infoMgmtGroup = ko.validation.group([self.salutation, self.firstname, self.lastname, self.phone, self.email]);

        }
    };

    var view = offerform.get(0);
    if (view) {
        var offerformVM = new eonde.vmOfferform();
        offerformVM.init();
        ko.applyBindings (ko.validatedObservable(offerformVM), view);  

		$('#offerform :checkbox').change(function(e){
            if ($(e.target) !== null && ($(e.target).is('a') || $(e.target).is('a span'))) {
                return;
            }
            var thisObj = $(this);
            
            if(thisObj.is(':checked')){
                thisObj.siblings('label').addClass('checkedInputCheckbox');
                    }
                    else {
                thisObj.siblings('label').removeClass('checkedInputCheckbox');
                    }
        });
    }

});
/*!
* 465_form_feedback.js
* This file contains the code for the feedback form (4 steps).
* 
* @project   E.ON DE
* @date      2014-06-03 
* @author    FLORIAN FEILER, SapientNitro <ffeiler@sapient.com>
* @licensor  E.ON
* @NOTE
*/

// Declaring namespace parameter
var eonde = eonde || {};

$(function() {

    var feedbackforms = $('#feedbackform');
    if (feedbackforms.length === 0) {
        return;
    }

    eonde.vmFeedbackform = function () {

        var self = this;
        var $plz = $('#feedbackform #PLZ');
        var $overlay = $('.forZipOverlay');
        
        //Calling all the form related service URLs from eonde.config.js
        var formServiceURL = eonde.Config.serviceURLs.formService;
        var zipcodeServiceURL = eonde.Config.serviceURLs.zipcodeService;
        var authorizationHeaderVal = eonde.Config.serviceURLs.authorization;
        
        //Custom handler to apply error class on input elements
        ko.bindingHandlers.validationElement = {
        update: function (element, valueAccessor) {
                var valueIsValid = valueAccessor().isValid();
                if (!valueIsValid && self.showErrorMessages() === true) {
                    $(element).addClass("input-error");
                } else {
                    $(element).removeClass("input-error");
                }
            }
        }
        
        //Error messages
        self.cfErrorMessages = ko.observable({});
        
        self.showErrorMessages = ko.observable(false);
        self.hasBackendErrors = ko.observable(false);
        self.backendErrors = ko.observable("");

        //keeps track of visibility of form steps and gets modiefied by "submitStep" and "editStep"
        self.step = ko.observable("1");

        //values for dropdown menus
        self.titles = [eonde.i18n.get('online.form.dd.title.option1'), eonde.i18n.get('online.form.dd.title.option2')];
        self.salutations = [{id: "", description:eonde.i18n.get('online.form.optiondefault')}, {id: "Herr", description:eonde.i18n.get('online.form.dd.salutation.Herr')}, {id: "Frau", description:eonde.i18n.get('online.form.dd.salutation.Frau')}];
        self.subjects = [{id: "", description:eonde.i18n.get('online.form.optiondefault')}, {id: "Beschwerde", description:eonde.i18n.get('feedback.form.Beschwerde')}, {id: "Anregung", description:eonde.i18n.get('feedback.form.Anregung')}, {id: "Kritik", description:eonde.i18n.get('feedback.form.Kritik')}];

        //step 1 inputs:
        self.subject = ko.observable("");
        self.displaySubject = ko.observable("");
        self.message = ko.observable("");
        self.alreadyCustomer = ko.observable("0");
        self.contractNumber = ko.observable("");

        self.zipCitiesList = ko.observableArray();
        self.is_alreadyContact_checked = ko.observable(false);
        self.is_confirmationMail_checked = ko.observable(false);

        /*Storing enter key press*/
        /*self.enterKeyPressed = ko.observable(false);*/

        self.alreadyContact = ko.computed(function(){
            if (self.is_alreadyContact_checked()) {
                return "1";
            } else {
                return "0";
            }
        });
        self.confirmationMail = ko.computed(function(){
            if (self.is_confirmationMail_checked()) {
                return "1";
            } else {
                return "0";
            }
        });
        
        //step 2 inputs:
        self.salutation = ko.observable("");
        self.displaySalutation = ko.observable("");
        self.title = ko.observable("");
        self.firstname = ko.observable("");
        self.lastname = ko.observable("");
        self.zip = ko.observable("");

        self.billingCities = ko.observableArray();
        self.billingCity = ko.observable('');
        
        
        self.phone = ko.observable("");
        self.email = ko.observable("");

         self.city = ko.observable("");
         self.district = ko.observable("");
        //step 3 values:
        self.alreadyContact_display = ko.computed(function(){
            if (self.alreadyContact() === "0") {
                return "Nein";
            } else {
                return "Ja";
            }
        });
        self.confirmationMail_display = ko.computed(function(){
            if (self.confirmationMail() === "0") {
                return "Nein";
            } else {
                return "Ja";
            }
        });
        self.alreadyCustomer_display = ko.computed(function(){
            if (self.alreadyCustomer() === "0") {
                return "Nein";
            } else {
                return "Ja";
            }
        });
        
        self.clearBackendErrors = function() {
            self.hasBackendErrors(false);
            self.backendErrors("");
        }
        
        self.handleBackendErrors = function(data) {
            var errorString = eonde.Utils.showBackendErrors(data, "Online", self.step());
            if (errorString !== null && errorString !== "") {
                self.hasBackendErrors(true);
                self.backendErrors(errorString);
            }
        }
        
        var finalResultData, limitExists=false, loadMoreDivResult=false, requestUrl="", loadMoreValue='0';
        self.searchTerm = ko.observable("");
        self.response = ko.observable("");
        getZip = function (searchTerm, response) {
            eonde.Utils.trackVirtualPageCall("/zipcodes");
            self.clearBackendErrors();
            $overlay.addClass('zipOverlay');
            $plz.addClass('ui-autocomplete-loading').attr('readonly', true);
            self.searchTerm(searchTerm);
            self.response(response);
            if(limitExists && loadMoreValue=='1'){
                requestUrl =eonde.Config.serviceURLs.zipcodeService+'clientId=eonde&query=' + encodeURIComponent(self.searchTerm()); 
            } else requestUrl = eonde.Config.serviceURLs.zipcodeService+'clientId=eonde&limit=10&query=' + encodeURIComponent(self.searchTerm());

            $.ajax({
                beforeSend: function(xhr) {
                    xhr.setRequestHeader('Authorization', authorizationHeaderVal);
                },
                dataType: "json",
                type: 'GET',
                url: requestUrl
            }).done( function(data) {
                $plz.removeClass('ui-autocomplete-loading').removeAttr('readonly');
                $overlay.removeClass('zipOverlay');

                //add load more named row to autocomplete menu
                if(data.more){
                    loadMoreDivResult=data.more;
                    loadMoreValue=1;
                } else{
                 loadMoreDivResult=false;
                 loadMoreValue=0;
                }
                
                finalResultData= eonde.Utils.getZipCodesList(data.zipCodes, self.zipCitiesList);
                if(!limitExists){
                    finalResultData=finalResultData.splice(0,10);
                }
                if(loadMoreDivResult){
                    finalResultData.push(eonde.i18n.get("autocomplete.load.more.text"));
                }
                response($.map(finalResultData, function (item, index) {
                    if(index == 0) {
                        self.zip(item);
                    }
                    return {
                        value: item
                    }
                }));
                /*if(self.enterKeyPressed())
                    submitStep(self.step());*/
                limitExists=false;
                //add a custom name to the autocomplete
                $plz.autocomplete("widget").addClass("feedbackAutocomplete");
                if(loadMoreDivResult){
                    $('.feedbackAutocomplete li:last-child a').on('click', function(event) {
                        limitExists=true;
                        $('.feedbackAutocomplete').hide();
                        $plz.val(self.searchTerm());
                        $plz.autocomplete("search", self.searchTerm());
                        event.stopImmediatePropagation();                   
                    });
                }
                $('.ui-menu').scrollTop(0);
            }).fail(function(data) {
                $plz.removeClass('ui-autocomplete-loading').removeAttr('readonly');
                $overlay.removeClass('zipOverlay');
                if(!self.zip.isValid() && !self.showErrorMessages()){
                    self.hasBackendErrors();
                    self.handleBackendErrors(data);      
                    self.backendErrors("Postleitzahl ist ungültig, nur Ziffern");
                }
            });
        };          
        
        $("#feedbackform #PLZ").keydown(function(event){
            if (event.keyCode !== 13) {
                if ($(this).val() === eonde.i18n.get("autocomplete.load.more.text")) {
                    event.stopImmediatePropagation();
                    event.stopPropagation();
                    event.preventDefault();
                    return false;
                }
            }
        }).autocomplete().keyup(function(event){
            if (event.keyCode == 13) {
                if ($(this).val() === eonde.i18n.get("autocomplete.load.more.text")) {
                    limitExists=true;
                    $(this).val(self.searchTerm());
                    $(this).autocomplete("search", self.searchTerm());
                }
            }
            eonde.Utils.changeDelayZipAutocomplete(this);
        });

        ko.validation.registerExtenders();

        self.init = function () {
            self.applyValidations();
            ko.validation.init({insertMessages: false});
        };

        self.enterPressed = function(data, event) {                        
            if(data.item && data.item.value === eonde.i18n.get("autocomplete.load.more.text")){
                return false;
            }
            if(event.which == 13 && !$(event.target).is('textarea')) {
                if(!$overlay.hasClass('zipOverlay')) {
                $(event.target).blur();
                submitStep(data.step());
                return false;
                }
                //self.enterKeyPressed(true);
            } else {
                /*Reset the enter key press variable on all other key presses.*/
                //self.enterKeyPressed(false);
            }
            return true;
        }

        //bound to every "Weiter" button
        submitStep = function (id) {
        $(window).scrollTop(0);
            if (self.isValid()) {
                self.showErrorMessages(false);
                switch (id) {
                    case "1":
                        submitStep1();
                        break;
                    case "2":
                        submitStep2();
                        break;
                    case "3":
                        submitStep3();
                        break;
                    case "4":
                        submitStep4();
                        break;
                }
            } else {
                if(!self.zip.isValid()){
                    self.clearBackendErrors();
                }
                $(window).scrollTop(0);
                self.showErrorMessages(true);
            }
        };

        //bound to every "Zurück" button and to all "Ändern" buttons
        editStep = function (id) {
            self.hasBackendErrors (false);
            self.showErrorMessages(false);
            $(window).scrollTop(0);
            self.step(id);
        };

        submitStep1 = function () {

            $(window).scrollTop(0);
            self.step("2");
            eonde.Utils.formProgressSteps();
        };
        submitStep2= function () {

            $(window).scrollTop(0);
            self.step("3");
            self.displaySalutation(eonde.i18n.get('online.form.dd.salutation.'+self.salutation()));
            self.displaySubject(eonde.i18n.get('feedback.form.'+self.subject()));

            eonde.Utils.formProgressSteps();
        };
        submitStep3 = function () {

            var stepData = {};
            stepData.salutation = self.salutation();
            stepData.title = self.title() ? self.title : "";
            stepData.firstname = self.firstname();
            stepData.lastname = self.lastname();
            stepData.phone = self.phone();
            stepData.email = self.email();
            stepData.zip = self.zip().substring(0,5);
            stepData.subject = self.subject();
            stepData.message = self.message();
            stepData.alreadyContact = self.alreadyContact();
            stepData.confirmationMail = self.confirmationMail();
            stepData.alreadyCustomer = self.alreadyCustomer();
             if (self.alreadyCustomer() === "1") {
                stepData.contractNumber = self.contractNumber();
            }  
            submitDataToService(ko.toJSON(stepData), "4");
            self.showErrorMessages(false);
        };


        submitDataToService = function(dataObj, nextStep) {
            self.hasBackendErrors (false);      
            var requestURL = formServiceURL+'clientId=eonde&formId=feedback';
            eonde.Utils.trackVirtualPageCall("/forms");
            
            $.ajax({
                beforeSend: function(xhr) {
                    xhr.setRequestHeader('Authorization', authorizationHeaderVal);
                },
                dataType: "json",
                type: 'POST',
                url: requestURL,
                data: 'data=' + encodeURIComponent(dataObj)
            }).done( function(data) {
                self.clearBackendErrors();
                if (data != null ) {
                    $(window).scrollTop(0);
                    self.step(nextStep);
                }
                eonde.Utils.formProgressSteps();
            }).fail(function(data) {
                self.hasBackendErrors(true);
                self.handleBackendErrors(data);
                $(window).scrollTop(0);
            });

        };

        //Adding custom zip code validation as part of EONWKT-4307
        self.zipErrorMsg = ko.observable("");
        self.checkZipCode = function (item, event) {
            if (self.step() == "2") {
                if (item.length < 3) {
                    self.zipErrorMsg(eonde.i18n.get("zip.validationerror.atleastthreedigits"));
                } else if(!$.isNumeric(item) && typeof($plz.data("autocomplete"))!=="undefined" && !$plz.autocomplete("widget").is(':visible')) {
                    self.zipErrorMsg(eonde.i18n.get("zip.validationerror.nonnumericnoresults"));
                } else if (!/^\d{4,5}\s+[^0-9\s]+.*$/.test(item)) {
                    self.zipErrorMsg(eonde.i18n.get("zip.validationerror.entermoredigits"));
                }
                if (!/^\d{4,5}\s+[^0-9\s]+.*$/.test(item)) {
                    return false;
                } else {
                    if (item !== null && item !== '') {
                        var zipCity = item.replace(/ +(?= )/g,'');
                        if (!/^\d{5}.*$/.test(item) || self.zipCitiesList().length == 0) {
                            self.zipErrorMsg(eonde.i18n.get("zip.validationerror.entermoredigits"));
                        } 
                        if ((self.zipCitiesList().length == 0 || (self.zipCitiesList().length > 0 && self.zipCitiesList().indexOf(zipCity) < 0))) {
                            self.zipErrorMsg(eonde.i18n.get("zip.validationerror.unknowncombination"));
                            return false;
                        }
                    }
                    return true;
                }
            } else {
                return true;
            }
        };

        self.applyValidations = function () {

            self.subject.extend({
                required: {onlyIf: function () { return (self.step() == "1"); }, message: eonde.i18n.get('online_err_subject_missing')}
            });
            self.message.extend({
                required: {onlyIf: function () { return (self.step() == "1"); }, message: eonde.i18n.get('online_err_message_missing')}
            });
            self.contractNumber.extend({
                required: {onlyIf: function () { return (self.step() == "1" && self.alreadyCustomer() == 1); }, message: eonde.i18n.get('online_err_contractnumber_missing')}
            });

            self.salutation.extend({
                required: {onlyIf: function () { return (self.step() == "2"); }, message: eonde.i18n.get('online_err_salutation_missing')}
            });
            self.firstname.extend({
                required: {onlyIf: function () { return (self.step() == "2"); }, message: eonde.i18n.get('online_err_firstname_missing')}
            });
            self.lastname.extend({
                required: {onlyIf: function () { return (self.step() == "2"); }, message: eonde.i18n.get('online_err_lastname_missing')}
            });
            self.zip.extend({
                validation : {validator : self.checkZipCode, message : function() { return self.zipErrorMsg();}},
                required: {onlyIf: function () { return (self.step() == "2"); }, message:eonde.i18n.get('online_err_zip_missing')}
            });
            self.email.extend({
                required: {onlyIf: function () { return (self.step() == "2"); }, message: eonde.i18n.get('online_err_email_missing')},
                email : {onlyIf: function () { return (self.step() == "2"); }, message: eonde.i18n.get('online_err_email_invalid'), params: true}
            });
            
            self.registerGroup = ko.validation.group([self.subject, self.message, self.contractNumber]);
            self.infoMgmtGroup = ko.validation.group([self.salutation, self.firstname, self.lastname, self.zip, self.email]);

        }
    };

    var view = feedbackforms.get(0);
    if (view) {
        var feedbackformVM = new eonde.vmFeedbackform();
        feedbackformVM.init();
        ko.applyBindings (ko.validatedObservable(feedbackformVM), view);      
    }
    $('#feedbackform label, #feedbackform input').click(function(e){
        if ($(e.target) !== null && ($(e.target).is('a') || $(e.target).is('a span'))) {
            return;
        }
        var thisObj = $(this);
        if(thisObj.siblings('input[type=radio]').length > 0){
            thisObj.closest('div').siblings().find('label').removeClass('checkedInput');
            thisObj.addClass('checkedInput');
        }
        if(thisObj.siblings('input[type=checkbox]').length > 0){
            if(!(thisObj).hasClass('readonlylabel')){
                if((thisObj).hasClass('checkedInputCheckbox')){
                    thisObj.removeClass('checkedInputCheckbox');
                }
                else {
                    thisObj.addClass('checkedInputCheckbox');
                }
            } else {
                return false;
            }
        }
    });
    $('.lt-ie9 #feedbackform input[type=radio]').on('change', function(e){
        var thisObj = $(this);
        thisObj.closest('div').siblings().find('label').removeClass('checkedInput');
        thisObj.siblings('label').addClass('checkedInput');
    });

});
/*
* callbackform.js
* This file contains the code for the callback form (4 steps).
* 
* @project   E.ON DE
* @date      2014-06-02 
* @author    FLORIAN FEILER, SapientNitro <ffeiler@sapient.com>
* @licensor  E.ON
* @NOTE
*/

// Declaring namespace parameter
var eonde = eonde || {};

$(function() {

    var callbackforms = $('#callbackform');
    if (callbackforms.length === 0) {
        return;
    }


    $( "#callbackform #datePickerFrom, #callbackform #datePickerTo" ).datepicker();

    eonde.vmCallbackform = function () {

        var self = this;
        var $plz = $('#callbackform #PLZ');
        var $overlay = $('.forZipOverlay');

        //Calling all the form related service URLs from eonde.config.js
        var formServiceURL = eonde.Config.serviceURLs.formService;
        var zipcodeServiceURL = eonde.Config.serviceURLs.zipcodeService;
        var authorizationHeaderVal = eonde.Config.serviceURLs.authorization;
        var QueryString = eonde.Utils.QueryString;

        //Custom handler to apply error class on input elements
        ko.bindingHandlers.validationElement = {
        update: function (element, valueAccessor) {
                var valueIsValid = valueAccessor().isValid();
                if (!valueIsValid && self.showErrorMessages() === true) {
                    $(element).addClass("input-error");
                } else {
                    $(element).removeClass("input-error");
                }
            }
        }
        
        self.showErrorMessages = ko.observable(false);
        self.hasBackendErrors = ko.observable(false);
        self.backendErrors = ko.observable("");

        //keeps track of visibility of form steps and gets modiefied by "submitStep" and "editStep"
        self.step = ko.observable("1");

        //values for dropdown menus
        self.titles = [eonde.i18n.get('online.form.dd.title.option1'), eonde.i18n.get('online.form.dd.title.option2')];
        self.salutations = [{id: "", description:eonde.i18n.get('online.form.optiondefault')}, {id: "Herr", description:eonde.i18n.get('online.form.dd.salutation.Herr')}, {id: "Frau", description:eonde.i18n.get('online.form.dd.salutation.Frau')}];
        self.times = [{id: "", description:eonde.i18n.get('online.form.optiondefault')}, {id: "vormittags", description:eonde.i18n.get('callback.form.dd.vormittags')}, {id: "nachmittags", description:eonde.i18n.get('callback.form.dd.nachmittags')}];

        //step 1 inputs:
        var today = new Date();
        var tomorrow = new Date(today.getTime() + (24 * 60 * 60 * 1000));
        if(tomorrow.getDay() == 0){
            tomorrow = new Date(today.getTime() + (2 * 24 * 60 * 60 * 1000));
        }
        else if(tomorrow.getDay() == 6){
            tomorrow = new Date(today.getTime() + (3 * 24 * 60 * 60 * 1000));
        }
        var m = Number(tomorrow.getMonth()+1);
        var dateStr = tomorrow.getDate() + '.' + (m>9?m:'0'+m) + '.' + tomorrow.getFullYear();
        self.date = ko.observable(dateStr);
        self.time = ko.observable("");
        self.displayTime = ko.observable("");
        self.phone = ko.observable("");
        self.subject = ko.observable('');
        self.message = ko.observable("");
        self.message = ko.observable("");
        self.alreadyCustomer = ko.observable("Ja");
        
        //step 2 inputs:
        self.contractNumber = ko.observable("");
        self.salutation = ko.observable("");   
        self.displaySalutation = ko.observable("");
        self.title = ko.observable("");
        self.firstname = ko.observable("");
        self.lastname = ko.observable("");
        self.company = ko.observable("");
        self.zip = ko.observable("");
        self.city = ko.observable("");
        self.district = ko.observable("");
        self.customerType = ko.observable('');
        self.zipCitiesList = ko.observableArray();
        /*Storing enter key press*/
        /*self.enterKeyPressed = ko.observable(false);*/
        ko.validation.registerExtenders();

        self.init = function () {
            if (QueryString.customerType) {
                self.customerType(QueryString.customerType);
            } else {
                var customerChecker = CQ_Analytics.ProfileDataMgr.getProperty('userType');
                if (customerChecker == 'RC') {
                    self.customerType("pk");
                } else {
                    self.customerType("gw");
                }
            }
            self.applyValidations();
            ko.validation.init({insertMessages: false});

        };
        
        function offsetToRangeCharacterMove(el, offset) {
            return offset - (el.value.slice(0, offset).split("\r\n").length - 1);
        }

        function setSelection(el, startOffset, endOffset) {
            var range = el.createTextRange();
            var startCharMove = offsetToRangeCharacterMove(el, startOffset);
            range.collapse(true);
            if (startOffset == endOffset) {
                range.move("character", startCharMove);
            } else {
                range.moveEnd("character", offsetToRangeCharacterMove(el, endOffset));
                range.moveStart("character", startCharMove);
            }
            range.select();
        }
        
        self.formatConsumption = function(nStr) {
            var type = $('.locale').attr('data-attr'),
                dec = type === 'de' ? ',' : '.',
                tho = type === 'de' ? '.' : ',',
                sep = tho;
                nStr+='';
                var x = nStr.split(dec),
                x1 = x[0],
                rgx = /(\d+)(\d{3})/;

            while (rgx.test(x1)) {
                x1 = x1.replace(rgx, '$1' + sep + '$2');
            }
            return x1;
        }

        //character remaining functionality
        $("#textareacnt").on('keyup', function(event) {
                var $this = $(this);
                var maxLength = 1200;
                var cc = $this.val().length;
                var remainingCharc= maxLength - cc;

                if (cc >= maxLength || cc > maxLength) {
                    $('.numberRemaining').text("0");
                    $this.val($this.val().substring(0, maxLength));
                    self.message($this.val());
                    if($('.lt-ie9').length){
                        var el = $('#textareacnt').get(0); 
                        var len = $('#textareacnt').val().length;
                        setSelection(el, len, len);
                    }
                }
                else{
                 $('.numberRemaining').text(self.formatConsumption(remainingCharc));
                }
            });

        self.enterPressed = function(data, event) {                        
            if(data.item && data.item.value === eonde.i18n.get("autocomplete.load.more.text")){
                return false;
            }
            if(event.which == 13 && !$(event.target).is('textarea')) {
                if(!$overlay.hasClass('zipOverlay')) {
                $(event.target).blur();
                submitStep(data.step());
                return false;
            }
                //self.enterKeyPressed(true);
            } else {
                /*Reset the enter key press variable on all other key presses.*/
                //self.enterKeyPressed(false);
            }
            return true;
        }

        //bound to every "Weiter" button
        submitStep = function (id) {
            $(window).scrollTop(0);
            if (self.isValid()) {
                self.showErrorMessages(false);
                switch (id) {
                    case "1":
                        submitStep1();
                        break;
                    case "2":
                        submitStep2();
                        break;
                    case "3":
                        submitStep3();
                        break;
                    case "4":
                        submitStep4();
                        break;
                }
            } else {
                if(!self.zip.isValid()){
                    self.clearBackendErrors();
                }
                $(window).scrollTop(0);
                self.showErrorMessages(true);
            }
        };

        //bound to every "Zurück" button and to all "Ändern" buttons
        editStep = function (id) {
            self.showErrorMessages(false);
            self.hasBackendErrors (false);
            $(window).scrollTop(0);
            self.step(id);
        };

        submitStep1 = function () {
            $("body").scrollTop(0);
            self.step("2");
            eonde.Utils.formProgressSteps();
        };
        submitStep2= function () {
            $(window).scrollTop(0);
            self.step("3");
            self.displaySalutation(eonde.i18n.get('online.form.dd.salutation.'+self.salutation()));
            self.displayTime(eonde.i18n.get('callback.form.dd.'+self.time()));
            eonde.Utils.formProgressSteps();
        };
        var subjectLengthValCB = $("#subjectLength").data('cq-attr');
        var singleSubjectValCB = $('.singleSubjectChosen').text();
        submitStep3 = function () {

            var stepData = {};

            stepData.salutation = self.salutation();
            stepData.title = self.title() ? self.title : "";
            stepData.firstname = self.firstname();
            stepData.lastname = self.lastname();
            stepData.phone = self.phone();
            stepData.zip = self.zip().substring(0,5);
            stepData.message = self.message();
            stepData.alreadyCustomer = self.alreadyCustomer() === "Ja" ? 1 : 0;
            if (self.alreadyCustomer() === "Ja") {
                stepData.contractNumber = self.contractNumber();
            }  
            stepData.date = self.date().split("-").reverse().join(".");
            stepData.time = self.time();

            if ( subjectLengthValCB > 1 ){
                stepData.subject = self.subject();
            } else stepData.subject = singleSubjectValCB;
            

            submitDataToService(ko.toJSON(stepData), "4");
            self.showErrorMessages(false);
            
            
        };
        
        self.clearBackendErrors = function() {
            self.hasBackendErrors(false);
            self.backendErrors("");
        }
        
        self.handleBackendErrors = function(data) {
            var errorString = eonde.Utils.showBackendErrors(data, "Online", self.step());
            if (errorString !== null && errorString !== "") {
                self.hasBackendErrors(true);
                self.backendErrors(errorString);
                        }
        }
        
        var finalResultData, limitExists=false, loadMoreDivResult=false, requestUrl="", loadMoreValue='0';        
        self.searchTerm = ko.observable("");
        self.response = ko.observable("");
        getZip = function (searchTerm, response) {
            eonde.Utils.trackVirtualPageCall("/zipcodes");
            self.clearBackendErrors();
            $overlay.addClass('zipOverlay');
            $plz.addClass('ui-autocomplete-loading').attr('readonly', true);
            self.searchTerm(searchTerm);
            self.response(response);
            if(limitExists && loadMoreValue=='1'){
                requestUrl =eonde.Config.serviceURLs.zipcodeService+'clientId=eonde&query=' + encodeURIComponent(self.searchTerm()); 
            } else requestUrl = eonde.Config.serviceURLs.zipcodeService+'clientId=eonde&limit=10&query=' + encodeURIComponent(self.searchTerm());

            $.ajax({
                beforeSend: function(xhr) {
                    xhr.setRequestHeader('Authorization', authorizationHeaderVal);
                },
                dataType: "json",
                type: 'GET',
                url: requestUrl
            }).done( function(data) {
                $plz.removeClass('ui-autocomplete-loading').removeAttr('readonly');
                $overlay.removeClass('zipOverlay');

                //add load more named row to autocomplete menu
                if(data.more){
                    loadMoreDivResult=data.more;
                    loadMoreValue=1;
                } else{
                 loadMoreDivResult=false;
                 loadMoreValue=0;
                }
                
                finalResultData= eonde.Utils.getZipCodesList(data.zipCodes, self.zipCitiesList);
                if(!limitExists){
                    finalResultData=finalResultData.splice(0,10);
                }
                if(loadMoreDivResult){
                    finalResultData.push(eonde.i18n.get("autocomplete.load.more.text"));
                }
                response($.map(finalResultData, function (item, index) {
                    if(index == 0) {
                        self.zip(item);
                    }
                    return {
                        value: item
                    }
                }));
                /*if(self.enterKeyPressed())
                    submitStep(self.step());*/
                limitExists=false;
                //add a custom name to the autocomplete
                $plz.autocomplete("widget").addClass("callbackAutocomplete"); 
                if(loadMoreDivResult){
                    $('.callbackAutocomplete li:last-child a').on('click', function(event) {
                        limitExists=true;
                        $('.callbackAutocomplete').hide();
                        $plz.val(self.searchTerm());
                        $plz.autocomplete("search", self.searchTerm());
                        event.stopImmediatePropagation();                   
                    });
                }
                $('.ui-menu').scrollTop(0);
            }).fail(function(data) {
                $plz.removeClass('ui-autocomplete-loading').removeAttr('readonly');
                $overlay.removeClass('zipOverlay');
                if(!self.zip.isValid() && !self.showErrorMessages()){
                    self.hasBackendErrors();
                    self.handleBackendErrors(data);      
                    self.backendErrors("Postleitzahl ist ungültig, nur Ziffern");
                }
            });
        };
        
        $("#callbackform #PLZ").keydown(function(event){
            if (event.keyCode !== 13) {
                if ($(this).val() === eonde.i18n.get("autocomplete.load.more.text")) {
                    event.stopImmediatePropagation();
                    event.stopPropagation();
                    event.preventDefault();
                    return false;
                }
            }
        }).autocomplete().keyup(function(event){
            if (event.keyCode == 13) {
                if ($(this).val() === eonde.i18n.get("autocomplete.load.more.text")) {
                    limitExists=true;
                    $(this).val(self.searchTerm());
                    $(this).autocomplete("search", self.searchTerm());
                }
            }
            eonde.Utils.changeDelayZipAutocomplete(this);
        });
        
        submitDataToService = function(dataObj, nextStep) {
            self.hasBackendErrors(false);       
            var requestURL = formServiceURL+'clientId=eonde&formId=callback';
            eonde.Utils.trackVirtualPageCall("/forms");
            
            $.ajax({
                beforeSend: function(xhr) {
                    xhr.setRequestHeader('Authorization', authorizationHeaderVal);
                },
                dataType: "json",
                type: 'POST',
                url: requestURL,
                data: 'data=' + encodeURIComponent(dataObj)
            }).done( function(data) {
                self.clearBackendErrors();
                if (data != null ) {
                    $(window).scrollTop(0);
                    self.step(nextStep);
                }
                eonde.Utils.formProgressSteps();
            }).fail(function(data) {
                $(window).scrollTop(0);
                self.hasBackendErrors(true);
                self.handleBackendErrors(data);
            });

        };

        //Adding custom zip code validation as part of EONWKT-4307
        self.zipErrorMsg = ko.observable("");
        self.checkZipCode = function (item, event) {
            if (self.step() == "2") {
                if (item.length < 3) {
                    self.zipErrorMsg(eonde.i18n.get("zip.validationerror.atleastthreedigits"));
                } else if(!$.isNumeric(item) && typeof($plz.data("autocomplete"))!=="undefined" && !$plz.autocomplete("widget").is(':visible')) {
                    self.zipErrorMsg(eonde.i18n.get("zip.validationerror.nonnumericnoresults"));
                } else if (!/^\d{4,5}\s+[^0-9\s]+.*$/.test(item)) {
                    self.zipErrorMsg(eonde.i18n.get("zip.validationerror.entermoredigits"));
                }
                if (!/^\d{4,5}\s+[^0-9\s]+.*$/.test(item)) {
                    return false;
                } else {
                    if (item !== null && item !== '') {
                        var zipCity = item.replace(/ +(?= )/g,'');
                        if (!/^\d{5}.*$/.test(item) || self.zipCitiesList().length == 0) {
                            self.zipErrorMsg(eonde.i18n.get("zip.validationerror.entermoredigits"));
                        } 
                        if ((self.zipCitiesList().length == 0 || (self.zipCitiesList().length > 0 && self.zipCitiesList().indexOf(zipCity) < 0))) {
                            self.zipErrorMsg(eonde.i18n.get("zip.validationerror.unknowncombination"));
                            return false;
                        }
                    }
                    return true;
                }
            } else {
                return true;
            }
        };

        self.applyValidations = function () {
            
            if ( subjectLengthValCB > 1 ){
                self.subject.extend({
                    required : {onlyIf: function (){ return (self.step() == "1" && self.subject().length > 1);}, message: eonde.i18n.get('online_err_subject_missing')}
                });
            }

            self.date.extend({
                required: {onlyIf: function () { return (self.step() == "1"); }, message: eonde.i18n.get('online_err_date_missing')}
            });
            self.time.extend({
                required: {onlyIf: function () { return (self.step() == "1"); }, message: eonde.i18n.get('online_err_time_missing')}
            });
            self.phone.extend({
                required: {onlyIf: function () { return (self.step() == "1"); }, message: eonde.i18n.get('online_err_phone_missing')},
                pattern: {
                    message: eonde.i18n.get('online_err_phone_invalid'),
                    params: /^[0-9\-\+()#]/
                }
            });
            self.company.extend({
                required: {onlyIf: function () { return (self.step() == "2" && self.customerType() === 'gw'); }, message: eonde.i18n.get('online_err_company_missing')}
            });

            self.salutation.extend({
                required: {onlyIf: function () { return (self.step() == "2"); }, message: eonde.i18n.get('online_err_salutation_missing')}
            });
            self.firstname.extend({
                required: {onlyIf: function () { return (self.step() == "2"); }, message: eonde.i18n.get('online_err_firstname_missing')}
            });
            self.lastname.extend({
                required: {onlyIf: function () { return (self.step() == "2"); }, message: eonde.i18n.get('online_err_lastname_missing')}
            });
            self.zip.extend({
                validation : {validator : self.checkZipCode, message : function() { return self.zipErrorMsg();}},
                required: {onlyIf: function () { return (self.step() == "2"); }, message: eonde.i18n.get('online_err_zip_missing')}
            });
            
            
            self.registerGroup = ko.validation.group([self.date, self.subject, self.time, self.phone]);
            self.infoMgmtGroup = ko.validation.group([self.salutation, self.firstname, self.lastname, self.company, self.zip]);

        };

    };

    var view = callbackforms.get(0);
    if (view) {
        var callbackformVM = new eonde.vmCallbackform();
        callbackformVM.init();
        ko.applyBindings (ko.validatedObservable(callbackformVM), view);      
    }

    //Hardcoding public holidays - need to be configurable
        var disabledDates = ["01/01/2014","01/06/2014","04/18/2014","04/21/2014","05/01/2014","05/29/2014","06/09/2014","06/19/2014","08/15/2014","09/03/2014","12/25/2014","12/26/2014"];

        function publicHolidays(date) {
            for (var i = 0; i < disabledDates.length; i++) {
                if (new Date(disabledDates[i]).toString() == date.toString()) {             
                     return [false];
                }
            }
            return [true];
         }   

         function noWeekendsOrHolidays(date) {
          var noWeekend = $.datepicker.noWeekends(date);
          if (noWeekend[0]) {
                    return publicHolidays(date);
            } else {
                    return noWeekend;
            }

        }

        if (Modernizr.touch && Modernizr.inputtypes.date) {
                            var devicePlateform = navigator.platform;
                $("#callbackform .js-date").each(function(i, item) { 
                    var $this = $(this);
                    if(/iPad/.test(devicePlateform) || /iPhone/.test(devicePlateform)){
                        /*This is iPad*/
                        var newDateBox = $("<input/>").attr({'type':'date'}).css({'position':'relative', 'top': '0', 'left': '0', 'opacity': 0, 'height': '0px', 'width' : '0px'}).on('change blur', {btn: $this}, function(e){ 
                            if($this.siblings('input[type=radio]').length > 0){
                                $this.closest('div').siblings().find('label').removeClass('checkedInput');
                                $this.siblings('label').addClass('checkedInput');
                                self.delivery_from("Vertragsbeginn zum");
                                $("label[for=delivery-from-next]").removeClass("checkedInput");
                            }
                            if (e.target.valueAsDate !== null) {
                            var valueAsDate = e.target.valueAsDate.toLocaleDateString(); 
                            var value = e.target.value.split('-'); value = value[2] + '.' + value[1] + '.' + value[0]; 
                            e.data.btn.val(value); 
                            e.data.btn.trigger("change");
                            } else {
                                e.data.btn.val(""); 
                                e.data.btn.trigger("change");
                            }
                        }).insertAfter($this); 
                        $this.on('click touchstart',  function(e){ 
                            newDateBox.focus();
                            newDateBox.trigger("click");
                            e.preventDefault();
                            return false; 
                        });
                    }else{
                        var newDateBox = $("<input/>").attr({'type':'date'}).addClass('nCal input-sm required').on('change blur input', {btn: $this}, function(e){ 
                            if($this.siblings('input[type=radio]').length > 0){
                                $this.closest('div').siblings().find('label').removeClass('checkedInput');
                                $this.siblings('label').addClass('checkedInput');
                                self.delivery_from("Vertragsbeginn zum");
                                $("label[for=delivery-from-next]").removeClass("checkedInput");
                            }
                            if (e.target.valueAsDate !== null) {
                            var valueAsDate = e.target.valueAsDate.toLocaleDateString(); 
                            var value = e.target.value.split('-'); value = value[2] + '.' + value[1] + '.' + value[0]; 
                            e.data.btn.val(value); 
                            e.data.btn.trigger("change");
                            } else {
                                e.data.btn.val(""); 
                                e.data.btn.trigger("change");
                            }
                        }).insertAfter($this.siblings(".icon-calendar"));
                        $this.on('click touchstart focus',  function(e){ 
                            newDateBox.focus();
                            newDateBox.trigger("click");
                            e.preventDefault();
                            return false; 
                        });
                        $this.siblings(".icon-calendar").on('click touchstart',  function(e){ 
                            newDateBox.focus();
                            newDateBox.trigger("click");
                            e.preventDefault();
                            return false; 
                        });
                        $('input.nCal').val($('#datum').val());
                        $('input#datum').addClass('hidden');                    }

                });
                $("#callbackform .icon-calendar").click(function(e) {
                    $(this).prev("input").focus();
                });
        } else if (Modernizr.touch && !Modernizr.inputtypes.date) {
            $("#callbackform span.icon-calendar").hide();

        } else {
            var hour = new Date().getHours();
            $('#callbackform .js-date').datepicker({ minDate: hour >= 13 ? 1 : 0, firstDay: 1,  constrainInput: false, dayNamesMin: [ "So", "Mo", "Di", "Mi", "Do", "Fr", "Sa" ], showOtherMonths: true, monthNames: ["Januar", "Februar", "März", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"], dateFormat: "dd.mm.yy", beforeShowDay: noWeekendsOrHolidays, showOn: "both"});
            $("#callbackform .ui-datepicker-trigger").addClass("icon-date-picker");
            $("#callbackform .ui-datepicker-trigger").addClass("icon-calendar");
            $("#callbackform span.icon-calendar") && $("#callbackform span.icon-calendar").length > 0 ? $("#callbackform span.icon-calendar").remove() : "";
            
            var today = new Date();
            var tomorrow = new Date(today.getTime() + (24 * 60 * 60 * 1000));
            if(tomorrow.getDay() == 0){
               $('#callbackform .js-date').datepicker( "setDate", "+2d" );

            }
            else if(tomorrow.getDay() == 6){
                $('#callbackform .js-date').datepicker( "setDate", "+3d" );
            }
            else {
            $('#callbackform .js-date').datepicker( "setDate", "+1d" );
            }    
            $('#callbackform .js-date').change(); 
        }
        
        $('#callbackform label, #callbackform input').click(function(e){
            if ($(e.target) !== null && ($(e.target).is('a') || $(e.target).is('a span'))) {
                return;
            }
            var thisObj = $(this);
            if(thisObj.siblings('input[type=radio]').length > 0){
                thisObj.closest('div').siblings().find('label').removeClass('checkedInput');
                thisObj.addClass('checkedInput');
            }
            if(thisObj.siblings('input[type=checkbox]').length > 0){
                if(!(thisObj).hasClass('readonlylabel')){
                    if((thisObj).hasClass('checkedInputCheckbox')){
                        thisObj.removeClass('checkedInputCheckbox');
                    }
                    else {
                        thisObj.addClass('checkedInputCheckbox');
                    }
                } else {
                    return false;
                }
            }
        });

        $('.lt-ie9 #callbackform input[type=radio]').on('change', function(e){
            var thisObj = $(this);
            thisObj.closest('div').siblings().find('label').removeClass('checkedInput');
            thisObj.siblings('label').addClass('checkedInput');
        });


});
var eonde = eonde || {};

/*!
* registrationbcform.js
* This file contains the code for the registration form (4 steps).
* 
* @project   E.ON DE
* @date      2014-05-30 
* @author    FLORIAN FEILER, SapientNitro <ffeiler@sapient.com>
* @licensor  E.ON
* @NOTE
*/

// Declaring namespace parameter
var eonde = eonde || {};

$(function() {

    var registrationbcformDiv = $('#registrationbcform');
    if (registrationbcformDiv.length === 0) {
        return;
    }

    eonde.vmRegistrationform = function () {

		var self = this;
        var $plz = $('#registrationbcform #PLZ');
        var $overlay = $('.forZipOverlay');
		//Calling all the form related service URLs from eonde.config.js
        var formServiceURL = eonde.Config.serviceURLs.formService;
        var zipcodeServiceURL = eonde.Config.serviceURLs.zipcodeService;
        var authorizationHeaderVal = eonde.Config.serviceURLs.authorization;


		//Custom handler to apply error class on input elements
        ko.bindingHandlers.validationElement = {
        update: function (element, valueAccessor) {
                var valueIsValid = valueAccessor().isValid();
                if (!valueIsValid && self.showErrorMessages() === true) {
                    $(element).addClass("input-error");
                } else {
                    $(element).removeClass("input-error");
                }
            }
        }


		self.showErrorMessages = ko.observable(false);
		self.hasBackendErrors = ko.observable(false);
		self.backendErrors = ko.observable("");

		//keeps track of visibility of form steps and gets modiefied by "submitStep" and "editStep"
        self.step = ko.observable("1");

        //values for dropdown menus
        self.titles = [eonde.i18n.get('online.form.dd.title.option2'), eonde.i18n.get('online.form.dd.title.option1')];
        self.salutations = [{id: "", description:eonde.i18n.get('online.form.optiondefault')}, 
                            {id: "Herr", description:eonde.i18n.get('online.form.dd.salutation.Herr')}, 
							{id: "Frau", description:eonde.i18n.get('online.form.dd.salutation.Frau')}];
        self.types = [{id: "Strom",description:eonde.i18n.get('registration.form.Strom')}, {id: "Erdgas",description:eonde.i18n.get('registration.form.Erdgas')}];
        /*Storing enter key press*/
        /*self.enterKeyPressed = ko.observable(false);*/
        //step 1 inputs:
        self.type = ko.observable("");
        self.consumption = ko.observable("");
        self.company = ko.observable("");
        self.companyAddon = ko.observable("");
        self.street = ko.observable("");
        self.zipCode = ko.observable("");

        //step 2 inputs:
        self.salutation = ko.observable("");        
        self.title = ko.observable("");
        self.firstname = ko.observable("");
        self.lastname = ko.observable("");
        self.phone = ko.observable("");
        self.email = ko.observable("");

        //Step 3
        self.displaySalutation = ko.observable('');
        self.displayProduct = ko.observable('');
		
        self.zipCitiesList = ko.observableArray();
        
		self.clearBackendErrors = function() {
			self.hasBackendErrors(false);
			self.backendErrors("");
		}

		self.handleBackendErrors = function(data) {
			var errorString = eonde.Utils.showBackendErrors(data, "Online", self.step());
			if (errorString !== null && errorString !== "") {
				self.hasBackendErrors(true);
				self.backendErrors(errorString);
						}
		}
		
        var finalResultData, limitExists=false, loadMoreDivResult=false, requestUrl="", loadMoreValue='0';
        self.searchTerm = ko.observable("");
        self.response = ko.observable("");
		getZip = function (searchTerm, response) {
			eonde.Utils.trackVirtualPageCall("/zipcodes");
			self.clearBackendErrors();
            $overlay.addClass('zipOverlay');
            $plz.addClass('ui-autocomplete-loading').attr('readonly', true);
            self.searchTerm(searchTerm);
            self.response(response);
            if(limitExists && loadMoreValue=='1'){
                requestUrl =eonde.Config.serviceURLs.zipcodeService+'clientId=eonde&query=' + encodeURIComponent(self.searchTerm()); 
            } else requestUrl = eonde.Config.serviceURLs.zipcodeService+'clientId=eonde&limit=10&query=' + encodeURIComponent(self.searchTerm());

			$.ajax({
                beforeSend: function(xhr) {
                    xhr.setRequestHeader('Authorization', authorizationHeaderVal);
                },
                dataType: "json",
                type: 'GET',
                url: requestUrl
            }).done( function(data) {
                $plz.removeClass('ui-autocomplete-loading').removeAttr('readonly');
                $overlay.removeClass('zipOverlay');

                //add load more named row to autocomplete menu
                if(data.more){
                    loadMoreDivResult=data.more;
                    loadMoreValue=1;
                } else{
                 loadMoreDivResult=false;
                 loadMoreValue=0;
                }
                
                finalResultData= eonde.Utils.getZipCodesList(data.zipCodes, self.zipCitiesList);
                if(!limitExists){
                    finalResultData=finalResultData.splice(0,10);
                }
                if(loadMoreDivResult){
                    finalResultData.push(eonde.i18n.get("autocomplete.load.more.text"));
                }
                response($.map(finalResultData, function (item, index) {
                    if(index == 0) {
                        self.zipCode(item);
                    }
					return {
						value: item
					}
				}));
                /*if(self.enterKeyPressed())
                    submitStep(self.step());*/
                limitExists=false;
                //add a custom name to the autocomplete
                $plz.autocomplete("widget").addClass("registrationAutocomplete");
                if(loadMoreDivResult){
                    $('.registrationAutocomplete li:last-child a').on('click', function(event) {
                        limitExists=true;
                        $('.registrationAutocomplete').hide();
                        $plz.val(self.searchTerm());
                        $plz.autocomplete("search", self.searchTerm());
                        event.stopImmediatePropagation();                   
                    });
                }
                $('.ui-menu').scrollTop(0);
            }).fail(function(data) {
                $plz.removeClass('ui-autocomplete-loading').removeAttr('readonly');
                $overlay.removeClass('zipOverlay');
                if(!self.zipCode.isValid() && !self.showErrorMessages()){
                    self.hasBackendErrors();
                    self.handleBackendErrors(data);      
                    self.backendErrors("Postleitzahl ist ungültig, nur Ziffern");
                }
            });
		};	
		
        $("#registrationbcform #PLZ").keydown(function(event){
            if (event.keyCode !== 13) {
                if ($(this).val() === eonde.i18n.get("autocomplete.load.more.text")) {
                    event.stopImmediatePropagation();
                    event.stopPropagation();
                    event.preventDefault();
                    return false;
                }
            }
        }).autocomplete().keyup(function(event){
            if (event.keyCode == 13) {
                if ($(this).val() === eonde.i18n.get("autocomplete.load.more.text")) {
                    limitExists=true;
                    $(this).val(self.searchTerm());
                    $(this).autocomplete("search", self.searchTerm());
                }
            }
            eonde.Utils.changeDelayZipAutocomplete(this);
        });
        
        ko.validation.registerExtenders();

        self.init = function () {
			self.applyValidations();
            ko.validation.init({insertMessages: false});
        };

        self.enterPressed = function(data, event) {                        
            if(data.item && data.item.value === eonde.i18n.get("autocomplete.load.more.text")){
                return false;
            }
            if(event.which == 13 && !$(event.target).is('textarea')) {
                if(!$overlay.hasClass('zipOverlay')) {
                $(event.target).blur();
                submitStep(data.step());
                return false;
            }
                /*self.enterKeyPressed(true);*/
            } else {
                /*Reset the enter key press variable on all other key presses.*/
                /*self.enterKeyPressed(false);*/
            }
            return true;
        }
        
        //bound to every "Weiter" button
        submitStep = function (id) {
		$(window).scrollTop(0);
            if (self.isValid()) {
            	self.showErrorMessages(false);
				switch (id) {
					case "1":
						submitStep1();
						break;
					case "2":
						submitStep2();
						break;
					case "3":
						submitStep3();
						break;
					case "4":
						submitStep4();
						break;
				}
			} else {
                if(!self.zipCode.isValid()){
                    self.clearBackendErrors();
                }
                $(window).scrollTop(0);
				self.showErrorMessages(true);
			}
        };

        //bound to every "Zurück" button and to all "Ändern" buttons
        editStep = function (id) {
        	self.hasBackendErrors (false);
        	self.showErrorMessages(false);
            $(window).scrollTop(0);
            self.step(id);
			self.clearBackendErrors();
        };

        var stepData = {};

        submitStep1 = function () {
            stepData.type = self.type();
            stepData.consumption = self.consumption();
			stepData.company = self.company();
			stepData.companyAddon = self.companyAddon() ? self.companyAddon() : "";
			stepData.street = self.street();
            stepData.zip = self.zipCode().substring(0,5);
			self.displayProduct(eonde.i18n.get('registration.form.'+self.type()));
        	self.step("2");
			eonde.Utils.formProgressSteps();
        };
        submitStep2= function () {
            stepData.salutation = self.salutation();
			stepData.title = self.title() ? self.title : "";
			stepData.firstname = self.firstname();
			stepData.lastname = self.lastname();
			stepData.phone = self.phone();
			stepData.email = self.email();
            self.displaySalutation(eonde.i18n.get('online.form.dd.salutation.'+self.salutation()));
        	self.step("3");
            eonde.Utils.formProgressSteps();
        };
        submitStep3 = function () {
        	submitDataToService(ko.toJSON(stepData), "4");
			self.showErrorMessages(false);
        };


        submitDataToService = function(dataObj, nextStep) {
            self.hasBackendErrors (false);
            var requestURL = formServiceURL+'clientId=eonde&formId=gkpregistration';
			eonde.Utils.trackVirtualPageCall("/forms");

            $.ajax({
                beforeSend: function(xhr) {
                    xhr.setRequestHeader('Authorization', authorizationHeaderVal);
                },
                dataType: "json",
                type: 'POST',
                url: requestURL,
                data: 'data=' + encodeURIComponent(dataObj)
            }).done( function(data) {
				self.clearBackendErrors();
                if (data != null ) {
                    $(window).scrollTop(0);
                    self.step(nextStep);
                }
				eonde.Utils.formProgressSteps();

            }).fail(function(data) {
               self.hasBackendErrors(true);
				self.handleBackendErrors(data);
				$(window).scrollTop(0);
            });

        };

        //Adding custom zip code validation as part of EONWKT-4307
        self.zipErrorMsg = ko.observable("");
        self.checkZipCode = function (item, event) {
            if (self.step() == "1") {
                if (item.length < 3) {
                    self.zipErrorMsg(eonde.i18n.get("zip.validationerror.atleastthreedigits"));
                } else if(!$.isNumeric(item) && typeof($plz.data("autocomplete"))!=="undefined" && !$plz.autocomplete("widget").is(':visible')) {
                    self.zipErrorMsg(eonde.i18n.get("zip.validationerror.nonnumericnoresults"));
                } else if (!/^\d{4,5}\s+[^0-9\s]+.*$/.test(item)) {
                    self.zipErrorMsg(eonde.i18n.get("zip.validationerror.entermoredigits"));
                }
                if (!/^\d{4,5}\s+[^0-9\s]+.*$/.test(item)) {
                    return false;
                } else {
                    if (item !== null && item !== '') {
                        var zipCity = item.replace(/ +(?= )/g,'');
                        if (!/^\d{5}.*$/.test(item) || self.zipCitiesList().length == 0) {
                            self.zipErrorMsg(eonde.i18n.get("zip.validationerror.entermoredigits"));
                        } 
                        if ((self.zipCitiesList().length == 0 || (self.zipCitiesList().length > 0 && self.zipCitiesList().indexOf(zipCity) < 0))) {
                            self.zipErrorMsg(eonde.i18n.get("zip.validationerror.unknowncombination"));
                            return false;
                        }

                    }
                    return true;
                }
            } else {
                return true;
            }
        };

        self.applyValidations = function () {

    		self.consumption.extend({
				required: {onlyIf: function () { return (self.step() == "1"); }, message: eonde.i18n.get('online_err_consumption_missing')}
    		});
    		self.company.extend({
				required: {onlyIf: function () { return (self.step() == "1"); }, message: eonde.i18n.get('online_err_company_missing')}
    		});
    		self.street.extend({
				required: {onlyIf: function () { return (self.step() == "1"); }, message: eonde.i18n.get('online_err_street_missing')}
    		});
    		self.zipCode.extend({
                validation : {validator : self.checkZipCode, message : function() { return self.zipErrorMsg();}},
                required: {onlyIf: function () { return (self.step() == "1"); }, message: eonde.i18n.get('online_err_zip_missing')}
    		});

        	self.salutation.extend({
				required: {onlyIf: function () { return (self.step() == "2"); }, message: eonde.i18n.get('online_err_salutation_missing')}
			});
			self.firstname.extend({
				required: {onlyIf: function () { return (self.step() == "2"); }, message: eonde.i18n.get('online_err_firstname_missing')}
			});
			self.lastname.extend({
				required: {onlyIf: function () { return (self.step() == "2"); }, message: eonde.i18n.get('online_err_lastname_missing')}
			});
			self.phone.extend({
				required: {onlyIf: function () { return (self.step() == "2"); }, message: eonde.i18n.get('online_err_phone_missing')}
			});
			self.email.extend({
				required: {onlyIf: function () { return (self.step() == "2"); }, message: eonde.i18n.get('online_err_email_missing')},
				email : {onlyIf: function () { return (self.step() == "2"); }, message: eonde.i18n.get('online_err_email_invalid'), params: true}
			});

        	self.registerGroup = ko.validation.group([self.consumption, self.company, self.street, self.zipCode]);
        	self.infoMgmtGroup = ko.validation.group([self.salutation, self.firstname, self.lastname, self.phone, self.email]);

        }
    };

    var view = registrationbcformDiv.get(0);
    if (view) {
		var registrationformVM = new eonde.vmRegistrationform();
        registrationformVM.init();
        ko.applyBindings (ko.validatedObservable(registrationformVM), view);      
    }

});

eonde = window.eonde || {};
eonde.news = {};
eonde.news.edit = {
    beforeSend : function(){
        $('.async-error').remove();
        $('#datetime-date').removeClass('x-form-invalid');
        $('#datetime-time').removeClass('x-form-invalid');
        $('.title').removeClass('x-form-invalid');        
    },

    newsCreateSuccess : function(changes){
        if(changes && changes[0].argument && changes[0].type == 'created'){
            window.location.href = changes[0].argument;
        }
    },

    newsCreateError : function(errors){
        $.each(errors, function(i, error) {
            if (error.id && error.msg) {
                if (error.id == 'datetime') {

                    $("<p class='async-error'>"+eonde.i18n.get(error.msg)+"</p>").insertBefore('.datetime');
                    $('#datetime-date').addClass('x-form-invalid');
                    $('#datetime-time').addClass('x-form-invalid');
                } else if (error.id == 'jcr:title') {

                    $("<p class='async-error'>"+eonde.i18n.get(error.msg)+"</p>").insertBefore('.title');
                    $('.title').addClass('x-form-invalid');
                }
            }
        });
    }

};
var eon = window.eon || {};

(function(window, document, $, eon) {

    eon.ajax = (function () {
        var errorHandler = function (data, callback) {
            if (data.status == 500 && data.responseText) {
                var error500Obj = $.parseJSON(data.responseText);
                if (error500Obj && error500Obj.error && error500Obj.error.message && error500Obj.error['class']) {
                    alert("Fatal Error [Message: " + error500Obj.error.message + ", Class: " + error500Obj.error['class'] + "]");
                }
            } else if (data.status == 400 && data.responseText) {
                var error400Obj = $.parseJSON(data.responseText);
                if (error400Obj) {
                    callback(error400Obj.errors);
                }
            }  else if (data.status == 404) {
                // Do nothing
            } else {
                alert("Fatal Error, Server said: [" + data.status + "]");
            }
        };

        /**
         * Validates and submits any form and calls the passed callbacks in success or error cases.
         */
        var formSubmit = function (formID, errorCallback, successCallback, type) {
            var formEl = $(formID);
            var dataArr = formEl.serializeArray();
            if (dataArr) {
                var url = formEl.attr('action');
                $.ajax({
                    type: "POST",
                    url: url,
                    dataType: type ? type : "json",
                    data: dataArr,
                    success : function(data) {
                        if(data) {
                            if (type == 'html') {
                                successCallback(data, formID);
                            }
                            else if (data.changes) {
                                successCallback(data.changes);
                            }
                        }
                    },
                    error : function(data) {
                        if(data && type == 'html') {
                            errorCallback(data, formID);
                        } else {
                            eon.ajax.errorHandler(data, errorCallback);
                        }
                    }
                });
            }
        };

        return {
            formSubmit : formSubmit,
            errorHandler : errorHandler
        };

    }());

}(window, document, jQuery, eon));
$(document).ready(function(){ 
    $('.generic-content .expandableArrow').click(function(){
        var $this = $(this);
        if($this.hasClass('icon-stage_teaser_pfeil_oben')) {
            $this.removeClass('icon-stage_teaser_pfeil_oben').addClass('icon-stage_teaser_pfeil_unten');
        } else {
            $this.removeClass('icon-stage_teaser_pfeil_unten').addClass('icon-stage_teaser_pfeil_oben');
        }
    });
	//Initializing the datepicker in German format.
	if (Modernizr.touch && Modernizr.inputtypes.date) {
       var devicePlateform = navigator.platform;
		$("#generic-accordion .js-date").each(function(i, item) { 
			var $this = $(this);
            if(/iPad/.test(devicePlateform)){
                /*This is iPad*/
				var newDateBox = $("<input/>").attr({'type':'date'}).css({'position':'absolute', 'top': '0', 'left': '175px', 'opacity': 0, 'height': '28px'}).on('change blur', {btn: $this}, function(e){ 
                    var valueAsDate = e.target.valueAsDate.toLocaleDateString(); 
                    var value = e.target.value.split('-'); value = value[2] + '.' + value[1] + '.' + value[0]; 
                    e.data.btn.val(value); 
                    e.data.btn.trigger("change");
                }).insertAfter($this); 
            }else{
                var newDateBox = $("<input/>").attr({'type':'date'}).addClass('nCal').on('change blur', {btn: $this}, function(e){ 
                    var valueAsDate = e.target.valueAsDate.toLocaleDateString(); 
                    var value = e.target.value.split('-'); value = value[2] + '.' + value[1] + '.' + value[0]; 
                    e.data.btn.val(value); 
                    e.data.btn.trigger("change");
                }).insertAfter($this); 
            }
			$this.on('click touchstart', {newDateBox: newDateBox}, function(e){ 
				e.preventDefault(); newDateBox.focus(); return false; 
			});
		});
	}  else {
		$('#generic-accordion .js-date').datepicker({ firstDay: 1,  constrainInput: false, dayNamesMin: ["So","Mo", "Di", "Mi", "Do", "Fr", "Sa"], showOtherMonths: true, monthNames: ["Januar", "Februar", "März", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"], dateFormat: "dd.mm.yy" });
		$("#generic-accordion .icon-calendar").click(function() {
			$(this).prev().focus();
		});	
		
		$("#ui-datepicker-div").addClass("notranslate");
	}
});
$(document).ready(function(){
/*jslint forin: true, sloppy: true, unparam: true, vars: true, white: true */
/*global document, jQuery, log, window, console */

var eonde = window.eonde || {};

(function (window, document, $, eonde) { 

    // Our "controller" for the module we are currently developing
    eonde.listingFilter = (function () {
        var
             init, 
            onChangeHandler,
            formElementSelector = '#listing-filter-form',
            listingSelector = '.listing-filter';

        /**
         * @function
         * @description
         *  Handles the onChange events of the passed objects
         * @params  {event} e   The event object
         */        
        onChangeHandler = function (e) {
            var 
                formSubmit = true,
                target = $(e.target),
                formElement = $(formElementSelector);

            if (target.data('currentDate')) {
                var
                    oldDate = target.data('currentDate'),
                    newDate = target.val(),
                    dateChange = (oldDate != newDate);
                
                if (dateChange) {
                    target.data('currentDate', target.val());
                } else {
                    formSubmit = false;
                }
            }

            if (target.attr('type') === 'checkbox') {
                var elements = target.closest('li').find('ul');
                if (elements.length) {
                    elements.find('input[type=checkbox]').each(function () {
                        this.checked = !this.checked;
                    });
                }
            }
            
            if (formSubmit) {
                formElement.submit();
            }
        };
        /**
         * Initialize the module
         */
        init = function () { 
            var 
                formElement = $(formElementSelector),
                listingFilterElement = $(listingSelector),
                inputElements = listingFilterElement.find('input'),
                datepickerElements = inputElements.filter('.datepicker'),
                selectElements = listingFilterElement.find('select'),
                pressReviewsDatePicker = formElement.find('.datepicker-press-reviews');
            
            datepickerElements.each(function () {
                    $(this).data('currentDate', $(this).val());
                });
            inputElements.bind('change', onChangeHandler);
            selectElements.bind('change', onChangeHandler);
            datepickerElements.unbind('change').bind('dateChange', onChangeHandler);
            pressReviewsDatePicker.bind('dateChange', onChangeHandler);
			
			//check box UI change
			$('#listing-filter-form label.checkbox').click(function(e){
					var thisObj = $(this);

					if((thisObj).find('input[type=checkbox]').length > 0){
						if(!((thisObj).hasClass('checkedInputCheckbox'))){
							(thisObj).addClass('checkedInputCheckbox');														
						}
						else {
							(thisObj).removeClass('checkedInputCheckbox');
						}
					}
			 });
			
        };
        
        return {
            init : init
        };

    }());

}(window, document, jQuery, eonde));
//eonde.listingFilter.init();
jQuery(eonde.listingFilter.init);
});
eonde = window.eonde || {};
eonde.mediadetails= {};
eonde.mediadetails.edit = {

    beforeSend : function(){
        $('.async-error').remove();
        $('#title').removeClass('x-form-invalid');
        $('#location').removeClass('x-form-invalid');
        $('#source').removeClass('x-form-invalid');
        $('#lowresmediapath').removeClass('x-form-invalid');
        $('#highresmediapath').removeClass('x-form-invalid');
        
        $('#title-date').removeClass('x-form-invalid');
        $('#location').removeClass('x-form-invalid');
        $('#source').removeClass('x-form-invalid');
        $('#lowresmediapath').removeClass('x-form-invalid');
        $('#highresmediapath').removeClass('x-form-invalid');
        $('#imagepath').removeClass('x-form-invalid');
    },

    mediaDetailsCreateSuccess : function(changes){
        if(changes && changes[0].argument && changes[0].type == 'created'){
            window.location.href = changes[0].argument;
        }
    },

    mediaDetailsCreateError : function(errors){
        $.each(errors, function(i, error) {
            if (error.id && error.msg) {
                if (error.id == 'jcr:title') {
                	$("<p class='async-error'>"+eonde.i18n.get(error.msg)+"</p>").insertBefore('#title');
                    $('#title').addClass('x-form-invalid');
                }else if (error.id == 'location') {
                    $("<p class='async-error'>"+eonde.i18n.get(error.msg)+"</p>").insertBefore('#location');
                    $('#location').addClass('x-form-invalid');
                }else if (error.id == 'source') {
                    $("<p class='async-error'>"+eonde.i18n.get(error.msg)+"</p>").insertBefore('#source');
                    $('#source').addClass('x-form-invalid');
                }else if (error.id == 'lowresmediapath') {
                    $("<p class='async-error'>"+eonde.i18n.get(error.msg)+"</p>").insertAfter('#label-lowresmediapath');
                    $('#lowresmediapath').addClass('x-form-invalid');
                }else if (error.id == 'highresmediapath') {
                    $("<p class='async-error'>"+eonde.i18n.get(error.msg)+"</p>").insertAfter('#label-highresmediapath');
                    $('#highresmediapath').addClass('x-form-invalid');
                }
                else if (error.id == 'imagepath') {
                    $("<p class='async-error'>"+eonde.i18n.get(error.msg)+"</p>").insertAfter('#label-imagepath');
                    $('#imagepath').addClass('x-form-invalid');
                }
            }
        });
    }

};
eon = window.eon || {};
eon.pagination = {};
eon.pagination.edit = {

   setOrder : function(field) {
   
        pagePath = CQ.WCM.getPagePath();
        jsonurl = pagePath+ "/jcr:content/par/listing.infinity.json";
        jsonUrlData = CQ.Util.eval(CQ.HTTP.get(jsonurl));
        listtype = "empty";
        if (jsonUrlData) {
            for (var key in jsonUrlData) {
                if (key == "listtype"){
                listtype = jsonUrlData[key];
                }
            }
        }
        if(listtype!="event"){
           field.getEl().parent().parent().hide(); 
        }
    },
    setOrderBy : function(field) {

        if(listtype!="media"){
           field.getEl().parent().parent().hide(); 
        }
    }
    
    
};
/*!
* password_expired.js
* This file contains the code for the Password Expiry.
* 
* @project   E.ON DE
* @date      2014-05-29 
* @author    SHARDENDU, SapientNitro <skantha@sapient.com>
* @licensor  E.ON
* @NOTE
*/

// Declaring namespace parameter
var eonde = eonde || {};
$(function() {

    var passwordExpiryDiv = $('#passwordExpiry');
    if (passwordExpiryDiv.length === 0) {
        return;
    }
	
	ko.validation.configure({
		insertMessages: true,
	    decorateElement: true,
	    errorMessageClass: 'error',
	    errorElementClass: 'error',
	    errorClass: 'error',
	    errorsAsTitle: true,
	    parseInputAttributes: false,
	    messagesOnModified: true,
	    decorateElementOnModified: true,
	    decorateInputElement: true
	});


	eonde.vmPwdExpiry = function () {
		
		var self = this;
		self.oldpassword = ko.observable("");
        self.newpassword = ko.observable("");
        self.confirmpassword = ko.observable("");
		self.refererUC = ko.observable("");
		self.actpass = ko.observable("");
        self.lengthCheck = ko.observable("0");
        self.caseCheck = ko.observable("0");
        self.digitCheck = ko.observable("0");
        var casePattern = /(?=.*?[A-Z])(?=.*?[a-z])/;
        var upperCasePattern = /(?=.*?[A-Z])/;
        var lowerCasePattern = /(?=.*?[a-z])/;
        var numberPattern = /(?=.*?[0-9])/;
        self.validateoldpwd = ko.observable(false);
        self.validatenewpwd = ko.observable(false);
        self.validateconfirmpwd = ko.observable(false);

        self.step = ko.observable("1");

        ko.validation.rules['confirmPasswordMatch'] = {
			getValue: function (o) {
				return (typeof o === 'function' ? o() : o);
			},
			validator: function (val, otherField) {
				var result = ((val === "" || this.getValue(otherField) === "") && (!self.validateconfirmpwd() || !self.validatenewpwd()) || val === this.getValue(otherField));
				if (!result) {
					self.showErrorMessages(true);
				}
				return result;
			},
			message: eonde.i18n.get('303')
		};
		ko.validation.registerExtenders();
		
		submitStep = function () {
			self.validateoldpwd(true);
			self.validatenewpwd(true);
			self.validateconfirmpwd(true);
			if (self.isValid()) {
				self.showErrorMessages(false);
				$('#passwordExpiry form').submit();
			} else {
				self.showErrorMessages(true);
			}         
        };
        self.newpassword.subscribe(function(newpassword){
        	self.validatenewpwd(false);
        	if(self.newpassword.isValid() == false){
				self.showErrorMessages(true);
			}
        });
        self.oldpassword.subscribe(function(oldpassword){
        	self.validateoldpwd(false);
        });
        self.confirmpassword.subscribe(function(oldpassword){
        	self.validateconfirmpwd(false);
        });
		$('#neuesPasswort').keyup(function() {
			var newpassword = $('#neuesPasswort').val();
			if(newpassword.length>=8){
				self.lengthCheck("1");
			}
			else{
				self.lengthCheck("0");			
			}
			if(casePattern.test(newpassword)){
				self.caseCheck("1");
			}
			else {
				self.caseCheck("0");
			}
			if(numberPattern.test(newpassword)){
                self.digitCheck("1");               
			}
			else{
                self.digitCheck("0");
			}
		});
		
		self.init = function () {

			var spanRefererUC = $('span.pwdBackRefererUC');
			var spanActpass = $('span.pwdBackActpass');
			var spanMessage=$('span.pwdBackError');
			var xid=$('span.xid').attr('data-xid');
			
			$('#pwd_pageGenTime').val(new Date().getTime());
			if(xid!="") {
				CQ_Analytics.ProfileDataMgr.setProperty('pwd_xid', xid);
				$("#user_name").val(xid);
			}
			else {
				$("#user_name").val(CQ_Analytics.ProfileDataMgr.getProperty('pwd_xid'));
				xid=CQ_Analytics.ProfileDataMgr.getProperty('pwd_xid');
			}

			if (spanRefererUC && spanRefererUC.length > 0) {
				var refererUCVal = spanRefererUC.attr('data-refereruc');
				if (refererUCVal !== undefined && refererUCVal !== "" && (refererUCVal === "2" || refererUCVal === "6")) {
					CQ_Analytics.ProfileDataMgr.setProperty('pwd_refererUC_'+xid, refererUCVal);
					self.refererUC(refererUCVal);
				}
            } 
			if (spanActpass && spanActpass.length > 0) {
				var actpassVal = spanActpass.attr('data-actpass');
				if (actpassVal !== undefined && actpassVal !== "") {
                    CQ_Analytics.ProfileDataMgr.setProperty('pwd_actpassVal_'+xid, actpassVal);
					self.actpass(actpassVal);
				}
            }
            if(spanMessage.length>0) {
				var errorCode = spanMessage.attr('data-message');
                if(errorCode != "") {
					var refererUC=CQ_Analytics.ProfileDataMgr.getProperty('pwd_refererUC_'+xid);
	                var actpass=CQ_Analytics.ProfileDataMgr.getProperty('pwd_actpassVal_'+xid);
	                if(refererUC != '') {
						self.refererUC(refererUC);
	               	}
                    if(actpass != '') {
						self.actpass(actpass);
                    }
                }
            }
            self.showErrorMessages = ko.observable();	
            self.applyValidations();
        };
        self.newPasswordErrMsg = ko.observable("");
        self.validateNewPassword = function (item, event) {
        	var passwordMsg="";
        	if (item.length > 0) {
	        	if(item.length < 8){
	        		passwordMsg+=eonde.i18n.get('321');
	        		self.newPasswordErrMsg(passwordMsg);
	        	}
	        	if(!upperCasePattern.test(item)){
	        		if (passwordMsg !== "") {
	        			passwordMsg+= "<br>";
	        		}
	        		passwordMsg+= eonde.i18n.get('314');
	        		self.newPasswordErrMsg(passwordMsg);
	        	}
	        	if(!lowerCasePattern.test(item)){
	        		if (passwordMsg !== "") {
	        			passwordMsg+= "<br>";
	        		}
	        		passwordMsg+= eonde.i18n.get('313');
	        		self.newPasswordErrMsg(passwordMsg);
	        	}
	        	if(!numberPattern.test(item)){
	        		if (passwordMsg !== "") {
	        			passwordMsg+= "<br>";
	        		}
	        		passwordMsg+= eonde.i18n.get('315');
	        		self.newPasswordErrMsg(passwordMsg);
	        	}

	        	if(item.length < 8 || !casePattern.test(item) || !numberPattern.test(item)){
	        		self.showErrorMessages(true);
	        		return false;
	        	}
	        	return true;
        	} else {
	            return true;
	        }
        }
        self.applyValidations = function() {
            if(self.refererUC() == "" ) {
				self.oldpassword.extend({
					required: {message: eonde.i18n.get('password.expiry.error.old.password'), onlyIf: function () { return self.validateoldpwd();}}
				});
            }
			self.newpassword.extend({
				validation: {validator: self.validateNewPassword, message: function() { return self.newPasswordErrMsg();}},
				required: {message: eonde.i18n.get('password.expiry.error.new.password'), onlyIf: function () { return self.validatenewpwd();}}
	        });
			self.confirmpassword.extend({
				confirmPasswordMatch: {
					params: self.newpassword,
            		onlyIf: function () { return (self.newpassword.isValid()); }
				}
			});
								
			self.infoMgmtGroup = ko.validation.group([self.oldpassword, self.newpassword, self.confirmpassword]);		
		}

		//Custom handler to apply error class on input elements
	    ko.bindingHandlers.validationElement = {
	    update: function (element, valueAccessor) {
	            var valueIsValid = valueAccessor().isValid();
	            if (!valueIsValid && self.showErrorMessages() === true) {
	                $(element).addClass("input-error");
	            } else {
	                $(element).removeClass("input-error");
	            }
	        }
	    }
	};
	var view = passwordExpiryDiv.get(0);
    if (view) {
		var vmPwdExpiry = new eonde.vmPwdExpiry();
		vmPwdExpiry.init();
        ko.applyBindings (ko.validatedObservable(vmPwdExpiry), view);
        passwordExpiryDiv.css("overflow", "inherit");
        passwordExpiryDiv.css("height" , "auto");     
    }
	var errorMessage = [], errorContent = '';
	$('span.pwdBackError').each(function(){
	  var errorCode = $(this).attr('data-message');
        if(errorCode !==''){
			errorCode = eonde.i18n.get(errorCode);
            errorMessage.push({
                message: errorCode
            });
        }
	});
	for(var i = 0; i < errorMessage.length; i++){
	  errorContent += '<p>'+errorMessage[i].message+'</p>';
	};
    if(errorContent !== ''){ 
		$('div.backendError').html(errorContent);
        $('div.backendError').show();
    }
	
    
	$('.helpbox_trigger').click(function() { 
		$(this).parentsUntil('.helpbox_group').find('.helpbox_text').toggle('fast');
	});

});
/*!
* solarform.js
* This file contains the code for the Solar form (4 steps).
* 
* @project   E.ON DE
* @date      2014-05-27 
* @author    SHARDENDU, SapientNitro <skantha@sapient.com>
* @licensor  E.ON
* @NOTE
*/

// Declaring namespace parameter
var eonde = eonde || {};

$(function() {

    var formsolor = $('#formsolor');
    if (formsolor.length === 0) {
        return;
    }

	eonde.vmSOLAR = function () {
		var self = this;
		
		var formSlashURL = eonde.Config.serviceURLs.formService;
        var authorizationHeaderVal = eonde.Config.serviceURLs.authorization;
		var zipcodeServiceURL = eonde.Config.serviceURLs.zipcodeService;
		var streetsServiceURL = eonde.Config.serviceURLs.streetService;	
		var QueryString = eonde.Utils.QueryString;
		var $overlay = formsolor.find('.forZipOverlay');
		
		//Custom handler to apply error class on input elements
        ko.bindingHandlers.validationElement = {
        update: function (element, valueAccessor) {
                var valueIsValid = valueAccessor().isValid();
                if (!valueIsValid && self.showErrorMessages() === true) {
                    $(element).addClass("input-error");
                } else {
                    $(element).removeClass("input-error");
                }
            }
        }
		
		//coming from URL, they get set in the init function
        self.customerType = ko.observable ("gw"); 

		
		//today's date - will be used to pre-fill the date of the meter-reading and gets set in the init function        
        self.today = ko.observable ("");
		self.showErrorMessages = ko.observable(false);		
		
		self.hasBackendErrors = ko.observable (false);
        self.backendErrors = ko.observable ("");
        self.backendErrorsAltAddress = ko.observable ("");
        
		//get parameters from URL and update view model accordingly
		//self.customerType(QueryString.customerType);

        self.company = ko.observable("");
        self.zipcodeFieldValue = ko.observable("");
        self.street = ko.observable("");
        self.street_object = ko.observable("");
        self.house_number = ko.observable("");
        self.house_number_object = ko.observable("");
		self.lengthA = ko.observable("");
		self.lengthB = ko.observable("");
		self.storage = ko.observable();
		self.date = ko.observable("");
		self.firring = ko.observable();
		self.styleOfRoof = ko.observable("");
		self.directionSelect = ko.observable("");
		self.direction = ko.observable("");
		self.downGradeSelect = ko.observable("");
		self.downGrade = ko.observable("");
		self.output = ko.observable();
		self.estimatedInvestment = ko.observable("");
        self.estimatedInvestment_display = ko.observable("");
		self.roofage = ko.observable("");
        self.email = ko.observable("");
        self.phone = ko.observable("");
        self.salutation = ko.observable("");
        self.title = ko.observable("");
        self.firstname = ko.observable("");
        self.lastname = ko.observable("");
		self.is_terms_checked = ko.observable (false);
		self.is_email_service_checked = ko.observable (false);
		self.solar_zipcode = ko.observable();
        self.solar_zipcode_object = ko.observable();
		self.solar_city = ko.observable("");
        self.solar_city_object = ko.observable("");
		self.displaySalutation = ko.observable('');
		self.zipCitiesList = ko.observableArray();
		self.zipFromRequest = ko.observable(false);
		self.productChoice = ko.observable(0);
		self.productChoice_display = ko.observable(eonde.i18n.get('solar.form.interested.in.option1'));
		self.alternate_address = ko.observable("no");
		self.alternate_zipcode = ko.observable("");
		self.alternate_city = ko.observable("");
        self.alternate_cities = ko.observableArray();
        self.alternate_street = ko.observable("");
        self.alternate_street_number = ko.observable("");
        self.energyConsumption = ko.observable("");
        self.energyConsumption_display = ko.observable("");
        self.usageBehavior = ko.observable("");
        self.roofPitchSelect = ko.observable("");
        self.estimatedRevenue = ko.observable("");
        self.estimatedRevenue_display = ko.observable("");

        self.navigateDeutschland = function(e) {
			window.open('/kontakt','_blank');
		}
		self.navigateDatenschutzbestimmungen = function(e) {
			window.open('/datenschutz','_blank');
		}
		self.productChoice_display = ko.computed (function(){
            if (self.productChoice() == 0) {
                return eonde.i18n.get('solar.form.interested.in.option1');
            } else if (self.productChoice() == 1) {
                return eonde.i18n.get('solar.form.interested.in.option2');
            } else if (self.productChoice() == 2) {
                return eonde.i18n.get('solar.form.interested.in.option3');
            }
        });

        self.formatPrice = function(price) {
        	if (price != "" && price != null && price != "null") {
        		if (price.indexOf('.') >= 0) {
        			return $.formatNumber(price, {format: "#,##0.00", locale: $('.locale').attr('data-attr')});
        		} else {
        			return $.formatNumber(price, {format: "#,##0", locale: $('.locale').attr('data-attr')})
        		}
        	}
        }

        self.isParamValid = function(param) {
        	return param && param !== '' && param != null && param != 'null' && param != 'undefined';
        }

        self.init = function () {
            
			self.showErrorMessages(false);
            			
			//keeps track of visibility of form steps and gets modiefied by "submitStep" and "editStep"
			self.step = ko.observable("3");
			self.subStep = ko.observable("3a");
			eonde.Utils.trackVirtualPageCall("/step2");
			
			//values for dropdown menus
			self.titles = ["Prof.", "Dr."];
			self.salutations = [{id: "", description:eonde.i18n.get('online.form.optiondefault')}, 
							{id: "Frau", description:eonde.i18n.get('online.form.dd.salutation.Frau')}, 
							{id: "Herr", description:eonde.i18n.get('online.form.dd.salutation.Herr')}];

			//Mandatory zip and city fields
            var zipcodeFieldValue = (self.isParamValid(QueryString.zipObject) ? QueryString.zipObject : "") + " " + (self.isParamValid(QueryString.cityObject) ? decodeURIComponent(QueryString.cityObject) : "");
			self.solar_zipcode(zipcodeFieldValue);
			self.zipFromRequest(true);
            self.solar_zipcode_object(self.isParamValid(QueryString.zipObject) ? QueryString.zipObject : "");
            self.zipcodeFieldValue(zipcodeFieldValue.substring(0,5));
			self.solar_city(decodeURIComponent(QueryString.cityObject));
            self.solar_city_object(self.isParamValid(QueryString.cityObject) ? decodeURIComponent(QueryString.cityObject) : "");

            //Nullable fields
			self.date(self.isParamValid(QueryString.initialDate) ? QueryString.initialDate : "");
			self.directionSelect(self.isParamValid(QueryString.directionSelect) ? decodeURIComponent(QueryString.directionSelect) : "");
			self.output(self.isParamValid(QueryString.performance) ? self.formatPrice(QueryString.performance): "");
			self.estimatedInvestment(self.isParamValid(QueryString.estimatedInvestment) ? QueryString.estimatedInvestment : "");
			self.estimatedInvestment_display(self.isParamValid(QueryString.estimatedInvestment) ? self.formatPrice(QueryString.estimatedInvestment): "");
			self.roofage(self.isParamValid(QueryString.roofage) ? decodeURIComponent(QueryString.roofage) : "");
			self.productChoice(self.isParamValid(QueryString.productChoice) ? QueryString.productChoice : 0);
			self.energyConsumption(self.isParamValid(QueryString.energyConsumption) ? QueryString.energyConsumption : "");
			self.energyConsumption_display(self.isParamValid(QueryString.energyConsumption) ? self.formatPrice(QueryString.energyConsumption) : "");
			self.usageBehavior(self.isParamValid(QueryString.usagebehavior) ? decodeURIComponent(QueryString.usagebehavior) : "");
			self.roofPitchSelect(self.isParamValid(QueryString.roofPitchSelect) ? QueryString.roofPitchSelect : "");
			self.estimatedRevenue(self.isParamValid(QueryString.estimatedRevenue) ? QueryString.estimatedRevenue : "");
            self.estimatedRevenue_display(self.isParamValid(QueryString.estimatedRevenue) ? self.formatPrice(QueryString.estimatedRevenue) : "");
			
			self.applyValidations();
			ko.validation.init({insertMessages: false});
        };
		/*
		@private trackSolarErrors - used to send the error data to Google Tag Manager, this is done for each
		* field of the all the steps of the form when their validation fails
		*/
		self.trackSolarErrors = function() { 
			if (typeof dataLayer != 'undefined' && dataLayer != null) {
				if (!self.salutation.isValid()) {
					eonde.Utils.trackFormErrorEvent("GK Solar Error", "ERR_SALUTATION", "2");
				}
				if (!self.firstname.isValid()) {
					eonde.Utils.trackFormErrorEvent("GK Solar Error", "ERR_FIRSTNAME", "2");
				}
				if (!self.lastname.isValid()) {
					eonde.Utils.trackFormErrorEvent("GK Solar Error", "ERR_LASTNAME", "2");
				}
				if (!self.solar_zipcode.isValid()) {
					eonde.Utils.trackFormErrorEvent("GK Solar Error", "ERR_ZIPCODE", "2");
				}
				if (!self.street.isValid()) {
					eonde.Utils.trackFormErrorEvent("GK Solar Error", "ERR_STREET", "2");
				}
				if (!self.house_number.isValid()) {
					eonde.Utils.trackFormErrorEvent("GK Solar Error", "ERR_HOUSE_NUMBER", "2");
				}
				if (!self.phone.isValid()) {
					eonde.Utils.trackFormErrorEvent("GK Solar Error", "ERR_PHONE", "2");
				}
				if (!self.email.isValid()) {
					eonde.Utils.trackFormErrorEvent("GK Solar Error", "ERR_EMAIL", "2");
				}
				if (!self.is_terms_checked.isValid()) {
					eonde.Utils.trackFormErrorEvent("GK Solar Error", "ERR_POLICY", "2");
				}
				if (!self.is_email_service_checked.isValid()) {
					eonde.Utils.trackFormErrorEvent("GK Solar Error", "ERR_EMAIL_CONFIRMATION", "2");
				}				
			}
		};
		self.clearBackendErrors = function() {
			self.hasBackendErrors(false);
			self.backendErrors("");
			self.backendErrorsAltAddress("");
		}
		
		self.enterPressed = function(data, event) {			            
            if(data.item && data.item.value === eonde.i18n.get("autocomplete.load.more.text")){
                return false;
            }
            if(event.which == 13 && !$(event.target).is('textarea') && !$overlay.hasClass('zipOverlay')) {
                $(event.target).blur();
                if (data.step() == '3') {
                	if (data.subStep() == '3a') {
                		submitStep('2');
                	} else {
                		submitStep('3');
                	}
                } else {
                submitStep(data.step());
                }
                return false;
            }
            return true;
        }
		
		self.handleBackendErrors = function(data) {
			var errorString = eonde.Utils.showBackendErrors(data, "", self.step());
			if (errorString !== null && errorString !== "") {
				self.hasBackendErrors(true);
				self.backendErrors(errorString);
			}
		}
		getStreets = function (searchTerm, callback) {
			var streetsURL = streetsServiceURL+'clientId=eonde&zipCode=' + self.zipcodeFieldValue() + '&streetName=' + searchTerm;
			eonde.Utils.trackVirtualPageCall("/streets");
			self.clearBackendErrors();
			$.ajax({
				 beforeSend: function(xhr) {
                    xhr.setRequestHeader('Authorization', authorizationHeaderVal);
                },
				dataType: "json",
				type : 'GET',
				url:  streetsURL
				}).done(callback);				
		};

		var finalResultData, limitExists=false, loadMoreDivResult=false, requestUrl="", loadMoreValue='0';
		self.searchTerm = ko.observable("");
        self.response = ko.observable("");
		getZip = function (searchTerm, response) {
			eonde.Utils.trackVirtualPageCall("/zipcodes");
			self.clearBackendErrors();
			$overlay.addClass('zipOverlay');
			self.searchTerm(searchTerm);
			self.response(response);
			if(limitExists && loadMoreValue=='1'){
				requestUrl =eonde.Config.serviceURLs.zipcodeService+'clientId=eonde&query=' + encodeURIComponent(self.searchTerm()); 
			} else requestUrl = eonde.Config.serviceURLs.zipcodeService+'clientId=eonde&limit=10&query=' + encodeURIComponent(self.searchTerm());
			self.zipFromRequest(false);
			$.ajax({
                beforeSend: function(xhr) {
                    xhr.setRequestHeader('Authorization', authorizationHeaderVal);
                },
                dataType: "json",
                type: 'GET',
                url: requestUrl
            }).done( function(data) {
				$overlay.removeClass('zipOverlay');

            	//add load more named row to autocomplete menu
				if(data.more){
					loadMoreDivResult=data.more;
					loadMoreValue=1;
				} else{
				 loadMoreDivResult=false;
				 loadMoreValue=0;
				}
				
				finalResultData= eonde.Utils.getZipCodesList(data.zipCodes, self.zipCitiesList);
				if(!limitExists){
					finalResultData=finalResultData.splice(0,10);
				}
				if(loadMoreDivResult){
					finalResultData.push(eonde.i18n.get("autocomplete.load.more.text"));
				}
                response($.map(finalResultData, function (item, index) {
                	if(index == 0) {
                		self.solar_zipcode(item);
                	}
					return {
						value: item
					}
				}));
				limitExists=false;
            	//add a custom name to the autocomplete
				$('#formsolor #PLZ').autocomplete("widget").addClass("solorAutocomplete");
				if(loadMoreDivResult){
					$('.solorAutocomplete li:last-child a').on('click', function(event) {
						limitExists=true;
						$('.solorAutocomplete').hide();
						$('#formsolor #PLZ').val(self.searchTerm());
						$('#formsolor #PLZ').autocomplete("search", self.searchTerm());
						event.stopImmediatePropagation();					
					});
				}
				$('.ui-menu').scrollTop(0);
            }).fail(function(data) {
            	$overlay.removeClass('zipOverlay');
            	if(!self.solar_zipcode.isValid() && !self.showErrorMessages()){
            		self.hasBackendErrors();
					self.handleBackendErrors(data);      
					self.backendErrors("Postleitzahl ist ungültig, nur Ziffern");
            	}
            });
		};
		
		$("#formsolor #solar_zipcode").keydown(function(event){
            if (event.keyCode !== 13) {
                if ($(this).val() === eonde.i18n.get("autocomplete.load.more.text")) {
					event.stopImmediatePropagation();
					event.stopPropagation();
					event.preventDefault();
					return false;
				}
			}
		}).autocomplete().keyup(function(event){
            if (event.keyCode == 13) {
				if ($(this).val() === eonde.i18n.get("autocomplete.load.more.text")) {
					limitExists=true;
					$(this).val(self.searchTerm());
					$(this).autocomplete("search", self.searchTerm());
				}
			}
			eonde.Utils.changeDelayZipAutocomplete(this);
		});
        
        self.solar_zipcode.subscribe(function(zipCode) {
			self.zipcodeFieldValue(zipCode.substring(0,5));
        });
		
		
		//bound to every "Weiter" button
        submitStep = function (id) {
            $(window).scrollTop(0);
			if (self.isValid()) {
				switch (id) {
					case "1":
						submitStep1();
						break;
					case "2":
						submitStep2();
						break;
					case "3":
						submitStep3();
						break;
					case "4":
						submitStep4();
						break;
				}
			} else {
				if(!self.solar_zipcode.isValid()){
                    self.clearBackendErrors();
                }
				$(window).scrollTop(0);
				self.trackSolarErrors();
				self.showErrorMessages(true);								
			}
        };

        //bound to every "ZurÃ¼ck" button and to all "Ã„ndern" buttons in step 4
        editStep = function (id) {
            self.hasBackendErrors (false);
        	self.showErrorMessages(false);
            $(window).scrollTop(0);
            if (id == 3) {
            	self.subStep('3a');
            }
            self.step(id);
			self.clearBackendErrors();
        };
		
		//called when moving from step 1 to 2 etc
        //user-interface should be disabled until service answers
        //"step" should be updated only when "done", otherwise errormessage should be displayed
        submitStep1 = function () {
            self.step('3a');
			eonde.Utils.formProgressSteps();
			eonde.Utils.trackVirtualPageCall("/step2");
			self.showErrorMessages(false);
        };
		submitStep2 = function () {
			if(!self.hasBackendErrors()){
				self.subStep('3b');
				eonde.Utils.formProgressSteps();
				eonde.Utils.trackVirtualPageCall("/step3");
				self.showErrorMessages(false);
				self.displaySalutation(eonde.i18n.get('online.form.dd.salutation.'+self.salutation()));
			}
			
        };
		submitStep3 = function () {
			var stepData = {};
            			
            //stepData.customerType = self.customerType();
			self.alternate_zipcode() !== "" ? stepData.zipAlt = self.alternate_zipcode() : "";
			self.alternate_city() !== "" ? stepData.cityAlt = self.alternate_city() : "";
			stepData.confirmationMail = self.is_email_service_checked();
			stepData.initialDate = self.date();
			stepData.houseNumberAlt = self.alternate_street_number();
            stepData.dataPolicy = self.is_terms_checked();
			stepData.streetAlt = self.alternate_street();
			stepData.streetObject = self.street();
			stepData.houseNumberObject = self.house_number();
			stepData.zipObject = self.solar_zipcode_object();
			stepData.cityObject = self.solar_city_object();
			stepData.directionSelect = self.directionSelect();
			self.estimatedInvestment() !== "" ? stepData.estimatedInvestment = self.estimatedInvestment() : "";
			self.output() !== "" ? stepData.performance = self.output() : "";
			stepData.storage = self.storage();
			//stepData.styleOfRoof = self.styleOfRoof();
			stepData.roofage = self.roofage();
			stepData.productChoice = parseInt(self.productChoice(), 10) + 1;
			stepData.roofPitchSelect = self.roofPitchSelect();
			self.energyConsumption() !== "" ? stepData.energyConsumption = self.energyConsumption() : "";
			self.usageBehavior() !== "" ? stepData.usagebehavior = self.usageBehavior() : "";
			self.estimatedRevenue() !== "" ? stepData.estimatedRevenue = self.estimatedRevenue() : "";
            
            stepData.email = self.email();
            stepData.phone = self.phone();
			stepData.company = self.company();
			stepData.salutation = self.salutation();
			stepData.title = self.title() ? self.title() : "";
			stepData.firstname = self.firstname();
			stepData.lastname = self.lastname();

            //send JSON to offer service
            submitDataToContract(ko.toJSON(stepData), "4");
			self.showErrorMessages(false);
        };
		
        self.alternate_address.subscribe(function(altAddress) {
            if(altAddress == "no"){
            	self.clearBackendErrors();
                self.alternate_zipcode("");
                self.alternate_city("");
                self.alternate_cities([]);
                self.alternate_street("");
                self.alternate_street_number("");
            }
            
        }); 

        self.streetDisabled = ko.computed(function() {
        	if (self.alternate_zipcode() !== "" && self.alternate_city() !== "") {
        		return false;
        	} else {
        		return true;
        	}
        });

        getAlternateStreets = function (searchTerm, callback) {
			
			eonde.Utils.trackVirtualPageCall("/streets");
			self.clearBackendErrors();
			$.ajax({
				beforeSend: function(xhr) {
                    xhr.setRequestHeader('Authorization', authorizationHeaderVal);
                },
				dataType: "json",
				type : 'GET',
				url:  streetsServiceURL+'clientId=eonde&zipCode=' + self.alternate_zipcode() + '&streetName=' + encodeURIComponent(searchTerm)
				}).done(callback).fail(function(data) {
					self.hasBackendErrors(true);
					self.showErrorMessages(false);
					self.backendErrorsAltAddress(eonde.i18n.get("err_zipalt_invalid"));
					$('#zip-alt').focus();
					$('.ui-autocomplete-loading').removeClass("ui-autocomplete-loading");
				});
				
		};

		self.alternate_zipcode.subscribe(function(zipCode) {
            if (zipCode && zipCode.length >= 5) {
				$('#zip-alt').blur();
				eonde.Utils.trackVirtualPageCall("/zipcodes");
				$(".altZipOverlay").removeClass("hide");
				var $altCityLabel = $(".city-alt-div label");
				var $altCityInput = $(".city-alt-div input");
				$.ajax({
					beforeSend: function(xhr) {
						xhr.setRequestHeader('Authorization', authorizationHeaderVal);
					},
					dataType: "json",
					type: 'GET',
					url: zipcodeServiceURL+'clientId=eonde&zipCode='+zipCode,
					autoFocus: true
				}).done( function(data) {
				   $(".altZipOverlay").addClass("hide");
					self.clearBackendErrors();
					self.showErrorMessages(false);
					if (data != null && data != undefined && data.zipCodes && data.zipCodes.length > 0) {
						//billing_city(data);
						var cities = data.zipCodes[0].cities;
						if (cities != undefined && cities != null && cities.length > 0) {
							if (cities.length > 1) {
								self.alternate_cities(cities);
								window.setTimeout(function(){
									$("select:not(.no-custom-dd)").trigger("chosen:updated");
								}, 10);
							} else {
								self.alternate_cities([]);
							}
							self.alternate_city(cities[0]);
						} else {
							self.alternate_city("");
                            self.alternate_cities([]);
							self.alternate_street("");
							self.alternate_street_number("");
						}
						if ($altCityLabel.hasClass("disabled")) {
							$altCityLabel.removeClass("disabled");
							$altCityInput.prop('disabled', false);
						}
					} else {
						self.alternate_city("");
                        self.alternate_cities([]);
						self.alternate_street("");
						self.alternate_street_number("");
						self.clearBackendErrors();
						if(self.alternate_zipcode.isValid()){
		            		self.hasBackendErrors(true);
							self.backendErrorsAltAddress(eonde.i18n.get("err_zipalt_invalid"));
		            	}
						//Disabled city field in case no city returned by service
						if (!$altCityLabel.hasClass("disabled")) {
							$altCityLabel.addClass("disabled");
							$altCityInput.prop('disabled', true);
						}
					}
				}).fail(function(data) {
					self.clearBackendErrors();
					self.showErrorMessages(false);
					$(".altZipOverlay").addClass("hide");
					if(self.alternate_zipcode.isValid()){
	            		self.hasBackendErrors(true);
						self.backendErrorsAltAddress(eonde.i18n.get("err_zipalt_invalid"));
	            	}
					self.alternate_city("");
                    self.alternate_cities([]);
					self.alternate_street("");
					self.alternate_street_number("");
					if (data.status == 400) {
						//Disabled city field in case there is input validation error from backend
						if (!$altCityLabel.hasClass("disabled")) {
							$altCityLabel.addClass("disabled");
							$altCityInput.prop('disabled', true);
						}
					} else {
						//Enabled city field in case there is server error so that user can enter manually
						if ($altCityLabel.hasClass("disabled")) {
							$altCityLabel.removeClass("disabled");
							$altCityInput.prop('disabled', false);
						}
					}
				});
			}			
        });

		self.alternate_city.subscribe(function(city) {
			var $altStreetLabel = $(".js-alt-street label");
			var $altStreetInput = $(".js-alt-street input");
			if (city != null && city != "" && $.trim(city) != "") {
				if ($altStreetLabel.hasClass("disabled")) {
					$altStreetLabel.removeClass("disabled");
					$altStreetInput.prop('disabled', false);
					window.setTimeout(function(){
                    	$("select:not(.no-custom-dd)").trigger("chosen:updated");
                    }, 10);
				}
			} else {
				if (!$altStreetLabel.hasClass("disabled")) {
					$altStreetLabel.addClass("disabled");
					$altStreetInput.prop('disabled', true);
				}
			}
		});

		submitDataToContract = function(dataObj, nextStep) {
            self.hasBackendErrors (false);		
            var requestURL = formSlashURL+'formId=solar&clientId=eonde';
			eonde.Utils.trackVirtualPageCall("/forms");

            $.ajax({
                beforeSend: function(xhr) {
                    xhr.setRequestHeader('Authorization', authorizationHeaderVal);
                },
                dataType: "json",
                type: 'POST',
                url: requestURL,
                data: 'step=' + self.step() + '&data=' + encodeURIComponent(dataObj)
            }).done( function(data) {
				self.clearBackendErrors();
                if (typeof data != "undefined" ) {
					if (typeof dataLayer != 'undefined' && dataLayer != null) {
                		dataLayer.push({
                    		'event': 'customView', 
                    		'page': document.location.pathname + "/teil4-danke",
                            'vorgangsid' : data.solarId 
               			 });
            		}
					$(window).scrollTop(0);
                    self.step(nextStep);
                }
				eonde.Utils.formProgressSteps();
            }).fail(function(data) {
                self.hasBackendErrors(true);
				self.handleBackendErrors(data);
				$(window).scrollTop(0);
            });

		};	
		
		//Adding custom zip code validation as part of EONWKT-4307
        self.zipErrorMsg = ko.observable("");
        self.checkZipCode = function (item, event) {
            if (self.step() == "2") {
                if (item.length < 3) {
                    self.zipErrorMsg(eonde.i18n.get("zip.validationerror.atleastthreedigits"));
                } else if(!$.isNumeric(item) && typeof($('#formsolor #PLZ').data("autocomplete"))!=="undefined" && !$('#formsolor #PLZ').autocomplete("widget").is(':visible')) {
                    self.zipErrorMsg(eonde.i18n.get("zip.validationerror.nonnumericnoresults"));
                } else if (!/^\d{4,5}\s+[^0-9\s]+.*$/.test(item)) {
                    self.zipErrorMsg(eonde.i18n.get("zip.validationerror.entermoredigits"));
                }
                if (!/^\d{4,5}\s+[^0-9\s]+.*$/.test(item)) {
                    return false;
                } else {
                    if (item !== null && item !== '') {
                        var zipCity = item.replace(/ +(?= )/g,'');
                        if (!/^\d{5}.*$/.test(item) || self.zipCitiesList().length == 0) {
                            self.zipErrorMsg(eonde.i18n.get("zip.validationerror.entermoredigits"));
                        } 
                        if (!self.zipFromRequest() && (self.zipCitiesList().length == 0 || (self.zipCitiesList().length > 0 && self.zipCitiesList().indexOf(zipCity) < 0))) {
                            self.zipErrorMsg(eonde.i18n.get("zip.validationerror.unknowncombination"));
                            return false;
                        }
                    }
                    return true;
                }
            } else {
                return true;
            }
        };
		
		self.applyValidations = function() {
			//Validations for all the fields
			self.salutation.extend({
				required: {onlyIf: function () { return (self.step() == "3"); }, message: eonde.i18n.get('online_err_salutation_missing')}
			});
			self.firstname.extend({
				required: {onlyIf: function () { return (self.step() == "3"); }, message: eonde.i18n.get('online_err_firstname_missing')}
			});
			self.lastname.extend({
				required: {onlyIf: function () { return (self.step() == "3"); }, message: eonde.i18n.get('online_err_lastname_missing')}
			});
			self.street.extend({
				required: {onlyIf: function () { return (self.step() == "3"); }, message: eonde.i18n.get('online_err_street_missing')}
			});
			self.house_number.extend({
				required: {onlyIf: function () { return (self.step() == "3"); }, message: eonde.i18n.get('online_err_housenumber_missing')}
			});
			self.solar_zipcode.extend({
				validation : {validator : self.checkZipCode, message : function() { return self.zipErrorMsg();}},
				required: {onlyIf: function () { return (self.step() == "3"); }, message: eonde.i18n.get('online_err_zipobject_missing')}
			});			
			self.alternate_street.extend({
				required: {onlyIf: function () { return (self.step() == "3" && self.alternate_address() == 'yes'); }, message: eonde.i18n.get('online_err_street_missing')}
			});
			self.alternate_street_number.extend({
				required: {onlyIf: function () { return (self.step() == "3" && self.alternate_address() == 'yes'); }, message: eonde.i18n.get('online_err_housenumber_missing')}
			});
			self.alternate_zipcode.extend({
				required: {onlyIf: function () { return (self.step() == "3" && self.alternate_address() == 'yes'); }, message: eonde.i18n.get('online_err_zipobject_missing')}
			});	
			self.alternate_city.extend({
				required: {onlyIf: function () { return (self.step() == "3" && self.alternate_address() == 'yes'); }, message: eonde.i18n.get('online_err_cityobject_missing')}
			});	
			self.email.extend({
				required: {onlyIf: function () { return (self.step() == "3"); }, message: eonde.i18n.get('online_err_email_missing')},
				email : {onlyIf: function () { return (self.step() == "3"); }, message: eonde.i18n.get('online_err_email_invalid'), params: true}
			});
			self.phone.extend({
                required: {onlyIf: function () { return (self.step() == "3"); }, message: eonde.i18n.get('online_err_phone_missing')},
                pattern: {
                    message: eonde.i18n.get('online_err_phone_invalid'),
                    params: /^[0-9\-\+()#]/
                }
            });
			self.is_terms_checked.extend({
				equal: {params: true, onlyIf: function () { return (self.step() == "3" && self.subStep() == '3b'); }, message: eonde.i18n.get('online.form.error.terms.unchecked')}
			});
						
			self.infoMgmtGroup = ko.validation.group([self.salutation, self.firstname, self.lastname, self.email, self.phone]);		
			self.contactGroup = ko.validation.group([self.solar_zipcode, self.street, self.house_number]);
			self.altContactGroup = ko.validation.group([self.alternate_zipcode, self.alternate_city, self.alternate_street, self.alternate_street_number]);
            self.confirmationGroup = ko.validation.group([self.is_terms_checked]);
		}
		

    };

    // apply binding of view model, but only if it exists
    var view = formsolor.get(0);
    if (view) {
		var vmSOLAR = new eonde.vmSOLAR();
		vmSOLAR.init();
        ko.applyBindings (ko.validatedObservable(vmSOLAR), view);      
    }

    $('#formsolor input[type=checkbox]').keydown(function(e){      
	   //check if the pressed key is Spacebar
	   //then trigger the click() on the inner span to toggle the checkbox
        var thisObj = $(this);
	   if(e.keyCode == 32){
			if(!(thisObj).next("label").hasClass('readonlylabel')){
				if((thisObj).next("label").hasClass('checkedInputCheckbox')){
					thisObj.next("label").removeClass('checkedInputCheckbox');
				}
				else {
					thisObj.next("label").addClass('checkedInputCheckbox');
				}
            } else {
				return false;
			}
        }
    });
	$('#formsolor :checkbox').change(function(e){
		if ($(e.target) !== null && ($(e.target).is('a') || $(e.target).is('a span'))) {
			return;
		}
		var thisObj = $(this);
		
		if(thisObj.is(':checked')){
			thisObj.siblings('label').addClass('checkedInputCheckbox');
		}
		else {
			thisObj.siblings('label').removeClass('checkedInputCheckbox');
		}
	});
});
$(document).ready(function(){
	$(".editorTable .paraText p").removeAttr('style');
	if ($(".editorTable").parents('.expandables290').length > 0) {
		var tableWidth=$(".editorTable").parents('.expandables290').width()-30;
		$(".editorTable").width(tableWidth);
	}
});
jQuery(document).ready(function($){
    var carousels = $('.containerCarousel');
    var authorMode = $("body").hasClass("cq-author");
    if(carousels.length === 0) {
        return;
    }
    
    function init() {
        if ($(window).width() <= 640) {
            if (!authorMode) {
                var count = 1;
                $('.carousel').each(function() {
                    jQuery(this).attr("id", "grid-carousel-" + count);
                    jQuery(this).on("slid", function(e) {
                        
                    });
                    jQuery(this).find(".bullet").each(function() {
                        jQuery(this).attr("data-target", "#grid-carousel-" + count);
                    });
                    jQuery(this).siblings(".indicator").find(".bullet").each(function() {
                        jQuery(this).attr("data-target", "#stage-carousel-" + count);
                    });
                    count++;
                    jQuery(this).carousel().carousel("cycle");

                });
                //carousels.find(".carousel").carousel("cycle");
            }
        }
        if($(window).width() > 640){ 
            $('.carousel').each(function() {
                $_this = $(this);
                $_this.carousel().carousel(0);
                $_this.carousel('pause');
                $_this.fadeIn(1200);

            });
        }
    }
    $(window).on("resize", init);
    init();
});

/*
 * debouncedresize: special jQuery event that happens once after a window resize
 *
 * latest version and complete README available on Github:
 * https://github.com/louisremi/jquery-smartresize
 *
 * Copyright 2012 @louis_remi
 * Licensed under the MIT license.
 *
 * This saved you an hour of work? 
 * Send me music http://www.amazon.co.uk/wishlist/HNTU0468LQON
 */
(function($) {

var $event = $.event,
	$special,
	resizeTimeout;

$special = $event.special.debouncedresize = {
	setup: function() {
		$( this ).on( "resize", $special.handler );
	},
	teardown: function() {
		$( this ).off( "resize", $special.handler );
	},
	handler: function( event, execAsap ) {
		// Save the context
		var context = this,
			args = arguments,
			dispatch = function() {
				// set correct event type
				event.type = "debouncedresize";
				$event.dispatch.apply( context, args );
			};

		if ( resizeTimeout ) {
			clearTimeout( resizeTimeout );
		}

		execAsap ?
			dispatch() :
			resizeTimeout = setTimeout( dispatch, $special.threshold );
	},
	threshold: 150
};

})($CQ);
/*
 * Adobe Systems Incorporated
 * Modified: October 30th, 2012
 *
 * Picturefill - Responsive Images that work today. (and mimic the proposed Picture element with divs).
 * Author: Scott Jehl, Filament Group, 2012 | License: MIT/GPLv2
 */

(function ($, w) {

    // Enable strict mode
    "use strict";

    w.picturefill = function (context) {
        var undefined;
        if (context === undefined) {
            context = $("body");
        }

        $("div[data-picture]", context).each(function () {
            var currentPicture = this;
            var matches = [];
            $("div[data-media]", currentPicture).each(function () {
                var media = $(this).attr("data-media");
                if (!media || ( w.matchMedia && w.matchMedia(media).matches )) {
                    matches.push(this);
                }
            });

            var $picImg = $("img", currentPicture).first();

            if (matches.length) {
                if ($picImg.size() === 0) {
                    var $currentPicture = $(currentPicture);
                    $picImg = $("<img />").attr("title", $currentPicture.attr("data-title")).appendTo($currentPicture).
							attr("alt", $currentPicture.attr("data-alt")).appendTo($currentPicture);

                }
                $picImg.attr("src", matches.pop().getAttribute("data-src")).
							attr("alt", '');
            } else {
                $picImg.remove();
            }
        });
    };

    // Run on debounced resize and domready
    $(function () {
        w.picturefill();
    });

    $(w).on("debouncedresize", function () {
        w.picturefill();
    });

    if ( $(w).width() <= 768 ) {
        $(w).on( "orientationchange", function( event ) {
            w.picturefill();
            setTimeout(function(){
                w.picturefill();
            }, 3000);
        });        
    }

}($CQ, this));
 /**
 * Bridge to add plugins that are based on defined objects
 *
 * With the following approach it is possible to access the underlying
 * object via the data method of jQuery, e.g. the following code would
 * open the second expandable element on the page:
 * jQuery(".expandable").eq(1).data("expandable").open();
 *
 * @author Finn Pröpper, Sapient GmbH <fproepper@sapient.com>
 */


jQuery.createPlugin = function(name, object) {
  var $ = jQuery;
  $.fn[name] = function(options) {
    return this.each(function() {
      if (!$.data(this, name)) {
        $.data(this, name, Object.create(object).construct($(this), options));
      }
    });
  };
};

$( document ).ready(function() {
/**
 * Generate unique ID
 *
 * Applies an unique ID to one or more elements.
 *
 * @author Finn Pröpper, Sapient GmbH <fproepper@sapient.com>
 */
(function(window, document, $) {
  /*
   * Name of the plugin
   *
   * @type {string}
   */
  var pluginName = 'generateId';
  /**
   * Prefix for the ID
   *
   * @type {string}
   */
  var prefix = "EON";
  /**
   * Timestamp
   *
   * Timestamp of the moment where the plugin was initialized the first
   * time. Used for the ID.
   *
   * @type {integer}
   */
  var timestamp = new Date().getTime();
  /**
   * Sequential ID
   *
   * A sequential ID, last part of the ID
   *
   * @type {integer}
   */
  var seqId = 0;
  /**
   * Return sequential ID
   *
   * Automatically increases the sequential ID and returns its new
   * value.
   *
   * @see seqId
   * @return {integer}
   */

  function getSeqId() {
    return ++seqId;
  };
  /**
   * Plugin constructor
   *
   * Sets some defaults and calls the init() method.
   */
  var plugin = {

    /**
     * Default values
     *
     * @type {object}
     */
    options: {
      prefix: prefix
    },
    /**
     * Constructor function
     *
     * @see init()
     * @param {jQuery} Element which shall be used for the expandable
     * @param {object} Optional parameters
     */
    construct: function(element, options) {
      // Default stuff
      this.options = $.extend({}, this.options, options);
      this.element = element;
      this.domElement = element.get(0);
      // Init object
      this.init();
      return this;
    },
    /**
     * Init function
     *
     * Takes the element and sets the ID for it (if it does not already
     * have one). In IE the internal property "uniqueID" is used.
     */
    init: function() {
      var id = this.element.attr("id");
      if (!id) {
        // The IE generates own IDs, let's use them if available
        if (this.domElement.uniqueID && this.domElement.nodeType && this.domElement.nodeType !== 9) {
          id = this.domElement.uniqueID;
          // Otherwise we create an ID on our own
        } else {
          id = this.options.prefix + '_' + timestamp + '_' + getSeqId();
        }
        this.element.attr("id", id);
      }
      return id;
    }
  };
  /**
   * Define the actual plugin
   */
  $.createPlugin(pluginName, plugin);
}(window, document, jQuery));

/*jslint forin: true, sloppy: true, unparam: true, vars: true, white: true */
/*global document, jQuery, log */

var eon = window.eon || {};

(function(window, document, $, eon) {
  /**
   * Tools
   * A bunch of helpful functions.
   * @author Finn Pröpper, Sapient GmbH <fproepper@sapient.com>
   */
  eon.tools = (function() {
    /**
     * Cached string for language of the current page
     *
     * Contains the ISO 2 letter language code of the current page.
     * Is set to false if the language could not be detected.
     */
    var language = null;
    /**
     * Returns the language code of the current page
     *
     * If the language variable is null this functions tries to set
     * it by splitting the URL at "/" and filtering out the first
     * item which is only two characters long. If this does not work
     * the language variable is set to false.
     */
    var getLanguage = function() {
      if (language !== null) {
        return language;
      }
      var parts = document.URL.split("/");
      var i, length = parts.length;
      for (i = 0; i < length; i = i + 1) {
        if (parts[i].length === 2) {
          language = parts[i];
          break;
        }
      }
      if (language === null) {
        language = false;
      }
      return language;
    };
    /**
     * Return public properties/methods
     *
     * @see www.wait-till-i.com/2007/08/22/again-with-the-module-pattern-reveal-something-to-the-world/
     */
    return {
      getLanguage: getLanguage
    };
  }());

}(window, document, jQuery, eon));


/*jslint forin: true, sloppy: true, unparam: true, vars: true, white: true */
/*global document, jQuery, log, window, google */

(function(window, document, $, eon) {

  eon.config = {
    // imagePath: "images/", // Path to static images (CQ: /etc/designs/eon/static/images/)
    imagePath: "/etc/designs/eonde/assets/images/", // Path to static images (CQ: /etc/designs/eon/static/images/)
    datepickerImage: "images/datepicker-icon.gif", // Path to the icon of the datepicker
    starOnImage: "images/star-on.gif",
    starHalfImage: "images/star-half.gif",
    starOffImage: "images/star-off.gif",
    eventTeaserJSON: "assets/json/", // Path to the JSON assets
    mediaElementFlash: "scripts/libs/mediaelement/flashmediaelement.swf", // Path to the flash file of mediaelement.js
    googleClientID: "", //"gme-eonag",
    getPdfFolderPath: "assets/json/pdf-service/getAll.json",
    addToPdfFolderPath: "assets/json/pdf-service/add.json?path={0}",
    deleteFromPdfFolderPath: "assets/json/pdf-service/delete.json?path={0}",
    deleteCompletePdfFolderPath: "assets/json/pdf-service/deleteAll.json",
    saveAsPdfPath: "#save/as/pdf{0}",
    getJobOptionsPath: "assets/json/job-market/getJobOptions.json?lang={0}&country={1}",
    webServiceRatingSetPath: "assets/json/rating/ratingResponse.json?path={0}&action=addRating&rating={1}",
    webServiceRatingGetPath: "assets/json/rating/ratingResponse.json?path={0}&action=getAverageRating",
    webServicePollsSetPath: "assets/json/polls/pollResponse.json?path={0}&action=addPoll&answers={1}"
  };

}(window, document, jQuery, eon));

eon.i18n = {
  /* PLEASE ORDER COMPONENTS ALPHABETICALLY */
  "frontend": {
    // Audio
    "frontend.audio.currentTime": "Current time:",
    "frontend.audio.playPause": "Play/Pause",
    "frontend.audio.totalTime": "Total time:",
    "frontend.audio.volume": "Volume toggle",
    // Bookmarks
    "frontend.bookmarks.save": "save",
    "frontend.bookmarks.cancel": "cancel",
    "frontend.bookmarks.edit": "Edit",
    "frontend.bookmarks.delete": "Delete",
    "frontend.bookmarks.freeSlot": "Free Bookmark Slot",
    // Carousel
    "frontend.carousel.prevSlide": "Previous slide",
    "frontend.carousel.nextSlide": "Next slide",
    "frontend.carousel.slideLink": "Slide {0}",
    // Datepicker
    "frontend.datepicker.buttonText": "Toggle datepicker",
    "frontend.datepicker.dateFormat": "dd/mm/yy",
    "frontend.datepicker.closeText": "Done",
    "frontend.datepicker.prevText": "Previous month",
    "frontend.datepicker.nextText": "Next month",
    "frontend.datepicker.currentText": "Today",
    "frontend.datepicker.monthNames": "January,February,March,April,May,June,July,August,September,October,November,December",
    "frontend.datepicker.monthNamesShort": "Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec",
    "frontend.datepicker.dayNames": "Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday",
    "frontend.datepicker.dayNamesShort": "Sun,Mon,Tue,Wed,Thu,Fri,Sat",
    "frontend.datepicker.dayNamesMin": "Su,Mo,Tu,We,Th,Fr,Sa",
    "frontend.datepicker.weekHeader": "Wk",
    // Event calendar
    "frontend.eventcalendar.dateFormat": "dd/mm/yy",
    "frontend.eventcalendar.prevText": "Previous month",
    "frontend.eventcalendar.nextText": "Next month",
    "frontend.eventcalendar.currentText": "Today",
    "frontend.eventcalendar.monthNames": "01 /,02 /,03 /,04 /,05 /,06 /,07 /,08 /,09 /,10 /,11 /,12 /",
    "frontend.eventcalendar.monthNamesFull": "January,February,March,April,May,June,July,August,September,October,November,December",
    "frontend.eventcalendar.monthNamesShort": "Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec",
    "frontend.eventcalendar.dayNames": "Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday",
    "frontend.eventcalendar.dayNamesShort": "Sun,Mon,Tue,Wed,Thu,Fri,Sat",
    "frontend.eventcalendar.dayNamesMin": "Su,Mo,Tu,We,Th,Fr,Sa",
    "frontend.eventcalendar.weekHeader": "Wk",
    "frontend.eventcalendar.maxDate": '31/12/2020',
    "frontend.eventcalendar.minDate": '01/01/2000',
    "frontend.eventcalendar.eventDateFormat": "dd/MM",
    "frontend.eventcalendar.eventDateHour": "h",
    "frontend.eventcalendar.moreLinkText": "More about this event",
    "frontend.eventcalendar.teaserDescription": ": teaser shows upcoming events on a monthly base. Use the inline calendar to navigate in time :",
    "frontend.eventcalendar.prevNextAddText": "the displayed month is : ",
    "frontend.eventcalendar.eventHighlightText": ": click here to show event",
    "frontend.eventcalendar.eventExistText": ": there are events this month :",
    "frontend.eventcalendar.eventNotExistText": ": there are no events this month :",
    // Gallery
    "frontend.gallery.prevPage": "previous",
    "frontend.gallery.prevPageTitle": "Previous Page",
    "frontend.gallery.nextPage": "next",
    "frontend.gallery.nextPageTitle": "Next Page",
    "frontend.gallery.pageTitle": "Page {0}",
    "frontend.gallery.currentPageTitle": "Current Page: {0}",
    "frontend.gallery.ellipsis": "…",
    // GMaps
    "frontend.gmaps.mapTypeRoadmap": "Map",
    "frontend.gmaps.mapTypeSatellite": "Satellite",
    "frontend.gmaps.mapTypeTerrain": "Terrain",
    "frontend.gmaps.resultsHeading": "Results",
    "frontend.gmaps.resultsNextPage": "next",
    "frontend.gmaps.resultsPrevPage": "previous",
    "frontend.gmaps.tooltipTab_INFORMATION": "Information",
    "frontend.gmaps.tooltipTab_CONTACT": "Contact",
    "frontend.gmaps.tooltipTab_LOCATION": "Location",
    "frontend.gmaps.tooltipTab_VISITORCENTER": "Visitor Center",
    "frontend.gmaps.closeTooltipBubble": "close tooltip",
    "frontend.gmaps.seeProfilePage": "See profile page",
    "frontend.gmaps.moreInformation": "More information",
    "frontend.gmaps.setThisAsYourHomeLocation": "Set this as your home location",
    "frontend.gmaps.companies": "Companies",
    "frontend.gmaps.getDirectionsToHere": "Get directions to here",
    // Lightbox
    "frontend.lightbox.close": "close",
    "frontend.lightbox.defaultDownloadTitle": "Download",
    // PDF service
    "frontend.pdfService.tablePreviewLink": "Preview<span class=\"hidden\"> PDF: {0}</span>",
    "frontend.pdfService.tableDeleteLink": "Delete<span class=\"hidden\"> PDF: {0}</span>",
    // Press releases datepicker
    "frontend.pressreleases.datepicker.dateFormat": "dd/mm/yy",
    "frontend.pressreleases.datepicker.prevText": "Previous month",
    "frontend.pressreleases.datepicker.nextText": "Next month",
    "frontend.pressreleases.datepicker.currentText": "Today",
    "frontend.pressreleases.datepicker.monthNames": "01 /,02 /,03 /,04 /,05 /,06 /,07 /,08 /,09 /,10 /,11 /,12 /",
    "frontend.pressreleases.datepicker.monthNamesFull": "January,February,March,April,May,June,July,August,September,October,November,December",
    "frontend.pressreleases.datepicker.weekHeader": "Wk",
    "frontend.pressreleases.datepicker.accessibility.headline": "Datepicker",
    "frontend.pressreleases.datepicker.accessibility.description": "Use this inline calendar to navigate through time",
    "frontend.pressreleases.datepicker.accessibility.prevNextText": "the displayed month is : ",
    // Tooltip
    "frontend.tooltip.accessibilityPrefix": "has open tooltip with Glossary description:",
    // Inline Validator
    "frontend.validator.default": "Invalid input",
    "frontend.validator.required": "Input required",
    // Video
    "frontend.video.captions": "Captions",
    "frontend.video.currentTime": "Current time:",
    "frontend.video.fullscreen": "Fullscreen",
    "frontend.video.noCaption": "None",
    "frontend.video.playPause": "Play/Pause",
    "frontend.video.stop": "Stop",
    "frontend.video.totalTime": "Total time:",
    "frontend.video.volume": "Volume toggle"
  }
};
eon.i18n.get = function(id) {
  return eonde.i18n.get(id);
};



(function(window, document, $, eon) {

  eon.plugin = eon.plugin || {};

  /* returns a list of numeric strings.
   *   numericCaptions(1, 2) -> ["1", "2"]
   */
  var numericCaptions = function(start, numElements) {
    var r = [];
    for (var i = 0; i < numElements; i += 1) {
      r.push("" + (i + start));
    }
    return r;
  };

  /**
   * maps
   *
   * Implemented as a jQuery plugin as the maps component is heavily used
   * in the assetFinder and companyFinder context
   *
   * Expects the following (minimum) markup:
   * <div class="map-canvas" data-gmap=""></div>
   *
   * A data-gmap Object can be passed to pass the data that should be displayed
   *
   * The data-gmap can contain the following properties
   *
   * Now the plugin is called like this (see end of this file):
   * jQuery('.map-canvas').gmap(optionObject);
   *
   * The optionObject is of type {object} and can contain the following properties:
   *
   * [initialMapCenter] {array || string}
   * defines the latitude (1st value) and longitude (2nd value) of the intial center
   * position when the map initially loads. The value may either be an array [lat,lng]
   * or 'auto' to automatically determine the view based on the bounds of all markers.
   * default: auto
   *
   * [worldMapCenter] {array}
   * defines the latitude (1st value) and longitude (2nd value) of the world panned center
   * position when the map initially loads and has a zoom level of 1 (entire world view).
   * The default value centers the map over the Atlantic Ocean.
   * default: [2.6, -25]
   *
   * [initialMapZoom] {integer}
   * defines the zoom level of the the initially loaded map view.
   * The default zoom level of 1 provides a full world overview.
   * default: 1
   *
   * [initialMapType] {string}
   * defines the type of the map that is initially loaded. The available types are
   * based on the available google map types "SATELLITE", "ROADMAP" and "TERRAIN".
   * default: "ROADMAP"
   *
   * [mapTypeControls] {array}
   * defines the available map-type-controls that enable the user to switch the
   * displayed map type. If an empty array is passed, no controls will be shown. Only
   * the predefined Google Maps map types are available.
   * default: ["SATELLITE","ROADMAP","TERRAIN"]
   *
   * [minMapZoom] {integer}
   * defines the minimum zoom-value, which restricts how much the user can zoom-out
   * the map (lowest possible gmap api value is 0)
   * default: 1
   *
   * [maxMapZoom] {integer}
   * defines the maximum zoom-value, which restricts how much the user can zoom-in
   * the map (highest possible gmap api value is 18)
   * default: 18
   *
   * [hasCustomEonUI] {boolean}
   * flag to toggle the custom eon map controls on / off.
   * default: false
   *
   * [hasDisableDefaultUI] {boolean}
   * flag to toggle the default google maps controls on / off.
   * default: false
   *
   * [hasOpenOverviewMap] {boolean}
   * flag to toggle the overview map (bottom right corner) open / close.
   * A little arrow indicates the overview map when it's closed, the user can manually
   * open the overview map by clicking on this arrow.
   * default: false
   *
   * [resultsPerPage] {integer}
   * defines the number of results listed per page in the custom resultsList mapcontrol
   * default: 8
   *
   *
   * An unique id is generated and assigned to the "map-canvas" for convenient access.
   *
   * The following custom elements are dynamically created and can be accessed and styled
   * with separate css rules. See gmaps.css for more details.
   * @see: gmaps.css
   *
   * [map-type-controls] css-class
   * wraps the custom mapType controls in the top right corner of the map.
   * the active map type's control gets the class "active" assigned.
   *
   * [map-zoom-controls] css-class
   * wraps the custom zoom controls including jQuery UI Slider and
   * increase/decrease button
   *
   * [map-results-controls] css-class
   * wraps the custom results list control including expandable body and pagination
   *
   * [map-tooltip-bubble] css-class
   * wraps the custom tooltip bubble that opens when clicking on a set map marker
   *
   * [map-tooltip-shadow] css-class
   * wraps the shadow pane layer that holds the tooltip's shadow background-image
   *
   * [custom-marker] css-class
   * underlays (shadow-pane) the whole marker group and contains any shadow graphic
   *
   * [custom-marker-icon] css-class
   * contains the actual marker-icon as a background-image, therefore can be captured
   * it's placed on the marker pane (a.k.a overlay-image pane)
   *
   * [custom-marker-target] css-class
   * defines an empty area that is placed over the marker and over the tooltip/infoWindow
   * pane, so all markers tha lay in the shadow of the tooltip window are still clickable
   *
   * [asset-icon] css-class
   * is set in asset-finder only and contains an icon as a marker capture
   * it's wrapped inside [custom-marker-icon] element
   *
   * [asset-*] css-classes
   * for every icon an asset-iconName class is assigned to the asset-icon element, so the
   * icons can be passed as a sprite to the map (f.e. asset-oil, asset-sun, asset-nuclear)
   *
   * ***  ***  ***  ***  ***  ***  ***  ***
   *
   * Dependencies:
   *  - jquery.ui [slider] (Depends: jquery.ui.core, jquery.ui.mouse, jquery.ui.widget)
   *  - eon.expandables.js
   *  - eon.tabs.js
   *
   * @author Niklas Zillingr, Sapient GmbH <nzillinger@sapient.com>
   */
  eon.plugin.gmap = {

    /**
     * Default values
     *
     * @type {object}
     */
    options: {
      initialMapZoom: 1,
      initialMapCenter: "auto",
      worldMapCenter: [2.6, -25],
      initialMapType: "ROADMAP",
      mapTypeControls: ["ROADMAP", "SATELLITE", "TERRAIN"],
      minMapZoom: 1,
      maxMapZoom: 18,
      hasCustomEonUI: false,
      hasDisableDefaultUI: false,
      hasOpenOverviewMap: false,
      resultsPerPage: 8
    },


    /**
     * I18n strings
     *
     * @type {object}
     */
    i18n: {
      mapType_ROADMAP: eon.i18n.get('gmaps.mapTypeRoadmap'),
      mapType_SATELLITE: eon.i18n.get('gmaps.mapTypeSatellite'),
      mapType_TERRAIN: eon.i18n.get('gmaps.mapTypeTerrain'),
      resultsHeading: eon.i18n.get('gmaps.resultsHeading'),
      resultsNextPage: eon.i18n.get('gmaps.resultsNextPage'),
      resultsPrevPage: eon.i18n.get('gmaps.resultsPrevPage'),
      tooltipTab_INFORMATION: eon.i18n.get('frontend.gmaps.tooltiptab.information.label'),
      tooltipTab_CONTACT: eon.i18n.get('frontend.gmaps.tooltiptab.contact.label'),
      tooltipTab_LOCATION: eon.i18n.get('gmaps.tooltipTab_LOCATION'),
      tooltipTab_VISITORCENTER: eon.i18n.get('gmaps.tooltipTab_VISITORCENTER'),
      closeTooltipBubble: eon.i18n.get('gmaps.closeTooltipBubble'),
      seeProfilePage: eon.i18n.get('frontend.gmaps.seeprofilepage.label'),
      moreInformation: eon.i18n.get('frontend.gmaps.moreinformation.label'),
      setThisAsYourHomeLocation: eon.i18n.get('gmaps.setThisAsYourHomeLocation'),
      companies: eon.i18n.get('gmaps.companies'),
      getDirectionsToHere: eon.i18n.get('frontend.gmaps.getdirectionstohere.label'),
      getCommission: eon.i18n.get('asset.commission'),
      getCommissionNew: eon.i18n.get('asset.commissionnew'),
      getCapacity: eon.i18n.get('asset.capacity'),
      getCapacityNew: eon.i18n.get('asset.capacitynew')
    },

    /**
     * Map Marker Visuals (Path to accordant images)
     *
     * @type {object}
     */
    markerVisuals: {
      eonMarker: {
        visual: {
          path: eon.config.imagePath + "eon-marker.png",
          size: [61, 34],
          origin: [0, 0],
          anchor: [31, 34]
        },
        shadow: {
          path: eon.config.imagePath + "eon-marker-shadow.png",
          size: [81, 34],
          origin: [0, 0],
          anchor: [31, 34]
        },
        clickableShape: {
          coord: [58, 0, 59, 1, 60, 2, 60, 3, 60, 4, 60, 5, 60, 6, 60, 7, 60, 8,
            60, 9, 60, 10, 60, 11, 60, 12, 60, 13, 60, 14, 60, 15, 60, 16,
            60, 17, 60, 18, 60, 19, 60, 20, 60, 21, 60, 22, 60, 23, 60, 24,
            60, 25, 59, 26, 58, 27, 35, 28, 34, 29, 33, 30, 32, 31, 31, 32,
            31, 33, 29, 33, 29, 32, 28, 31, 27, 30, 26, 29, 25, 28, 2, 27,
            1, 26, 0, 25, 0, 24, 0, 23, 0, 22, 0, 21, 0, 20, 0, 19, 0, 18,
            0, 17, 0, 16, 0, 15, 0, 14, 0, 13, 0, 12, 0, 11, 0, 10, 0, 9,
            0, 8, 0, 7, 0, 6, 0, 5, 0, 4, 0, 3, 0, 2, 1, 1, 2, 0, 58, 0
          ],
          type: 'poly'
        }
      },
      alphabetic: {
        visual: {
          path: eon.config.imagePath + "marker_new.gif",
          size: [23, 70],
          origin: [0, 0],
          anchor: [5, 25]
        },
        shadow: {
          path: eon.config.imagePath + "index-marker-shadow.png",
          size: [41, 25],
          origin: [0, 0],
          anchor: [5, 25]
        },
        clickableShape: {
          coord: [22, 0, 23, 1, 23, 2, 23, 3, 23, 4, 23, 5, 23, 6, 23, 7, 23, 8,
            23, 9, 23, 10, 23, 11, 23, 12, 23, 13, 23, 14, 23, 15, 23, 16,
            23, 17, 22, 18, 10, 19, 9, 20, 8, 21, 7, 22, 6, 23, 6, 24, 5,
            24, 5, 23, 5, 22, 5, 21, 5, 20, 5, 19, 2, 18, 1, 17, 0, 16, 0,
            15, 0, 14, 0, 13, 0, 12, 0, 11, 0, 10, 0, 9, 0, 8, 0, 7, 0, 6,
            0, 5, 0, 4, 0, 3, 0, 2, 0, 1, 1, 0, 22, 0
          ],
          type: 'poly'
        },
        caption: ["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M",
          "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"
        ],
        pointer: {
          rl: 0,
          ml: 0
        },
        color: "#FFF",
        textAlign: "center"
      },
      numeric: {
        visual: {
          path: eon.config.imagePath + "marker_new.gif",
          size: [23, 70],
          origin: [0, 0],
          anchor: [5, 25]
        },
        shadow: {
          path: eon.config.imagePath + "index-marker-shadow.png",
          size: [41, 25],
          origin: [0, 0],
          anchor: [5, 25]
        },
        clickableShape: {
          coord: [22, 0, 23, 1, 23, 2, 23, 3, 23, 4, 23, 5, 23, 6, 23, 7, 23, 8,
            23, 9, 23, 10, 23, 11, 23, 12, 23, 13, 23, 14, 23, 15, 23, 16,
            23, 17, 22, 18, 10, 19, 9, 20, 8, 21, 7, 22, 6, 23, 6, 24, 5,
            24, 5, 23, 5, 22, 5, 21, 5, 20, 5, 19, 2, 18, 1, 17, 0, 16, 0,
            15, 0, 14, 0, 13, 0, 12, 0, 11, 0, 10, 0, 9, 0, 8, 0, 7, 0, 6,
            0, 5, 0, 4, 0, 3, 0, 2, 0, 1, 1, 0, 22, 0
          ],
          type: 'poly'
        },
        caption: numericCaptions(1, 100),
        pointer: {
          rl: 0,
          ml: 0
        },
        color: "#FFF",
        textAlign: "center"
      },
      bubbleMarker: {
        visual: {
          path: eon.config.imagePath + "bubble-marker.gif",
          size: [26, 62],
          origin: [0, 0],
          anchor: [5, 31]
        },
        shadow: {
          path: eon.config.imagePath + "bubble-marker-shadow.png",
          size: [46, 31],
          origin: [0, 0],
          anchor: [5, 25]
        },
        clickableShape: {
          coord: [25, 0, 25, 1, 25, 2, 25, 3, 25, 4, 25, 5, 25, 6, 25, 7, 25, 8,
            25, 9, 25, 10, 25, 11, 25, 12, 25, 13, 25, 14, 25, 15, 25, 16,
            25, 17, 25, 18, 25, 19, 25, 20, 25, 21, 25, 22, 25, 23, 24, 24,
            12, 25, 11, 26, 10, 27, 9, 28, 8, 29, 8, 30, 5, 30, 5, 29, 5,
            28, 5, 27, 5, 26, 5, 25, 2, 24, 1, 23, 0, 22, 0, 21, 0, 20, 0,
            19, 0, 18, 0, 17, 0, 16, 0, 15, 0, 14, 0, 13, 0, 12, 0, 11, 0,
            10, 0, 9, 0, 8, 0, 7, 0, 6, 0, 5, 0, 4, 0, 3, 0, 2, 0, 1, 1, 0,
            25, 0
          ],
          type: 'poly'
        }
      },
      bubbleMarkerConstruction: {
        visual: {
          path: eon.config.imagePath + "bubble-marker-construction.gif",
          size: [26, 62],
          origin: [0, 0],
          anchor: [5, 31]
        },
        shadow: {
          path: eon.config.imagePath + "bubble-marker-shadow.png",
          size: [46, 31],
          origin: [0, 0],
          anchor: [5, 31]
        },
        clickableShape: {
          coord: [25, 0, 25, 1, 25, 2, 25, 3, 25, 4, 25, 5, 25, 6, 25, 7, 25, 8,
            25, 9, 25, 10, 25, 11, 25, 12, 25, 13, 25, 14, 25, 15, 25, 16,
            25, 17, 25, 18, 25, 19, 25, 20, 25, 21, 25, 22, 25, 23, 24, 24,
            12, 25, 11, 26, 10, 27, 9, 28, 8, 29, 8, 30, 5, 30, 5, 29, 5,
            28, 5, 27, 5, 26, 5, 25, 2, 24, 1, 23, 0, 22, 0, 21, 0, 20, 0,
            19, 0, 18, 0, 17, 0, 16, 0, 15, 0, 14, 0, 13, 0, 12, 0, 11, 0,
            10, 0, 9, 0, 8, 0, 7, 0, 6, 0, 5, 0, 4, 0, 3, 0, 2, 0, 1, 1, 0,
            25, 0
          ],
          type: 'poly'
        }
      },
      defaultMarker: {
        visual: {
          size: [8, 8],
          origin: [0, 0],
          anchor: [4, 8],
          background: "#E91C09"
        }
      },
      tooltip: {
        width: 275,
        height: 'auto',
        offsetHorizontal: 30,
        offsetVertical: -65,
        shadowContainerWidth: 410,
        shadowContainerHeight: 200,
        shadowImage: eon.config.imagePath + "gmaps-tooltip-shadow.png",
        shadowHeight: 120,
        shadowTop: 100
      }
    },


    /**
     * Validator function for passed options
     *
     * We won't allow any invalid or badly formed options to cause our lovely map to fail
     *
     * @param {object} default options
     */
    validateGmapOptions: function(defaults) {
      var gmapInitZoom = this.options.initialMapZoom,
        gmapInitCenter = this.options.initialMapCenter,
        gmapWorldCenter = this.options.worldMapCenter,
        gmapInitType = this.options.initialMapType,
        gmapMapTypeControls = this.options.mapTypeControls,
        gmapMinZoom = this.options.minMapZoom,
        gmapMaxZoom = this.options.maxMapZoom;

      // ... making sure the initial map zoom and the min/max zoom level are all propper integer values
      gmapInitZoom = (!isNaN(parseInt(gmapInitZoom, 10))) ? gmapInitZoom : defaults.initialMapZoom;
      gmapMinZoom = (!isNaN(parseInt(gmapMinZoom, 10))) ? gmapMinZoom : defaults.minMapZoom;
      gmapMaxZoom = (!isNaN(parseInt(gmapMaxZoom, 10))) ? gmapMaxZoom : defaults.maxMapZoom;

      // ... making sure the initial zoom level is in the defined range
      this.options.initialMapZoom = (gmapInitZoom >= gmapMinZoom) ? gmapInitZoom : gmapMinZoom;
      this.options.initialMapZoom = (gmapInitZoom <= gmapMaxZoom) ? gmapInitZoom : gmapMaxZoom;
      this.options.minMapZoom = gmapMinZoom;
      this.options.maxMapZoom = gmapMaxZoom;

      // ... making sure the latitude and longitude for the initial map center are propper float values
      // or set to 'auto'
      if ($.isArray(gmapInitCenter)) {
        gmapInitCenter[0] = (!isNaN(parseFloat(gmapInitCenter[0]))) ? gmapInitCenter[0] : "f";
        gmapInitCenter[1] = (!isNaN(parseFloat(gmapInitCenter[1]))) ? gmapInitCenter[1] : "f";
        this.options.initialMapCenter = (gmapInitCenter[0] !== "f" && gmapInitCenter[1] !== "f") ? gmapInitCenter.slice(0, 2) : defaults.initialMapCenter;
      } else {
        this.options.initialMapCenter = defaults.initialMapCenter;
      }

      // ... making sure the latitude and longitude for the map' world center are propper float values
      gmapWorldCenter[0] = (!isNaN(parseFloat(gmapWorldCenter[0]))) ? gmapWorldCenter[0] : defaults.worldMapCenter[0];
      gmapWorldCenter[1] = (!isNaN(parseFloat(gmapWorldCenter[1]))) ? gmapWorldCenter[1] : defaults.worldMapCenter[1];
      this.options.worldMapCenter = gmapWorldCenter.slice(0, 2);


      // ... making sure the passed map type is valid
      // we're hijacking the default mapTypeControls array here, because we know it contains all valid ids
      gmapInitType = ($.inArray(gmapInitType.toUpperCase(), defaults.mapTypeControls)) ? gmapInitType.toUpperCase() : defaults.initialMapType;
      this.options.initialMapType = gmapInitType;

      // ... validating if the passed mapTypeControls is an array and contains valid data 
      if ($.isArray(gmapMapTypeControls)) {
        // a bit radical, but we can only allow as many values as there are per default 
        // in Goggle Maps API - thus cutting off any oversize
        gmapMapTypeControls = gmapMapTypeControls.slice(0, defaults.mapTypeControls.length);

        // grep the passed mapTypeControls array for filtering out all invalid values 
        // by comparing them to our default mapTypeControls
        gmapMapTypeControls = $.grep(gmapMapTypeControls, function(value, ix) {
          gmapMapTypeControls[ix] = value.toUpperCase();
          return ($.inArray(gmapMapTypeControls[ix], defaults.mapTypeControls) >= 0);
        });
      } else {
        // no array -> no map type controls :-P
        gmapMapTypeControls = [];
      }
      this.options.mapTypeControls = gmapMapTypeControls;

      // ... validating the UI flags are propper booleans
      this.options.hasCustomEonUI = (typeof this.options.hasCustomEonUI === "boolean") ? this.options.hasCustomEonUI : defaults.hasCustomEonUI;
      this.options.hasDisableDefaultUI = (typeof this.options.hasDisableDefaultUI === "boolean") ? this.options.hasDisableDefaultUI : defaults.hasDisableDefaultUI;
      this.options.hasOpenOverviewMap = (typeof this.options.hasOpenOverviewMap === "boolean") ? this.options.hasOpenOverviewMap : defaults.hasOpenOverviewMap;

      // ... validate the resultsPerPage is a proper integer
      this.options.resultsPerPage = (!isNaN(parseInt(this.options.resultsPerPage, 10))) ? parseInt(this.options.resultsPerPage, 10) : defaults.resultsPerPage;
    },


    /**
     * Creator function for custom eon map tpe controls
     *
     * Allowing the user to switch the map type between Satellite, Map and Terrain
     *
     * The created container has the class "map-type-controls" assigned and can be
     * styled with accordant css rules
     *
     * @see gmaps.css
     */
    createMapTypeControls: function() {
      var self = this,
        i, mtc, mapTypeControlsWrapper, targetMapType, mapTypeControls = '',
        mapTypeCount = this.options.mapTypeControls.length;

      // as jQuery takes care of performant DOM insertion (uses documentFragment in background),
      // we us a rather readable approach for creating our custom elements
      for (i = 0; i < mapTypeCount; i++) {
        mtc = this.options.mapTypeControls[i];
        mapTypeControls += '<a href="' + mtc + '"';
        mapTypeControls += (mtc === this.options.initialMapType) ? 'class="active">' : '>';
        mapTypeControls += this.i18n["mapType_" + mtc] + "</a>";
      }
      mapTypeControlsWrapper = $('<div class="group map-type-controls"></div>').append(mapTypeControls);

      // handling user interaction on map type controls
      mapTypeControlsWrapper.delegate('a', 'click', function(e) {
        e.preventDefault();

        // set new map type
        targetMapType = $(this).attr("href");
        self.map.setMapTypeId(google.maps.MapTypeId[targetMapType]);

        // switch active element (anchor)
        $(this).addClass("active").siblings(".active").removeClass("active");
      });


      // append the created controls to the map
      this.map.controls[google.maps.ControlPosition.RIGHT_TOP].push(mapTypeControlsWrapper.get(0));
    },


    /**
     * Creator function for custom eon map zoom controls
     *
     * Allowing the user to adjust the zoom level for the map, either by using
     * the +/- controls or the slider element.
     *
     * Dependency:
     * - jquery-ui [slider]
     *   @see http://docs.jquery.com/UI/Slider
     *
     * The created container has the class "map-zoom-controls",
     * the wrapped controls "zoom-increase", "zoom-decrease" and zoom-slider
     * All can be styled with accordant css rules
     *
     * @see gmaps.css
     */
    createMapZoomControls: function() {
      if (typeof typeof $.fn.slider === "undefined") {
        return;
      }

      var self = this,
        zoomControl = $('<div class="map-zoom-controls"></div>'),
        zoomSlider = $('<div class="zoom-slider"></div>'),
        zoomControlDecrease = $('<a href="#" role="button" class="zoom-decrease">&#8722;</a>'),
        zoomControlIncrease = $('<a href="#" role="button" class="zoom-increase">+</a>');


      // using the jquery ui slider plugin to connect user interaction with map's zoom function
      zoomSlider.slider({
        value: this.options.initialMapZoom,
        min: this.options.minMapZoom,
        max: this.options.maxMapZoom,
        step: 1,
        slide: function(event, ui) {
          self.map.setZoom(parseInt(ui.value, 10));
        }
      });

      // bind the de- and increasing events to the accordant button
      zoomControlDecrease.bind('click', function(e) {
        e.preventDefault();
        if (self.map.getZoom() > self.options.minMapZoom) {
          self.map.setZoom(zoomSlider.slider('value') - 1);
        }
      });
      zoomControlIncrease.bind('click', function(e) {
        e.preventDefault();
        if (self.map.getZoom() < self.options.maxMapZoom) {
          self.map.setZoom(zoomSlider.slider('value') + 1);
        }
      });

      self.zoomSlider = zoomSlider;

      // jQuery optimises this with a DocumentFragment, so we don't need to do it
      zoomControl.append(zoomControlDecrease).append(zoomControlIncrease).append(zoomSlider);

      // append the created controls to the map
      this.map.controls[google.maps.ControlPosition.LEFT_TOP].push(zoomControl.get(0));
    },


    /**
     * Creator function for custom eon map results controls
     *
     * Displays a collapsible results list (based on user's search query).
     * All results (list items) act as controls for the related markers on the map.
     *
     * Dependency:
     * - eon.expandables.js
     *
     * The created container has the class "map-results-controls",
     *
     *
     *
     * All can be styled with accordant css rules
     *
     * @see gmaps.css
     */
    createResultsControls: function() {
      // validate the expandable plugin is available or don't create the resultslist
      if (typeof eon.expandables === "undefined") {
        return;
      }

      var self = this,
        rc, resultsList;

      self.resultsControl = $('<div class="map-results-controls expandable expandable-active"></div>');
      rc = self.resultsControl;
      rc.expandableHeading = $('<a class="expandable-header">' + this.i18n.resultsHeading + '</a>');
      rc.expandableBody = $('<div class="expandable-body group"></div>');
      rc.paginationWrapper = $('<div class="pagination group"></div>');
      rc.paginationCtrlPrevious = $('<a class="prev">' + this.i18n.resultsPrevPage + '</a>');
      rc.paginationCtrlNext = $('<a class="next">' + this.i18n.resultsNextPage + '</a>');

      resultsList = '<h2 class="results-list-title"></h2><ol class="results-list"></ol>';

      rc.paginationWrapper
        .append(rc.paginationCtrlPrevious)
        .append(rc.paginationCtrlNext);

      rc.paginationWrapperBottom = rc.paginationWrapper.clone(true).addClass("bottom-pagination");

      rc.expandableBody
        .append(rc.paginationWrapper)
        .append(resultsList)
        .append(rc.paginationWrapperBottom);

      rc
        .append(rc.expandableHeading)
        .append(rc.expandableBody);

      rc.expandable();

      // set 1st page
      self.resultsControlGroupIx = 0;
      self.showResultsList(self.resultsListGroupKeys[0], 0);

      // append the created controls to the map
      this.map.controls[google.maps.ControlPosition.LEFT_TOP].push(self.resultsControl.get(0));

      // handle all click events on accordant resultlist entries
      rc.delegate('.result-entry', 'click', function(ev) {
        ev.preventDefault();
        // remove any open tooltips
        self.tooltipBubble.remove();
        var mRef = $(this).attr("href").split("#");
        // set the tooltip content and open it for the related map marker
        self.tooltipBubble.open(self.markerCache[mRef[1]][mRef[2]]);
      });
      rc.find(".pagination").delegate('a', 'click', function(ev) {
        ev.preventDefault();
        var pRef = $(this).attr("href").split("#"),
          group = pRef[1],
          ix = parseInt(pRef[2], 10);
        if ($(this).hasClass("disabled")) {
          return;
        }
        self.tooltipBubble.remove();
        if (self.resultsListGroupKeys[self.resultsControlGroupIx] !== group) {
          self.switchMarkerGroup(group);
          self.resultsControlGroupIx = ($(this).hasClass("prev")) ? self.resultsControlGroupIx - 1 : self.resultsControlGroupIx + 1;
        }
        self.showResultsList(group, ix);
        self.map.fitBounds(self.markerCache[group].latLngBounds);
      });
    },

    /**
     * Helper function for custom eon map results list control
     *
     * Displays the requested result subset and updates the controls
     *
     * All can be styled with accordant css rules
     * @see gmaps.css
     *
     * @param {string} groupKey - key/title of the subsequent group (e. g. Germany, ...)
     * @param {integer} index - pageIndex to identify the startelement of the shown list page
     */
    showResultsList: function(groupKey, index) {
      var tmpKey, tmpIx, tmpCount, markerVisualCaption, a = 0,
        results = this.markerCache[groupKey],
        r, rHTML = '',
        resultsCount = (results) ? results.length : 0,
        alphabet = this.markerVisuals.alphabetic.caption,
        alphabetCount = alphabet.length,
        // prevCtrl = this.resultsControl.find(".prev"),
        // nextCtrl = this.resultsControl.find(".next"),
        pageLimit = (index + this.options.resultsPerPage >= resultsCount) ? resultsCount : index + this.options.resultsPerPage;

      for (r = index; r < pageLimit; r++) {
        rHTML += results[r].listEntryHTML;
      }

      if (this.currentResultsListPage !== index || (this.currentResultsListPage === 0 && index === 0)) {
        // this.resultsControl.find(".results-list-title").html(groupKey);
        // this.resultsControl.find(".results-list").html(rHTML);
        this.currentResultsListPage = index;
        this.currentResultsGroupKey = groupKey;
      }

      // update the 'previous' pagination controls
      if (this.resultsControlGroupIx === 0 && index === 0) {
        // first page
        prevCtrl.addClass("disabled").attr("aria-hidden", "true").attr("href", "#");
      } else {
        // determine if there are results left in the current group - otherwise switch to prev group
        if (index === 0) {
          tmpKey = this.resultsListGroupKeys[this.resultsControlGroupIx - 1];
          // tmpCount = this.markerCache[tmpKey].length;
          // tmpIx = tmpCount % this.options.resultsPerPage;
          // tmpIx = (tmpIx === 0) ? tmpCount - this.options.resultsPerPage : tmpCount - tmpIx;
        } else {
          tmpKey = groupKey;
          tmpIx = index - this.options.resultsPerPage;
        }

        // prevCtrl.removeClass("disabled").removeAttr("aria-hidden").attr("href", "#" + tmpKey + "#" + tmpIx);
      }

      // update the 'next' pagination controls
      if (this.resultsControlGroupIx === this.resultsListGroupKeys.length - 1 && index >= resultsCount - this.options.resultsPerPage) {
        // last page
        // nextCtrl.addClass("disabled").attr("aria-hidden", "true").attr("href", "#");
      } else {
        // determine if there are results left in the current group - otherwise switch to next group
        if (index >= resultsCount - this.options.resultsPerPage) {
          tmpKey = this.resultsListGroupKeys[this.resultsControlGroupIx + 1];
          tmpIx = 0;
        } else {
          tmpKey = groupKey;
          tmpIx = index + this.options.resultsPerPage;
        }

        // nextCtrl.removeClass("disabled").removeAttr("aria-hidden").attr("href", "#" + tmpKey + "#" + tmpIx);
      }

    },

    /**
     * Helper function for results-list group
     *
     * generates the accordant html list elements for the resultslist control for each group
     *
     * @param {string} groupKey - string to identify all related results
     * @param {string} pointerKey - string to identify the right pointer (next assignable index)
     */
    createResultsListGroup: function(groupKey, pointerKey) {
      var caption, r, results = this.markerCache[groupKey],
        resultsCount = results.length,
        construction;

      for (r = 0; r < resultsCount; r++) {
        caption = this.getMarkerCaption(results[r], pointerKey);
        if ((!caption || caption === "") && results[r].assetType) {
          caption = '<span class="asset-icon asset-' + results[r].assetType + '"></span>';
        }
        construction = (results[r].markerType === "bubbleMarkerConstruction") ? "-construction" : "";
        //wrapping the href target in 2 '#' to overcome IE href issues (returns full URL)
        results[r].listEntryHTML = '<li><a class="group result-entry" href="#' + groupKey + '#' + r + '">';
        results[r].listEntryHTML += '<span class="marker-visual' + construction + '">' + caption + '</span> ';
        results[r].listEntryHTML += '<span class="marker-title">';
        results[r].listEntryHTML += results[r].title;
        results[r].listEntryHTML += '</span></a></li>';
      }

    },

    /**
     * Helper function for custom marker caption
     *
     * generates the accordant caption for markers and the associated resultslist entry
     *
     *
     * @param {object} marker - marker data object
     * @param {string} pointerKey - string to identify the right pointer (next assignable index)
     */
    getMarkerCaption: function(marker, pointerKey) {
      var markerVisual = this.markerVisuals[marker.markerType],
        tmpPointer,
        markerVisualCaption = '';

      if (marker.markerType === "alphabetic" || marker.markerType === "numeric") {
        tmpPointer = markerVisual.pointer[pointerKey];
        markerVisualCaption = (tmpPointer < markerVisual.caption.length) ? markerVisual.caption[tmpPointer] : '';
        markerVisual.pointer[pointerKey] += 1;
      } else {
        markerVisualCaption = "";
      }
      return markerVisualCaption;
    },


    /**
     * Helper function for creating gmap marker image objects
     *
     * The images are only created once and cached within the markerVisuals object in order
     * to reuse them for all markers with the same visual
     *
     * @param {object} markerVisual - visual data of the chosen marker type
     */
    createGmapMarkerImage: function(markerVisual) {
      var visual = markerVisual.visual,
        shadow = markerVisual.shadow;

      // create marker visual (icon and its shadow)
      markerVisual.visualGmapImg = new google.maps.MarkerImage(
        visual.path,
        new google.maps.Size(visual.size[0], visual.size[1]),
        new google.maps.Point(visual.origin[0], visual.origin[1]),
        new google.maps.Point(visual.anchor[0], visual.anchor[1])
      );

      if (typeof shadow !== "undefined") {
        markerVisual.shadowGmapImg = new google.maps.MarkerImage(
          shadow.path,
          new google.maps.Size(shadow.size[0], shadow.size[1]),
          new google.maps.Point(shadow.origin[0], shadow.origin[1]),
          new google.maps.Point(shadow.anchor[0], shadow.anchor[1])
        );
      }
    },

    /**
     * Helper function for creating the "get directions" URL
     *
     * based on the gmaps syntax for the route-planner URL the contact data is used to create
     * an accordant anchor target
     *
     * @param {object} contact - contact data with necessary address data
     */
    createDirectionsURL: function(contact) {
      var directionsURL = '',
        ds = (contact.street) ? contact.street + ', ' : '',
        dz = (contact.zip) ? contact.zip + ' ' : '',
        dc = (contact.city) ? contact.city + ' ' : '',
        dco = (contact.country) ? contact.country : '';
      if (ds.length + dz.length + dc.length + dco.length) {
        directionsURL = '<a class="url action" target="_blank" href="//maps.google.com/maps?daddr=' + ds + dz + dc + dco + '">' + '<span class="icon-link_pfeil"></span>' + this.i18n.getDirectionsToHere + '</a>';
      }
      return directionsURL;
    },

    /**
     * Helper function for creating the vCard style for contact data
     *
     * based on microformat 'vcard' style the contact data for contact-tab and visitor center
     * are created with accordant HTML
     *
     * @param {object} contactData - contact data of company or asset's visitor center
     * @param {string} title - the marker / asset / company title
     * @param {boolean} hasDirectionURL - creates / skips an URL to google maps routing
     * @param {string} setHomeLocationURL - optional, URL to set the home location.
     */
    createVCard: function(contactData, title, hasDirectionURL, setHomeLocationURL) {
      var sHTML = '',
        c = contactData,
        target = "_blank";

      sHTML = '<div class="map-tooltip-bubble-tab-content vcard">';
      if (typeof title !== "undefined") {
        sHTML += '<h2 class="fn">';
        if (c.url && c.url.charAt(0) == "/") {
          target = "";
        }
        sHTML += (c.url) ? '<a class="url fn org" href="' + c.url + '" target="' + target + '">' + title + '</a>' : title;
        target = "_blank";
        sHTML += '</h2>';
      }
      if (c.street || c.zip || c.city) {
        sHTML += '<p class="adr addressDetail">';
        sHTML += (c.street) ? '<span class="street-address">' + c.street + '</span><br/>' : '';
        sHTML += (c.zip) ? '<span class="postal-code">' + c.zip + ' </span>' : '';
        sHTML += (c.city) ? '<span class="region">' + c.city + '</span>' : '';
        sHTML += '</p>';
      }
      if (c.contactPerson || c.phone || c.email) {
        sHTML += '<p class="adr contactDetail">';
        sHTML += (c.contactPerson) ? '<span class="fn">' + c.contactPerson + '</span><br/>' : '';
        sHTML += (c.phone) ? '<span class="tel">' + c.phone + '</span><br/>' : '';
        sHTML += (c.email) ? '<a class="email" href="mailto:' + c.email + '">' + c.email + '</a>' : '';
        sHTML += '</p>';
      }

      sHTML += (c.companies) ? '<p><span>' + this.i18n.companies + ": " + c.companies + '</span></p>' : '';


      sHTML += '<p class="link-group">';
	  
      if (c.url) {
        if (c.url && c.url.charAt(0) == "/") {
          target = "";
        }
        sHTML += '<a class="url action" href="' + c.url + '" target="_blank">' + '<span class="icon-link_pfeil"></span>' + this.i18n.moreInformation + '</a><br/>';
      }
	  if (c.profilePageURL) {
        if (c.profilePageURL && c.profilePageURL.charAt(0) == "/") {
          target = "";
        }
        sHTML += '<a class="url action" href="' + c.profilePageURL + '" target="_blank">' + '<span class="icon-link_pfeil"></span>' + this.i18n.seeProfilePage + '</a><br/>';
      }
      if (hasDirectionURL) {
        sHTML += this.createDirectionsURL(c);
      }

      if (typeof setHomeLocationURL !== "undefined") {
        var lURL = '<a class="url action" href="' + setHomeLocationURL + '">' + '<span class="icon-link_pfeil"></span>' + this.i18n.setThisAsYourHomeLocation + '</a><br/>';
        sHTML += lURL;
      }

      sHTML += '</p>';
      sHTML += '</div>';

      return sHTML;
    },

    /**
     * Helper function for creating contact tab's content (tooltip bubble) for a marker
     *
     * creates and assigns the HTML-string to the gmap marker object in order to display
     * the content by reference in an info window tooltip (on click)
     *
     * @param {object} marker - visual data of the chosen marker type
     */
    createTabContent_INFORMATION: function(marker) {
      var infoHTML, directionsURL = '',
        contact = marker.tooltipContent.contact,
        info = marker.tooltipContent.information,
        target = "_blank";
      infoHTML = '<div class="map-tooltip-bubble-tab-content">';
      if (marker.title) {
        infoHTML += '<h2 class="fn">';
        if (contact.url && contact.url.charAt(0) == "/") {
          target = "";
        }
        infoHTML += (contact.url) ? '<a class="url fn org" href="' + contact.url + '" target="' + target + '">' + marker.title + '</a>' : marker.title;

        infoHTML += '</h2>';
        target = "_blank";
      }
      if (info && !(marker.tooltipContent.commission || marker.tooltipContent.newcommission || marker.tooltipContent.capacity || marker.tooltipContent.newcapacity)) {
        infoHTML += '<p class="mapinfo">' + info + '</p>';
      }
      if (marker.tooltipContent.generationmethod && (marker.tooltipContent.commission || marker.tooltipContent.newcommission || marker.tooltipContent.capacity || marker.tooltipContent.newcapacity)) {
        infoHTML += '<p>' + marker.tooltipContent.generationmethod + '</p>';
      }
      if (marker.tooltipContent.commission) {
        infoHTML += this.i18n.getCommission + marker.tooltipContent.commission + '<br/>';
      }
      if (marker.tooltipContent.newcommission) {
        infoHTML += this.i18n.getCommissionNew + marker.tooltipContent.newcommission + '<br/>';
      }
      if (marker.tooltipContent.capacity) {
        infoHTML += this.i18n.getCapacity + marker.tooltipContent.capacity + '<br/>';
      }
      if (marker.tooltipContent.newcapacity) {
        infoHTML += this.i18n.getCapacityNew + marker.tooltipContent.newcapacity + '<br/>';
      }
      if (marker.directionsURL) {
        directionsURL = (contact) ? this.createDirectionsURL(contact) : '';
      }

      infoHTML += '<p class="link-group">';
	  if(contact.url){
		  infoHTML += '<a class="url action" href="' + contact.url + '" target="_blank">' + '<span class="icon-link_pfeil"></span>' + this.i18n.moreInformation + '</a><br/>';
	  }
	  
      if (marker.profilePageURL) {
        if (marker.profilePageURL.charAt(0) == "/") {
          target = "";
        }
        infoHTML += '<a class="url action" href="' + marker.profilePageURL + '" target="_blank">' + '<span class="icon-link_pfeil"></span>' + this.i18n.seeProfilePage + '</a><br/>';
      }
      infoHTML += directionsURL;
      infoHTML += '</p>';
      infoHTML += '</div>';
      return infoHTML;
    },

    /**
     * Helper function for creating contact tab's content (tooltip bubble) for a marker
     *
     * creates and assigns the HTML-string to the gmap marker object in order to display
     * the content by reference in an info window tooltip (on click)
     *
     * @param {object} marker - visual data of the chosen marker type
     */
    createTabContent_CONTACT: function(marker) {
      var contact = marker.tooltipContent.contact;
	  if(marker.profilePageURL){
		contact.profilePageURL = marker.profilePageURL;
	  }
      return this.createVCard(contact, marker.title, marker.directionsURL);
    },

    createTabContent_LOCATION: function(marker) {
      var location = marker.tooltipContent.location;
      return this.createVCard(location, marker.title, marker.directionsURL, marker.setHomeLocationURL);
    },


    /**
     * Helper function for creating visitor center tab's content (tooltip bubble) for a marker
     *
     * creates and assigns the HTML-string to the gmap marker object in order to display
     * the content by reference in an info window tooltip (on click)
     *
     * @param {object} marker - visual data of the chosen marker type
     */
    createTabContent_VISITORCENTER: function(marker) {
      var visitorCenter = marker.tooltipContent.visitorCenter;

      return this.createVCard(visitorCenter, marker.title, marker.directionsURL);
    },

    /**
     * Creates the custom tooltip bubble that pops up when clicking on a marker
     *
     * Due to its custom design (content tabs and style) it can't use the default
     * Gmap infoWindow class but has to create a custom overlay by extending the
     * the GOverlay class.
     *
     */
    createCustomTooltipBubble: function() {
      // reassign the gmaps context
      var self = this;

      /*
       * Constructor Function
       */
      function customTooltipBubble() {
        google.maps.OverlayView.call(this);
        this.width = self.markerVisuals.tooltip.width;
        this.height = self.markerVisuals.tooltip.height;
        this.offsetHorizontal = self.markerVisuals.tooltip.offsetHorizontal;
        this.offsetVertical = self.markerVisuals.tooltip.offsetVertical;
        this.latLng = self.initialLatLng;
        var tooltipBubble = this;
        tooltipBubble.changingBounds =
          google.maps.event.addListener(self.map, "bounds_changed", function() {
            if (self.map.hasDeprecatedCenter) {
              return tooltipBubble.panMap.apply(tooltipBubble);
            }
          });
        this.createElement();
      }

      /* 
       * customTooltipBubble extends OverlayView class from the Google Maps API
       * and overrides the following native prototype-functions:
       * draw(), remove(), panMap(), createElement()
       */
      customTooltipBubble.prototype = new google.maps.OverlayView();

      /*
       * creates the actual tooltip bubble DOM element
       */
      customTooltipBubble.prototype.createElement = function() {
        var containerHTML, shadowHTML, shadowFilter,
          tooltipBubble = this;

        containerHTML = '<div class="map-tooltip-bubble">';
        containerHTML += '<div class="map-tooltip-bubble-content tabs tooltip-bubble-tabs"></div>';
        containerHTML += '<a href="#" role="button" class="close-button" title="' + self.i18n.closeTooltipBubble + '">X</a>';
        containerHTML += '<div class="map-tooltip-bubble-tick hidden-xs"></div>';
        containerHTML += '</div>';

        tooltipBubble.container = $(containerHTML);
        tooltipBubble.container.body = tooltipBubble.container.find(".map-tooltip-bubble-content");
        tooltipBubble.container.on('click', function(e) {
            e.preventDefault();
			$closeBtn = $(e.target);
            if(!$closeBtn.hasClass('close-button')){
				return;
            }
            tooltipBubble.remove();
        });

        tooltipBubble.shadowContainer = $('<div class="map-tooltip-shadow"></div>');

        // manually downgrade the dropshadow for ie6 with good old nasty ms-filter
        if ($("html").hasClass("ie6")) {
          shadowFilter = "filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src='" + self.markerVisuals.tooltip.shadowImage + "');";
          shadowHTML = '<span style="display:block;' + 'height:' + self.markerVisuals.tooltip.shadowHeight + 'px;' + 'margin-top:' + self.markerVisuals.tooltip.shadowTop + 'px;' + shadowFilter + '">' + '</span>';
          tooltipBubble.shadowContainer.css("text-align", "right").append(shadowHTML);
        } else {
          tooltipBubble.shadowContainer.css({
            "background-image": "url('" + self.markerVisuals.tooltip.shadowImage + "')",
            "background-position": "right bottom",
            "background-repeat": "no-repeat"
          });
        }
      };

      /* 
       * Removes the tooltip bubble by deleting its map reference (the element still exists)
       */
      customTooltipBubble.prototype.remove = function() {
        if (this.container) {
          this.shadowContainer.hide();
          this.container.hide();
          //initialize tabs first before destroying them because jQuery will throw an error otherwise sinde v. 10.1
          this.container.tabs();
          this.container.tabs('destroy');
        }
        self.map.hasDeprecatedCenter = false;
        this.latLng = null;
        this.setMap(null);
      };

      /* 
       * (Re)draw the tooltip based on the current projection and zoom level
       */
       var leftPos, topPos;
      customTooltipBubble.prototype.draw = function() {
        var tooltipBubble = this,
          // get the current panes arrangement (z-layer in GMaps)
          panes = tooltipBubble.getPanes(),
          // Calculate the DIV coordinates of two opposite corners of our bounds to
          // get the size and position of the tooltip bubble
          pixPosition = this.getProjection().fromLatLngToDivPixel(this.latLng);
          // calculate the position of the bubble
          leftPos = ((pixPosition.x + tooltipBubble.width * (-1) + tooltipBubble.offsetHorizontal) -25)+ "px";
          topPos = ((pixPosition.y + tooltipBubble.height * (-1) + tooltipBubble.offsetVertical) - 50) + "px";

          if($(window).width()<=767){            
              leftPos=parseInt(leftPos) -43;              
              topPos=parseInt(topPos)+15;
              $('div.gmnoprint').find('div:last-child').css('display','none');
              self.map.set('draggable', false);
          } else {
            self.map.set('draggable', true);
          }

        if (!this.container || !pixPosition) {
          return;
        }
        // move to the uppest pane
        if (panes && tooltipBubble.container.parent()[0] !== panes.floatPane) {
          tooltipBubble.container.appendTo(panes.floatPane);
          tooltipBubble.shadowContainer.appendTo(panes.floatShadow);
        }
        // Now position our DIV based on the DIV coordinates of our bounds
        this.container.css({
          "position": "absolute",
          "width": tooltipBubble.width + "px",
          "height": tooltipBubble.height + "px",
          "left": leftPos,
          "top": topPos
        }).show();
        tooltipBubble.shadowContainer.css({
          "position": "absolute",
          "width": self.markerVisuals.tooltip.shadowContainerWidth + "px",
          "height": self.markerVisuals.tooltip.shadowContainerHeight + "px",
          "left": leftPos,
          "top": topPos
        }).show();
        tooltipBubble.panMap();
      };


      /* 
       * Pan the map to fit the tooltip bubble in the viewport
       */
      customTooltipBubble.prototype.panMap = function() {
        // if we go beyond map, pan map
        var bounds = self.map.getBounds();
        if (!self.map.hasDeprecatedCenter || !bounds || !this.container || this.container.body.html().length === 0) {
          return;
        }
        // The position of the tooltip bubble
        var position = this.latLng,
          // The dimension of the tooltip bubble
          tbWidth = this.width,
          tbHeight = this.height,
          // Space around the tooltip bubble
          padX = 40,
          padY = 60,
          // Some map arithmetic for positioning
          mapDiv = self.map.getDiv(),
          mapWidth = mapDiv.offsetWidth,
          mapHeight = mapDiv.offsetHeight,
          boundsSpan = bounds.toSpan(),
          longSpan = boundsSpan.lng(),
          latSpan = boundsSpan.lat(),
          degPixelX = longSpan / mapWidth,
          degPixelY = latSpan / mapHeight,
          // The bounds of the map
          mapWestLng = bounds.getSouthWest().lng(),
          mapEastLng = bounds.getNorthEast().lng(),
          mapNorthLat = bounds.getNorthEast().lat(),
          mapSouthLat = bounds.getSouthWest().lat(),
          // The offset position of the tooltip bubble
          tbOffsetX = this.offsetHorizontal + this.width * (-1),
          tbOffsetY = this.offsetVertical + this.height * (-1),
          // left shift to take resultscontrol or default zoom slider into account
          // mapWidth fraction provides some relative shift
          defaultLeftShift = self.options.hasCustomEonUI ? mapWidth / 2.8 : mapWidth / 8,
          // and for the top map type controls
          defaultTopShift = self.options.hasCustomEonUI ? mapHeight / 8 : mapHeight / 12,
          // The bounds of the tooltip bubble
          tbWestLng = position.lng() + (tbOffsetX - padX - defaultLeftShift) * degPixelX,
          tbEastLng = position.lng() + (tbOffsetX + tbWidth + padX) * degPixelX,
          tbNorthLat = position.lat() - (tbOffsetY - padY - defaultTopShift) * degPixelY,
          tbSouthLat = position.lat() - (tbOffsetY + tbHeight + padY) * degPixelY,
          // calculate center shift
          shiftLng = (tbWestLng < mapWestLng ? mapWestLng - tbWestLng : 0) + (tbEastLng > mapEastLng ? mapEastLng - tbEastLng : 0),
          shiftLat = (tbNorthLat > mapNorthLat ? mapNorthLat - tbNorthLat : 0) + (tbSouthLat < mapSouthLat ? mapSouthLat - tbSouthLat : 0),
          // The center of the map
          center = self.map.getCenter(),
          // setting the new map center
          centerX = center.lng() - shiftLng,
          centerY = center.lat() - shiftLat;

        // catching edge cases:
        //   - where the tooltip can overflow the very top map border
        //     at the north pole and ends up in an infinite reposition loop
        //   - where the zoom-level is too high so the infinite map get panned to the wrong site
        // in this case center the marker and shift to the bounds of the tooltip bubble
        if (centerY > 85 || self.map.getZoom() < 2) {
          centerX = position.lng() - (tbOffsetX + tbWidth + defaultLeftShift - padX) * degPixelX;
          centerY = position.lat() - (tbOffsetY + tbHeight) * degPixelY;
        }

        // center the map to the new shifted center
        self.map.panTo(new google.maps.LatLng(centerY, centerX));
        // map center has been updated
        self.map.hasDeprecatedCenter = false;
        // Remove the listener after panning is complete.
        if (this.changingBounds) {
          google.maps.event.removeListener(this.changingBounds);
          this.changingBounds = null;
        }
      };

      // create a new tooltip object instance
      this.tooltipBubble = new customTooltipBubble();

      /* 
       * open the tooltip with the accordant content for the marker, lay it
       * out in the related map pane and trigger the tabs if needed
       */
      this.tooltipBubble.open = function(marker) {
        var tabCaption, tabControls, shiftDirection,
          tb = this,
          c = 0;

        if (this.container) {
          // remove all yet open tooltips
          this.remove();
          // empty the body
          this.container.body.empty();

          // create the HTML Copy Cache for the marker only if it not exists yet
          if (typeof marker.tooltipContentHTML === "undefined") {
            marker.tooltipContentHTML = {};
            // prepare the tooltip bubble content for the marker
            $.each(marker.tooltipContent, function(tabkey, content) {
              var functionName = "createTabContent_" + tabkey.toUpperCase();
              if (typeof self[functionName] === 'function') {
                marker.hasTabControls = (c > 0);
                // internationalized tab caption
                tabCaption = self.i18n["tooltipTab_" + tabkey.toUpperCase()];
                // html content of each tab
                marker.tooltipContentHTML[tabCaption] = self[functionName](marker);
                c += 1;
              }
            });
          }

          // if there are multiple tabs for the new tooltip, set a tab nav
          if (marker.hasTabControls || typeof marker.showOneTabControl !== "undefined") {
            tabControls = $('<ul class="nav nav-tabs responsive tab-controls tab-controls-content group"></ul>');
            this.container.body.prepend(tabControls);
          }

          $.each(marker.tooltipContentHTML, function(caption, content) {
            if (tabControls) {
              tabControls.append('<li><a href="#tooltip-tab-' + caption.toLowerCase().replace(" ", "") + '">' + caption + '<span class="visible-xs pull-right arrow"><span class="icon-stage_teaser_pfeil_oben"></span><span class="icon-stage_teaser_pfeil_unten"></span></span></a></li>');
            }
            tb.container.body.append('<div id="tooltip-tab-' + caption.toLowerCase().replace(" ", "") + '">' + content + '</div>');
          });

          if (tabControls) {
            // init the tabs plugin
             tb.container.tabs({options: {keyboard:false}});
          }
        }
        // update the center map, when displaying the tooltip
        self.map.hasDeprecatedCenter = true;
        // set the marker Position as an anchor reference
        this.latLng = marker.mapMarkerRef.latLng;
        // adjust the vertical offset based on the markers height
        shiftDirection = (this.offsetVertical < 0) ? (-1) : 1; //shift up or down
        this.offsetVertical = shiftDirection * (marker.mapMarkerRef.height + 35); //35 for tooltip tick
        // This will trigger calls to panes_changed and draw.
        this.setMap(self.map);
        setTimeout(function(){
            eonde.responsiveTabs(['xs']);
            eonde.checkResize();
        }, 50);
        
      };


    },

    /**
     * Creates the customMarker for each marker entry in the passed JSON
     *
     * Again we need to extend the gmap OverlayView class, to customize each marker
     *
     * @param {object} marker - marker data from the passed JSON
     * @param {object} caption - icon / letter / number that captions the marker
     */
    createCustomMarker: function(marker, caption) {
      // reassign the gmaps context
      var self = this;

      // create the default style representation for the marker
      var getDefaultStyle = function() {
        var v = self.markerVisuals.defaultMarker.visual;
        return {
          width: v.size[0],
          height: v.size[1],
          background: v.background,
          leftShift: v.anchor[0]
        };
      };

      // create the individual style representation for the marker
      var getIndividualStyle = function() {
        var mv = self.markerVisuals[marker.markerType],
          mvv = mv.visual,
          mvs = mv.shadow;
        return {
          markerVisual: mvv,
          markerShadow: mvs,
          markerColor: ((mv.color) ? mv.color : ''),
          markerTextAlign: ((mv.textAlign) ? mv.textAlign : ''),
          clickableShape: mv.clickableShape,
          width: mvs.size[0],
          height: mvs.size[1],
          leftShift: mvs.anchor[0],
          caption: caption
        };
      };


      /*
       * Constructor Function
       */
      function customMarker(marker, caption) {
        google.maps.OverlayView.call(this);

        var mv,
          activeGroupIx = (typeof self.resultsControlGroupIx === "undefined") ? 0 : self.resultsControlGroupIx;

        this.defaultStyle = getDefaultStyle();
        this.individualStyle = getIndividualStyle();
        this.latLng = new google.maps.LatLng(marker.latLng[0], marker.latLng[1]);
        this.index = marker.index;
        this.groupKey = marker.groupKey;
        this.isDefault = (self.resultsListGroupKeys[activeGroupIx] !== marker.groupKey && self.options.hasCustomEonUI);
        this.assetType = (!marker.assetType) ? false : marker.assetType;
        this.markerType = marker.markerType;

        this.createElement();
      }

      /* 
       * customMarker extends OverlayView class from the Google Maps API
       * and overrides the native prototype function: createElement
       */
      customMarker.prototype = new google.maps.OverlayView();

      /*
       * creates the actual custom marker DOM element and sets it to the map
       */
      customMarker.prototype.createElement = function(isDefault) {
        // create a default marker only in the custom eon UI context
        if (self.options.hasCustomEonUI) {
          this.createDefaultMarker();
        }
        this.createIndividualMarker();
        //this.setMap(self.map);
      };

      /*
       * creates the default marker for all inactive groups (countries)
       */
      customMarker.prototype.createDefaultMarker = function() {
        var dm = this.defaultMarker = {},
          style = this.defaultStyle;

        dm.icon = $('<a href="#' + this.groupKey + '#' + this.index + '" class="custom-marker-icon custom-marker-target"></a>')
          .css({
            "display": "block",
            "position": "absolute",
            "width": style.width + "px",
            "height": style.height + "px",
            "line-height": 0,
            "font-size": 0,
            "background": style.background
          });

        // if the marker lies in the shadow of an open tooltip - it's not clickable anymore
        // thus creating an "invisible" target-area to capture any interaction events
        dm.target = $('<a href="#' + this.groupKey + '#' + this.index + '" class="custom-marker-target"></a>')
          .css({
            "display": "block",
            "position": "absolute",
            "width": style.width + "px",
            "height": style.height + "px"
          });
      };

      /*
       * creates an individual marker icon based on the passed markerType
       */
      customMarker.prototype.createIndividualMarker = function() {
        var shadowBg, shadowFallback, bg, fallback, construction,
          im = this.individualMarker = {},
          style = this.individualStyle;

        // manually downgrade the dropshadow for ie6 with good old nasty ms-filter
        if ($("html").hasClass("ie6")) {
          shadowBg = "";
          shadowFallback = "style=\"filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src='" + style.markerShadow.path + "')\";";
        } else {
          bg = "url('" + style.markerVisual.path + "') no-repeat right bottom";
          shadowBg = "url('" + style.markerShadow.path + "') no-repeat right bottom";
          shadowFallback = "";
        }

        bg = "url('" + style.markerVisual.path + "') no-repeat right bottom";
        fallback = "";
        if (typeof style.caption === "undefined") {
          style.caption = "";
        }
        if (this.markerType === "bubbleMarkerConstruction") {
          construction = "asset-construction";
        }
        if (this.assetType && style.caption === "") {
          style.caption = '<span style="display: block;width:' + style.markerVisual.size[0] + 'px;height:' + style.markerVisual.size[1] + 'px;" ' + 'class="asset-icon asset-' + this.assetType + ' ' + construction + '"></span>';
        }

        im.icon = $('<a href="#' + this.groupKey + '#' + this.index + '" class="custom-marker-icon custom-marker-target"' + fallback + '>' + style.caption + '</a>')
          .css({
            "display": "block",
            "position": "absolute",
            "width": style.markerVisual.size[0] + "px",
            "height": (style.markerVisual.size[1] - 1) + "px",
            "padding-top": "1px",
            "color": style.markerColor,
            "text-align": style.markerTextAlign,
            "text-decoration": "none",
            "background": bg
          });

        im.shadow = $('<div class="custom-marker" ' + shadowFallback + '></div>')
          .css({
            "position": "absolute",
            "width": style.width + "px",
            "height": style.height + "px",
            "background": shadowBg
          });

        im.target = $('<a href="#' + this.groupKey + '#' + this.index + '" class="custom-marker-target"></a>')
          .css({
            "display": "block",
            "position": "absolute",
            "width": style.markerVisual.size[0] + "px",
            "height": style.markerVisual.size[1] + "px"
          });
      };

      /* 
       * (Re)draw the custom marker based on the current projection and zoom level
       */
      customMarker.prototype.draw = function() {
        var markerLayerZIx, panes, pixPos, iconGroup, targetGroup,
          defaultLeft, defaultTop, individualLeft, individualTop;

        // get the current panes arrangement (z-layer in GMaps)
        panes = this.getPanes();
        pixPos = this.getProjection().fromLatLngToDivPixel(this.latLng);

        if (!this.individualMarker.icon || !pixPos) {
          return;
        }

        // calculate the position of all marker's representations
        defaultLeft = (pixPos.x - this.defaultStyle.leftShift) + "px";
        defaultTop = (pixPos.y - this.defaultStyle.height) + "px";
        individualLeft = (pixPos.x - this.individualStyle.leftShift) + "px";
        individualTop = (pixPos.y - this.individualStyle.height) + "px";

        // move to the correct pane
        if (panes && this.individualMarker.icon.parent()[0] !== panes.overlayImage) {
          // get the marker pane zIndex
          markerLayerZIx = parseInt(panes.overlayImage.style.zIndex, 10);

          if (this.isDefault) {
            this.individualMarker.shadow.css("display", "none");
            this.individualMarker.icon.css("display", "none");
            this.individualMarker.target.css("display", "none");
          } else if (self.options.hasCustomEonUI) {
            this.defaultMarker.icon.css("display", "none");
            this.defaultMarker.target.css("display", "none");
          }

          if (this.isDefault) {
            this.width = this.defaultStyle.width;
            this.height = this.defaultStyle.height;
          } else {
            this.width = this.individualStyle.width;
            this.height = this.individualStyle.height;
          }

          // append shadow to the marker shadow pane
          // ...shadows stay on the lowest z-index layer
          if (this.individualMarker.shadow) {
            this.individualMarker.shadow
              .css("z-index", markerLayerZIx)
              .appendTo(panes.overlayImage);
          }
          //append all icons to the marker icon pane
          iconGroup = (self.options.hasCustomEonUI) ? this.individualMarker.icon.add(this.defaultMarker.icon) : this.individualMarker.icon;
          iconGroup
            .css("z-index", markerLayerZIx + 1)
            .appendTo(panes.overlayImage);

          //append the target element to the tooltip-shadow pane
          targetGroup = (self.options.hasCustomEonUI) ? this.individualMarker.target.add(this.defaultMarker.target) : this.individualMarker.target;
          targetGroup
            .css("z-index", parseInt(panes.floatShadow.style.zIndex, 10))
            .appendTo(panes.floatShadow);
        }

        // with every (re)draw position our visuals to the marker's elements bounds
        this.individualMarkerVisuals = this.individualMarker.icon.add(this.individualMarker.target);
        if (this.individualMarker.shadow) {
          this.individualMarkerVisuals = this.individualMarker.shadow.add(this.individualMarkerVisuals);
        }
        this.individualMarkerVisuals.css({
          "left": individualLeft,
          "top": individualTop
        });
        if (self.options.hasCustomEonUI) {
          this.defaultMarkerVisuals = this.defaultMarker.icon.add(this.defaultMarker.target);
          this.defaultMarkerVisuals.css({
            "left": defaultLeft,
            "top": defaultTop
          });
        }
      };

      /* 
       * Toggles the style of the marker between individual & default representation
       */
      customMarker.prototype.toggleStyle = function() {
        if (this.isDefault) {
          this.individualMarkerVisuals.css("display", "block");
          this.defaultMarkerVisuals.css("display", "none");
          this.isDefault = false;
          this.width = this.individualStyle.width;
          this.height = this.individualStyle.height;
        } else {
          this.individualMarkerVisuals.css("display", "none");
          this.defaultMarkerVisuals.css("display", "block");
          this.isDefault = true;
          this.width = this.defaultStyle.width;
          this.height = this.defaultStyle.height;
        }
        this.draw();
      };

      // returns a new customMarker element for the passed marker data
      return new customMarker(marker, caption);
    },



    /**
     * Creator function for all marker that shall be displayed on the map
     *
     * Generates a visual for each passed marker (options) at the desired point (latLng)
     * and appends it to the map
     * Processes the passed marker JSON object that has been passed with the gmap-options
     *
     * @param {boolean} eonUI - prepare the custom EON UI resultslist for each marker
     */
    createMapMarker: function(eonUI) {
      var self = this,
        groupIx = 0,
        markerGroupCount, m, marker, markerVisual,
        infoHTML, rl, ml, revData;

      // resets all resultslist caches
      self.resultsListGroupKeys = [];
      // the entire bounds of all markers
      self.totalLatLngBounds = new google.maps.LatLngBounds();

      // process the marker object list and create all accordant map marker-visuals
      $.each(self.markerCache, function(groupKey, data) {
        markerGroupCount = data.length;
        // cache for all map marker objects
        self.markerCache[groupKey].latLngBounds = new google.maps.LatLngBounds();
        // create groupKey Index
        self.resultsListGroupKeys[groupIx] = groupKey;
        groupIx += 1;
        // create the resultslist content
        if (eonUI) {
          // reset the alphabetical index for each group
          self.markerVisuals.alphabetic.pointer.rl = 0;
          self.markerVisuals.alphabetic.pointer.ml = 0;
          self.markerVisuals.numeric.pointer.rl = 0;
          self.markerVisuals.numeric.pointer.ml = 0;

          self.createResultsListGroup(groupKey, "rl");
        }

        // loop all entries (markers) of a group
        for (m = 0; m < markerGroupCount; m++) {
          marker = data[m];
          // get all visual references for the marker icon
          markerVisual = self.markerVisuals[marker.markerType];

          // check if the necessary marker visual has been created, if not - do it now
          if (typeof markerVisual.visualGmapImg === "undefined") {
            self.createGmapMarkerImage(markerVisual);
          }

          // assign a groupwide index to each marker
          // we want the first hit's markers on the very top - thus indexing top to bottom
          marker.index = m;

          // create a groupKey (e.g. "Europe", ...) reference for every marker 
          // to interact with the resultslist
          marker.groupKey = groupKey;

          // as marker can't be labeled with the gmap api we need to create another 
          // custom overlay to caption each mini-bubble marker with it's index (A-Z)
          // "ml" indicates the next free assignable index for the marker list
          marker.mapMarkerRef = self.createCustomMarker(marker, self.getMarkerCaption(marker, "ml"));
          // create a bounds object to auto-focus the entire group
          self.markerCache[groupKey].latLngBounds.extend(marker.mapMarkerRef.latLng);
          // extend the overall bounds object
          self.totalLatLngBounds.extend(marker.mapMarkerRef.latLng);

        }

      });

      // Putting the setMap call into a separate block of code
      // to avoid browser freeze in some versions of IE6
      // See ticket EONS-8110 for details
      var delay = 10;
      if ($('html').hasClass('ie6')) {
        delay = 2000;
      }
      window.setTimeout(function() {
        $.each(self.markerCache, function(groupKey, data) {
          markerGroupCount = data.length;
          for (m = 0; m < markerGroupCount; m++) {
            marker = data[m];
            marker.mapMarkerRef.setMap(self.map);
          }
        });
      }, delay);

      // delegate all marker clicks on the map-element (jQuery) level
     self.element.on('click', function(ev) {
        ev.preventDefault();
        $marker = $(ev.target);
        if (!$marker.hasClass('custom-marker-target')) {
            return;
        }
	  var pageIndex, mRef = $marker.attr("href").split("#"),
          groupkey = mRef[1],
          ix = parseInt(mRef[2], 10),
          marker = self.markerCache[groupkey][ix];

		// set the tooltip content and open it for the related map marker
        self.tooltipBubble.open(marker);

        // if it's an default marker-style -> toggle to individual style for the entire group
        if (marker.mapMarkerRef.isDefault) {
          self.switchMarkerGroup(groupkey, ix);
          // update the resultslist and the current groupkey index
          self.resultsControlGroupIx = $.inArray(groupkey, self.resultsListGroupKeys);
        }
        // switch to the accordant resultslist page
        pageIndex = Math.floor(ix / self.options.resultsPerPage) * self.options.resultsPerPage;
        self.showResultsList(groupkey, pageIndex);
      });

    },

    /**
     * switch marker groups and toggle default / individual style
     *
     * @see init()
     * @param {string} newGroupKey - string to identify which marker group to show
     */
    switchMarkerGroup: function(newGroupKey) {
      var ms, groupShow, groupShowCount,
        mh, groupHide, groupHideCount, groupHideKey;

      groupShow = this.markerCache[newGroupKey];
      groupShowCount = groupShow.length;
      for (ms = 0; ms < groupShowCount; ms++) {
        groupShow[ms].mapMarkerRef.toggleStyle();
      }

      // get the active group and toggle its markers to default
      groupHideKey = this.resultsListGroupKeys[this.resultsControlGroupIx];
      groupHide = this.markerCache[groupHideKey];
      groupHideCount = groupHide.length;
      for (mh = 0; mh < groupHideCount; mh++) {
        groupHide[mh].mapMarkerRef.toggleStyle();
      }
    },

    /**
     * Constructor function
     *
     * @see init()
     * @param {jQuery} Element which contains the map
     * @param {object} Optional parameters
     */
    construct: function(element, options) {
      var self = this,
        gmapInitOptions, mtc, tooltipBubbleHTML, boundsChangeListener,
        defaults = this.options; // caching the plugin's default values for silent fallback in case of an error

      // Default stuff
      this.options = $.extend({}, this.options, options);
      this.element = element;
      this.domElement = element.get(0);

      // validate all gmap api options for initialisation ...
      this.validateGmapOptions(defaults);

      // ... so we can create our GMap initialize option object with no worries (& no default UI controls)
      gmapInitOptions = {
        zoom: this.options.initialMapZoom,
        maxZoom: this.options.maxMapZoom,
        minZoom: this.options.minMapZoom,
        mapTypeId: google.maps.MapTypeId[this.options.initialMapType],
        disableDefaultUI: this.options.hasDisableDefaultUI,
        panControl: false,
        mapTypeControl: false,
        streetViewControl: false,
        zoomControlOptions: {
          style: google.maps.ZoomControlStyle.SMALL
        },
        overviewMapControl: true,
        overviewMapControlOptions: {
          opened: this.options.hasOpenOverviewMap
        }
      };

      // create a map object inside the passed dom element
      self.map = new google.maps.Map(this.domElement, gmapInitOptions);

      if($(window).width()>768){   
        google.maps.event.addDomListener(self.map, 'tilesloaded', function(){
            ($('#newPos').length==0) ? $('div.gmnoprint').last().parent().wrap('<div id="newPos" />') : '';
        });
      }
     //HEIGHT CALCULATION METHOD
     var mapheightCalculation= function(){
        var mapHeightInformation,mapHeightKontact,mapInfoHeight,linkGroupHeight,adrHeight,adrContactHeight;
                if ( $('.mapinfo').length!==0 ){
                  mapInfoHeight= $('.mapinfo').actual('height');
                } else mapInfoHeight=0;
                if ( $('.link-group').length!==0 ){
                  linkGroupHeight= $('.link-group').actual('height');
                } else linkGroupHeight=0;
                if ( $('.addressDetail').length!==0 ){
                  adrHeight= $('.addressDetail').actual('height');
                } else adrHeight=0;
                if ( $('.contactDetail').length!==0 ){
                  adrContactHeight= $('.contactDetail').actual('height');
                } else adrContactHeight=0;
				
               	mapHeightInformation= mapInfoHeight+linkGroupHeight+88;
                mapHeightKontact=adrHeight+adrContactHeight+linkGroupHeight+88;

                if(mapHeightKontact>mapHeightInformation){
                   $('.map-tooltip-bubble').css("height",mapHeightKontact);
                   $('.map-tooltip-bubble').css("top",'50px');
                   $('.custom-marker-icon.custom-marker-target').css("top",mapHeightKontact+79); 
                   $('.map-tooltip-bubble-tick').css("top",mapHeightKontact-9);               
                } else {
                  $('.map-tooltip-bubble').css("height",mapHeightInformation);
                  $('.map-tooltip-bubble').css("top",'50px');
                  $('.custom-marker-icon.custom-marker-target').css("top",mapHeightInformation+79);
                  $('.map-tooltip-bubble-tick').css("top",mapHeightInformation-9); 
                } 

                if($(window).width()<767){ 
                    mapHeightInformation= mapInfoHeight+linkGroupHeight+156;
                    mapHeightKontact=adrHeight+linkGroupHeight+156;   

                    if(mapHeightKontact>mapHeightInformation){
                       $('.map-tooltip-bubble-tab-content').css("height",mapHeightKontact);        
                    } else {
                      $('.map-tooltip-bubble-tab-content').css("height",mapHeightInformation);
                    } 
                }
     };
      google.maps.event.addDomListener(self.map, 'idle', function(){  
          //if($('div.freehtml').length <= 0){   
            mapheightCalculation();
            $('.nav-tabs li a').on('click',function(){
               mapheightCalculation();
            });
      			$('.custom-marker-icon.custom-marker-target').on('click',function(){
              setTimeout(mapheightCalculation, 500);
            });
          //}
      });      

      // check if a marker list object has been passed to the map
      if (typeof this.options.marker === "object") {
        // create a local marker cache to keep track of results and map marker references
        this.markerCache = this.options.marker;

        // create a custom tooltip bubble for further marker information (on click)
        this.createCustomTooltipBubble();

        // create and append all passed markers to the map
        // if the custom eon ui is required - prepare the resultslist control simultaneously 
        // to save an additional loop and therefore performance
        this.createMapMarker(this.options.hasCustomEonUI);
      }

      /* CUSTOM CONTROLS */
      if (this.options.hasCustomEonUI) {
        // create and append the map type controls (Satellite, Map, Terrain)
        this.createMapTypeControls();
        // create and append the map zoom controls (increase/decrease button & slider)
        this.createMapZoomControls();
        // create and append the results list controls layer (expandable)
        this.createResultsControls();
      }

      // force the passed custom zoom level
      if (this.options.initialMapZoom !== defaults.initialMapZoom) {
        self.map.setZoom(this.options.initialMapZoom);
      }
      // set a custom initial center
      if (this.options.initialMapCenter !== defaults.initialMapCenter) {
        self.map.setCenter(new google.maps.LatLng(this.options.initialMapCenter[0], this.options.initialMapCenter[1]));
      }
      // auto-set zoom and position to make all markers fit into the view
      if (this.options.initialMapZoom === defaults.initialMapZoom && this.options.initialMapCenter === defaults.initialMapCenter && this.resultsListGroupKeys.length) {
        self.map.fitBounds(self.totalLatLngBounds);
        boundsChangeListener =
          google.maps.event.addListener(self.map, 'bounds_changed', function(event) {
            if (this.getZoom() === 1) {
              self.map.panTo(new google.maps.LatLng(self.options.worldMapCenter[0], self.options.worldMapCenter[1]));
            }
            google.maps.event.removeListener(boundsChangeListener);
          });
      } else if (!this.resultsListGroupKeys.length) {
        // no results
        self.map.setCenter(new google.maps.LatLng(self.options.worldMapCenter[0], self.options.worldMapCenter[1]));
      }


      // capturing all zoom interactions (double-click, mouse-wheel, slider) 
      // by listening to the zoom_changed event and update the slider accordingly
      google.maps.event.addListener(self.map, 'zoom_changed', function() {
        // if there is an open tooltip bubble - zoom to this
        if (self.tooltipBubble.getMap() && self.tooltipBubble.latLng) {
          //set a flag for all redraw functions
          self.map.hasDeprecatedCenter = true;
          self.map.panTo(self.tooltipBubble.latLng);
        }
        // if there is a custom slider control - update it
        if (typeof self.zoomSlider !== "undefined") {
          self.zoomSlider.slider('value', self.map.getZoom());
        }
      });
      
        google.maps.event.addDomListener(window, "resize", function() {
            if (map.getCenter!=null) {
                var center = map.getCenter();
                google.maps.event.trigger(self.map, "resize");
                map.setCenter(center); 
            }
        });

      // assign a unique identifier for convenient access in every context
      this.element.generateId();
      return this;
    }

  };

  // Define plugin
  $.createPlugin("gmap", eon.plugin.gmap);

  // Controller
  eon.gmaps = (function() {

    // callback function that is triggered by the google maps api after it's fully loaded
    var apiLoaded = function() {
      // when the api is loaded - initialise all map components
      $(".map-canvas").each(function() {
        // pass the data-options attribute
        var options, tabControls, tabPanels, tabSelected
        map = $(this);
        options = map.data("gmap-options") || {};
        map.gmap(options);
        tabControls = $(this).closest(".tabs");
        tabPanels = (tabControls.length) ? tabControls.data("tabs").panels : '';
        // fix a "display:none" IE issue for google maps within tab-controls
        if (tabControls.length) {
          // the invisible tab isn't set to display: none anymore, 
          // thus adding some aria-attributes to assist screenreaders
          tabControls.delegate("li", "mousedown", function(e) {
            tabPanels.attr("aria-hidden", "true");
            tabPanels.eq($(this).index()).removeAttr("aria-hidden");
          });
        }
      });      
    };

    // Use Case: When the user performs a new search or clicks on a link in the pagination/sorting column he should remain on the selected tab.
    // Solution: Add a hash to the appropriate action and/or href attributes.
    var fixUrls = function(hash) {
      // Collect some vars
      var form = $(".company-asset-finder .searchform form"),
        pagination = $("#" + hash).find(".pagination"),
        table = $("#" + hash).find(".list-view table thead"),
        links = pagination.find("a").add(table.find("a"));
      // Extend the action attribute of the form
      if (form.length) {
        form.attr("action", form.attr("action").split("#")[0] + "#" + hash);
      }
      // Fix links in the pagination and table sorting header
      if (links.length) {
        links.each(function() {
          var link = $(this),
            url = link.attr("href");
          // Modify the URL only when it's not absolute and when it's not pointing to a special anchor (only)
          if (/^(#(.+))|((https?|file|ftps?|mailto|javascript|data:image\/[^;]{2,9};):)/i.test(url)) {
            return;
          }
          // Finally: Add hash to the URL
          url = url.split("#")[0] + "#" + hash;
          link.attr("href", url);
        });
      }
    };

    // Initialization of the tabs in the company and asset finder
    var initTabs = function() {
      // Find out if we have affected tabs on the page
      var tabs = $(".company-asset-finder .search-results .tabs");
      if (!tabs.length) {
        return;
      }
      // If the page is already opened with a hash, inherit it to the affected links
      var hash = window.location.hash.substr(1);
      if (hash) {
        fixUrls(hash);
      }
      // Inherit hash to the affected links on tab switch
      tabs.bind("tabsselect", function(event, ui) {
        var hash = $(ui.panel).attr("id");
        if (hash) {
          fixUrls(hash);
        }
      });
    };

    // Initialization of the google maps
    var initMaps = function() {
      var maps = $(".map-canvas");
      // if there is map stuff to do - load the gmaps api dynamically
      if (maps.length) {
        var apiScript, sensor = "sensor=false",
          lang = eon.tools.getLanguage(),
          googleClientID = (eon.config.googleClientID.length) ? "client=" + eon.config.googleClientID : "key=",
          language = (lang) ? ("language=" + lang) : ("language=" + $("html").attr("lang"));
        apiScript = document.createElement("script");
        apiScript.type = "text/javascript";
        apiScript.src = "//maps.google.com/maps/api/js?v=3" + "&" + sensor + "&" + language + "&callback=eon.gmaps.apiLoaded" + "&" + googleClientID;
        document.body.appendChild(apiScript);
      }
    };

    var init = function() {
      initTabs();
      initMaps();      
    };

    return {
      init: init,
      apiLoaded: apiLoaded
    };

  }());

}(window, document, jQuery, eon));

// Bind init function to DOM load
jQuery(eon.gmaps.init);

});
eonfoundation = window.eonfoundation || {};
eonfoundation.geocoding = {};
eonfoundation.geocoding.edit = {
	getLatLong  : function (address,callbackSuccess,callbackError) {
		var geocoder = new google.maps.Geocoder();
		var result = "";
		geocoder.geocode( { 'address': address }, function(results, status) {
			if (status == google.maps.GeocoderStatus.OK) {
				result = results[0].geometry.location;
				callbackSuccess(result);
			} else {
				callbackError(status);
			} 
		});
		return result;
	},
	getAddressData : function(button,event){ 
        var callbackSuccess = function (result){
			var latitudeField=button.findParentByType('panel').getComponent(7);
			var longitudeField=button.findParentByType('panel').getComponent(8);
			latitudeField.setValue(result.lat());
			longitudeField.setValue(result.lng());
		};
		
		var callbackError = function(status){
		 CQ.Ext.MessageBox.alert('Status', eonde.i18n.get('assetdata.dialog.externalinfopanel.errormessage')+status );
		};

		var trim = function(s) {
			var l=0; var r=s.length -1;
			while(l < s.length && s[l] == ' ')
			{   l++; }
			while(r > l && s[r] == ' ')
			{   r-=1;   }
			return s.substring(l, r+1);
		};
    
		var streetField=button.findParentByType('panel').getComponent(2);
		var zipField=button.findParentByType('panel').getComponent(3);
		var cityField=button.findParentByType('panel').getComponent(4);
		var countryField=button.findParentByType('panel').getComponent(5);
		var street = streetField.getValue();
		var zip = zipField.getValue();
		var city = cityField.getValue();
		var country = countryField.getValue();
		var address = trim(street+' '+zip+' '+city+' '+country);

		var IsEmpty = function (StrToCheck) {
		   StrToCheck= StrToCheck.replace(/^s+|s+$/, '');
		   if( StrToCheck.length==0)
			{  return true; }
			  else
		   { return false; }
		};
 
		if (!IsEmpty(address)) {
			this.getLatLong(address,callbackSuccess,callbackError);
		} else {
			CQ.Ext.MessageBox.alert('Status', eonde.i18n.get('assetdata.dialog.externalinfopanel.emptymessage')); 
		}
	}
};
  /*!
  * smarthelp.js
  * This file contains the code for the Smarthelp.
  * 
  * @project   E.ON DE
  * @date      2014-08-04 
  * @author    JWALZOG, SapientNitro <jwalzog@sapient.com>
  * @licensor  E.ON
  * @NOTE
  */
// hide all containers
$('.com-100-smarthelp .nav-bar dd').hide();
// toggle containers on click
var SamsungTablet = new RegExp('SAMSUNG.*Tablet|Galaxy.*Tab|SC-01C|GT-P1000|GT-P1003|GT-P1010|GT-P3105|GT-P6210|GT-P6800|GT-P6810|GT-P7100|GT-P7300|GT-P7310|GT-P7500|GT-P7510|SCH-I800|SCH-I815|SCH-I905|SGH-I957|SGH-I987|SGH-T849|SGH-T859|SGH-T869|SPH-P100|GT-P3100|GT-P3108|GT-P3110|GT-P5100|GT-P5110|GT-P6200|GT-P7320|GT-P7511|GT-N8000|GT-P8510|SGH-I497|SPH-P500|SGH-T779|SCH-I705|SCH-I915|GT-N8013|GT-P3113|GT-P5113|GT-P8110|GT-N8010|GT-N8005|GT-N8020|GT-P1013|GT-P6201|GT-P7501|GT-N5100|GT-N5105|GT-N5110|SHV-E140K|SHV-E140L|SHV-E140S|SHV-E150S|SHV-E230K|SHV-E230L|SHV-E230S|SHW-M180K|SHW-M180L|SHW-M180S|SHW-M180W|SHW-M300W|SHW-M305W|SHW-M380K|SHW-M380S|SHW-M380W|SHW-M430W|SHW-M480K|SHW-M480S|SHW-M480W|SHW-M485W|SHW-M486W|SHW-M500W|GT-I9228|SCH-P739|SCH-I925|GT-I9200|GT-I9205|GT-P5200|GT-P5210|GT-P5210X|SM-T311|SM-T310|SM-T310X|SM-T210|SM-T210R|SM-T211|SM-P600|SM-P601|SM-P605|SM-P900|SM-P901|SM-T217|SM-T217A|SM-T217S|SM-P6000|SM-T3100|SGH-I467|XE500|SM-T110|GT-P5220|GT-I9200X|GT-N5110X|GT-N5120|SM-P905|SM-T111|SM-T2105|SM-T315|SM-T320|SM-T320X|SM-T321|SM-T520|SM-T525|SM-T530NU|SM-T230NU|SM-T330NU|SM-T900|XE500T1C|SM-P605V|SM-P905V|SM-P600X|SM-P900X|SM-T210X|SM-T230|SM-T230X|SM-T325|GT-P7503|SM-T531|SM-T330|SM-T530|SM-T705C|SM-T535|SM-T331|SM-T800');
$('.com-100-smarthelp .nav-bar dt').click(function() {
    if($(window).width() >=768){
        $(this).removeAttr('style');
        $(this).toggleClass('active').delay(500).toggleClass('inactive');
        $('.com-100-smarthelp .nav-bar dt').not($(this)).delay(500).removeClass('active').addClass('inactive');
        if ( $(this).hasClass('active') ) {
            $(this).next('dd').slideDown(0, function(){ 
              $(this).css('overflow','visible');
            });
        } else if ( $(this).hasClass('inactive') ) {
          $(this).next('dd').slideUp(0);
        }
        $('.com-100-smarthelp .nav-bar dd').not($(this).next('dd')).slideUp(0);
        if ($('.com-100-smarthelp .nav-bar dt.inactive').length === $('.com-100-smarthelp .nav-bar dt').length && !$(this).hasClass('active')) {
          $('.com-100-smarthelp .nav-bar dt').delay(0).removeClass();
        }
        if ( $(this).hasClass('active') ) {
          $(this).removeClass('inactive');
        }
    }
    else if($(this).hasClass('service-contact-aps-smarthelp-dt')){

        var $smarthelpTarget
        var $smarthelpUrl;
		var $solarVersion=$('span.versionChange').attr('data-attr');
        if($solarVersion=="true") {
			$smarthelpTarget=$('span.redirectsolarVersionPath').attr('data-attr-target');
            $smarthelpUrl=$('span.redirectsolarVersionPath').attr('data-attr');
        } else {
            $smarthelpTarget=$('span.redirectdefaultVersionPath').attr('data-attr-target');
            $smarthelpUrl=$('span.redirectdefaultVersionPath').attr('data-attr');

        }

		window.open($smarthelpUrl,$smarthelpTarget);
    }
    else if($(this).hasClass('ifaq-dt')){
		var $ifaqTarget=$('span.iFaqViewsportSRedirect').attr('data-attr-target');
        var $ifaqUrl=$('span.iFaqViewsportSRedirect').attr('data-attr');
		window.open($ifaqUrl,$ifaqTarget);
    }
});
/*!
 * solarcalculator
 * Solar Calculator
 * http://www.zeros.ones.de
 * @author Alexander Schenker
 * @version 1.0.0
 */
var ie = (function(){

    var undef,
        v = 3,
        div = document.createElement('div'),
        all = div.getElementsByTagName('i');

    while (
        div.innerHTML = '<!--[if gt IE ' + (++v) + ']><i></i><![endif]-->',
        all[0]
    );

    return v > 4 ? v : undef;
}());


$(document).ready(function() {

   	/*Checking whether current page is solar rechner or not*/
	if ($("#mod-360-solar-rechner").length === 0)
		return ;

	var SolarCalculator = function() {
		var _this = this;

		/*
		* jQuery Objects
		**/

		this.$module = $('.mod-360-solar-rechner')
		this.$solarWrapper = this.$module.find('.solar-wrapper');
		this.$solarSteps = this.$solarWrapper.find('.solar-step');

		this.$roofWidthInput = this.$solarWrapper.find('.roof-width');
		this.$roofLengthInput = this.$solarWrapper.find('.roof-length');

		// width and length of second side if double sided
		this.$secondRoofWidthInput = this.$solarWrapper.find('.roof-width-second');
		this.$secondRoofLengthInput = this.$solarWrapper.find('.roof-length-second');


		this.$step1zip = this.$solarWrapper.find('#step-1-plz');
		this.$step9street = this.$solarWrapper.find('#step-9-street');
		this.$step9nr = this.$solarWrapper.find('#step-9-nr');

		this.$step1errorValid = $('.error-message.valid');
		this.$step1errorMinimum = $('.error-message.minimum');
		
		var authorizationHeaderVal = eonde.Config.serviceURLs.authorization;
        var zipCodesURL = eonde.Config.serviceURLs.zipcodeService;
		var streetsURL = eonde.Config.serviceURLs.streetService;

        var zipsJsonVal = eonde.Config.serviceURLs.jsonZipService;
        
        var rednJsonVal = eonde.Config.serviceURLs.jsonReductionService;
        
		var compensationJsonVal = eonde.Config.serviceURLs.jsonCompensationService;
        
        var solarURL = $('#solar_path').attr('data-attr');
		
		/*
		* Model
		**/
		
		this.totalSteps = 9;
		this.reachedSteps = 1;
		this.currentStep = ko.observable(1);

		this.nextStepLabel = "Nächster Schritt";
		this.lastStepLabel = "Letzter Schritt";


		this.roofDirection = 0;
		this.roofAngle = 0;

		// two roof widths and lengths if two sides of roof are selected
		this.roofWidth = ko.observable(0);
		this.roofLength = ko.observable(0);
		this.roofWidth2 = ko.observable(0);
		this.roofLength2 = ko.observable(0);

		this.roofShadow = false;
		this.roofStyle = 'Bieberschwanz'; // Default Value
		this.storage = false;
		this.zipTemp = ko.observable('');
		this.zipInput = ko.observable('');
		this.zip = ko.observable(''); //F9
		this.userZip = null; 
		this.city = ko.observable('');
		this.street = ko.observable('');
		this.houseNumber = ko.observable('');

		this.roofSurfaceValidated = true;
		this.hasTwoSurfaces = false;

		this.resultInvestment = ko.observable(''); //J7
		this.resultKWP = ko.observable('');  // F15
		this.resultKWH = ko.observable('');	 // 
		this.resultCO2 = ko.observable('');

		
		// Anteil Eigennutzung
		this.ownerOccupationShare = ko.observable(50);	// F13

		//Strompreis
		this.electricityRate = ko.observable(0);	//F31

		//Betreiber (privat / gewerblich)
		this.operator = ko.observable(''); 	//F7

		//Start Datum
		this.startDate = ko.observable(''); 	//F11

		this.rendite = 0; //F19

		
		/* call doGraphCalculation if one of the properties is changed (RENDITE) */

		this.ownerOccupationShare.subscribe(function() {
			if (_this.currentStep() == 8) {
				_this.doGraphCalculation();
			}
		});

		this.electricityRate.subscribe(function() {
			if (_this.currentStep() == 8) {
				_this.doGraphCalculation();
			}
		});

		this.operator.subscribe(function() {
			if (_this.currentStep() == 8) {
				_this.doGraphCalculation();
			}
		});

		this.startDate.subscribe(function() {
			if (_this.currentStep() == 8) {
				_this.doGraphCalculation();
			}
		});

		

	 
		this.dataUrl = {
			'jsonLocation': zipCodesURL + 'clientId=eonde',
			'streetAutocompleteServer': streetsURL +'clientId=eonde',
			'jsonZips': zipsJsonVal,
			'jsonReduction': rednJsonVal,
			'jsonCompensation': compensationJsonVal,
			'urlSubmit': solarURL
		};

		this.objResults = {
			'userReduction': '',
			'userZip': null,
			'estimatedInvestment': 0,
			'kwp': 0,
			'kwh': 0,
			'roofArea': 0
		};

		// history for keeping track of pathway
		this.history = [1];


		this.stepLabels = [
			"Ihre PLZ",
			"Dachwinkel",
			"Dachausrichtung",
			"Dachbelegung",
			"Dachfläche",
			"Dachfläche",
			"Ergebnisprognose",
			"Rendite berechnen",
			"Persönliche Angaben"
		]

		this.dataBase = { 
			'reduction': {}, 
			'zip': {}, 
			'euroPerKwp': {
	           3: 2360,
	           5: 1870,
	           10: 1650,
	           30: 1450,
	           'default': 1370
			},
			'locations': [],
			'streets': [],
			'compensation' : {}
		};


		this.currentStepName = ko.computed(function() {
		 	return _this.stepLabels[_this.currentStep()-1]
		});


		// calculate roof surface from width and length
	   this.roofSurface = ko.computed(function() {
	   	if (!isNaN(this.roofWidth() * this.roofLength()) && (this.roofWidth() * this.roofLength()) > 0) {
	   		_this.roofSurfaceValidated = true;

	   		return this.roofWidth() * this.roofLength() + " qm";
	   	} else {
	   		_this.roofSurfaceValidated = false;

	   		return "Ungültige Eingabe";
	   	}
	   }, this);

	   this.roofSurface.subscribe(function() {
	   		if (_this.roofSurfaceValidated) {
	   			_this.showNextArrow();
	   		} else {
	   			_this.hideNextArrow();
	   		}
	   });


	   // roof surface with two sides
	   this.largeRoofSurface = ko.computed(function() {
	   	if (!isNaN(this.roofWidth() * this.roofLength() + this.roofWidth2() * this.roofLength2()) 
	   		&& 
	   		(this.roofWidth() * this.roofLength() + this.roofWidth2() * this.roofLength2()) > 0) {

	   		_this.roofSurfaceValidated = true;
	   		return this.roofWidth() * this.roofLength() + this.roofWidth2() * this.roofLength2() + " qm";
	   	} else {
	   		_this.roofSurfaceValidated = false;
	   		return "Ungültige Eingabe";
	   	}
	   }, this);

	   this.largeRoofSurface.subscribe(function() {
	   		if (_this.roofSurfaceValidated) {
	   			_this.showNextArrow();
	   		} else {
	   			_this.hideNextArrow();
	   		}
	   });


	   // check if roof width value is valid
	   this.isRoofWidthValid = ko.computed(function() {
	   	// value must be numerical and higher than 0
	   	if (isNaN(_this.roofWidth()) || _this.roofWidth() <= 0) {
	   		_this.$roofWidthInput.addClass('error');
	   		return false;
	   	} else {
	   		_this.$roofWidthInput.removeClass('error');
	   		return true;
	   	}
	   }, this);

	   // check if roof length value is valid
	   this.isRoofLengthValid = ko.computed(function() {
	   	// value must be numerical and higher than 0
	   	if (isNaN(_this.roofLength()) || _this.roofLength() <= 0) {
	   		_this.$roofLengthInput.addClass('error');
	   		return false;
	   	} else {
	   		_this.$roofLengthInput.removeClass('error');
	   		return true;
	   	}
	   }, this); 

	   	   // check if roof width value is valid
	   this.isSecondRoofWidthValid = ko.computed(function() {
	   	// value must be numerical and higher than 0
	   	if (isNaN(_this.roofWidth2()) || _this.roofWidth2() <= 0) {
	   		_this.$secondRoofWidthInput.addClass('error');
	   		return false;
	   	} else {
	   		_this.$secondRoofWidthInput.removeClass('error');
	   		return true;
	   	}
	   }, this);

	   // check if roof length value is valid
	   this.isSecondRoofLengthValid = ko.computed(function() {
	   	// value must be numerical and higher than 0
	   	if (isNaN(_this.roofLength2()) || _this.roofLength2() <= 0) {
	   		_this.$secondRoofLengthInput.addClass('error');
	   		return false;
	   	} else {
	   		_this.$secondRoofLengthInput.removeClass('error');
	   		return true;
	   	}
	   }, this); 


	   // check if street name value is valid
	   var validationTimeout=0;
	   this.isStreetValid = ko.computed(function() {
	   	var flagValidate = false;

	   	if (isNaN(_this.street()) && _this.street().length > 0) {
	   		_this.$step9street.removeClass('error');

	   		var ajaxSettings = {
	   			beforeSend: function(xhr) {	    				
						xhr.setRequestHeader({'Authorization' : authorizationHeaderVal});
					},
					data: { zipCode: _this.zip(), streetName: _this.street() },
					type: "GET",
					dataType: 'json',
					complete: function(dat) {				
										
						data = jQuery.parseJSON( dat.responseText ) || [];	


						_this.dataBase.streets = data;

						_this.$step9street.removeClass('error');
					
						//display result - cities which match zip code
						//flagValidate = _this.populateStreetForm(data, true);
					},
					url: _this.dataUrl.streetAutocompleteServer
	   		}

    			//get data from server here!
    			clearTimeout(validationTimeout);
    			validationTimeout = setTimeout(function(){
					var $request = jQuery.ajax(ajaxSettings);
				}, validationTimeout==0 ? 0 : 250);

	   		return true;
	   	} else {
	   		_this.$step9street.addClass('error');
	   		return false;
	   	}
	 
	   }, this);

	   // check if house number value is valid
	   this.isHouseNumberValid = ko.computed(function() {
	   	if (_this.houseNumber().length > 0) {
	   		_this.$step9nr.removeClass('error');
	   		return true;
	   	} else {
	   		_this.$step9nr.addClass('error');
	   		return false;
	   	}
	   }, this);

	   // don't display error initally
	   var isErrorSet=false;

	   // check if zip code is valid
	    this.isValidZipCode = ko.computed(function() {

	    	// split zipTemp to retreive zipcode and city. set _this.zip() and _this.city()
		 	var values = _this.zipTemp().split(" ");
		 	_this.zip(parseInt(values[0]));
		 	_this.city(values[1]);

		 	// check if zip code is valid
		   	if ((_this.zip().toString().length === 5) && (typeof _this.zip() === "number")) {
		   		_this.$step1errorValid.removeClass('visible');
		   		_this.$step1zip.removeClass('error');
		   		_this.$solarWrapper.find('.solar-arrow.right').removeClass('hidden');
		   		return true;
		   	} else {
		   		if (isErrorSet) {
		   			_this.$step1errorValid.addClass('visible');
			   		_this.$step1zip.addClass('error');
				   	_this.$solarWrapper.find('.solar-arrow.right').addClass('hidden');
				} else {
				   	isErrorSet=true;
				}
		   		
		   		return false;
		   	}
	   }, this).extend({ throttle: 500 }); 

	    // on select from autocomplete 
	    $("#step-1-plz").on( "autocompleteselect", function( event, ui ) {
	    	// set zipTemp on select --> isValidZipCode is being called
	    	_this.zipTemp(ui.item.value);
	    	$("#step-1-plz").blur();
	    });

	    $( "#step-1-plz").on("input", function() {
	    	// check if input length is at least 3, else show error
	    	if ($(this).val().toString().length < 3 && isErrorSet) {
	    		_this.$step1errorMinimum.addClass('visible');
	    		_this.$step1errorValid.removeClass('visible');
		   		_this.$step1zip.addClass('error');
			   	_this.$solarWrapper.find('.solar-arrow.right').addClass('hidden');
	    	} else {
	    		_this.$step1errorMinimum.removeClass('visible');
	    	}
	    });

		this.getLocations = function (searchTerm, callback) {	    	
			$.ajax({
				dataType: "json",
				type : 'GET',
				data: { zipCode: _this.zipInput() },
				url: _this.dataUrl.jsonLocation,
				headers : {'Authorization' : authorizationHeaderVal}				
			}).done(function(data) {
				// temporary data
				var tempObject = {},
					tempData = [];

				// loop through response and create a new object for each entry in cities array
				for (var i = 0; i < data.length; i++) {
					for (var j = 0; j < data[i].cities.length; j++) {
						tempObject = {};
						tempObject.zipCode = data[i].zipCode;
						tempObject.cities = data[i].cities[j];
						tempObject.label = data[i].zipCode + " " + data[i].cities[j];
						tempData.push(tempObject);
					};
				};

				// pass data to callback
				callback(tempData);
			})
			.fail(function() {
				//if ajax request fails, show error
				_this.$step1errorValid.addClass('visible');
				_this.$step1zip.addClass('error');
			   	_this.$solarWrapper.find('.solar-arrow.right').addClass('hidden');
			}); 			
		};

		
		// get data-value attribute of pressed roof button and set variable
		this.setRoofDirection = function(data, event) {
	        _this.roofDirection = event.currentTarget.attributes['data-value'].nodeValue;     

	        // set select class and unselect siblings
	        $(event.currentTarget).parent().siblings().find('a > div').removeClass("selected");
	        $(event.currentTarget).find('div').addClass("selected");



	        if (_this.roofDirection == 270 || _this.roofDirection == 90) {
				this.incrementCurrentStep();
	        } else {
	       		this.jumpToStep(5);
	        }

	       
	   };

	   // set roof cladding (either on both sides or single-sided); get value of pressed button
	   this.setRoofCladding = function(data, event) {
	   		_this.roofCladdingValue = event.currentTarget.attributes['data-value'].nodeValue;

	   		// set select class and unselect siblings
	        $(event.currentTarget).parent().siblings().find('a > div').removeClass("selected");
	        $(event.currentTarget).find('div').addClass("selected");

	   		if (_this.roofCladdingValue == "1") {
	   			_this.hasTwoSurfaces = false;
	   			_this.jumpToStep(5);
	   		} else {
	   			_this.hasTwoSurfaces = true;
	   			_this.jumpToStep(6);
	   		}
	   }

	   // get data-value attribute of pressed roof button and set variable
	   this.setRoofAngle = function(data, event) {
	       _this.roofAngle = event.currentTarget.attributes['data-value'].nodeValue;  
	       // set select class and unselect siblings
	       $(event.currentTarget).parent().siblings().find('a > div').removeClass("selected");
	       $(event.currentTarget).find('div').addClass("selected");

	       if (_this.roofAngle == 0) {
	       		this.jumpToStep(5);
	       } else {
	       		this.incrementCurrentStep();  
	       }
	   };

	   // get values from radio buttons and select-box and set variables
	   this.setRoofShadowAndStyle = function(data, event) { 
	       var $step4 = this.$solarWrapper.find('.solar-step-4'),
	       	radioValue = $step4.find('input[name=stepFourRadios]:checked').val(),
	       	selectedRoofStyle = $step4.find('select option:selected').val();

        	this.roofShadow = radioValue;
        	this.roofStyle = selectedRoofStyle;

	       this.incrementCurrentStep();	
	   };

	   // get values from radio buttons and select-box and set variables
	   this.setStorageAndStartDate = function(data, event) { 
	        var $step5 = this.$solarWrapper.find('.solar-step-5'),
	       	radioValue = $step5.find('input[name=stepFiveRadios]:checked').val(),
	       	selectedStartDate = $step5.find('select option:selected').val();

        	this.storage = radioValue;
        	this.startDate = selectedStartDate;

	       this.incrementCurrentStep();
	   };

	   // request offer
	   this.requestOffer = function() {
		   	this.determineUserZip();

		   	if (this.isValidZipCode() && this.city().length > 0) {
				this.calculateResult();
		   	}			
	   }

	   	//increment current step variable +1
	   	this.incrementCurrentStep = function() {
	   		// step 5 and 6 are for roofValidation -> needs to be validated
		   	if (_this.currentStep() != 5 && _this.currentStep() != 6 || (_this.currentStep() && _this.roofSurfaceValidated === true)) {
		   		if (_this.currentStep() < _this.totalSteps) {

		   			// skip step 6 if 5
		   			if (_this.currentStep() == 5) {
		   				_this.currentStep(_this.currentStep() + 2);
		   			} else {
						_this.currentStep(_this.currentStep() + 1);
		   			}
				}


				if (_this.currentStep() == 7) {
					_this.requestOffer();
				}

				this.goToCurrentStep();
				this.history.push(_this.currentStep());


				this.handleModuleNavigation();
		   	}
		}


		this.prepareForOffer = function() {
			this.jumpToStep(9);
		}


		//jump to step
		this.jumpToStep = function(index) {
			this.currentStep(index);

			this.goToCurrentStep();
			this.history.push(index);

			this.handleModuleNavigation();
		}

		//decrement current step variable -1
		this.decrementCurrentStep = function() {
			if (_this.currentStep() > 1) {
				_this.history.pop();

				_this.currentStep(_this.history[_this.history.length-1]);
			}

			this.goToCurrentStep();

			this.handleModuleNavigation();
		}

		//jump to current active step
		this.goToCurrentStep = function() {

			this.$solarSteps.each(function() {
				if (parseInt($(this).attr('data-step'),10) === _this.currentStep()) {
					$(this).removeClass('hidden');
					$(this).siblings('.solar-step').addClass('hidden');
				}
			});
		};

		// handle module navigation behaviour
		this.handleModuleNavigation = function() {	
 
			if (this.currentStep() >= this.reachedSteps) {
				this.reachedSteps = this.currentStep();

				this.$solarWrapper.find('.solar-arrow.right').addClass('hidden');
				this.$solarWrapper.find('.solar-arrow.left').removeClass('hidden');
			} else if (this.currentStep() < this.reachedSteps) {
				this.$solarWrapper.find('.solar-arrow.right').removeClass('hidden');
			}

			if (this.currentStep() === 1) {
				this.$solarWrapper.find('.solar-arrow.left').addClass('hidden');
			}
			
			if (this.currentStep() > 1 ) {
				this.$solarWrapper.find('.solar-arrow.left').removeClass('hidden');
			};

			// show next button by default
			if (this.currentStep() == 7 ) {
				this.$solarWrapper.find('.solar-arrow.right').removeClass('hidden');
			};

			//show graph 
			if (this.currentStep() == 8 ) {
				this.doGraphCalculation();
			}

			var labelNext = this.stepLabels[this.currentStep()],
				labelLast = this.stepLabels[this.history[this.history.length-2]-1];

			if (this.currentStep() == 5) {
				labelNext = this.stepLabels[this.currentStep()+1];
			}	

			if (this.currentStep() == 6) {
				labelLast = this.stepLabels[this.currentStep()-3];
			}

			this.$solarWrapper.find('.solar-arrow.right p').text(labelNext);
			this.$solarWrapper.find('.solar-arrow.left p').text(labelLast);


		};

		this.showNextArrow = function() {
			this.$solarWrapper.find('.solar-arrow.right').removeClass('hidden');
		};

		this.hideNextArrow = function() {
			this.$solarWrapper.find('.solar-arrow.right').addClass('hidden');
		};

		
		//generate date picker entries
		this.createDateSelection = function() {
			var now = new Date(),
	           months = new Array("Januar", "Februar", "M&auml;rz", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"),
				$dateSelect = $('.solar-step-8 select.start-date');
			
			$dateSelect.empty();
			var startMonth = now.getMonth();
	       for(var i = now.getFullYear(); i <= now.getFullYear() + 1; i++) {
	           for(var j = startMonth; j < 12; j++) {
	               var monthNumber = (j + 1),
	                   monthString = (monthNumber + "").length === 1 ? "0" + monthNumber : monthNumber;

	               var optionElement = '<option value="01.' + monthString+ '.' + i + '"' + (now.getMonth() === j && now.getFullYear() === i ? ' selected="selected"' : '') + '>' + months[j] + ' ' + i + '</option>';
	               $dateSelect.append(optionElement);
	           }
	           
	           startMonth = 0;
	       }
		};		


		this.determineUserZip = function() {
		   	var _this = this;
		   	//manual user input for zip
		   	var zipCode = this.zip();


			//zip object (for calculation) - depending on user input
	        _this.objResults.userZip = null;
	       
	        if (zipCode.toString().length >= 4) {
				//if entered zip code is valid - look up zip in list     
     
	            jQuery(_this.dataBase.zip).each(function() {
	                var zip     = this,
	               	range   = zip.range.split("-");

	                if (zipCode >= parseInt(range[0], 10) 
	                    && zipCode <= parseInt(range[1], 10)
	                ) {
	                	//set zip for user
	                    _this.objResults.userZip = zip;
	                }
	            });
	       }
	   };		

	   
	   this.getStreets = function (searchTerm, callback) {	    	
			$.ajax({
				dataType: "json",
				type : 'GET',
				data: { zipCode: _this.zip(), streetName: _this.street() },
				url:  _this.dataUrl.streetAutocompleteServer,
				headers : {'Authorization' : authorizationHeaderVal}				
			}).done(callback); 			
		};



	   //get city for entered zip code
	   this.populateLocationForm = function(locations, replaceSelect) {
	   	var elementId = '#step-1-place',
	   		success = false;
				
	       var $locationForm = jQuery(elementId),            
	           options = [];

	       if (replaceSelect === null) replaceSelect = false;
	       		
	       if (locations.length > 0) {
	           if (locations.length > 1) {
	           	//there were more than one city found - display select box
	           	if(!jQuery(elementId).is('select')) {
		               for (var index = 0, len = locations.length; index < len; ++index) {
							options.push('<option>' + locations[index] + '</option>');
		               }
		               
		               //new
		               jQuery(elementId).parent().find('.ui-selectmenu-dropdown').remove();
		               
		               //create select field
						$selectForm = jQuery('<select data-bind="value: city">').attr('name', $locationForm.attr('name'))
		                                           	.attr('id', $locationForm.attr('id'))
		                                           	.attr('class', 'plz-select col-xs-12 col-sm-3'),                
		               $selectForm.append(options.join("\n"));  
		               
		               //replace input field with select field            
		               $locationForm.replaceWith($selectForm);
		               
		               //create event
		               $selectForm.bind('change', function(event) {
		               	//_this.selectHandler($(event.target));
		               });
					}
	           } else {
	           	//
	           	if (!jQuery(elementId).is('input')) {

	           		$inputField = "<input type='text' disabled='' placeholder='' data-bind='value: city' id='step-1-place' class='col-xs-12 col-sm-3'>";

	           		
	           		$locationForm.replaceWith($inputField);
	           		$locationForm = jQuery(elementId);
	           		$locationForm.val(locations[0]);

	           	}
	           	//there was just one city found for entered zip code - use input field
	               $locationForm.val(locations[0]);
	           }
	           
	           _this.city(locations[0]);
	           success = true;
	       } else {
		   	//there was no valid zip code entered - remove previous city
		   	if(!jQuery(elementId).is('input')) {
					//replace select field with input field
		       	jQuery(elementId).find('option').remove();
		       	jQuery(elementId).unbind();
		       	
		       	//new
		       	jQuery(elementId).parent().find('.ui-selectmenu-dropdown').remove();
		       	
		       	$inputForm = jQuery('<input data-bind="value: city">').attr('name', $locationForm.attr('name'))
		                                         .attr('id', $locationForm.attr('id'))
		                                         .attr('value', '')
		                                         .attr('disabled', 'disabled');
		                                         
					$locationForm.replaceWith($inputForm);
		           	
		   	} else {
		   		//if city field is still an input field - remove text
		   		jQuery(elementId).val('');
		   	} 
		   	
		   	_this.city('');  

		   	success = false;  
	       }

	       this.showNextArrow();
	       
	       return success;
	   };

		//calculate results
	   this.calculateResult = function() {
	   		var roofArea = 0; 

	   		// depending on roof cladding (single or double) take roofSurface() or largeRoofSurface()
			if (this.hasTwoSurfaces) {
				roofArea = parseInt(this.largeRoofSurface().replace('qm', '')); 
			} else {
				roofArea = parseInt(this.roofSurface().replace('qm', '')); 
			}
			
			
	       var kwp = parseFloat(this.numberFormat(roofArea / ((this.roofAngle > 1) ? 8 : 25), 2, '.', '')),
	            investment = kwp * this.getEuroPerKwp(kwp),
	            kwh = kwp * this.objResults.userZip.kwhPerKwp * (1 - (this.objResults.userReduction / 100)) * (1 - (this.roofShadow ? 0.1 : 0));
	            co2 = kwh * 0.54;

			//result values (for form submit)
	        this.objResults.investment = Math.round(this.numberFormat(investment, 2, '.', ''));
	        this.objResults.kwp = this.numberFormat(kwp, 2, '.', '');
	        this.objResults.kwh = this.numberFormat(kwh, 2, '.', '');
	        this.objResults.co2 = this.numberFormat(co2, 2, '.', '');

           	this.resultInvestment( this.objResults.investment + " EUR");
			this.resultKWP( this.objResults.kwp + " kWp");
			this.resultKWH( this.objResults.kwh + " kWh");
			this.resultCO2( this.objResults.co2 + " kg");

	       
			//this.submitForm();
		};	
	
	   this.getEuroPerKwp = function(kwp) {
	       var part,
	       	euroPerKwp = this.dataBase.euroPerKwp;
	       	
	       for (part in euroPerKwp) {
	           if (kwp < part) {
	               return euroPerKwp[part];
	           }
	       }

	       return euroPerKwp['default'];
	   }; 	

		this.numberFormat = function(number, decimals, dec_point, thousands_sep) {
	       var exponent = "",
	           numberstr = number.toString(),
	           eindex = numberstr.indexOf("e");

	       if (eindex > -1) {
	           exponent = numberstr.substring(eindex);
	           number = parseFloat(numberstr.substring(0, eindex));
	       }

	       if (decimals !== null) {
	           var temp = Math.pow(10, decimals);
	           number = Math.round(number * temp) / temp;
	       }
	       var sign = number < 0 ? "-" : "",
	           integer = (number > 0 ? Math.floor(number) : Math.abs(Math.ceil(number))).toString();

	       var fractional = number.toString().substring(integer.length + sign.length);

	       dec_point = dec_point !== null ? dec_point : ".";
	       fractional = decimals !== null && decimals > 0 || fractional.length > 1 ? (dec_point + fractional.substring(1)) : "";
	       if (decimals !== null && decimals > 0) {
	           for (i = fractional.length - 1, z = decimals; i < z; ++i)
	           fractional += "0";
	       }

	       thousands_sep = (thousands_sep != dec_point || fractional.length === 0) ? thousands_sep : null;
	       if (thousands_sep !== null && thousands_sep !== "") {
	           for (i = integer.length - 3; i > 0; i -= 3)
	           integer = integer.substring(0, i) + thousands_sep + integer.substring(i);
	       }

	       return sign + integer + fractional + exponent;
	   };

	   //submit values of calculator
		this.submitForm = function() {	
			
			var postData = {
				"zip": this.zip(),
				"streetObject": this.street(),
				"housenumberObject": this.houseNumber(),
				"lengthA": this.roofLength(),
				"lengthB": this.roofWidth(),
				"storage": this.storage,
				"cityObject": this.city(),
				"date": this.startDate(), 
				"firring": this.roofShadow,
				"styleOfRoof": this.roofStyle,
				"directionSelect": this.roofDirection,
				"direction": this.roofDirection,
				"downGradeSelect": this.roofAngle,
				"downGrade": this.roofAngle,
				"output": this.objResults.kwp,
				"estimatedInvestment": this.objResults.investment,
				"roofage": this.roofWidth() * this.roofLength()
			};
			
			var formUrl = this.dataUrl.urlSubmit + "?";

			for (var property in postData) {
				formUrl += property +'='+ postData[property] + '&'; 
			}

			// remove last '&'
			formUrl = formUrl.substring(0, formUrl.length-1);
			window.location.href = formUrl;
		};

    	//load json data
	    this.initCalculator = function() {
	   	 jQuery.getJSON(_this.dataUrl.jsonZips, function (data) {
				_this.dataBase.zip = data.zips;

			jQuery.getJSON(_this.dataUrl.jsonReduction, function (data) {
				_this.dataBase.reduction = data.reductions;    

				jQuery.getJSON(_this.dataUrl.jsonCompensation, function (data) {
					_this.dataBase.compensation = data.compensation;
					_this.electricityRate(data.electricityRate);
				});

			});

	   	 });	
	    }

	  
	    this.doGraphCalculation = function() {

	   		calculate(
		   			this.startDate()
		   			, this.operator()
		   			, this.electricityRate()
		   			, this.ownerOccupationShare()
		   			, this.zip().toString()
		   			, this.roofWidth() * this.roofLength() + this.roofWidth2() * this.roofLength2()
		   			, this.dataBase.compensation
	   			);

	   		afterCalculation();
	    }
	   

	    this.initCalculator();
		this.handleModuleNavigation();
		this.createDateSelection();
	};

	if($("#mod-360-solar-rechner").length > 0)
		ko.applyBindings(new SolarCalculator(), document.getElementById("mod-360-solar-rechner"))

});

function getEuroPerKwp(kwp) {
    var part;
    for (part in euroPerKwp) {
        if (kwp < part) {
        return euroPerKwp[part];
        }
    }

    return euroPerKwp['default'];
}

var euroPerKwp;

var inbetriebnahme_monat;
var inbetriebnahme_jahr;

var F7;
var F9;
var F13;
var J7;
var J13;

var F31;
var F32;
var F33;
var F34;
var F35;

var J23;
var J24;
var J25;

var J31;
var J32;
var J33;
var J37;

var J9;
var J11;

var solarErtrag;
var regSolarErtrag = {};


var FX24;
var F24;
var F25;
var F26;
var F27;
var F23;

var ergebnis;


/**
 * Funktion zum Auslesen der Flash Variablen.
 *
 * 1 Parameter = Kurve
 *
 *    ks = Kontostand
 *    js = Jahresergebnis nach Steuern
 *
 * Beispiel:
 *
 * array = getFlashVars('js');    // Gibt das Array f&uuml;r Eigenfinanzierung, Jahresergebnis
 *
 */
function getFlashVars( type) {
  returnData = new Array();

  x = 0;
  for (i=0; i<=20; i++) {

    var val;

    if (type == 'ks') {

      val = ergebnis[i].kontostand;
    } else if (type == 'js') {
      val = ergebnis[i].jahresergebnis;
    } else {
      alert("getFlashVars() - Unbekannter zweiter Parameter!");
      return;
    }

    returnData[x] = val;
    x++;

  }
  return returnData;

}





function resetForm() {



}

function init() {
}


function hideResults() {
}


function calculate(startDate, operator, electricityRate, occupationShare, plz, flaeche, compensationRates) {



  datearr = startDate.split("-");

  inbetriebnahme_monat = parseInt(datearr[0],10);
  inbetriebnahme_jahr = datearr[1];


  F7 = operator;
  J31 = inbetriebnahme_jahr;
  J32 = inbetriebnahme_monat;



  // Date Diff to 1.4.2012
  J37 = 0;
  if (J31 == 2012 && J32 > 4) {
    J37 = J32 - 4;
  } else if (J31 == 2013) {
    J37 = 8 + J32;
  } else {
    J37 = 8 + ((J31 - 2013)*12) + J32;
  }


  F31 = electricityRate.toString();
  F13 = occupationShare / 100;

  F9 = plz;

 


  // Set Anlagenleistung
  F15 = flaeche / 8;


   bereich = "gk";

        euroPerKwp = {
            3: 2360,
            5: 1870,
            10: 1650,
            30: 1450,
            'default': 1370
        };


   F15 = Math.round(F15*100,2) / 100;
   J7 = F15 * getEuroPerKwp(F15);

  doIt(compensationRates);

    var rendite = Round2(ergebnis[30].ikv * 100),
        kapitalWert = Math.round(ergebnis[30].kapitalwert_jahr),
        kosten = J7,
        leistungen = F15;

      renderGraph(kosten, leistungen, rendite, kapitalWert);
}


var renderGraph = function(kosten, leistungen, rendite, kapitalwert) {
    
    // if canvas available, draw html5 chart
    if ($('canvas').length) {
      var graph = new eon.Graph.View();
      graph.clear();
      graph.init();
      graph.update(kosten, leistungen, rendite, kapitalwert);
    } else {
      var    renditeElement = document.querySelector('.rendite'),
        kapitalwertElement = document.querySelector('.kapitalwert');

      renditeElement.innerHTML = eon.Utils.numberFormat(rendite, 2, ',', '.');
      kapitalwertElement.innerHTML = eon.Utils.numberFormat(kapitalwert, 2, ',', '.');
    }
   
}


function doIt(compensationRates) {
    F32 = 0.06;


    F33 = 0.19;         // MwSt-Satz (19% bzw. 0%)
    F34 = 0.02;         // Inflationsrate
    F35 = 0.04;         // Zinssatz f�r Barwertermittlung (Diskontsatz)

      // Kosten der PV-Anlage
    J23 = 0;            // Vorlaufkosten
    J24 = 0.015;            // Laufende Kosten
    J25 = 0.003;            // Ertragsminderung pro Jahr

      // Daten der PV-Anlage
    //J31 = 2012;
    //J32 = 5;
      //J33 = 0.815500;// calculation below     // Solarertrag Restjahr der Inbetriebnahme
    //J37 = 5;  // FIX ME   // Monate seit Inbetriebnahme

      // Auftragsdaten (2)
    J9 = J7 * (1+ F33);     // Kosten der Anlage (inkl. MwSt.)
    J11 = J7 / F15;     // Kosten pro kWp

      // Solarertrag
    solarErtrag = new Array();
      solarErtrag[1]={};
      solarErtrag[1].b = 0.02;
      solarErtrag[1].d = 1;
      solarErtrag[2]={};
      solarErtrag[2].b = 0.039;
      solarErtrag[2].d = 0.98;
      solarErtrag[3]={};
      solarErtrag[3].b = 0.07;
      solarErtrag[3].d = 0.941;

      solarErtrag[4]={};
      solarErtrag[4].b = 0.111;
      solarErtrag[4].d = 0.871;

      solarErtrag[5]={};
      solarErtrag[5].b = 0.146;
      solarErtrag[5].d = 0.76;

      solarErtrag[6]={};
      solarErtrag[6].b = 0.153;
      solarErtrag[6].d = 0.614;

      solarErtrag[7]={};
      solarErtrag[7].b = 0.154;
      solarErtrag[7].d = 0.461;

      solarErtrag[8]={};
      solarErtrag[8].b = 0.134;
      solarErtrag[8].d = 0.307;

      solarErtrag[9]={};
      solarErtrag[9].b = 0.085;
      solarErtrag[9].d = 0.173;

      solarErtrag[10]={};
      solarErtrag[10].b = 0.049;
      solarErtrag[10].d = 0.088;

      solarErtrag[11]={};
      solarErtrag[11].b = 0.023;
      solarErtrag[11].d = 0.039;

      solarErtrag[12]={};
      solarErtrag[12].b = 0.016;
      solarErtrag[12].d = 0.016;


      //    anteiliger Solarertrag im Jahr der Inbetriebnahme
      n = inbetriebnahme_monat+1;
      if (inbetriebnahme_monat+1 == 13) {
        n = 12;
      }
    J33 = (solarErtrag[J32].d + solarErtrag[n].d) / 2;

    // Reg Solar Ertrag
    regSolarErtrag["01"] = 935;
    regSolarErtrag["02"] = 909;
    regSolarErtrag["03"] = 927;
    regSolarErtrag["04"] = 964;
    regSolarErtrag["06"] = 1015;
    regSolarErtrag["07"] = 959;
    regSolarErtrag["08"] = 1013;
    regSolarErtrag["09"] = 992;
    regSolarErtrag["10"] = 965;
    regSolarErtrag["11"] = 966;
    regSolarErtrag["12"] = 967;
    regSolarErtrag["13"] = 968;
    regSolarErtrag["14"] = 908;
    regSolarErtrag["15"] = 923;
    regSolarErtrag["16"] = 1011;
    regSolarErtrag["17"] = 955;
    regSolarErtrag["18"] = 938;
    regSolarErtrag["19"] = 918;
    regSolarErtrag["20"] = 904;
    regSolarErtrag["21"] = 904;
    regSolarErtrag["22"] = 904;
    regSolarErtrag["23"] = 882;
    regSolarErtrag["24"] = 873;
    regSolarErtrag["25"] = 969;
    regSolarErtrag["26"] = 947;
    regSolarErtrag["27"] = 900;
    regSolarErtrag["28"] = 904;
    regSolarErtrag["29"] = 872;
    regSolarErtrag["30"] = 930;
    regSolarErtrag["31"] = 879;
    regSolarErtrag["32"] = 970;
    regSolarErtrag["33"] = 970;
    regSolarErtrag["34"] = 928;
    regSolarErtrag["35"] = 915;
    regSolarErtrag["36"] = 918;
    regSolarErtrag["37"] = 904;
    regSolarErtrag["38"] = 910;
    regSolarErtrag["39"] = 948;
    regSolarErtrag["40"] = 906;
    regSolarErtrag["41"] = 908;
    regSolarErtrag["42"] = 908;
    regSolarErtrag["44"] = 911;
    regSolarErtrag["45"] = 908;
    regSolarErtrag["46"] = 908;
    regSolarErtrag["47"] = 908;
    regSolarErtrag["48"] = 882;
    regSolarErtrag["49"] = 882;
    regSolarErtrag["50"] = 920;
    regSolarErtrag["51"] = 915;
    regSolarErtrag["52"] = 896;
    regSolarErtrag["53"] = 888;
    regSolarErtrag["54"] = 905;
    regSolarErtrag["55"] = 929;
    regSolarErtrag["56"] = 943;
    regSolarErtrag["57"] = 915;
    regSolarErtrag["58"] = 915;
    regSolarErtrag["59"] = 915;
    regSolarErtrag["60"] = 969;
    regSolarErtrag["61"] = 913;
    regSolarErtrag["63"] = 934;
    regSolarErtrag["64"] = 942;
    regSolarErtrag["65"] = 912;
    regSolarErtrag["66"] = 935;
    regSolarErtrag["67"] = 936;
    regSolarErtrag["68"] = 974;
    regSolarErtrag["70"] = 1026;
    regSolarErtrag["71"] = 984;
    regSolarErtrag["72"] = 958;
    regSolarErtrag["73"] = 980;
    regSolarErtrag["74"] = 968;
    regSolarErtrag["75"] = 941;
    regSolarErtrag["76"] = 950;
    regSolarErtrag["77"] = 1018;
    regSolarErtrag["78"] = 1007;
    regSolarErtrag["79"] = 1062;
    regSolarErtrag["80"] = 1087;
    regSolarErtrag["81"] = 1087;
    regSolarErtrag["82"] = 1038;
    regSolarErtrag["83"] = 1015;
    regSolarErtrag["84"] = 1000;
    regSolarErtrag["85"] = 998;
    regSolarErtrag["86"] = 1050;
    regSolarErtrag["87"] = 1098;
    regSolarErtrag["88"] = 1023;
    regSolarErtrag["89"] = 1056;
    regSolarErtrag["90"] = 990;
    regSolarErtrag["91"] = 962;
    regSolarErtrag["92"] = 998;
    regSolarErtrag["93"] = 1018;
    regSolarErtrag["94"] = 1020;
    regSolarErtrag["95"] = 909;
    regSolarErtrag["96"] = 950;
    regSolarErtrag["97"] = 961;
    regSolarErtrag["98"] = 934;
    regSolarErtrag["99"] = 1079;

    if (F9 == "") { F9 = "80"; }

    J13 = regSolarErtrag[F9.substr(0,2)];

    // Einspeisevergütung Berechnung
    var compensationRateProduct = (Math.pow((1-compensationRates[0]),6) 
                                  * Math.pow((1-compensationRates[1]),3)
                                  * Math.pow((1-compensationRates[2]),3)
                                  * Math.pow((1-compensationRates[3]),3)
                                  * Math.pow((1-compensationRates[4]),3)
                                  * Math.pow((1-compensationRates[5]),3)
                                  * Math.pow((1-compensationRates[6]),3)
                                  * Math.pow((1-compensationRates[7]),1)
                                  );

    F24 = 19.5 * compensationRateProduct;
    F25 = 18.5 * compensationRateProduct;
    F26 = 16.5 * compensationRateProduct;
    F27 = 13.5 * compensationRateProduct;

 

    F24 = Math.round(F24 * 100) / 100;
    F25 = Math.round(F25 * 100) / 100;
    F26 = Math.round(F26 * 100) / 100;
    F27 = Math.round(F27 * 100) / 100;



        if (F15<=10) {
            F23 = (F15 * F24);
        } else {
            if (F15 > 10 && F15 <= 40) {
                F23 = (10*F24)+((F15-10)*F25);
            } else {
                if (F15>40 && F15<=1000) {
                    F23 = (10*F24)+(30*F25)+((F15-40)*F26);
                } else {
                    if (F15>1000) {
                        F23 = (10*F24)+(30*F25)+(960*F26)+((F15-1000)*F27);

                    } else {
                        F23 = 0;
                    }
                }
            }
        }
        F23 = F23 / F15;


    if (F7 == "Gesellschaft") {
        doItGesellschaft();
    } else if (F7 == "Privatperson") {
        doItPrivat();
    } else {
        alert("missing f7"+F7);
    }

}


function doItPrivat() {

      /**
       * BEGIN BERECHNUNG Privat
       */
       ergebnis = new Array();

       ergebnis[0] = {};
       ergebnis[0].jahr = 0;
       ergebnis[0].real_jahr = J31;
       ergebnis[0].sm_erzeug = J33*J13*F15;
       ergebnis[0].sm_eigen = ergebnis[0].sm_erzeug * F13;
       ergebnis[0].sm_einspeis = 0;

        /*

        =WENN(DATUM(B8;1;1)<DATUM(2014;1;1);
            D8*(1-Parameter!$F$13);
            WENN(UND(Parameter!$F$15>10;Parameter!$F$13<=0,1);
                D8*(0,9);
                D8*(1-Parameter!$F$13)))

        */

        if (ergebnis[0].real_jahr < 2014) {
            ergebnis[0].sm_einspeis = ergebnis[0].sm_erzeug * (1-F13);
        } else {
            if (F15>10 && F13<= 0.1) {
                ergebnis[0].sm_einspeis = ergebnis[0].sm_erzeug * (0.9);
            } else {
                ergebnis[0].sm_einspeis = ergebnis[0].sm_erzeug * (1-F13);
            }
        }


      ergebnis[0].sm_ungenutzt = 0;

        /*
        =WENN(DATUM(B8;1;1)<DATUM(2014;1;1);
            0;
            WENN(UND(Parameter!$F$15>10;Parameter!$F$13<0,1);
                (D8*(0,1-Parameter!$F$13));
                0
            )
        )
        */
        if (ergebnis[0].real_jahr < 2014) {
            ergebnis[0].sm_ungenutzt = 0;
        } else {
            if (F15>10 && F13<0.1) {
                ergebnis[0].sm_ungenutzt = (ergebnis[0].sm_erzeug*(0.1-F13));
            } else {
                ergebnis[0].sm_ungenutzt = 0;
            }
        }

      ergebnis[0].en_einspeisung = F23*ergebnis[0].sm_einspeis / 100;
      ergebnis[0].en_eigennutz = ergebnis[0].sm_eigen * (F31/100*Math.pow(1+F32,ergebnis[0].jahr))*(1+F33);
      ergebnis[0].verlust_ungenutzt = ergebnis[0].sm_ungenutzt*(F31/100*Math.pow(1+F32,ergebnis[0].jahr))*(1+F33);
      ergebnis[0].laufende_kosten = -J24*J9*(13-J32)/12-J23*(1+F33);
      ergebnis[0].jahresergebnis = -J9 + ergebnis[0].en_einspeisung + ergebnis[0].en_eigennutz + ergebnis[0].laufende_kosten;
      ergebnis[0].kapitalwert_jahr = ergebnis[0].jahresergebnis;
      ergebnis[0].kapitalwert_kumuliert = ergebnis[0].kapitalwert_jahr;
      ergebnis[0].kontostand = ergebnis[0].jahresergebnis;

      // Summenzeile
      ergebnis[30] = {};
      ergebnis[30].kapitalwert_jahr = ergebnis[0].kapitalwert_jahr;


      for (i=1; i<=20; i++) {

        ergebnis[i] = {};
        ergebnis[i].jahr = i;
            ergebnis[i].real_jahr = parseInt(ergebnis[i-1].real_jahr) + 1 ;

        ergebnis[i].sm_erzeug = J13*F15*Math.pow(1-J25,ergebnis[i].jahr);
        ergebnis[i].sm_eigen = ergebnis[i].sm_erzeug * F13;
        ergebnis[i].sm_einspeis = 0;

        // Ident to Jahr 0
        if (ergebnis[i].real_jahr < 2014) {
            ergebnis[i].sm_einspeis = ergebnis[i].sm_erzeug * (1-F13);
        } else {
            if (F15>10 && F13<= 0.1) {
                ergebnis[i].sm_einspeis = ergebnis[i].sm_erzeug * (0.9);
            } else {
                ergebnis[i].sm_einspeis = ergebnis[i].sm_erzeug * (1-F13);
            }
        }


        ergebnis[i].sm_ungenutzt = 0;

        // Ident to Jahr 0
        if (ergebnis[i].real_jahr < 2014) {
            ergebnis[i].sm_ungenutzt = 0;
        } else {
            if (F15>10 && F13<0.1) {
                ergebnis[i].sm_ungenutzt = (ergebnis[i].sm_erzeug * (0.1-F13));
            } else {
                ergebnis[i].sm_ungenutzt = 0;
            }
        }

        ergebnis[i].en_einspeisung = F23*ergebnis[i].sm_einspeis / 100;
        ergebnis[i].en_eigennutz = ergebnis[i].sm_eigen * (F31/100*Math.pow(1+F32,ergebnis[i].jahr))*(1+F33);
        ergebnis[i].verlust_ungenutzt = ergebnis[0].sm_ungenutzt*(F31/100*Math.pow(1+F32,ergebnis[i].jahr))*(1+F33);

        if (ergebnis[i].jahr == 1) {
            ergebnis[i].laufende_kosten = -J24*J9*(1+F34);
        } else {
            ergebnis[i].laufende_kosten = ergebnis[i-1].laufende_kosten * (1+F34);
        }

        ergebnis[i].jahresergebnis = ergebnis[i].en_einspeisung + ergebnis[i].en_eigennutz + ergebnis[i].laufende_kosten;

        ergebnis[i].kapitalwert_jahr = ergebnis[i].jahresergebnis * Math.pow(1+F35,-ergebnis[i].jahr);
        ergebnis[30].kapitalwert_jahr += ergebnis[i].kapitalwert_jahr; // Sum

        ergebnis[i].kapitalwert_kumuliert = ergebnis[i-1].kapitalwert_kumuliert + ergebnis[i].kapitalwert_jahr;

        ergebnis[i].kontostand = ergebnis[i-1].kontostand + ergebnis[i].jahresergebnis;

    }

    ikvPrivat = new Array();
    for (i=0; i<=20; i++) {
           ikvPrivat[i] = ergebnis[i].jahresergebnis;
    }

    ergebnis[30].ikv = ikv(ikvPrivat, 0.1);

}

function doItGesellschaft() {

      /**
       * BEGIN BERECHNUNG Gesellschaft
       */

       ergebnis = new Array();
       ergebnis[0] = {};
       ergebnis[0].jahr = 0;
       ergebnis[0].real_jahr = J31;
       ergebnis[0].sm_erzeug = J33*J13*F15;
       ergebnis[0].sm_eigen = ergebnis[0].sm_erzeug * F13;
       ergebnis[0].sm_einspeis = 0;

        /*

        =WENN(DATUM(B8;1;1)<DATUM(2014;1;1);
            D8*(1-Parameter!$F$13);
            WENN(UND(Parameter!$F$15>10;Parameter!$F$13<=0,1);
                D8*(0,9);
                D8*(1-Parameter!$F$13)))

        */

        if (ergebnis[0].real_jahr < 2014) {
            ergebnis[0].sm_einspeis = ergebnis[0].sm_erzeug * (1-F13);
        } else {
            if (F15>10 && F13<= 0.1) {
                ergebnis[0].sm_einspeis = ergebnis[0].sm_erzeug * (0.9);
            } else {
                ergebnis[0].sm_einspeis = ergebnis[0].sm_erzeug * (1-F13);
            }
        }


      ergebnis[0].sm_ungenutzt = 0;

        /*
        =WENN(DATUM(B8;1;1)<DATUM(2014;1;1);
            0;
            WENN(UND(Parameter!$F$15>10;Parameter!$F$13<0,1);
                (D8*(0,1-Parameter!$F$13));
                0
            )
        )
        */
        if (ergebnis[0].real_jahr < 2014) {
            ergebnis[0].sm_ungenutzt = 0;
        } else {
            if (F15>10 && F13<0.1) {
                ergebnis[0].sm_ungenutzt = (ergebnis[0].sm_erzeug*(0.1-F13));
            } else {
                ergebnis[0].sm_ungenutzt = 0;
            }
        }



      ergebnis[0].en_einspeisung = F23*ergebnis[0].sm_einspeis / 100;
      ergebnis[0].en_eigennutz = ergebnis[0].sm_eigen * (F31/100*Math.pow(1+F32,ergebnis[0].jahr)); // Alt
      ergebnis[0].verlust_ungenutzt = ergebnis[0].sm_ungenutzt*(F31/100*Math.pow(1+F32,ergebnis[0].jahr));
      ergebnis[0].laufende_kosten = -J24*J7*(13-J32)/12-J23;


      ergebnis[0].jahresergebnis =  -J9+ergebnis[0].en_einspeisung+ergebnis[0].en_eigennutz+ ergebnis[0].laufende_kosten +J7*F33

     // ergebnis[0].jahresergebnis = -J9 + ergebnis[0].en_einspeisung + ergebnis[0].en_eigennutz + ergebnis[0].laufende_kosten*F33;
      ergebnis[0].kapitalwert_jahr = ergebnis[0].jahresergebnis;
      ergebnis[0].kapitalwert_kumuliert = ergebnis[0].kapitalwert_jahr;
      ergebnis[0].kontostand = ergebnis[0].jahresergebnis;


      // Summenzeile
      ergebnis[30] = {};
      ergebnis[30].kapitalwert_jahr = ergebnis[0].kapitalwert_jahr;


      for (i=1; i<=20; i++) {

        ergebnis[i] = {};
        ergebnis[i].jahr = i;
            ergebnis[i].real_jahr = parseInt(ergebnis[i-1].real_jahr) + 1 ;

        ergebnis[i].sm_erzeug = J13*F15*Math.pow(1-J25,ergebnis[i].jahr);
        ergebnis[i].sm_eigen = ergebnis[i].sm_erzeug * F13;


        ergebnis[i].sm_einspeis = 0;

        // Ident to Jahr 0
        if (ergebnis[i].real_jahr < 2014) {
            ergebnis[i].sm_einspeis = ergebnis[i].sm_erzeug * (1-F13);
        } else {
            if (F15>10 && F13<= 0.1) {
                ergebnis[i].sm_einspeis = ergebnis[i].sm_erzeug * (0.9);
            } else {
                ergebnis[i].sm_einspeis = ergebnis[i].sm_erzeug * (1-F13);
            }
        }


        ergebnis[i].sm_ungenutzt = 0;

        // Ident to Jahr 0
        if (ergebnis[i].real_jahr < 2014) {
            ergebnis[i].sm_ungenutzt = 0;
        } else {
            if (F15>10 && F13<0.1) {
                ergebnis[i].sm_ungenutzt = (ergebnis[i].sm_erzeug * (0.1-F13));
            } else {
                ergebnis[i].sm_ungenutzt = 0;
            }
        }


        ergebnis[i].en_einspeisung = F23*ergebnis[i].sm_einspeis / 100;
        ergebnis[i].en_eigennutz = ergebnis[i].sm_eigen * (F31/100*Math.pow(1+F32,ergebnis[i].jahr));
        ergebnis[i].verlust_ungenutzt = ergebnis[0].sm_ungenutzt*(F31/100*Math.pow(1+F32,ergebnis[i].jahr));

        if (ergebnis[i].jahr == 1) {
            ergebnis[i].laufende_kosten = -J24*J7*(1+F34);
        } else {
            ergebnis[i].laufende_kosten = ergebnis[i-1].laufende_kosten * (1+F34);
        }

        ergebnis[i].jahresergebnis = ergebnis[i].en_einspeisung + ergebnis[i].en_eigennutz + ergebnis[i].laufende_kosten;

        ergebnis[i].kapitalwert_jahr = ergebnis[i].jahresergebnis * Math.pow(1+F35,-ergebnis[i].jahr);
        ergebnis[30].kapitalwert_jahr += ergebnis[i].kapitalwert_jahr; // Sum

        ergebnis[i].kapitalwert_kumuliert = ergebnis[i-1].kapitalwert_kumuliert + ergebnis[i].kapitalwert_jahr;

        ergebnis[i].kontostand = ergebnis[i-1].kontostand + ergebnis[i].jahresergebnis;

    }



    var ikvGesellschaft = new Array();
    for (i=0; i<=20; i++) {

           ikvGesellschaft[i] = ergebnis[i].jahresergebnis;
    }


    ergebnis[30].ikv = ikv(ikvGesellschaft, 0.1);
}

function ikv(werte, schaetzwert) {

  var x,next_x;

  x = schaetzwert;

  var wanted_precision=0.00000001;
  var current,above,below,index;

  var iMax = 20;
  var i=0;
  var diff =Number.MAX_VALUE;

  while( i<iMax && diff > wanted_precision ) {

    index=0;
    above=0.0;
    below=0.0;

    for(var ii=0; ii<werte.length; ii++) {

      current=werte[ii];

      above += current / Math.pow(1.0+x,index);
      below += -index * current / Math.pow(1.0+x,index+1.0);
      index++;

    }
    next_x = x - above/below;
    diff = Math.abs(next_x-x);
    //alert(current_diff);
    x = next_x;

    i++;

  };

  if (diff < wanted_precision) {
     return x;
  } else {
    return Number.NaN;
  }
}


function Round2(x) {
  var k = (Math.round(x * 100) / 100).toString();
  k += (k.indexOf('.') == -1)? '.00' : '00';
  return k.substring(0, k.indexOf('.') + 3);
}
if (ie != 8) {



(function(j){var c=function(){throw"UID cannot be instantiated";};c._nextID=0;c.get=function(){return c._nextID++};j.UID=c})(window);(function(j){var c=function(){throw"Ticker cannot be instantiated.";};c.useRAF=null;c.animationTarget=null;c._listeners=null;c._pauseable=null;c._paused=false;c._inited=false;c._startTime=0;c._pausedTime=0;c._ticks=0;c._pausedTickers=0;c._interval=50;c._lastTime=0;c._times=null;c._tickTimes=null;c._rafActive=false;c._timeoutID=null;c.addListener=function(a,b){a!=null&&(c._inited||c.init(),c.removeListener(a),c._pauseable[c._listeners.length]=b==null?true:b,c._listeners.push(a))};c.init=function(){c._inited=
true;c._times=[];c._tickTimes=[];c._pauseable=[];c._listeners=[];c._times.push(c._lastTime=c._startTime=c._getTime());c.setInterval(c._interval)};c.removeListener=function(a){c._listeners!=null&&(a=c._listeners.indexOf(a),a!=-1&&(c._listeners.splice(a,1),c._pauseable.splice(a,1)))};c.removeAllListeners=function(){c._listeners=[];c._pauseable=[]};c.setInterval=function(a){c._interval=a;c._inited&&c._setupTick()};c.getInterval=function(){return c._interval};c.setFPS=function(a){c.setInterval(1E3/a)};
c.getFPS=function(){return 1E3/c._interval};c.getMeasuredFPS=function(a){if(c._times.length<2)return-1;a==null&&(a=c.getFPS()|0);a=Math.min(c._times.length-1,a);return 1E3/((c._times[0]-c._times[a])/a)};c.setPaused=function(a){c._paused=a};c.getPaused=function(){return c._paused};c.getTime=function(a){return c._getTime()-c._startTime-(a?c._pausedTime:0)};c.getTicks=function(a){return c._ticks-(a?c._pausedTickers:0)};c._handleAF=function(a){c._rafActive=false;c._setupTick();a-c._lastTime>=c._interval-
1&&c._tick()};c._handleTimeout=function(){c.timeoutID=null;c._setupTick();c._tick()};c._setupTick=function(){if(!(c._rafActive||c.timeoutID!=null)){if(c.useRAF){var a=j.requestAnimationFrame||j.webkitRequestAnimationFrame||j.mozRequestAnimationFrame||j.oRequestAnimationFrame||j.msRequestAnimationFrame;if(a){a(c._handleAF,c.animationTarget);c._rafActive=true;return}}c.timeoutID=setTimeout(c._handleTimeout,c._interval)}};c._tick=function(){c._ticks++;var a=c._getTime(),b=a-c._lastTime,p=c._paused;p&&
(c._pausedTickers++,c._pausedTime+=b);c._lastTime=a;for(var h=c._pauseable,e=c._listeners.slice(),d=e?e.length:0,f=0;f<d;f++){var g=e[f];g==null||p&&h[f]||(g.tick?g.tick(b,p):g instanceof Function&&g(b,p))}for(c._tickTimes.unshift(c._getTime()-a);c._tickTimes.length>100;)c._tickTimes.pop();for(c._times.unshift(a);c._times.length>100;)c._times.pop()};c._getTime=function(){return(new Date).getTime()};j.Ticker=c})(window);(function(j){var c=function(b,a,h,c,d){this.initialize(b,a,h,c,d)},a=c.prototype;a.stageX=0;a.stageY=0;a.type=null;a.nativeEvent=null;a.onMouseMove=null;a.onMouseUp=null;a.target=null;a.initialize=function(b,a,h,c,d){this.type=b;this.stageX=a;this.stageY=h;this.target=c;this.nativeEvent=d};a.clone=function(){return new c(this.type,this.stageX,this.stageY,this.target,this.nativeEvent)};a.toString=function(){return"[MouseEvent (type="+this.type+" stageX="+this.stageX+" stageY="+this.stageY+")]"};j.MouseEvent=
c})(window);(function(j){var c=function(b,a,h,c,d,f){this.initialize(b,a,h,c,d,f)},a=c.prototype;c.identity=null;c.DEG_TO_RAD=Math.PI/180;a.a=1;a.b=0;a.c=0;a.d=1;a.tx=0;a.ty=0;a.alpha=1;a.shadow=null;a.compositeOperation=null;a.initialize=function(b,a,h,c,d,f){if(b!=null)this.a=b;this.b=a||0;this.c=h||0;if(c!=null)this.d=c;this.tx=d||0;this.ty=f||0};a.prepend=function(b,a,h,c,d,f){var g=this.tx;if(b!=1||a!=0||h!=0||c!=1){var k=this.a,i=this.c;this.a=k*b+this.b*h;this.b=k*a+this.b*c;this.c=i*b+this.d*h;this.d=
i*a+this.d*c}this.tx=g*b+this.ty*h+d;this.ty=g*a+this.ty*c+f};a.append=function(b,a,h,c,d,f){var g=this.a,k=this.b,i=this.c,l=this.d;this.a=b*g+a*i;this.b=b*k+a*l;this.c=h*g+c*i;this.d=h*k+c*l;this.tx=d*g+f*i+this.tx;this.ty=d*k+f*l+this.ty};a.prependMatrix=function(b){this.prepend(b.a,b.b,b.c,b.d,b.tx,b.ty);this.prependProperties(b.alpha,b.shadow,b.compositeOperation)};a.appendMatrix=function(b){this.append(b.a,b.b,b.c,b.d,b.tx,b.ty);this.appendProperties(b.alpha,b.shadow,b.compositeOperation)};
a.prependTransform=function(b,a,h,e,d,f,g,k,i){if(d%360)var l=d*c.DEG_TO_RAD,d=Math.cos(l),l=Math.sin(l);else d=1,l=0;if(k||i)this.tx-=k,this.ty-=i;f||g?(f*=c.DEG_TO_RAD,g*=c.DEG_TO_RAD,this.prepend(d*h,l*h,-l*e,d*e,0,0),this.prepend(Math.cos(g),Math.sin(g),-Math.sin(f),Math.cos(f),b,a)):this.prepend(d*h,l*h,-l*e,d*e,b,a)};a.appendTransform=function(b,a,h,e,d,f,g,k,i){if(d%360)var l=d*c.DEG_TO_RAD,d=Math.cos(l),l=Math.sin(l);else d=1,l=0;f||g?(f*=c.DEG_TO_RAD,g*=c.DEG_TO_RAD,this.append(Math.cos(g),
Math.sin(g),-Math.sin(f),Math.cos(f),b,a),this.append(d*h,l*h,-l*e,d*e,0,0)):this.append(d*h,l*h,-l*e,d*e,b,a);if(k||i)this.tx-=k*this.a+i*this.c,this.ty-=k*this.b+i*this.d};a.rotate=function(b){var a=Math.cos(b),b=Math.sin(b),h=this.a,c=this.c,d=this.tx;this.a=h*a-this.b*b;this.b=h*b+this.b*a;this.c=c*a-this.d*b;this.d=c*b+this.d*a;this.tx=d*a-this.ty*b;this.ty=d*b+this.ty*a};a.skew=function(b,a){b*=c.DEG_TO_RAD;a*=c.DEG_TO_RAD;this.append(Math.cos(a),Math.sin(a),-Math.sin(b),Math.cos(b),0,0)};a.scale=
function(b,a){this.a*=b;this.d*=a;this.tx*=b;this.ty*=a};a.translate=function(b,a){this.tx+=b;this.ty+=a};a.identity=function(){this.alpha=this.a=this.d=1;this.b=this.c=this.tx=this.ty=0;this.shadow=this.compositeOperation=null};a.invert=function(){var b=this.a,a=this.b,h=this.c,c=this.d,d=this.tx,f=b*c-a*h;this.a=c/f;this.b=-a/f;this.c=-h/f;this.d=b/f;this.tx=(h*this.ty-c*d)/f;this.ty=-(b*this.ty-a*d)/f};a.isIdentity=function(){return this.tx==0&&this.ty==0&&this.a==1&&this.b==0&&this.c==0&&this.d==
1};a.decompose=function(b){b==null&&(b={});b.x=this.tx;b.y=this.ty;b.scaleX=Math.sqrt(this.a*this.a+this.b*this.b);b.scaleY=Math.sqrt(this.c*this.c+this.d*this.d);var a=Math.atan2(-this.c,this.d),h=Math.atan2(this.b,this.a);a==h?(b.rotation=h/c.DEG_TO_RAD,this.a<0&&this.d>=0&&(b.rotation+=b.rotation<=0?180:-180),b.skewX=b.skewY=0):(b.skewX=a/c.DEG_TO_RAD,b.skewY=h/c.DEG_TO_RAD);return b};a.reinitialize=function(b,a,h,c,d,f,g,k,i){this.initialize(b,a,h,c,d,f);this.alpha=g||1;this.shadow=k;this.compositeOperation=
i;return this};a.appendProperties=function(b,a,h){this.alpha*=b;this.shadow=a||this.shadow;this.compositeOperation=h||this.compositeOperation};a.prependProperties=function(b,a,h){this.alpha*=b;this.shadow=this.shadow||a;this.compositeOperation=this.compositeOperation||h};a.clone=function(){var b=new c(this.a,this.b,this.c,this.d,this.tx,this.ty);b.shadow=this.shadow;b.alpha=this.alpha;b.compositeOperation=this.compositeOperation;return b};a.toString=function(){return"[Matrix2D (a="+this.a+" b="+this.b+
" c="+this.c+" d="+this.d+" tx="+this.tx+" ty="+this.ty+")]"};c.identity=new c(1,0,0,1,0,0);j.Matrix2D=c})(window);(function(j){var c=function(b,a){this.initialize(b,a)},a=c.prototype;a.x=0;a.y=0;a.initialize=function(b,a){this.x=b==null?0:b;this.y=a==null?0:a};a.clone=function(){return new c(this.x,this.y)};a.toString=function(){return"[Point (x="+this.x+" y="+this.y+")]"};j.Point=c})(window);(function(j){var c=function(b,a,h,c){this.initialize(b,a,h,c)},a=c.prototype;a.x=0;a.y=0;a.width=0;a.height=0;a.initialize=function(b,a,c,e){this.x=b==null?0:b;this.y=a==null?0:a;this.width=c==null?0:c;this.height=e==null?0:e};a.clone=function(){return new c(this.x,this.y,this.width,this.height)};a.toString=function(){return"[Rectangle (x="+this.x+" y="+this.y+" width="+this.width+" height="+this.height+")]"};j.Rectangle=c})(window);(function(j){var c=function(b,a,c,e){this.initialize(b,a,c,e)},a=c.prototype;c.identity=null;a.color=null;a.offsetX=0;a.offsetY=0;a.blur=0;a.initialize=function(b,a,c,e){this.color=b;this.offsetX=a;this.offsetY=c;this.blur=e};a.toString=function(){return"[Shadow]"};a.clone=function(){return new c(this.color,this.offsetX,this.offsetY,this.blur)};c.identity=new c("transparent",0,0,0);j.Shadow=c})(window);(function(j){var c=function(b){this.initialize(b)},a=c.prototype;a.complete=true;a.onComplete=null;a._animations=null;a._frames=null;a._images=null;a._data=null;a._loadCount=0;a._frameHeight=0;a._frameWidth=0;a._numFrames=0;a._regX=0;a._regY=0;a.initialize=function(b){var a,c,e;if(b!=null){if(b.images&&(c=b.images.length)>0){e=this._images=[];for(a=0;a<c;a++){var d=b.images[a];if(!(d instanceof Image)){var f=d,d=new Image;d.src=f}e.push(d);if(!d.getContext&&!d.complete)this._loadCount++,this.complete=
false,function(b){d.onload=function(){b._handleImageLoad()}}(this)}}if(b.frames!=null)if(b.frames instanceof Array){this._frames=[];e=b.frames;for(a=0,c=e.length;a<c;a++)f=e[a],this._frames.push({image:this._images[f[4]?f[4]:0],rect:new Rectangle(f[0],f[1],f[2],f[3]),regX:f[5]||0,regY:f[6]||0})}else c=b.frames,this._frameWidth=c.width,this._frameHeight=c.height,this._regX=c.regX||0,this._regY=c.regY||0,this._numFrames=c.count,this._loadCount==0&&this._calculateFrames();if((c=b.animations)!=null){this._animations=
[];this._data={};for(var g in c){b={name:g};f=c[g];if(isNaN(f))if(f instanceof Array){b.frequency=f[3];b.next=f[2];e=b.frames=[];for(a=f[0];a<=f[1];a++)e.push(a)}else b.frequency=f.frequency,b.next=f.next,e=b.frames=f.frames.slice(0);else e=b.frames=[f];b.next=e.length<2||b.next==false?null:b.next==null||b.next==true?g:b.next;if(!b.frequency)b.frequency=1;this._animations.push(g);this._data[g]=b}}}};a.getNumFrames=function(b){return b==null?this._frames?this._frames.length:this._numFrames:(b=this._data[b],
b==null?0:b.frames.length)};a.getAnimations=function(){return this._animations.slice(0)};a.getAnimation=function(b){return this._data[b]};a.getFrame=function(b){return this.complete&&this._frames&&(frame=this._frames[b])?frame:null};a.toString=function(){return"[SpriteSheet]"};a.clone=function(){var b=new c;b.complete=this.complete;b._animations=this._animations;b._frames=this._frames;b._images=this._images;b._data=this._data;b._frameHeight=this._frameHeight;b._frameWidth=this._frameWidth;b._numFrames=
this._numFrames;b._loadCount=this._loadCount;return b};a._handleImageLoad=function(){if(--this._loadCount==0)this._calculateFrames(),this.complete=true,this.onComplete&&this.onComplete()};a._calculateFrames=function(){if(!(this._frames||this._frameWidth==0)){this._frames=[];for(var b=0,a=this._frameWidth,c=this._frameHeight,e=0,d=this._images;e<d.length;e++){for(var f=d[e],g=(f.width+1)/a|0,k=(f.height+1)/c|0,k=this._numFrames>0?Math.min(this._numFrames-b,g*k):g*k,i=0;i<k;i++)this._frames.push({image:f,
rect:new Rectangle(i%g*a,(i/g|0)*c,a,c),regX:this._regX,regY:this._regY});b+=k}this._numFrames=b}};j.SpriteSheet=c})(window);(function(j){function c(b,a){this.f=b;this.params=a}c.prototype.exec=function(b){this.f.apply(b,this.params)};var a=function(){this.initialize()},b=a.prototype;a.getRGB=function(b,a,c,d){b!=null&&c==null&&(d=a,c=b&255,a=b>>8&255,b=b>>16&255);return d==null?"rgb("+b+","+a+","+c+")":"rgba("+b+","+a+","+c+","+d+")"};a.getHSL=function(b,a,c,d){return d==null?"hsl("+b%360+","+a+"%,"+c+"%)":"hsla("+b%360+","+a+"%,"+c+"%,"+d+")"};a.BASE_64={A:0,B:1,C:2,D:3,E:4,F:5,G:6,H:7,I:8,J:9,K:10,L:11,M:12,N:13,O:14,
P:15,Q:16,R:17,S:18,T:19,U:20,V:21,W:22,X:23,Y:24,Z:25,a:26,b:27,c:28,d:29,e:30,f:31,g:32,h:33,i:34,j:35,k:36,l:37,m:38,n:39,o:40,p:41,q:42,r:43,s:44,t:45,u:46,v:47,w:48,x:49,y:50,z:51,0:52,1:53,2:54,3:55,4:56,5:57,6:58,7:59,8:60,9:61,"+":62,"/":63};a.STROKE_CAPS_MAP=["butt","round","square"];a.STROKE_JOINTS_MAP=["miter","round","bevel"];a._ctx=document.createElement("canvas").getContext("2d");a.beginCmd=new c(a._ctx.beginPath,[]);a.fillCmd=new c(a._ctx.fill,[]);a.strokeCmd=new c(a._ctx.stroke,[]);
b._strokeInstructions=null;b._strokeStyleInstructions=null;b._fillInstructions=null;b._instructions=null;b._oldInstructions=null;b._activeInstructions=null;b._active=false;b._dirty=false;b.initialize=function(){this.clear();this._ctx=a._ctx};b.draw=function(b){this._dirty&&this._updateInstructions();for(var a=this._instructions,c=0,d=a.length;c<d;c++)a[c].exec(b)};b.moveTo=function(b,a){this._activeInstructions.push(new c(this._ctx.moveTo,[b,a]));return this};b.lineTo=function(b,a){this._dirty=this._active=
true;this._activeInstructions.push(new c(this._ctx.lineTo,[b,a]));return this};b.arcTo=function(b,a,e,d,f){this._dirty=this._active=true;this._activeInstructions.push(new c(this._ctx.arcTo,[b,a,e,d,f]));return this};b.arc=function(b,a,e,d,f,g){this._dirty=this._active=true;g==null&&(g=false);this._activeInstructions.push(new c(this._ctx.arc,[b,a,e,d,f,g]));return this};b.quadraticCurveTo=function(b,a,e,d){this._dirty=this._active=true;this._activeInstructions.push(new c(this._ctx.quadraticCurveTo,
[b,a,e,d]));return this};b.bezierCurveTo=function(b,a,e,d,f,g){this._dirty=this._active=true;this._activeInstructions.push(new c(this._ctx.bezierCurveTo,[b,a,e,d,f,g]));return this};b.rect=function(b,a,e,d){this._dirty=this._active=true;this._activeInstructions.push(new c(this._ctx.rect,[b,a,e,d]));return this};b.closePath=function(){if(this._active)this._dirty=true,this._activeInstructions.push(new c(this._ctx.closePath,[]));return this};b.clear=function(){this._instructions=[];this._oldInstructions=
[];this._activeInstructions=[];this._strokeStyleInstructions=this._strokeInstructions=this._fillInstructions=null;this._active=this._dirty=false;return this};b.beginFill=function(b){this._active&&this._newPath();this._fillInstructions=b?[new c(this._setProp,["fillStyle",b])]:null;return this};b.beginLinearGradientFill=function(b,a,e,d,f,g){this._active&&this._newPath();e=this._ctx.createLinearGradient(e,d,f,g);d=0;for(f=b.length;d<f;d++)e.addColorStop(a[d],b[d]);this._fillInstructions=[new c(this._setProp,
["fillStyle",e])];return this};b.beginRadialGradientFill=function(b,a,e,d,f,g,k,i){this._active&&this._newPath();e=this._ctx.createRadialGradient(e,d,f,g,k,i);d=0;for(f=b.length;d<f;d++)e.addColorStop(a[d],b[d]);this._fillInstructions=[new c(this._setProp,["fillStyle",e])];return this};b.beginBitmapFill=function(b,a){this._active&&this._newPath();var e=this._ctx.createPattern(b,a||"");this._fillInstructions=[new c(this._setProp,["fillStyle",e])];return this};b.endFill=function(){this.beginFill();
return this};b.setStrokeStyle=function(b,h,e,d){this._active&&this._newPath();this._strokeStyleInstructions=[new c(this._setProp,["lineWidth",b==null?"1":b]),new c(this._setProp,["lineCap",h==null?"butt":isNaN(h)?h:a.STROKE_CAPS_MAP[h]]),new c(this._setProp,["lineJoin",e==null?"miter":isNaN(e)?e:a.STROKE_JOINTS_MAP[e]]),new c(this._setProp,["miterLimit",d==null?"10":d])];return this};b.beginStroke=function(b){this._active&&this._newPath();this._strokeInstructions=b?[new c(this._setProp,["strokeStyle",
b])]:null;return this};b.beginLinearGradientStroke=function(b,a,e,d,f,g){this._active&&this._newPath();e=this._ctx.createLinearGradient(e,d,f,g);d=0;for(f=b.length;d<f;d++)e.addColorStop(a[d],b[d]);this._strokeInstructions=[new c(this._setProp,["strokeStyle",e])];return this};b.beginRadialGradientStroke=function(b,a,e,d,f,g,k,i){this._active&&this._newPath();e=this._ctx.createRadialGradient(e,d,f,g,k,i);d=0;for(f=b.length;d<f;d++)e.addColorStop(a[d],b[d]);this._strokeInstructions=[new c(this._setProp,
["strokeStyle",e])];return this};b.beginBitmapStroke=function(b,a){this._active&&this._newPath();var e=this._ctx.createPattern(b,a||"");this._strokeInstructions=[new c(this._setProp,["strokeStyle",e])];return this};b.endStroke=function(){this.beginStroke();return this};b.curveTo=b.quadraticCurveTo;b.drawRect=b.rect;b.drawRoundRect=function(b,a,c,d,f){this.drawRoundRectComplex(b,a,c,d,f,f,f,f);return this};b.drawRoundRectComplex=function(b,a,e,d,f,g,k,i){this._dirty=this._active=true;var l=Math.PI,
j=this._ctx.arc,m=this._ctx.lineTo;this._activeInstructions.push(new c(this._ctx.moveTo,[b+f,a]),new c(m,[b+e-g,a]),g>=0?new c(j,[b+e-g,a+g,g,-l/2,0]):new c(j,[b+e,a,-g,l,l/2,true]),new c(m,[b+e,a+d-k]),i>=0?new c(j,[b+e-k,a+d-k,k,0,l/2]):new c(j,[b+e,a+d,-k,-l/2,l,true]),new c(m,[b+i,a+d]),i>=0?new c(j,[b+i,a+d-i,i,l/2,l]):new c(j,[b,a+d,-i,0,-l/2,true]),new c(m,[b,a+f]),f>=0?new c(j,[b+f,a+f,f,l,-l/2]):new c(j,[b,a,-f,l/2,0,true]));return this};b.drawCircle=function(b,a,c){this.arc(b,a,c,0,Math.PI*
2);return this};b.drawEllipse=function(b,a,e,d){this._dirty=this._active=true;var f=e/2*0.5522848,g=d/2*0.5522848,k=b+e,i=a+d,e=b+e/2,d=a+d/2;this._activeInstructions.push(new c(this._ctx.moveTo,[b,d]),new c(this._ctx.bezierCurveTo,[b,d-g,e-f,a,e,a]),new c(this._ctx.bezierCurveTo,[e+f,a,k,d-g,k,d]),new c(this._ctx.bezierCurveTo,[k,d+g,e+f,i,e,i]),new c(this._ctx.bezierCurveTo,[e-f,i,b,d+g,b,d]));return this};b.drawPolyStar=function(b,a,e,d,f,g){this._dirty=this._active=true;f==null&&(f=0);f=1-f;g==
null?g=0:g/=180/Math.PI;var k=Math.PI/d;this._activeInstructions.push(new c(this._ctx.moveTo,[b+Math.cos(g)*e,a+Math.sin(g)*e]));for(var i=0;i<d;i++)g+=k,f!=1&&this._activeInstructions.push(new c(this._ctx.lineTo,[b+Math.cos(g)*e*f,a+Math.sin(g)*e*f])),g+=k,this._activeInstructions.push(new c(this._ctx.lineTo,[b+Math.cos(g)*e,a+Math.sin(g)*e]));return this};b.p=b.decodePath=function(b){for(var c=[this.moveTo,this.lineTo,this.quadraticCurveTo,this.bezierCurveTo],e=[2,2,4,6],d=0,f=b.length,g=[],k=0,
i=0,l=a.BASE_64;d<f;){var j=l[b.charAt(d)],m=j>>3,q=c[m];if(!q||j&3)throw"bad path data";var r=e[m];m||(k=i=0);g.length=0;d++;j=(j>>2&1)+2;for(m=0;m<r;m++){var n=l[b.charAt(d)],s=n>>5?-1:1,n=(n&31)<<6|l[b.charAt(d+1)];j==3&&(n=n<<6|l[b.charAt(d+2)]);n=s*n/10;m%2?k=n+=k:i=n+=i;g[m]=n;d+=j}q.apply(this,g)}return this};b.clone=function(){var b=new a;b._instructions=this._instructions.slice();b._activeInstructions=this._activeInstructions.slice();b._oldInstructions=this._oldInstructions.slice();if(this._fillInstructions)b._fillInstructions=
this._fillInstructions.slice();if(this._strokeInstructions)b._strokeInstructions=this._strokeInstructions.slice();if(this._strokeStyleInstructions)b._strokeStyleInstructions=this._strokeStyleInstructions.slice();b._active=this._active;b._dirty=this._dirty;return b};b.toString=function(){return"[Graphics]"};b.mt=b.moveTo;b.lt=b.lineTo;b.at=b.arcTo;b.bt=b.bezierCurveTo;b.qt=b.quadraticCurveTo;b.a=b.arc;b.r=b.rect;b.cp=b.closePath;b.c=b.clear;b.f=b.beginFill;b.lf=b.beginLinearGradientFill;b.rf=b.beginRadialGradientFill;
b.bf=b.beginBitmapFill;b.ef=b.endFill;b.ss=b.setStrokeStyle;b.s=b.beginStroke;b.ls=b.beginLinearGradientStroke;b.rs=b.beginRadialGradientStroke;b.bs=b.beginBitmapStroke;b.es=b.endStroke;b.dr=b.drawRect;b.rr=b.drawRoundRect;b.rc=b.drawRoundRectComplex;b.dc=b.drawCircle;b.de=b.drawEllipse;b.dp=b.drawPolyStar;b._updateInstructions=function(){this._instructions=this._oldInstructions.slice();this._instructions.push(a.beginCmd);this._fillInstructions&&this._instructions.push.apply(this._instructions,this._fillInstructions);
this._strokeInstructions&&(this._instructions.push.apply(this._instructions,this._strokeInstructions),this._strokeStyleInstructions&&this._instructions.push.apply(this._instructions,this._strokeStyleInstructions));this._instructions.push.apply(this._instructions,this._activeInstructions);this._fillInstructions&&this._instructions.push(a.fillCmd);this._strokeInstructions&&this._instructions.push(a.strokeCmd)};b._newPath=function(){this._dirty&&this._updateInstructions();this._oldInstructions=this._instructions;
this._activeInstructions=[];this._active=this._dirty=false};b._setProp=function(b,a){this[b]=a};j.Graphics=a})(window);(function(j){var c=function(){this.initialize()},a=c.prototype;c.suppressCrossDomainErrors=false;c._hitTestCanvas=document.createElement("canvas");c._hitTestCanvas.width=c._hitTestCanvas.height=1;c._hitTestContext=c._hitTestCanvas.getContext("2d");c._nextCacheID=1;a.alpha=1;a.cacheCanvas=null;a.id=-1;a.mouseEnabled=true;a.name=null;a.parent=null;a.regX=0;a.regY=0;a.rotation=0;a.scaleX=1;a.scaleY=1;a.skewX=0;a.skewY=0;a.shadow=null;a.visible=true;a.x=0;a.y=0;a.compositeOperation=null;a.snapToPixel=
false;a.onPress=null;a.onClick=null;a.onDoubleClick=null;a.onMouseOver=null;a.onMouseOut=null;a.onTick=null;a.filters=null;a.cacheID=0;a._cacheOffsetX=0;a._cacheOffsetY=0;a._cacheDataURLID=0;a._cacheDataURL=null;a._matrix=null;a.initialize=function(){this.id=UID.get();this._matrix=new Matrix2D};a.isVisible=function(){return this.visible&&this.alpha>0&&this.scaleX!=0&&this.scaleY!=0};a.draw=function(b,a){if(a||!this.cacheCanvas)return false;b.drawImage(this.cacheCanvas,this._cacheOffsetX,this._cacheOffsetY);
return true};a.cache=function(b,a,h,e){var d=this.cacheCanvas;if(d==null)d=this.cacheCanvas=document.createElement("canvas");var f=d.getContext("2d");d.width=h;d.height=e;f.setTransform(1,0,0,1,-b,-a);f.clearRect(b,a,d.width,d.height);this.draw(f,true,this._matrix.reinitialize(1,0,0,1,-b,-a));this._cacheOffsetX=b;this._cacheOffsetY=a;this._applyFilters();this.cacheID=c._nextCacheID++};a.updateCache=function(b){var a=this.cacheCanvas,h=this._cacheOffsetX,e=this._cacheOffsetY;if(a==null)throw"cache() must be called before updateCache()";
var d=a.getContext("2d");d.setTransform(1,0,0,1,-h,-e);b?d.globalCompositeOperation=b:d.clearRect(h,e,a.width,a.height);this.draw(d,true);if(b)d.globalCompositeOperation="source-over";this._applyFilters();this.cacheID=c._nextCacheID++};a.uncache=function(){this._cacheDataURL=this.cacheCanvas=null;this.cacheID=this._cacheOffsetX=this._cacheOffsetY=0};a.getCacheDataURL=function(){if(!this.cacheCanvas)return null;if(this.cacheID!=this._cacheDataURLID)this._cacheDataURL=this.cacheCanvas.toDataURL();return this._cacheDataURL};
a.getStage=function(){for(var b=this;b.parent;)b=b.parent;return b instanceof Stage?b:null};a.localToGlobal=function(b,a){var c=this.getConcatenatedMatrix(this._matrix);if(c==null)return null;c.append(1,0,0,1,b,a);return new Point(c.tx,c.ty)};a.globalToLocal=function(b,a){var c=this.getConcatenatedMatrix(this._matrix);if(c==null)return null;c.invert();c.append(1,0,0,1,b,a);return new Point(c.tx,c.ty)};a.localToLocal=function(b,a,c){b=this.localToGlobal(b,a);return c.globalToLocal(b.x,b.y)};a.setTransform=
function(b,a,c,e,d,f,g,k,i){this.x=b||0;this.y=a||0;this.scaleX=c==null?1:c;this.scaleY=e==null?1:e;this.rotation=d||0;this.skewX=f||0;this.skewY=g||0;this.regX=k||0;this.regY=i||0};a.getConcatenatedMatrix=function(b){b?b.identity():b=new Matrix2D;for(var a=this;a!=null;)b.prependTransform(a.x,a.y,a.scaleX,a.scaleY,a.rotation,a.skewX,a.skewY,a.regX,a.regY),b.prependProperties(a.alpha,a.shadow,a.compositeOperation),a=a.parent;return b};a.hitTest=function(b,a){var h=c._hitTestContext,e=c._hitTestCanvas;
h.setTransform(1,0,0,1,-b,-a);this.draw(h);h=this._testHit(h);e.width=0;e.width=1;return h};a.clone=function(){var b=new c;this.cloneProps(b);return b};a.toString=function(){return"[DisplayObject (name="+this.name+")]"};a.cloneProps=function(b){b.alpha=this.alpha;b.name=this.name;b.regX=this.regX;b.regY=this.regY;b.rotation=this.rotation;b.scaleX=this.scaleX;b.scaleY=this.scaleY;b.shadow=this.shadow;b.skewX=this.skewX;b.skewY=this.skewY;b.visible=this.visible;b.x=this.x;b.y=this.y;b.mouseEnabled=
this.mouseEnabled;b.compositeOperation=this.compositeOperation;if(this.cacheCanvas)b.cacheCanvas=this.cacheCanvas.cloneNode(true),b.cacheCanvas.getContext("2d").putImageData(this.cacheCanvas.getContext("2d").getImageData(0,0,this.cacheCanvas.width,this.cacheCanvas.height),0,0)};a.applyShadow=function(b,a){a=a||Shadow.identity;b.shadowColor=a.color;b.shadowOffsetX=a.offsetX;b.shadowOffsetY=a.offsetY;b.shadowBlur=a.blur};a._tick=function(b){if(this.onTick)this.onTick(b)};a._testHit=function(b){try{var a=
b.getImageData(0,0,1,1).data[3]>1}catch(h){if(!c.suppressCrossDomainErrors)throw"An error has occured. This is most likely due to security restrictions on reading canvas pixel data with local or cross-domain images.";}return a};a._applyFilters=function(){if(this.filters&&this.filters.length!=0&&this.cacheCanvas)for(var b=this.filters.length,a=this.cacheCanvas.getContext("2d"),c=this.cacheCanvas.width,e=this.cacheCanvas.height,d=0;d<b;d++)this.filters[d].applyFilter(a,0,0,c,e)};j.DisplayObject=c})(window);(function(j){var c=function(){this.initialize()},a=c.prototype=new DisplayObject;a.children=null;a.DisplayObject_initialize=a.initialize;a.initialize=function(){this.DisplayObject_initialize();this.children=[]};a.isVisible=function(){return this.visible&&this.alpha>0&&this.children.length&&this.scaleX!=0&&this.scaleY!=0};a.DisplayObject_draw=a.draw;a.draw=function(b,a,h){var e=Stage._snapToPixelEnabled;if(this.DisplayObject_draw(b,a))return true;for(var h=h||this._matrix.reinitialize(1,0,0,1,0,0,
this.alpha,this.shadow,this.compositeOperation),a=this.children.length,d=this.children.slice(0),f=0;f<a;f++){var g=d[f];if(g.isVisible()){var k=false,i=g._matrix.reinitialize(h.a,h.b,h.c,h.d,h.tx,h.ty,h.alpha,h.shadow,h.compositeOperation);i.appendTransform(g.x,g.y,g.scaleX,g.scaleY,g.rotation,g.skewX,g.skewY,g.regX,g.regY);i.appendProperties(g.alpha,g.shadow,g.compositeOperation);if(!(g instanceof c&&g.cacheCanvas==null))e&&g.snapToPixel&&i.a==1&&i.b==0&&i.c==0&&i.d==1?b.setTransform(i.a,i.b,i.c,
i.d,i.tx+0.5|0,i.ty+0.5|0):b.setTransform(i.a,i.b,i.c,i.d,i.tx,i.ty),b.globalAlpha=i.alpha,b.globalCompositeOperation=i.compositeOperation||"source-over",(k=i.shadow)&&this.applyShadow(b,k);g.draw(b,false,i);k&&this.applyShadow(b)}}return true};a.addChild=function(b){if(b==null)return b;var a=arguments.length;if(a>1){for(var c=0;c<a;c++)this.addChild(arguments[c]);return arguments[a-1]}b.parent&&b.parent.removeChild(b);b.parent=this;this.children.push(b);return b};a.addChildAt=function(b,a){var c=
arguments.length;if(c>2){for(var a=arguments[e-1],e=0;e<c-1;e++)this.addChildAt(arguments[e],a+e);return arguments[c-2]}b.parent&&b.parent.removeChild(b);b.parent=this;this.children.splice(a,0,b);return b};a.removeChild=function(b){var a=arguments.length;if(a>1){for(var c=true,e=0;e<a;e++)c=c&&this.removeChild(arguments[e]);return c}return this.removeChildAt(this.children.indexOf(b))};a.removeChildAt=function(b){var a=arguments.length;if(a>1){for(var c=[],e=0;e<a;e++)c[e]=arguments[e];c.sort(function(b,
a){return a-b});for(var d=true,e=0;e<a;e++)d=d&&this.removeChildAt(c[e]);return d}if(b<0||b>this.children.length-1)return false;a=this.children[b];if(a!=null)a.parent=null;this.children.splice(b,1);return true};a.removeAllChildren=function(){for(var b=this.children;b.length;)b.pop().parent=null};a.getChildAt=function(b){return this.children[b]};a.sortChildren=function(b){this.children.sort(b)};a.getChildIndex=function(b){return this.children.indexOf(b)};a.getNumChildren=function(){return this.children.length};
a.swapChildrenAt=function(b,a){var c=this.children,e=c[b],d=c[a];e&&d&&(c[b]=d,c[a]=e)};a.swapChildren=function(b,a){for(var c=this.children,e,d,f=0,g=c.length;f<g;f++)if(c[f]==b&&(e=f),c[f]==a&&(d=f),e!=null&&d!=null)break;f!=g&&(c[e]=a,c[d]=b)};a.setChildIndex=function(b,a){for(var c=this.children,e=0,d=c.length;e<d;e++)if(c[e]==b)break;e==d||a<0||a>d||e==a||(c.splice(a,1),a<e&&e--,c.splice(b,e,0))};a.contains=function(b){for(;b;){if(b==this)return true;b=b.parent}return false};a.hitTest=function(b,
a){return this.getObjectUnderPoint(b,a)!=null};a.getObjectsUnderPoint=function(b,a){var c=[],e=this.localToGlobal(b,a);this._getObjectsUnderPoint(e.x,e.y,c);return c};a.getObjectUnderPoint=function(b,a){var c=this.localToGlobal(b,a);return this._getObjectsUnderPoint(c.x,c.y)};a.clone=function(b){var a=new c;this.cloneProps(a);if(b)for(var h=a.children=[],e=0,d=this.children.length;e<d;e++){var f=this.children[e].clone(b);f.parent=a;h.push(f)}return a};a.toString=function(){return"[Container (name="+
this.name+")]"};a._tick=function(b){for(var a=this.children.length-1;a>=0;a--){var c=this.children[a];c._tick&&c._tick(b)}if(this.onTick)this.onTick(b)};a._getObjectsUnderPoint=function(b,a,h,e){var d=DisplayObject._hitTestContext,f=DisplayObject._hitTestCanvas,g=this._matrix,k=e&1&&(this.onPress||this.onClick||this.onDoubleClick)||e&2&&(this.onMouseOver||this.onMouseOut);if(this.cacheCanvas)if(this.getConcatenatedMatrix(g),d.setTransform(g.a,g.b,g.c,g.d,g.tx-b,g.ty-a),d.globalAlpha=g.alpha,this.draw(d),
this._testHit(d)){if(f.width=0,f.width=1,k)return this}else return null;for(var i=this.children.length-1;i>=0;i--){var l=this.children[i];if(l.isVisible()&&l.mouseEnabled)if(l instanceof c)if(k){if(l=l._getObjectsUnderPoint(b,a))return this}else{if(l=l._getObjectsUnderPoint(b,a,h,e),!h&&l)return l}else if(!e||k||e&1&&(l.onPress||l.onClick||l.onDoubleClick)||e&2&&(l.onMouseOver||l.onMouseOut))if(l.getConcatenatedMatrix(g),d.setTransform(g.a,g.b,g.c,g.d,g.tx-b,g.ty-a),d.globalAlpha=g.alpha,l.draw(d),
this._testHit(d))if(f.width=0,f.width=1,k)return this;else if(h)h.push(l);else return l}return null};j.Container=c})(window);(function(j){var c=function(b){this.initialize(b)},a=c.prototype=new Container;c._snapToPixelEnabled=false;a.autoClear=true;a.canvas=null;a.mouseX=null;a.mouseY=null;a.onMouseMove=null;a.onMouseUp=null;a.onMouseDown=null;a.snapToPixelEnabled=false;a.mouseInBounds=false;a.tickOnUpdate=true;a._activeMouseEvent=null;a._activeMouseTarget=null;a._mouseOverIntervalID=null;a._mouseOverX=0;a._mouseOverY=0;a._mouseOverTarget=null;a.Container_initialize=a.initialize;a.initialize=function(b){this.Container_initialize();
this.canvas=b instanceof HTMLCanvasElement?b:document.getElementById(b);this._enableMouseEvents(true)};a.update=function(b){if(this.canvas)this.autoClear&&this.clear(),c._snapToPixelEnabled=this.snapToPixelEnabled,this.tickOnUpdate&&this._tick(b),this.draw(this.canvas.getContext("2d"),false,this.getConcatenatedMatrix(this._matrix))};a.tick=a.update;a.clear=function(){if(this.canvas){var b=this.canvas.getContext("2d");b.setTransform(1,0,0,1,0,0);b.clearRect(0,0,this.canvas.width,this.canvas.height)}};
a.toDataURL=function(b,a){a||(a="image/png");var c=this.canvas.getContext("2d"),e=this.canvas.width,d=this.canvas.height,f;if(b){f=c.getImageData(0,0,e,d);var g=c.globalCompositeOperation;c.globalCompositeOperation="destination-over";c.fillStyle=b;c.fillRect(0,0,e,d)}var k=this.canvas.toDataURL(a);if(b)c.clearRect(0,0,e,d),c.putImageData(f,0,0),c.globalCompositeOperation=g;return k};a.enableMouseOver=function(b){if(this._mouseOverIntervalID)clearInterval(this._mouseOverIntervalID),this._mouseOverIntervalID=
null;if(b==null)b=20;else if(b<=0)return;var a=this;this._mouseOverIntervalID=setInterval(function(){a._testMouseOver()},1E3/Math.min(50,b));this._mouseOverX=NaN;this._mouseOverTarget=null};a.clone=function(){var b=new c(null);this.cloneProps(b);return b};a.toString=function(){return"[Stage (name="+this.name+")]"};a._enableMouseEvents=function(){var b=this,a=j.addEventListener?j:document;a.addEventListener("mouseup",function(a){b._handleMouseUp(a)},false);a.addEventListener("mousemove",function(a){b._handleMouseMove(a)},
false);a.addEventListener("dblclick",function(a){b._handleDoubleClick(a)},false);this.canvas&&this.canvas.addEventListener("mousedown",function(a){b._handleMouseDown(a)},false)};a._handleMouseMove=function(b){if(this.canvas){if(!b)b=j.event;var a=this.mouseInBounds;this._updateMousePosition(b.pageX,b.pageY);if(a||this.mouseInBounds){b=new MouseEvent("onMouseMove",this.mouseX,this.mouseY,this,b);if(this.onMouseMove)this.onMouseMove(b);if(this._activeMouseEvent&&this._activeMouseEvent.onMouseMove)this._activeMouseEvent.onMouseMove(b)}}else this.mouseX=
this.mouseY=null};a._updateMousePosition=function(b,a){var c=this.canvas;do b-=c.offsetLeft,a-=c.offsetTop;while(c=c.offsetParent);if(this.mouseInBounds=b>=0&&a>=0&&b<this.canvas.width&&a<this.canvas.height)this.mouseX=b,this.mouseY=a};a._handleMouseUp=function(b){var a=new MouseEvent("onMouseUp",this.mouseX,this.mouseY,this,b);if(this.onMouseUp)this.onMouseUp(a);if(this._activeMouseEvent&&this._activeMouseEvent.onMouseUp)this._activeMouseEvent.onMouseUp(a);if(this._activeMouseTarget&&this._activeMouseTarget.onClick&&
this._getObjectsUnderPoint(this.mouseX,this.mouseY,null,true,this._mouseOverIntervalID?3:1)==this._activeMouseTarget)this._activeMouseTarget.onClick(new MouseEvent("onClick",this.mouseX,this.mouseY,this._activeMouseTarget,b));this._activeMouseEvent=this._activeMouseTarget=null};a._handleMouseDown=function(b){if(this.onMouseDown)this.onMouseDown(new MouseEvent("onMouseDown",this.mouseX,this.mouseY,this,b));var a=this._getObjectsUnderPoint(this.mouseX,this.mouseY,null,this._mouseOverIntervalID?3:1);
if(a){if(a.onPress instanceof Function&&(b=new MouseEvent("onPress",this.mouseX,this.mouseY,a,b),a.onPress(b),b.onMouseMove||b.onMouseUp))this._activeMouseEvent=b;this._activeMouseTarget=a}};a._testMouseOver=function(){if(!(this.mouseX==this._mouseOverX&&this.mouseY==this._mouseOverY&&this.mouseInBounds)){var b=null;if(this.mouseInBounds)b=this._getObjectsUnderPoint(this.mouseX,this.mouseY,null,3),this._mouseOverX=this.mouseX,this._mouseOverY=this.mouseY;if(this._mouseOverTarget!=b){if(this._mouseOverTarget&&
this._mouseOverTarget.onMouseOut)this._mouseOverTarget.onMouseOut(new MouseEvent("onMouseOut",this.mouseX,this.mouseY,this._mouseOverTarget));if(b&&b.onMouseOver)b.onMouseOver(new MouseEvent("onMouseOver",this.mouseX,this.mouseY,b));this._mouseOverTarget=b}}};a._handleDoubleClick=function(b){if(this.onDoubleClick)this.onDoubleClick(new MouseEvent("onDoubleClick",this.mouseX,this.mouseY,this,b));var a=this._getObjectsUnderPoint(this.mouseX,this.mouseY,null,this._mouseOverIntervalID?3:1);if(a&&a.onDoubleClick instanceof
Function)a.onDoubleClick(new MouseEvent("onPress",this.mouseX,this.mouseY,a,b))};j.Stage=c})(window);(function(j){var c=function(b){this.initialize(b)},a=c.prototype=new DisplayObject;a.image=null;a.snapToPixel=true;a.sourceRect=null;a.DisplayObject_initialize=a.initialize;a.initialize=function(b){this.DisplayObject_initialize();typeof b=="string"?(this.image=new Image,this.image.src=b):this.image=b};a.isVisible=function(){return this.visible&&this.alpha>0&&this.scaleX!=0&&this.scaleY!=0&&this.image&&(this.image.complete||this.image.getContext||this.image.readyState>=2)};a.DisplayObject_draw=a.draw;
a.draw=function(b,a){if(this.DisplayObject_draw(b,a))return true;var c=this.sourceRect;c?b.drawImage(this.image,c.x,c.y,c.width,c.height,0,0,c.width,c.height):b.drawImage(this.image,0,0);return true};a.clone=function(){var b=new c(this.image);this.cloneProps(b);return b};a.toString=function(){return"[Bitmap (name="+this.name+")]"};j.Bitmap=c})(window);(function(j){var c=function(b){this.initialize(b)},a=c.prototype=new DisplayObject;a.onAnimationEnd=null;a.currentFrame=-1;a.currentAnimation=null;a.paused=true;a.spriteSheet=null;a.snapToPixel=true;a.offset=0;a.currentAnimationFrame=0;a._advanceCount=0;a._animation=null;a.DisplayObject_initialize=a.initialize;a.initialize=function(b){this.DisplayObject_initialize();this.spriteSheet=b};a.isVisible=function(){return this.visible&&this.alpha>0&&this.scaleX!=0&&this.scaleY!=0&&this.spriteSheet.complete&&
this.currentFrame>=0};a.DisplayObject_draw=a.draw;a.draw=function(b,a){if(this.DisplayObject_draw(b,a))return true;this._normalizeFrame();var c=this.spriteSheet.getFrame(this.currentFrame);if(c!=null){var e=c.rect;b.drawImage(c.image,e.x,e.y,e.width,e.height,-c.regX,-c.regY,e.width,e.height);return true}};a.play=function(){this.paused=false};a.stop=function(){this.paused=true};a.gotoAndPlay=function(b){this.paused=false;this._goto(b)};a.gotoAndStop=function(b){this.paused=true;this._goto(b)};a.advance=
function(){this._animation?this.currentAnimationFrame++:this.currentFrame++;this._normalizeFrame()};a.clone=function(){var b=new c(this.spriteSheet);this.cloneProps(b);return b};a.toString=function(){return"[BitmapAnimation (name="+this.name+")]"};a._tick=function(b){var a=this._animation?this._animation.frequency:1;!this.paused&&(++this._advanceCount+this.offset)%a==0&&this.advance();if(this.onTick)this.onTick(b)};a._normalizeFrame=function(){var b=this._animation;if(b)if(this.currentAnimationFrame>=
b.frames.length){if(b.next?this._goto(b.next):(this.paused=true,this.currentAnimationFrame=b.frames.length-1,this.currentFrame=b.frames[this.currentAnimationFrame]),this.onAnimationEnd)this.onAnimationEnd(this,b.name)}else this.currentFrame=b.frames[this.currentAnimationFrame];else if(this.currentFrame>=this.spriteSheet.getNumFrames()&&(this.currentFrame=0,this.onAnimationEnd))this.onAnimationEnd(this,null)};a.DisplayObject_cloneProps=a.cloneProps;a.cloneProps=function(b){this.DisplayObject_cloneProps(b);
b.onAnimationEnd=this.onAnimationEnd;b.currentFrame=this.currentFrame;b.currentAnimation=this.currentAnimation;b.paused=this.paused;b.offset=this.offset;b._animation=this._animation;b.currentAnimationFrame=this.currentAnimationFrame};a._goto=function(b){if(isNaN(b)){var a=this.spriteSheet.getAnimation(b);if(a)this.currentAnimationFrame=0,this._animation=a,this.currentAnimation=b,this._normalizeFrame()}else this.currentAnimation=this._animation=null,this.currentFrame=b};j.BitmapAnimation=c})(window);(function(j){var c=function(b){this.initialize(b)},a=c.prototype=new DisplayObject;a.graphics=null;a.DisplayObject_initialize=a.initialize;a.initialize=function(b){this.DisplayObject_initialize();this.graphics=b?b:new Graphics};a.isVisible=function(){return this.visible&&this.alpha>0&&this.scaleX!=0&&this.scaleY!=0&&this.graphics};a.DisplayObject_draw=a.draw;a.draw=function(b,a){if(this.DisplayObject_draw(b,a))return true;this.graphics.draw(b);return true};a.clone=function(b){b=new c(b&&this.graphics?
this.graphics.clone():this.graphics);this.cloneProps(b);return b};a.toString=function(){return"[Shape (name="+this.name+")]"};j.Shape=c})(window);(function(j){var c=function(b,a,c){this.initialize(b,a,c)},a=c.prototype=new DisplayObject;c._workingContext=document.createElement("canvas").getContext("2d");a.text="";a.font=null;a.color=null;a.textAlign=null;a.textBaseline=null;a.maxWidth=null;a.outline=false;a.lineHeight=null;a.lineWidth=null;a.DisplayObject_initialize=a.initialize;a.initialize=function(b,a,c){this.DisplayObject_initialize();this.text=b;this.font=a;this.color=c?c:"#000"};a.isVisible=function(){return Boolean(this.visible&&this.alpha>
0&&this.scaleX!=0&&this.scaleY!=0&&this.text!=null&&this.text!="")};a.DisplayObject_draw=a.draw;a.draw=function(b,a){if(this.DisplayObject_draw(b,a))return true;this.outline?b.strokeStyle=this.color:b.fillStyle=this.color;b.font=this.font;b.textAlign=this.textAlign?this.textAlign:"start";b.textBaseline=this.textBaseline?this.textBaseline:"alphabetic";for(var c=String(this.text).split(/(?:\r\n|\r|\n)/),e=this.lineHeight==null?this.getMeasuredLineHeight():this.lineHeight,d=0,f=0,g=c.length;f<g;f++){var k=
b.measureText(c[f]).width;if(this.lineWidth==null||k<this.lineWidth)this._drawTextLine(b,c[f],d);else{for(var k=c[f].split(/(\s)/),i=k[0],l=1,j=k.length;l<j;l+=2)b.measureText(i+k[l]+k[l+1]).width>this.lineWidth?(this._drawTextLine(b,i,d),d+=e,i=k[l+1]):i+=k[l]+k[l+1];this._drawTextLine(b,i,d)}d+=e}return true};a.getMeasuredWidth=function(){return this._getWorkingContext().measureText(this.text).width};a.getMeasuredLineHeight=function(){return this._getWorkingContext().measureText("M").width*1.2};
a.clone=function(){var b=new c(this.text,this.font,this.color);this.cloneProps(b);return b};a.toString=function(){return"[Text (text="+(this.text.length>20?this.text.substr(0,17)+"...":this.text)+")]"};a.DisplayObject_cloneProps=a.cloneProps;a.cloneProps=function(b){this.DisplayObject_cloneProps(b);b.textAlign=this.textAlign;b.textBaseline=this.textBaseline;b.maxWidth=this.maxWidth;b.outline=this.outline;b.lineHeight=this.lineHeight;b.lineWidth=this.lineWidth};a._getWorkingContext=function(){var b=
c._workingContext;b.font=this.font;b.textAlign=this.textAlign?this.textAlign:"start";b.textBaseline=this.textBaseline?this.textBaseline:"alphabetic";return b};a._drawTextLine=function(b,a,c){this.outline?b.strokeText(a,0,c,this.maxWidth):b.fillText(a,0,c,this.maxWidth||65535)};j.Text=c})(window);(function(j){var c=function(){throw"SpriteSheetUtils cannot be instantiated";};c._workingCanvas=document.createElement("canvas");c._workingContext=c._workingCanvas.getContext("2d");c.addFlippedFrames=function(a,b,j,h){if(b||j||h){var e=0;b&&c._flip(a,++e,true,false);j&&c._flip(a,++e,false,true);h&&c._flip(a,++e,true,true)}};c.extractFrame=function(a,b){isNaN(b)&&(b=a.getAnimation(b).frames[0]);var j=a.getFrame(b);if(!j)return null;var h=j.rect,e=c._workingCanvas;e.width=h.width;e.height=h.height;
c._workingContext.drawImage(j.image,h.x,h.y,h.width,h.height,0,0,h.width,h.height);j=new Image;j.src=e.toDataURL("image/png");return j};c._flip=function(a,b,j,h){for(var e=a._images,d=c._workingCanvas,f=c._workingContext,g=e.length/b,k=0;k<g;k++){var i=e[k];i.__tmp=k;d.width=i.width;d.height=i.height;f.setTransform(j?-1:1,0,0,h?-1:1,j?i.width:0,h?i.height:0);f.drawImage(i,0,0);var l=new Image;l.src=d.toDataURL("image/png");l.width=i.width;l.height=i.height;e.push(l)}f=a._frames;d=f.length/b;for(k=
0;k<d;k++){var i=f[k],o=i.rect.clone(),l=e[i.image.__tmp+g*b],m={image:l,rect:o,regX:i.regX,regY:i.regY};if(j)o.x=l.width-o.x-o.width,m.regX=o.width-i.regX;if(h)o.y=l.height-o.y-o.height,m.regY=o.height-i.regY;f.push(m)}j="_"+(j?"h":"")+(h?"v":"");h=a._animations;a=a._data;e=h.length/b;for(k=0;k<e;k++){f=h[k];i=a[f];g={name:f+j,frequency:i.frequency,next:i.next,frames:[]};i.next&&(g.next+=j);f=i.frames;i=0;for(l=f.length;i<l;i++)g.frames.push(f[i]+d*b);a[g.name]=g;h.push(g.name)}};j.SpriteSheetUtils=
c})(window);(function(j){var c=function(b){this.initialize(b)},a=c.prototype=new DisplayObject;a.htmlElement=null;a._style=null;a.DisplayObject_initialize=a.initialize;a.initialize=function(b){typeof b=="string"&&(b=document.getElementById(b));this.DisplayObject_initialize();this.mouseEnabled=false;if(this.htmlElement=b)this._style=b.style,this._style.position="absolute",this._style.transformOrigin=this._style.webkitTransformOrigin=this._style.msTransformOrigin=this._style.MozTransformOrigin="0% 0%"};a.isVisible=
function(){return this.htmlElement!=null};a.draw=function(){if(this.htmlElement!=null){var b=this._matrix,a=this.htmlElement;a.style.opacity=""+b.alpha;a.style.visibility=this.visible?"visible":"hidden";a.style.transform=a.style.webkitTransform=a.style.oTransform=a.style.msTransform=["matrix("+b.a,b.b,b.c,b.d,b.tx,b.ty+")"].join(",");a.style.MozTransform=["matrix("+b.a,b.b,b.c,b.d,b.tx+"px",b.ty+"px)"].join(",");return true}};a.cache=function(){};a.uncache=function(){};a.updateCache=function(){};
a.hitTest=function(){};a.localToGlobal=function(){};a.globalToLocal=function(){};a.localToLocal=function(){};a.clone=function(){var a=new c;this.cloneProps(a);return a};a.toString=function(){return"[DOMElement (name="+this.name+")]"};a._tick=function(a){if(this.htmlElement!=null&&(this.htmlElement.style.visibility="hidden",this.onTick))this.onTick(a)};j.DOMElement=c})(window);(function(j){var c=function(){this.initialize()},a=c.prototype;a.initialize=function(){};a.getBounds=function(){return new Rectangle(0,0,0,0)};a.applyFilter=function(){};a.toString=function(){return"[Filter]"};a.clone=function(){return new c};j.Filter=c})(window);(function(j){var c=function(){throw"Touch cannot be instantiated";};c.isSupported=function(){return"ontouchstart"in j};c.enable=function(a){if(a!=null&&c.isSupported())a._primaryTouchId=-1,a._handleTouchMoveListener=null,a.canvas.addEventListener("touchstart",function(b){c._handleTouchStart(a,b)},false),document.addEventListener("touchend",function(b){c._handleTouchEnd(a,b)},false)};c._handleTouchStart=function(a,b){b.preventDefault();if(a._primaryTouchId==-1){a._handleTouchMoveListener=a._handleTouchMoveListener||
function(b){c._handleTouchMove(a,b)};document.addEventListener("touchmove",a._handleTouchMoveListener,false);var j=b.changedTouches[0];a._primaryTouchId=j.identifier;a._updateMousePosition(j.pageX,j.pageY);a._handleMouseDown(j)}};c._handleTouchMove=function(a,b){var j=c._findPrimaryTouch(a,b.changedTouches);j&&a._handleMouseMove(j)};c._handleTouchEnd=function(a,b){var j=c._findPrimaryTouch(a,b.changedTouches);if(j)a._primaryTouchId=-1,a._handleMouseUp(j),document.removeEventListener("touchmove",a._handleTouchMoveListener),
a._handleTouchMoveListener=null};c._findPrimaryTouch=function(a,b){for(var c=b.length,h=0;h<c;h++){var e=b[h];if(e.identifier==a._primaryTouchId)return e}return null};j.Touch=c})(window);

/*
* TweenJS
* Visit http://createjs.com/ for documentation, updates and examples.
*
* Copyright (c) 2011 gskinner.com, inc.
*
* Distributed under the terms of the MIT license.
* http://www.opensource.org/licenses/mit-license.html
*
* This notice shall be included in all copies or substantial portions of the Software.
*/
(function(k){var b=function(g,a){this.initialize(g,a)},a=b.prototype;b.NONE=0;b.LOOP=1;b.REVERSE=2;b.IGNORE={};b._tweens=[];b._plugins={};b.get=function(g,a,c){return new b(g,a,c)};b.tick=function(g,a){for(var c=b._tweens,e=c.length-1;e>=0;e--){var d=c[e];if(!a||d.ignoreGlobalPause)d.tick(d._useTicks?1:g)}};Ticker&&Ticker.addListener(b,false);b.removeTweens=function(g){if(g.tweenjs_count){for(var a=b._tweens,c=a.length-1;c>=0;c--)a[c]._target==g&&a.splice(c,1);g.tweenjs_count=0}};b.installPlugin=
function(g,a){var c=g.priority;if(c==null)g.priority=c=0;for(var e=0,d=a.length,f=b._plugins;e<d;e++){var i=a[e];if(f[i]){for(var l=f[i],j=0,k=l.length;j<k;j++)if(c<l[j].priority)break;f[i].splice(j,0,g)}else f[i]=[g]}};b._register=function(g,a){var c=g._target;if(a){if(c)c.tweenjs_count=c.tweenjs_count?c.tweenjs_count+1:1;b._tweens.push(g)}else c&&c.tweenjs_count--,c=b._tweens.indexOf(g),c!=-1&&b._tweens.splice(c,1)};a.ignoreGlobalPause=false;a.loop=false;a.duration=0;a.pluginData=null;a._paused=
false;a._curQueueProps=null;a._initQueueProps=null;a._steps=null;a._actions=null;a._prevPosition=0;a._stepPosition=0;a._prevPos=-1;a._target=null;a._useTicks=false;a.initialize=function(g,a,c){this._target=g;if(a)this._useTicks=a.useTicks,this.ignoreGlobalPause=a.ignoreGlobalPause,this.loop=a.loop,a.override&&b.removeTweens(g);this.pluginData=c||{};this._curQueueProps={};this._initQueueProps={};this._steps=[];this._actions=[];a&&a.paused?this._paused=true:b._register(this,true);a&&a.position!=null&&
this.setPosition(a.position,b.NONE)};a.wait=function(g){if(g==null||g<=0)return this;var a=this._cloneProps(this._curQueueProps);return this._addStep({d:g,p0:a,e:this._linearEase,p1:a})};a.to=function(a,b,c){if(isNaN(b)||b<0)b=0;return this._addStep({d:b||0,p0:this._cloneProps(this._curQueueProps),e:c,p1:this._cloneProps(this._appendQueueProps(a))})};a.call=function(a,b,c){return this._addAction({f:a,p:b?b:[this],o:c?c:this._target})};a.set=function(a,b){return this._addAction({f:this._set,o:this,
p:[a,b?b:this._target]})};a.play=function(a){return this.call(a.setPaused,[false],a)};a.pause=function(a){a||(a=this);return this.call(a.setPaused,[true],a)};a.setPosition=function(a,b){a<0&&(a=0);b==null&&(b=1);var c=a,e=false;if(c>=this.duration)this.loop?c%=this.duration:(c=this.duration,e=true);if(c==this._prevPos)return e;if(this._target)if(e)this._updateTargetProps(null,1);else if(this._steps.length>0){for(var d=0,f=this._steps.length;d<f;d++)if(this._steps[d].t>c)break;d=this._steps[d-1];this._updateTargetProps(d,
(this._stepPosition=c-d.t)/d.d,c)}d=this._prevPos;this._prevPos=c;this._prevPosition=a;b!=0&&this._actions.length>0&&(this._useTicks?this._runActions(c,c):b==1&&c<d?(d!=this.duration&&this._runActions(d,this.duration),this._runActions(0,c,true)):this._runActions(d,c));e&&this.setPaused(true);return e};a.tick=function(a){this._paused||this.setPosition(this._prevPosition+a)};a.setPaused=function(a){if(this._paused!=!!a)this._paused=!!a,b._register(this,!a);return this};a.w=a.wait;a.t=a.to;a.c=a.call;
a.s=a.set;a.toString=function(){return"[Tween]"};a.clone=function(){throw"Tween can not be cloned.";};a._updateTargetProps=function(a,h,c){var e,d,f,i;!a&&h==1?e=d=this._curQueueProps:(a.e&&(h=a.e(h,0,1,1)),e=a.p0,d=a.p1);for(n in this._initQueueProps){if((f=e[n])==null)e[n]=f=this._initQueueProps[n];if((i=d[n])==null)d[n]=i=f;f=f==i||h==0||h==1||typeof f!="number"?h==1?i:f:f+(i-f)*h;var l=false;if(i=b._plugins[n])for(var j=0,k=i.length;j<k;j++){var m=i[j].tween(this,n,f,e,d,h,c,!a);m==b.IGNORE?l=
true:f=m}l||(this._target[n]=f)}};a._runActions=function(a,b,c){var e=a,d=b,f=-1,i=this._actions.length,k=1;a>b&&(e=b,d=a,f=i,i=k=-1);for(;(f+=k)!=i;){var b=this._actions[f],j=b.t;(j==d||j>e&&j<d||c&&j==a)&&b.f.apply(b.o,b.p)}};a._appendQueueProps=function(a){var h,c,e,d;for(d in a){if(this._initQueueProps[d]==null){c=this._target[d];if(h=b._plugins[d])for(var f=0,i=h.length;f<i;f++)e=h[f].init(this,d,c),e!=b.IGNORE&&(c=e);this._initQueueProps[d]=c}this._curQueueProps[d]=a[d]}return this._curQueueProps};
a._cloneProps=function(a){var b={},c;for(c in a)b[c]=a[c];return b};a._addStep=function(a){if(a.d>0)this._steps.push(a),a.t=this.duration,this.duration+=a.d;return this};a._addAction=function(a){a.t=this.duration;this._actions.push(a);return this};a._set=function(a,b){for(var c in a)b[c]=a[c]};k.Tween=b})(window);(function(k){var b=function(a,b,c){this.initialize(a,b,c)},a=b.prototype;a.ignoreGlobalPause=false;a.duration=0;a.loop=false;a._paused=true;a._tweens=null;a._labels=null;a._prevPosition=0;a._prevPos=-1;a._useTicks=false;a.initialize=function(a,b,c){this._tweens=[];if(c)this._useTicks=c.useTicks,this.loop=c.loop,this.ignoreGlobalPause=c.ignoreGlobalPause;a&&this.addTween.apply(this,a);this.setLabels(b);(!c||!c.paused)&&Tween._register(this,true);c&&c.position!=null&&this.setPosition(c.position,Tween.NONE)};
a.addTween=function(a){var b=arguments.length;if(b>1){for(var c=0;c<b;c++)this.addTween(arguments[c]);return arguments[0]}else if(b==0)return null;this.removeTween(a);this._tweens.push(a);a.setPaused(true);a._paused=false;a._useTicks=this._useTicks;if(a.duration>this.duration)this.duration=a.duration;this._prevPos>=0&&a.setPosition(this._prevPos,Tween.NONE);return a};a.removeTween=function(a){var b=arguments.length;if(b>1){for(var c=true,e=0;e<b;e++)c=c&&this.removeTween(arguments[e]);return c}else if(b==
0)return false;b=this._tweens.indexOf(a);return b!=-1?(this._tweens.splice(b,1),a.duration>=this.duration&&this.updateDuration(),true):false};a.addLabel=function(a,b){this._labels[a]=b};a.setLabels=function(a){this._labels=a?a:{}};a.gotoAndPlay=function(a){this.setPaused(false);this._goto(a)};a.gotoAndStop=function(a){this.setPaused(true);this._goto(a)};a.setPosition=function(a,b){a<0&&(a=0);var c=this.loop?a%this.duration:a,e=!this.loop&&a>=this.duration;if(c==this._prevPos)return e;this._prevPosition=
a;this._prevPos=c;for(var d=0,f=this._tweens.length;d<f;d++)if(this._tweens[d].setPosition(c,b),c!=this._prevPos)return false;e&&this.setPaused(true);return e};a.setPaused=function(a){if(this._paused!=!!a)this._paused=!!a,Tween._register(this,!a)};a.updateDuration=function(){for(var a=this.duration=0,b=this._tweens.length;a<b;a++)if(tween=this._tweens[a],tween.duration>this.duration)this.duration=tween.duration};a.tick=function(a){this.setPosition(this._prevPosition+a)};a.resolve=function(a){var b=
parseFloat(a);isNaN(b)&&(b=this._labels[a]);return b};a.toString=function(){return"[Timeline]"};a.clone=function(){throw"Timeline can not be cloned.";};a._goto=function(a){a=this.resolve(a);a!=null&&this.setPosition(a)};k.Timeline=b})(window);(function(k){var b=function(){throw"Ease cannot be instantiated.";};b.linear=function(a){return a};b.none=b.linear;b.get=function(a){a<-1&&(a=-1);a>1&&(a=1);return function(b){return a==0?b:a<0?b*(b*-a+1+a):b*((2-b)*a+(1-a))}};b.getPowIn=function(a){return function(b){return Math.pow(b,a)}};b.getPowOut=function(a){return function(b){return 1-Math.pow(1-b,a)}};b.getPowInOut=function(a){return function(b){return(b*=2)<1?0.5*Math.pow(b,a):1-0.5*Math.abs(Math.pow(2-b,a))}};b.quadIn=b.getPowIn(2);b.quadOut=
b.getPowOut(2);b.quadInOut=b.getPowInOut(2);b.cubicIn=b.getPowIn(3);b.cubicOut=b.getPowOut(3);b.cubicInOut=b.getPowInOut(3);b.quartIn=b.getPowIn(4);b.quartOut=b.getPowOut(4);b.quartInOut=b.getPowInOut(4);b.quintIn=b.getPowIn(5);b.quintOut=b.getPowOut(5);b.quintInOut=b.getPowInOut(5);b.sineIn=function(a){return 1-Math.cos(a*Math.PI/2)};b.sineOut=function(a){return Math.sin(a*Math.PI/2)};b.sineInOut=function(a){return-0.5*(Math.cos(Math.PI*a)-1)};b.getBackIn=function(a){return function(b){return b*
b*((a+1)*b-a)}};b.backIn=b.getBackIn(1.7);b.getBackOut=function(a){return function(b){return--b*b*((a+1)*b+a)+1}};b.backOut=b.getBackOut(1.7);b.getBackInOut=function(a){a*=1.525;return function(b){return(b*=2)<1?0.5*b*b*((a+1)*b-a):0.5*((b-=2)*b*((a+1)*b+a)+2)}};b.backInOut=b.getBackInOut(1.7);b.circIn=function(a){return-(Math.sqrt(1-a*a)-1)};b.circOut=function(a){return Math.sqrt(1- --a*a)};b.circInOut=function(a){return(a*=2)<1?-0.5*(Math.sqrt(1-a*a)-1):0.5*(Math.sqrt(1-(a-=2)*a)+1)};b.bounceIn=
function(a){return 1-b.bounceOut(1-a)};b.bounceOut=function(a){return a<1/2.75?7.5625*a*a:a<2/2.75?7.5625*(a-=1.5/2.75)*a+0.75:a<2.5/2.75?7.5625*(a-=2.25/2.75)*a+0.9375:7.5625*(a-=2.625/2.75)*a+0.984375};b.bounceInOut=function(a){return a<0.5?b.bounceIn(a*2)*0.5:b.bounceOut(a*2-1)*0.5+0.5};b.getElasticIn=function(a,b){var h=Math.PI*2;return function(c){if(c==0||c==1)return c;var e=b/h*Math.asin(1/a);return-(a*Math.pow(2,10*(c-=1))*Math.sin((c-e)*h/b))}};b.elasticIn=b.getElasticIn(1,0.3);b.getElasticOut=
function(a,b){var h=Math.PI*2;return function(c){if(c==0||c==1)return c;var e=b/h*Math.asin(1/a);return a*Math.pow(2,-10*c)*Math.sin((c-e)*h/b)+1}};b.elasticOut=b.getElasticOut(1,0.3);b.getElasticInOut=function(a,b){var h=Math.PI*2;return function(c){var e=b/h*Math.asin(1/a);return(c*=2)<1?-0.5*a*Math.pow(2,10*(c-=1))*Math.sin((c-e)*h/b):a*Math.pow(2,-10*(c-=1))*Math.sin((c-e)*h/b)*0.5+1}};b.elasticInOut=b.getElasticInOut(1,0.3*1.5);k.Ease=b})(window);


/*
* EaselJS
* Visit http://createjs.com/ for documentation, updates and examples.
*
* Copyright (c) 2011 gskinner.com, inc.
*
* Distributed under the terms of the MIT license.
* http://www.opensource.org/licenses/mit-license.html
*
* This notice shall be included in all copies or substantial portions of the Software.
*/
(function(d){var c=function(b,a,c,e){this.initialize(b,a,c,e)},a=c.prototype=new Container;c.INDEPENDENT="independent";c.SINGLE_FRAME="single";c.SYNCHED="synched";a.startPosition=0;a.loop=true;a.timeline=null;a.paused=false;a._synchOffset=0;a._prevPos=-1;a._prevPosition=0;a.Container_initialize=a.initialize;a.initialize=function(b,a,g,e){this.mode=b||c.INDEPENDENT;this.startPosition=a||0;this.loop=g;props={paused:true,position:a,useTicks:true};this.Container_initialize();this.timeline=new Timeline(null,
e,props);this._managed={}};a.isVisible=function(){return this.visible&&this.alpha>0&&this.scaleX!=0&&this.scaleY!=0};a.Container_draw=a.draw;a.draw=function(b,a,c){if(this.DisplayObject_draw(b,a))return true;this._updateTimeline();this.Container_draw(b,a,c)};a.play=function(){this.paused=false};a.stop=function(){this.paused=true};a.gotoAndPlay=function(b){this.paused=false;this._goto(b)};a.gotoAndStop=function(b){this.paused=true;this._goto(b)};a.clone=function(){throw"MovieClip cannot be cloned.";
};a.toString=function(){return"[MovieClip (name="+this.name+")]"};a.Container__tick=a._tick;a._tick=function(){if(!this.paused&&this.mode==c.INDEPENDENT)this._prevPosition=this._prevPos<0?0:this._prevPosition+1;this.Container__tick()};a._goto=function(b){b=this.timeline.resolve(b);if(b!=null)this._prevPosition=b,this._updateTimeline()};a._reset=function(){this._prevPos=-1};a._updateTimeline=function(){var b=this.timeline,a=b._tweens,g=this.children,e=this.mode!=c.INDEPENDENT;b.loop=this.loop==null?
true:this.loop;e?b.setPosition(this.startPosition+(this.mode==c.SINGLE_FRAME?0:this._synchOffset),Tween.NONE):b.setPosition(this._prevPosition);this._prevPosition=b._prevPosition;if(this._prevPos!=b._prevPos){this._prevPos=b._prevPos;for(var f in this._managed)this._managed[f]=1;for(b=a.length-1;b>=0;b--)if(f=a[b],e=f._target,e!=this)f=f._stepPosition,e instanceof DisplayObject?this._addManagedChild(e,f):this._setState(e.state,f);for(b=g.length-1;b>=0;b--)a=g[b].id,this._managed[a]==1&&(this.removeChildAt(b),
delete this._managed[a])}};a._setState=function(b,a){if(b)for(var c=0,e=b.length;c<e;c++){var f=b[c],d=f.t,f=f.p,h;for(h in f)d[h]=f[h];this._addManagedChild(d,a)}};a._addManagedChild=function(a,d){if(!a._off){this.addChild(a);if(a instanceof c)a._synchOffset=d,a.mode==c.INDEPENDENT&&(!this._managed[a.id]||this._prevPos==0)&&a._reset();this._managed[a.id]=2}};d.MovieClip=c})(window);
(function(){var d=function(){throw"MovieClipPlugin cannot be instantiated.";};d.priority=100;d.install=function(){Tween.installPlugin(d,["startPosition"])};d.init=function(c,a,b){if(a=="startPosition"||!(c._target instanceof MovieClip))return b};d.tween=function(c,a,b,d,g,e){return!(c._target instanceof MovieClip)?b:e==1?g[a]:d[a]};d.install()})();

}
/*!
 * jQuery-ajaxTransport-XDomainRequest - v1.0.3 - 2014-06-06
 * https://github.com/MoonScript/jQuery-ajaxTransport-XDomainRequest
 * Copyright (c) 2014 Jason Moon (@JSONMOON)
 * Licensed MIT (/blob/master/LICENSE.txt)
 */
(function(a){if(typeof define==='function'&&define.amd){define(['jquery'],a)}else if(typeof exports==='object'){module.exports=a(require('jquery'))}else{a(jQuery)}}(function($){if($.support.cors||!$.ajaxTransport||!window.XDomainRequest){return}var n=/^https?:\/\//i;var o=/^get|post$/i;var p=new RegExp('^'+location.protocol,'i');$.ajaxTransport('* text html xml json',function(j,k,l){if(!j.crossDomain||!j.async||!o.test(j.type)||!n.test(j.url)||!p.test(j.url)){return}var m=null;return{send:function(f,g){var h='';var i=(k.dataType||'').toLowerCase();m=new XDomainRequest();if(/^\d+$/.test(k.timeout)){m.timeout=k.timeout}m.ontimeout=function(){g(500,'timeout')};m.onload=function(){var a='Content-Length: '+m.responseText.length+'\r\nContent-Type: '+m.contentType;var b={code:200,message:'success'};var c={text:m.responseText};try{if(i==='html'||/text\/html/i.test(m.contentType)){c.html=m.responseText}else if(i==='json'||(i!=='text'&&/\/json/i.test(m.contentType))){try{c.json=$.parseJSON(m.responseText)}catch(e){b.code=500;b.message='parseerror'}}else if(i==='xml'||(i!=='text'&&/\/xml/i.test(m.contentType))){var d=new ActiveXObject('Microsoft.XMLDOM');d.async=false;try{d.loadXML(m.responseText)}catch(e){d=undefined}if(!d||!d.documentElement||d.getElementsByTagName('parsererror').length){b.code=500;b.message='parseerror';throw'Invalid XML: '+m.responseText;}c.xml=d}}catch(parseMessage){throw parseMessage;}finally{g(b.code,b.message,c,a)}};m.onprogress=function(){};m.onerror=function(){g(500,'error',{text:m.responseText})};if(k.data){h=($.type(k.data)==='string')?k.data:$.param(k.data)}m.open(j.type,j.url);m.send(h)},abort:function(){if(m){m.abort()}}}})}));

var eon = eon || {};

eon.Utils = {
    numberFormat: function (number, decimals, dec_point, thousands_sep) {
        number = (number + '').replace(/[^0-9+\-Ee.]/g, '');
        var n = !isFinite(+number) ? 0 : +number,
            prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),
            sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,
            dec = (typeof dec_point === 'undefined') ? '.' : dec_point,
            s = '',
            toFixedFix = function (n, prec) {
                var k = Math.pow(10, prec);
                return '' + Math.round(n * k) / k;
            };
        // Fix for IE parseFloat(0.55).toFixed(0) = 0;
        s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');
        if (s[0].length > 3) {
            s[0] = s[0].replace(/\B(?=(?:\d{3})+(?!\d))/g, sep);
        }
        if ((s[1] || '').length < prec) {
            s[1] = s[1] || '';
            s[1] += new Array(prec - s[1].length + 1).join('0');
        }
        return s.join(dec);
    }
};


eon.Graph = {};

eon.Graph.View = function() {
    var graphData = new eon.Graph.Data(),
        canvas = document.querySelector('.graph-canvas canvas');

        this.canvas = canvas;
    graphData.load();

    canvas.style.width = '625px';
    canvas.style.height = '300px';

    this.graphData = graphData.data;
    this.stage = new Stage(canvas);
};

eon.Graph.View.prototype.clear = function() {
  $('.textfield').remove();
};

eon.Graph.View.prototype.init = function() {
    var tempDiagramm,
        index = 0,
        length = this.graphData.length;

    for (; index < length; index++) {
        tempDiagramm = new eon.Graph.Diagram(this.graphData[index]);
        tempDiagramm.x = 0;

        if (index !== 0)
            tempDiagramm.y = (350 * temp) + (25 * temp);

        this.stage.addChild(tempDiagramm.movieClip);
    }
};

eon.Graph.View.prototype.update = function(kosten, leistungen, rendite, kapitalwert) {
    var    renditeElement = document.querySelector('.rendite'),
        kapitalwertElement = document.querySelector('.kapitalwert');

    renditeElement.innerHTML = eon.Utils.numberFormat(rendite, 2, ',', '.');
    kapitalwertElement.innerHTML = eon.Utils.numberFormat(kapitalwert, 2, ',', '.');

    this.stage.update();
};

eon.Graph.Diagram = function(data) {
    this.data = data;
    this.container = [];
    this.movieClip = new Container();

    this.nullLine = 0;
    this.width = 1640;
    this.height = 500;
    this.init();
};

eon.Graph.Diagram.prototype.init = function() {
    this.drawLines();
    this.drawBars();
};

eon.Graph.Diagram.prototype.drawLines = function() {
    var count = 9,
        distance = this.height / count,
        i = 0;


    for (; i < count; i++) {
        this.container.push(
            this.data.max - (i * this.data.gesamtgerechnet / count)
        );
    }

    this.sort();

    var c = this.container.length - 1;
    for (i = 0; i < this.container.length; i++) {
        var multLineN = new Shape();

        multLineN.graphics.setStrokeStyle(2);
        multLineN.graphics.beginStroke('rgba(153, 153, 153, .5)');
        multLineN.graphics.moveTo(150, 70 + distance * i);
        multLineN.graphics.lineTo((this.width-20), 70 + distance * i);

        this.movieClip.addChild(multLineN);

        this.Textfelder(
            eon.Utils.numberFormat(this.container[c], 0, ',', '.') + " €",
            {
                fontFormat: '10px Arial',
                fontColor: '#b2b2b2',
                fontAlign: 'right',
                x: -28,
                y: 70 + (distance -2 ) * i
            }
        );
        c--;
    }

    var mainLine = new Shape();
    mainLine.graphics.setStrokeStyle(4);
    mainLine.graphics.beginStroke('rgba(153, 153, 153, 1)');
    mainLine.graphics.moveTo(150, 16+this.height - this.height / 9 * (this.nullLine));
    mainLine.graphics.lineTo((this.width-20), 16+this.height - this.height / 9 * (this.nullLine));
    this.movieClip.addChild(mainLine);

    for (i = 1; i < 20; i++ ) {
        var querLine = new Shape();
        querLine.graphics.setStrokeStyle(4);
        querLine.graphics.beginStroke('rgba(153, 153, 153, 1)');
        querLine.graphics.moveTo(152+i*(this.width-20)/21,16+this.height-this.height/9 * (this.nullLine));
        querLine.graphics.lineTo(152+i*(this.width-20)/21,16+this.height-this.height/9 * (this.nullLine)+10);
        this.movieClip.addChild(querLine);
        this.Textfelder(
            i,
            {
                fontFormat: '12px Arial',
                fontColor: 'rgb(153, 153, 153)',
                fontAlign: 'left',
                x: 110+i*58.5,
                y: 25 + this.height - this.height / 9 * (this.nullLine) + 25
            }
        );
    }
};

eon.Graph.Diagram.prototype.drawBars = function() {
    var tempBuildGraph;
    for (var i = this.data.lineArr.length - 1; i >= 0; i--) {
        tempBuildGraph = new eon.Graph.Bar(
            this.data.lineArr[i],
            (this.height-this.height/9)/(Math.abs(this.container[this.container.length-1])+Math.abs(this.container[0])),
            this.width
        );

        tempBuildGraph.movieClip.y = 16+this.height-(this.height/9 * (this.nullLine));
        tempBuildGraph.movieClip.x = 92;
        this.movieClip.addChild(tempBuildGraph.movieClip);
    }
};

eon.Graph.Diagram.prototype.Textfelder = function(string, options) {
    var textfield = document.createElement('div');
    textfield.classList.add('textfield');
    textfield.style.left = (options.x / 2) + 'px';
    textfield.style.top = (options.y / 2) - 12 + 'px';
    textfield.style.color = options.fontColor;
    textfield.style.textAlign = options.fontAlign;
    textfield.style.font = options.fontFormat;
    textfield.innerHTML = string;

    document.querySelector('.graph-canvas').appendChild(textfield);
};

eon.Graph.Diagram.prototype.sort = function() {
    var i, h, t, c,
        numeric_sort = function(a, b) { return a - b;};


    this.container.sort(numeric_sort);


    t = 2000000000;
    for (i = 0; i < this.container.length; i++) {
        if ((""+parseInt(this.container[i], 10)).length < t)
            t = (""+parseInt(this.container[i], 10)).length;
    }
    for (i = 0; i < this.container.length;i++){
        h = this.container[i];

        this.container[i] = h / Math.pow(10, t - 1);
        this.container[i] = this.container[i] * Math.pow(10, t - 1);
    }

    var s = this.container.slice().sort(numeric_sort);

    t = 2000000000;
    for (i = 0; i < s.length; i++) {
        if (Math.abs(s[i]) < t) {
            t = Math.abs(s[i]);
            h = i;
        }
    }

    this.container[h] = 0;

    t = 0;
    if (h > 0) {
        t = Math.abs(this.container[h - 1]);
    }

    if (h < this.container.length-1) {
        if (Math.abs(this.container[h + 1]) > t) {
            t = Math.abs(this.container[h + 1]);
        }
    }

    c = 1;
    for (i = h + 1; i < this.container.length; i++) {
        this.container[i] = t * c;
        c++;
    }


    c = -1;
    for (i = h - 1; i >=0; i--) {
        this.container[i] = t * c;
        c--;
    }

    t = 2000000000;
    for (i = 0; i < this.container.length; i++) {
        if ((""+parseInt(this.container[i], 10)).length < t && this.container[i] !== 0)
            t = (""+parseInt(this.container[i], 10)).length;
    }


    for (i = 0; i < this.container.length; i++){
        h = this.container[i];
        this.container[i] = Math.ceil(h / Math.pow(10, t - 1));
        this.container[i] = this.container[i] * Math.pow(10, t - 1);
    }

    t = 2000000000;
    for (i = 0; i < s.length; i++) {
        if (Math.abs(s[i]) < t) {
            t = Math.abs(s[i]);
            h = i;
        }
    }

    t = 0;
    if (h > 0) {
        t = Math.abs(this.container[h - 1]);
    }

    if (h < this.container.length-1) {
        if (Math.abs(this.container[h + 1]) > t) {
            t = Math.abs(this.container[h + 1]);
        }
    }

    this.nullLine = h;

    c = 1;
    for (i = h + 1; i < this.container.length; i++) {
        this.container[i] = t * c;
        c++;
    }

    c = -1;
    for (i = h - 1; i >=0; i--) {
        this.container[i] = t * c;
        c--;
    }

};

eon.Graph.Bar = function(data, fakPos, width) {
    this.data = data;
    this.fakPos = fakPos;
    this.movieClip = new Container();
    this.width = width;

    this.init();
};

eon.Graph.Bar.prototype.init = function() {
    if (this.data.style === 'line') {
        this.drawLine();
    } else {
        this.drawBar();
    }
};


eon.Graph.Bar.prototype.drawLine = function() {
    var theLine = new Shape();
    theLine.graphics.setStrokeStyle(4);
    theLine.graphics.beginStroke(this.data.color);
    theLine.graphics.moveTo(
        60,
        -this.data.data[0] * this.fakPos
    );


    for (var z = 1; z < this.data.data.length; z++) {
        theLine.graphics.lineTo(
            60 + z*(this.width-20) / this.data.data.length,
            -this.data.data[z] * this.fakPos
        );
    }

    this.movieClip.addChild(theLine);
};

eon.Graph.Bar.prototype.drawBar = function() {
    var theBalken = new Shape();

    theBalken.graphics.beginFill(this.data.color);
    for (var z = 0; z < this.data.data.length; z++) {
        theBalken.graphics.drawRect(
            55 + z * (this.width-20) / this.data.data.length - 5,
            0,
            20,
            -this.data.data[z] * this.fakPos
        );
    }

    theBalken.graphics.endFill();

    this.movieClip.addChild(theBalken);
};

eon.Graph.Data = function() {
    this.data = [];
};

eon.Graph.Data.prototype.load = function() {
    var tmpGraphData = {},
        tmpLineData;

    tmpGraphData.style = "line";
    tmpGraphData.lineArr = [];
    tmpGraphData.maxThree = [];
    tmpGraphData.minThree = [];
    tmpGraphData.fakPosiv = null;
    tmpGraphData.fakNegav = null;
    tmpGraphData.ueberschrift = "";

    tmpLineData = {};
    tmpLineData.color = '#f21c0a';
    tmpLineData.style = "line";
    tmpLineData.data = getFlashVars("ks");
    tmpLineData.positivster = this.maxValueCalc(tmpLineData.data);
    tmpLineData.kleinster = this.minValueCalc(tmpLineData.data);
    tmpGraphData.maxThree.push(tmpLineData.positivster);
    tmpGraphData.minThree.push(tmpLineData.kleinster);
    tmpGraphData.lineArr.push(tmpLineData);

    tmpLineData = {};
    tmpLineData.color = '#959595';
    tmpLineData.style = "balken";
    tmpLineData.data = getFlashVars("js");
    tmpLineData.positivster = this.maxValueCalc(tmpLineData.data);
    tmpLineData.kleinster = this.minValueCalc(tmpLineData.data);
    tmpGraphData.maxThree.push(tmpLineData.positivster);
    tmpGraphData.minThree.push(tmpLineData.kleinster);
    tmpGraphData.lineArr.push(tmpLineData);

    //Push
    tmpGraphData.max = this.maxValueCalc(tmpGraphData.maxThree);
    tmpGraphData.min = this.minValueCalc(tmpGraphData.minThree);
    tmpGraphData.fakPosiv = this.fakCalc(tmpGraphData.max);
    tmpGraphData.fakNegav = this.fakCalc(tmpGraphData.min);
    tmpGraphData.faktorAllgemein = this.fakcalcAbs(
        tmpGraphData.max,
        tmpGraphData.min
    );
    tmpGraphData.negativJaoderNein = tmpGraphData.min < 0;
    tmpGraphData.gesamtgerechnet = tmpGraphData.max - tmpGraphData.min;

    this.data.push(tmpGraphData);
};

eon.Graph.Data.prototype.fakcalcAbs = function(arg1, arg2) {
    var po = Math.abs(arg2);

    if (arg1 > po) {
        return arg1 / 130;
    } else {
        return Math.abs(arg2) / 130;
    }
};

eon.Graph.Data.prototype.maxValueCalc = function(para) {
    return Math.max.apply(Math, para);
};

eon.Graph.Data.prototype.minValueCalc = function(para) {
    return Math.min.apply(Math, para);
};

eon.Graph.Data.prototype.fakCalc = function(arg1) {
    return Math.abs(arg1 / 130);
};

/*!	SWFObject v2.2 <http://code.google.com/p/swfobject/> 
	is released under the MIT License <http://www.opensource.org/licenses/mit-license.php> 
*/

var swfobject = function() {
	
	var UNDEF = "undefined",
		OBJECT = "object",
		SHOCKWAVE_FLASH = "Shockwave Flash",
		SHOCKWAVE_FLASH_AX = "ShockwaveFlash.ShockwaveFlash",
		FLASH_MIME_TYPE = "application/x-shockwave-flash",
		EXPRESS_INSTALL_ID = "SWFObjectExprInst",
		ON_READY_STATE_CHANGE = "onreadystatechange",
		
		win = window,
		doc = document,
		nav = navigator,
		
		plugin = false,
		domLoadFnArr = [main],
		regObjArr = [],
		objIdArr = [],
		listenersArr = [],
		storedAltContent,
		storedAltContentId,
		storedCallbackFn,
		storedCallbackObj,
		isDomLoaded = false,
		isExpressInstallActive = false,
		dynamicStylesheet,
		dynamicStylesheetMedia,
		autoHideShow = true,
	
	/* Centralized function for browser feature detection
		- User agent string detection is only used when no good alternative is possible
		- Is executed directly for optimal performance
	*/	
	ua = function() {
		var w3cdom = typeof doc.getElementById != UNDEF && typeof doc.getElementsByTagName != UNDEF && typeof doc.createElement != UNDEF,
			u = nav.userAgent.toLowerCase(),
			p = nav.platform.toLowerCase(),
			windows = p ? /win/.test(p) : /win/.test(u),
			mac = p ? /mac/.test(p) : /mac/.test(u),
			webkit = /webkit/.test(u) ? parseFloat(u.replace(/^.*webkit\/(\d+(\.\d+)?).*$/, "$1")) : false, // returns either the webkit version or false if not webkit
			ie = !+"\v1", // feature detection based on Andrea Giammarchi's solution: http://webreflection.blogspot.com/2009/01/32-bytes-to-know-if-your-browser-is-ie.html
			playerVersion = [0,0,0],
			d = null;
		if (typeof nav.plugins != UNDEF && typeof nav.plugins[SHOCKWAVE_FLASH] == OBJECT) {
			d = nav.plugins[SHOCKWAVE_FLASH].description;
			if (d && !(typeof nav.mimeTypes != UNDEF && nav.mimeTypes[FLASH_MIME_TYPE] && !nav.mimeTypes[FLASH_MIME_TYPE].enabledPlugin)) { // navigator.mimeTypes["application/x-shockwave-flash"].enabledPlugin indicates whether plug-ins are enabled or disabled in Safari 3+
				plugin = true;
				ie = false; // cascaded feature detection for Internet Explorer
				d = d.replace(/^.*\s+(\S+\s+\S+$)/, "$1");
				playerVersion[0] = parseInt(d.replace(/^(.*)\..*$/, "$1"), 10);
				playerVersion[1] = parseInt(d.replace(/^.*\.(.*)\s.*$/, "$1"), 10);
				playerVersion[2] = /[a-zA-Z]/.test(d) ? parseInt(d.replace(/^.*[a-zA-Z]+(.*)$/, "$1"), 10) : 0;
			}
		}
		else if (typeof win.ActiveXObject != UNDEF) {
			try {
				var a = new ActiveXObject(SHOCKWAVE_FLASH_AX);
				if (a) { // a will return null when ActiveX is disabled
					d = a.GetVariable("$version");
					if (d) {
						ie = true; // cascaded feature detection for Internet Explorer
						d = d.split(" ")[1].split(",");
						playerVersion = [parseInt(d[0], 10), parseInt(d[1], 10), parseInt(d[2], 10)];
					}
				}
			}
			catch(e) {}
		}
		return { w3:w3cdom, pv:playerVersion, wk:webkit, ie:ie, win:windows, mac:mac };
	}(),
	
	/* Cross-browser onDomLoad
		- Will fire an event as soon as the DOM of a web page is loaded
		- Internet Explorer workaround based on Diego Perini's solution: http://javascript.nwbox.com/IEContentLoaded/
		- Regular onload serves as fallback
	*/ 
	onDomLoad = function() {
		if (!ua.w3) { return; }
		if ((typeof doc.readyState != UNDEF && doc.readyState == "complete") || (typeof doc.readyState == UNDEF && (doc.getElementsByTagName("body")[0] || doc.body))) { // function is fired after onload, e.g. when script is inserted dynamically 
			callDomLoadFunctions();
		}
		if (!isDomLoaded) {
			if (typeof doc.addEventListener != UNDEF) {
				doc.addEventListener("DOMContentLoaded", callDomLoadFunctions, false);
			}		
			if (ua.ie && ua.win) {
				doc.attachEvent(ON_READY_STATE_CHANGE, function() {
					if (doc.readyState == "complete") {
						doc.detachEvent(ON_READY_STATE_CHANGE, arguments.callee);
						callDomLoadFunctions();
					}
				});
				if (win == top) { // if not inside an iframe
					(function(){
						if (isDomLoaded) { return; }
						try {
							doc.documentElement.doScroll("left");
						}
						catch(e) {
							setTimeout(arguments.callee, 0);
							return;
						}
						callDomLoadFunctions();
					})();
				}
			}
			if (ua.wk) {
				(function(){
					if (isDomLoaded) { return; }
					if (!/loaded|complete/.test(doc.readyState)) {
						setTimeout(arguments.callee, 0);
						return;
					}
					callDomLoadFunctions();
				})();
			}
			addLoadEvent(callDomLoadFunctions);
		}
	}();
	
	function callDomLoadFunctions() {
		if (isDomLoaded) { return; }
		try { // test if we can really add/remove elements to/from the DOM; we don't want to fire it too early
			var t = doc.getElementsByTagName("body")[0].appendChild(createElement("span"));
			t.parentNode.removeChild(t);
		}
		catch (e) { return; }
		isDomLoaded = true;
		var dl = domLoadFnArr.length;
		for (var i = 0; i < dl; i++) {
			domLoadFnArr[i]();
		}
	}
	
	function addDomLoadEvent(fn) {
		if (isDomLoaded) {
			fn();
		}
		else { 
			domLoadFnArr[domLoadFnArr.length] = fn; // Array.push() is only available in IE5.5+
		}
	}
	
	/* Cross-browser onload
		- Based on James Edwards' solution: http://brothercake.com/site/resources/scripts/onload/
		- Will fire an event as soon as a web page including all of its assets are loaded 
	 */
	function addLoadEvent(fn) {
		if (typeof win.addEventListener != UNDEF) {
			win.addEventListener("load", fn, false);
		}
		else if (typeof doc.addEventListener != UNDEF) {
			doc.addEventListener("load", fn, false);
		}
		else if (typeof win.attachEvent != UNDEF) {
			addListener(win, "onload", fn);
		}
		else if (typeof win.onload == "function") {
			var fnOld = win.onload;
			win.onload = function() {
				fnOld();
				fn();
			};
		}
		else {
			win.onload = fn;
		}
	}
	
	/* Main function
		- Will preferably execute onDomLoad, otherwise onload (as a fallback)
	*/
	function main() { 
		if (plugin) {
			testPlayerVersion();
		}
		else {
			matchVersions();
		}
	}
	
	/* Detect the Flash Player version for non-Internet Explorer browsers
		- Detecting the plug-in version via the object element is more precise than using the plugins collection item's description:
		  a. Both release and build numbers can be detected
		  b. Avoid wrong descriptions by corrupt installers provided by Adobe
		  c. Avoid wrong descriptions by multiple Flash Player entries in the plugin Array, caused by incorrect browser imports
		- Disadvantage of this method is that it depends on the availability of the DOM, while the plugins collection is immediately available
	*/
	function testPlayerVersion() {
		var b = doc.getElementsByTagName("body")[0];
		var o = createElement(OBJECT);
		o.setAttribute("type", FLASH_MIME_TYPE);
		var t = b.appendChild(o);
		if (t) {
			var counter = 0;
			(function(){
				if (typeof t.GetVariable != UNDEF) {
					var d = t.GetVariable("$version");
					if (d) {
						d = d.split(" ")[1].split(",");
						ua.pv = [parseInt(d[0], 10), parseInt(d[1], 10), parseInt(d[2], 10)];
					}
				}
				else if (counter < 10) {
					counter++;
					setTimeout(arguments.callee, 10);
					return;
				}
				b.removeChild(o);
				t = null;
				matchVersions();
			})();
		}
		else {
			matchVersions();
		}
	}
	
	/* Perform Flash Player and SWF version matching; static publishing only
	*/
	function matchVersions() {
		var rl = regObjArr.length;
		if (rl > 0) {
			for (var i = 0; i < rl; i++) { // for each registered object element
				var id = regObjArr[i].id;
				var cb = regObjArr[i].callbackFn;
				var cbObj = {success:false, id:id};
				if (ua.pv[0] > 0) {
					var obj = getElementById(id);
					if (obj) {
						if (hasPlayerVersion(regObjArr[i].swfVersion) && !(ua.wk && ua.wk < 312)) { // Flash Player version >= published SWF version: Houston, we have a match!
							setVisibility(id, true);
							if (cb) {
								cbObj.success = true;
								cbObj.ref = getObjectById(id);
								cb(cbObj);
							}
						}
						else if (regObjArr[i].expressInstall && canExpressInstall()) { // show the Adobe Express Install dialog if set by the web page author and if supported
							var att = {};
							att.data = regObjArr[i].expressInstall;
							att.width = obj.getAttribute("width") || "0";
							att.height = obj.getAttribute("height") || "0";
							if (obj.getAttribute("class")) { att.styleclass = obj.getAttribute("class"); }
							if (obj.getAttribute("align")) { att.align = obj.getAttribute("align"); }
							// parse HTML object param element's name-value pairs
							var par = {};
							var p = obj.getElementsByTagName("param");
							var pl = p.length;
							for (var j = 0; j < pl; j++) {
								if (p[j].getAttribute("name").toLowerCase() != "movie") {
									par[p[j].getAttribute("name")] = p[j].getAttribute("value");
								}
							}
							showExpressInstall(att, par, id, cb);
						}
						else { // Flash Player and SWF version mismatch or an older Webkit engine that ignores the HTML object element's nested param elements: display alternative content instead of SWF
							displayAltContent(obj);
							if (cb) { cb(cbObj); }
						}
					}
				}
				else {	// if no Flash Player is installed or the fp version cannot be detected we let the HTML object element do its job (either show a SWF or alternative content)
					setVisibility(id, true);
					if (cb) {
						var o = getObjectById(id); // test whether there is an HTML object element or not
						if (o && typeof o.SetVariable != UNDEF) { 
							cbObj.success = true;
							cbObj.ref = o;
						}
						cb(cbObj);
					}
				}
			}
		}
	}
	
	function getObjectById(objectIdStr) {
		var r = null;
		var o = getElementById(objectIdStr);
		if (o && o.nodeName == "OBJECT") {
			if (typeof o.SetVariable != UNDEF) {
				r = o;
			}
			else {
				var n = o.getElementsByTagName(OBJECT)[0];
				if (n) {
					r = n;
				}
			}
		}
		return r;
	}
	
	/* Requirements for Adobe Express Install
		- only one instance can be active at a time
		- fp 6.0.65 or higher
		- Win/Mac OS only
		- no Webkit engines older than version 312
	*/
	function canExpressInstall() {
		return !isExpressInstallActive && hasPlayerVersion("6.0.65") && (ua.win || ua.mac) && !(ua.wk && ua.wk < 312);
	}
	
	/* Show the Adobe Express Install dialog
		- Reference: http://www.adobe.com/cfusion/knowledgebase/index.cfm?id=6a253b75
	*/
	function showExpressInstall(att, par, replaceElemIdStr, callbackFn) {
		isExpressInstallActive = true;
		storedCallbackFn = callbackFn || null;
		storedCallbackObj = {success:false, id:replaceElemIdStr};
		var obj = getElementById(replaceElemIdStr);
		if (obj) {
			if (obj.nodeName == "OBJECT") { // static publishing
				storedAltContent = abstractAltContent(obj);
				storedAltContentId = null;
			}
			else { // dynamic publishing
				storedAltContent = obj;
				storedAltContentId = replaceElemIdStr;
			}
			att.id = EXPRESS_INSTALL_ID;
			if (typeof att.width == UNDEF || (!/%$/.test(att.width) && parseInt(att.width, 10) < 310)) { att.width = "310"; }
			if (typeof att.height == UNDEF || (!/%$/.test(att.height) && parseInt(att.height, 10) < 137)) { att.height = "137"; }
			doc.title = doc.title.slice(0, 47) + " - Flash Player Installation";
			var pt = ua.ie && ua.win ? "ActiveX" : "PlugIn",
				fv = "MMredirectURL=" + encodeURI(window.location).toString().replace(/&/g,"%26") + "&MMplayerType=" + pt + "&MMdoctitle=" + doc.title;
			if (typeof par.flashvars != UNDEF) {
				par.flashvars += "&" + fv;
			}
			else {
				par.flashvars = fv;
			}
			// IE only: when a SWF is loading (AND: not available in cache) wait for the readyState of the object element to become 4 before removing it,
			// because you cannot properly cancel a loading SWF file without breaking browser load references, also obj.onreadystatechange doesn't work
			if (ua.ie && ua.win && obj.readyState != 4) {
				var newObj = createElement("div");
				replaceElemIdStr += "SWFObjectNew";
				newObj.setAttribute("id", replaceElemIdStr);
				obj.parentNode.insertBefore(newObj, obj); // insert placeholder div that will be replaced by the object element that loads expressinstall.swf
				obj.style.display = "none";
				(function(){
					if (obj.readyState == 4) {
						obj.parentNode.removeChild(obj);
					}
					else {
						setTimeout(arguments.callee, 10);
					}
				})();
			}
			createSWF(att, par, replaceElemIdStr);
		}
	}
	
	/* Functions to abstract and display alternative content
	*/
	function displayAltContent(obj) {
		if (ua.ie && ua.win && obj.readyState != 4) {
			// IE only: when a SWF is loading (AND: not available in cache) wait for the readyState of the object element to become 4 before removing it,
			// because you cannot properly cancel a loading SWF file without breaking browser load references, also obj.onreadystatechange doesn't work
			var el = createElement("div");
			obj.parentNode.insertBefore(el, obj); // insert placeholder div that will be replaced by the alternative content
			el.parentNode.replaceChild(abstractAltContent(obj), el);
			obj.style.display = "none";
			(function(){
				if (obj.readyState == 4) {
					obj.parentNode.removeChild(obj);
				}
				else {
					setTimeout(arguments.callee, 10);
				}
			})();
		}
		else {
			obj.parentNode.replaceChild(abstractAltContent(obj), obj);
		}
	} 

	function abstractAltContent(obj) {
		var ac = createElement("div");
		if (ua.win && ua.ie) {
			ac.innerHTML = obj.innerHTML;
		}
		else {
			var nestedObj = obj.getElementsByTagName(OBJECT)[0];
			if (nestedObj) {
				var c = nestedObj.childNodes;
				if (c) {
					var cl = c.length;
					for (var i = 0; i < cl; i++) {
						if (!(c[i].nodeType == 1 && c[i].nodeName == "PARAM") && !(c[i].nodeType == 8)) {
							ac.appendChild(c[i].cloneNode(true));
						}
					}
				}
			}
		}
		return ac;
	}
	
	/* Cross-browser dynamic SWF creation
	*/
	function createSWF(attObj, parObj, id) {
		var r, el = getElementById(id);
		if (ua.wk && ua.wk < 312) { return r; }
		if (el) {
			if (typeof attObj.id == UNDEF) { // if no 'id' is defined for the object element, it will inherit the 'id' from the alternative content
				attObj.id = id;
			}
			if (ua.ie && ua.win) { // Internet Explorer + the HTML object element + W3C DOM methods do not combine: fall back to outerHTML
				var att = "";
				for (var i in attObj) {
					if (attObj[i] != Object.prototype[i]) { // filter out prototype additions from other potential libraries
						if (i.toLowerCase() == "data") {
							parObj.movie = attObj[i];
						}
						else if (i.toLowerCase() == "styleclass") { // 'class' is an ECMA4 reserved keyword
							att += ' class="' + attObj[i] + '"';
						}
						else if (i.toLowerCase() != "classid") {
							att += ' ' + i + '="' + attObj[i] + '"';
						}
					}
				}
				var par = "";
				for (var j in parObj) {
					if (parObj[j] != Object.prototype[j]) { // filter out prototype additions from other potential libraries
						par += '<param name="' + j + '" value="' + parObj[j] + '" />';
					}
				}
				el.outerHTML = '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"' + att + '>' + par + '</object>';
				objIdArr[objIdArr.length] = attObj.id; // stored to fix object 'leaks' on unload (dynamic publishing only)
				r = getElementById(attObj.id);	
			}
			else { // well-behaving browsers
				var o = createElement(OBJECT);
				o.setAttribute("type", FLASH_MIME_TYPE);
				for (var m in attObj) {
					if (attObj[m] != Object.prototype[m]) { // filter out prototype additions from other potential libraries
						if (m.toLowerCase() == "styleclass") { // 'class' is an ECMA4 reserved keyword
							o.setAttribute("class", attObj[m]);
						}
						else if (m.toLowerCase() != "classid") { // filter out IE specific attribute
							o.setAttribute(m, attObj[m]);
						}
					}
				}
				for (var n in parObj) {
					if (parObj[n] != Object.prototype[n] && n.toLowerCase() != "movie") { // filter out prototype additions from other potential libraries and IE specific param element
						createObjParam(o, n, parObj[n]);
					}
				}
				el.parentNode.replaceChild(o, el);
				r = o;
			}
		}
		return r;
	}
	
	function createObjParam(el, pName, pValue) {
		var p = createElement("param");
		p.setAttribute("name", pName);	
		p.setAttribute("value", pValue);
		el.appendChild(p);
	}
	
	/* Cross-browser SWF removal
		- Especially needed to safely and completely remove a SWF in Internet Explorer
	*/
	function removeSWF(id) {
		var obj = getElementById(id);
		if (obj && obj.nodeName == "OBJECT") {
			if (ua.ie && ua.win) {
				obj.style.display = "none";
				(function(){
					if (obj.readyState == 4) {
						removeObjectInIE(id);
					}
					else {
						setTimeout(arguments.callee, 10);
					}
				})();
			}
			else {
				obj.parentNode.removeChild(obj);
			}
		}
	}
	
	function removeObjectInIE(id) {
		var obj = getElementById(id);
		if (obj) {
			for (var i in obj) {
				if (typeof obj[i] == "function") {
					obj[i] = null;
				}
			}
			obj.parentNode.removeChild(obj);
		}
	}
	
	/* Functions to optimize JavaScript compression
	*/
	function getElementById(id) {
		var el = null;
		try {
			el = doc.getElementById(id);
		}
		catch (e) {}
		return el;
	}
	
	function createElement(el) {
		return doc.createElement(el);
	}
	
	/* Updated attachEvent function for Internet Explorer
		- Stores attachEvent information in an Array, so on unload the detachEvent functions can be called to avoid memory leaks
	*/	
	function addListener(target, eventType, fn) {
		target.attachEvent(eventType, fn);
		listenersArr[listenersArr.length] = [target, eventType, fn];
	}
	
	/* Flash Player and SWF content version matching
	*/
	function hasPlayerVersion(rv) {
		var pv = ua.pv, v = rv.split(".");
		v[0] = parseInt(v[0], 10);
		v[1] = parseInt(v[1], 10) || 0; // supports short notation, e.g. "9" instead of "9.0.0"
		v[2] = parseInt(v[2], 10) || 0;
		return (pv[0] > v[0] || (pv[0] == v[0] && pv[1] > v[1]) || (pv[0] == v[0] && pv[1] == v[1] && pv[2] >= v[2])) ? true : false;
	}
	
	/* Cross-browser dynamic CSS creation
		- Based on Bobby van der Sluis' solution: http://www.bobbyvandersluis.com/articles/dynamicCSS.php
	*/	
	function createCSS(sel, decl, media, newStyle) {
		if (ua.ie && ua.mac) { return; }
		var h = doc.getElementsByTagName("head")[0];
		if (!h) { return; } // to also support badly authored HTML pages that lack a head element
		var m = (media && typeof media == "string") ? media : "screen";
		if (newStyle) {
			dynamicStylesheet = null;
			dynamicStylesheetMedia = null;
		}
		if (!dynamicStylesheet || dynamicStylesheetMedia != m) { 
			// create dynamic stylesheet + get a global reference to it
			var s = createElement("style");
			s.setAttribute("type", "text/css");
			s.setAttribute("media", m);
			dynamicStylesheet = h.appendChild(s);
			if (ua.ie && ua.win && typeof doc.styleSheets != UNDEF && doc.styleSheets.length > 0) {
				dynamicStylesheet = doc.styleSheets[doc.styleSheets.length - 1];
			}
			dynamicStylesheetMedia = m;
		}
		// add style rule
		if (ua.ie && ua.win) {
			if (dynamicStylesheet && typeof dynamicStylesheet.addRule == OBJECT) {
				dynamicStylesheet.addRule(sel, decl);
			}
		}
		else {
			if (dynamicStylesheet && typeof doc.createTextNode != UNDEF) {
				dynamicStylesheet.appendChild(doc.createTextNode(sel + " {" + decl + "}"));
			}
		}
	}
	
	function setVisibility(id, isVisible) {
		if (!autoHideShow) { return; }
		var v = isVisible ? "visible" : "hidden";
		if (isDomLoaded && getElementById(id)) {
			getElementById(id).style.visibility = v;
		}
		else {
			createCSS("#" + id, "visibility:" + v);
		}
	}

	/* Filter to avoid XSS attacks
	*/
	function urlEncodeIfNecessary(s) {
		var regex = /[\\\"<>\.;]/;
		var hasBadChars = regex.exec(s) != null;
		return hasBadChars && typeof encodeURIComponent != UNDEF ? encodeURIComponent(s) : s;
	}
	
	/* Release memory to avoid memory leaks caused by closures, fix hanging audio/video threads and force open sockets/NetConnections to disconnect (Internet Explorer only)
	*/
	var cleanup = function() {
		if (ua.ie && ua.win) {
			window.attachEvent("onunload", function() {
				// remove listeners to avoid memory leaks
				var ll = listenersArr.length;
				for (var i = 0; i < ll; i++) {
					listenersArr[i][0].detachEvent(listenersArr[i][1], listenersArr[i][2]);
				}
				// cleanup dynamically embedded objects to fix audio/video threads and force open sockets and NetConnections to disconnect
				var il = objIdArr.length;
				for (var j = 0; j < il; j++) {
					removeSWF(objIdArr[j]);
				}
				// cleanup library's main closures to avoid memory leaks
				for (var k in ua) {
					ua[k] = null;
				}
				ua = null;
				for (var l in swfobject) {
					swfobject[l] = null;
				}
				swfobject = null;
			});
		}
	}();
	
	return {
		/* Public API
			- Reference: http://code.google.com/p/swfobject/wiki/documentation
		*/ 
		registerObject: function(objectIdStr, swfVersionStr, xiSwfUrlStr, callbackFn) {
			if (ua.w3 && objectIdStr && swfVersionStr) {
				var regObj = {};
				regObj.id = objectIdStr;
				regObj.swfVersion = swfVersionStr;
				regObj.expressInstall = xiSwfUrlStr;
				regObj.callbackFn = callbackFn;
				regObjArr[regObjArr.length] = regObj;
				setVisibility(objectIdStr, false);
			}
			else if (callbackFn) {
				callbackFn({success:false, id:objectIdStr});
			}
		},
		
		getObjectById: function(objectIdStr) {
			if (ua.w3) {
				return getObjectById(objectIdStr);
			}
		},
		
		embedSWF: function(swfUrlStr, replaceElemIdStr, widthStr, heightStr, swfVersionStr, xiSwfUrlStr, flashvarsObj, parObj, attObj, callbackFn) {
			var callbackObj = {success:false, id:replaceElemIdStr};
			if (ua.w3 && !(ua.wk && ua.wk < 312) && swfUrlStr && replaceElemIdStr && widthStr && heightStr && swfVersionStr) {
				setVisibility(replaceElemIdStr, false);
				addDomLoadEvent(function() {
					widthStr += ""; // auto-convert to string
					heightStr += "";
					var att = {};
					if (attObj && typeof attObj === OBJECT) {
						for (var i in attObj) { // copy object to avoid the use of references, because web authors often reuse attObj for multiple SWFs
							att[i] = attObj[i];
						}
					}
					att.data = swfUrlStr;
					att.width = widthStr;
					att.height = heightStr;
					var par = {}; 
					if (parObj && typeof parObj === OBJECT) {
						for (var j in parObj) { // copy object to avoid the use of references, because web authors often reuse parObj for multiple SWFs
							par[j] = parObj[j];
						}
					}
					if (flashvarsObj && typeof flashvarsObj === OBJECT) {
						for (var k in flashvarsObj) { // copy object to avoid the use of references, because web authors often reuse flashvarsObj for multiple SWFs
							if (typeof par.flashvars != UNDEF) {
								par.flashvars += "&" + k + "=" + flashvarsObj[k];
							}
							else {
								par.flashvars = k + "=" + flashvarsObj[k];
							}
						}
					}
					if (hasPlayerVersion(swfVersionStr)) { // create SWF
						var obj = createSWF(att, par, replaceElemIdStr);
						if (att.id == replaceElemIdStr) {
							setVisibility(replaceElemIdStr, true);
						}
						callbackObj.success = true;
						callbackObj.ref = obj;
					}
					else if (xiSwfUrlStr && canExpressInstall()) { // show Adobe Express Install
						att.data = xiSwfUrlStr;
						showExpressInstall(att, par, replaceElemIdStr, callbackFn);
						return;
					}
					else { // show alternative content
						setVisibility(replaceElemIdStr, true);
					}
					if (callbackFn) { callbackFn(callbackObj); }
				});
			}
			else if (callbackFn) { callbackFn(callbackObj);	}
		},
		
		switchOffAutoHideShow: function() {
			autoHideShow = false;
		},
		
		ua: ua,
		
		getFlashPlayerVersion: function() {
			return { major:ua.pv[0], minor:ua.pv[1], release:ua.pv[2] };
		},
		
		hasFlashPlayerVersion: hasPlayerVersion,
		
		createSWF: function(attObj, parObj, replaceElemIdStr) {
			if (ua.w3) {
				return createSWF(attObj, parObj, replaceElemIdStr);
			}
			else {
				return undefined;
			}
		},
		
		showExpressInstall: function(att, par, replaceElemIdStr, callbackFn) {
			if (ua.w3 && canExpressInstall()) {
				showExpressInstall(att, par, replaceElemIdStr, callbackFn);
			}
		},
		
		removeSWF: function(objElemIdStr) {
			if (ua.w3) {
				removeSWF(objElemIdStr);
			}
		},
		
		createCSS: function(selStr, declStr, mediaStr, newStyleBoolean) {
			if (ua.w3) {
				createCSS(selStr, declStr, mediaStr, newStyleBoolean);
			}
		},
		
		addDomLoadEvent: addDomLoadEvent,
		
		addLoadEvent: addLoadEvent,
		
		getQueryParamValue: function(param) {
			var q = doc.location.search || doc.location.hash;
			if (q) {
				if (/\?/.test(q)) { q = q.split("?")[1]; } // strip question mark
				if (param == null) {
					return urlEncodeIfNecessary(q);
				}
				var pairs = q.split("&");
				for (var i = 0; i < pairs.length; i++) {
					if (pairs[i].substring(0, pairs[i].indexOf("=")) == param) {
						return urlEncodeIfNecessary(pairs[i].substring((pairs[i].indexOf("=") + 1)));
					}
				}
			}
			return "";
		},
		
		// For internal usage only
		expressInstallCallback: function() {
			if (isExpressInstallActive) {
				var obj = getElementById(EXPRESS_INSTALL_ID);
				if (obj && storedAltContent) {
					obj.parentNode.replaceChild(storedAltContent, obj);
					if (storedAltContentId) {
						setVisibility(storedAltContentId, true);
						if (ua.ie && ua.win) { storedAltContent.style.display = "block"; }
					}
					if (storedCallbackFn) { storedCallbackFn(storedCallbackObj); }
				}
				isExpressInstallActive = false;
			} 
		}
	};
}();

function afterCalculation() {			
		var obj = swfobject.getObjectById("flashContent");
		try {
			obj.afterCalculation();	
		} catch(e) {
			setTimeout(afterCalculation, 50);
		}	
	} 

	
	var flashvars = {};
						var params = { AllowScriptAccess : "always" };
						var attributes = {};
                        //var flashObj = new swfobject();
						swfobject.embedSWF("/etc/designs/eonde/assets/videos/solar_chart.swf", "flashContent", "625", "300", "10.0.0", false, flashvars, params, attributes);

// Declaring namespace parameter
var eonde = eonde || {};

$(function() {

		var ifaqContainer = $('.ifaqContainer');
    	if (ifaqContainer.length === 0) {
        	return;
    	}

        eonde.ifaqComponentVM = function (iFaqDiv) {

            var self = this;
            var iFaqDiv=$(iFaqDiv);

            self.iFaqViewsportSRedirect=ko.observable("");
			self.iFaqButtonPath=ko.observable("");

            self.init = function() {
                if(iFaqDiv.find("span.iFaqViewsportSRedirect").attr('data-attr').length) {
					self.iFaqViewsportSRedirect(iFaqDiv.find("span.iFaqViewsportSRedirect").attr('data-attr'));
                }
                 if(iFaqDiv.find("span.iFaqButtonPath").attr('data-attr').length) {
					self.iFaqButtonPath(iFaqDiv.find("span.iFaqButtonPath").attr('data-attr'));
                }
	        };
            self.redirection=function(path, isExternal) {
                isExternal ? window.open(path, '_blank'): window.open(path, '_self');
            };
            self.redirectToButtonPath=function(isExternal) {
				self.redirection(self.iFaqButtonPath(), isExternal);
            };
            self.viewPortSRedirect=function() {
				self.redirection(self.iFaqViewsportSRedirect());
            };

        }

        ifaqContainer.each(function () {
            var ifaqComponentVM = new eonde.ifaqComponentVM($(this));
            ifaqComponentVM.init();
			ko.applyBindings (ko.validatedObservable(ifaqComponentVM), this);  
        });

});


/*
     _ _      _       _
 ___| (_) ___| | __  (_)___
/ __| | |/ __| |/ /  | / __|
\__ \ | | (__|   < _ | \__ \
|___/_|_|\___|_|\_(_)/ |___/
                   |__/

 Version: 1.5.0
  Author: Ken Wheeler
 Website: http://kenwheeler.github.io
    Docs: http://kenwheeler.github.io/slick
    Repo: http://github.com/kenwheeler/slick
  Issues: http://github.com/kenwheeler/slick/issues

 */
/* global window, document, define, jQuery, setInterval, clearInterval */
! function(a) {
    "use strict";
    "function" == typeof define && define.amd ? define(["jquery"], a) : "undefined" != typeof exports ? module.exports = a(require("jquery")) : a(jQuery)
}(function(a) {
    "use strict";
    var b = window.Slick || {};
	b = function() {
        function c(c, d) {
            var f, g, h, e = this;
            if (e.defaults = {
                    accessibility: !0,
                    adaptiveHeight: !1,
                    appendArrows: a(c),
                    appendDots: a(c),
                    arrows: !0,
                    asNavFor: null,
                    prevArrow: '<button type="button" data-role="none" class="slick-prev" aria-label="previous">Previous</button>',
                    nextArrow: '<button type="button" data-role="none" class="slick-next" aria-label="next">Next</button>',
                    autoplay: !1,
                    autoplaySpeed: 3e3,
                    centerMode: !1,
                    centerPadding: "50px",
                    cssEase: "ease",
                    customPaging: function(a, b) {
                        return '<button type="button" data-role="none">' + (b + 1) + "</button>"
                    },
                    dots: !1,
                    dotsClass: "slick-dots",
                    draggable: !0,
                    easing: "linear",
                    edgeFriction: .35,
                    fade: !1,
                    focusOnSelect: !1,
                    infinite: !0,
                    initialSlide: 0,
                    lazyLoad: "ondemand",
                    mobileFirst: !1,
                    pauseOnHover: !0,
                    pauseOnDotsHover: !1,
                    respondTo: "window",
                    responsive: null,
                    rows: 1,
                    rtl: !1,
                    slide: "",
                    slidesPerRow: 1,
                    slidesToShow: 1,
                    slidesToScroll: 1,
                    speed: 500,
                    swipe: !0,
                    swipeToSlide: !1,
                    touchMove: !0,
                    touchThreshold: 5,
                    useCSS: !0,
                    variableWidth: !1,
                    vertical: !1,
                    verticalSwiping: !1,
                    waitForAnimate: !0
                }, e.initials = {
                    animating: !1,
                    dragging: !1,
                    autoPlayTimer: null,
                    currentDirection: 0,
                    currentLeft: null,
                    currentSlide: 0,
                    direction: 1,
                    $dots: null,
                    listWidth: null,
                    listHeight: null,
                    loadIndex: 0,
                    $nextArrow: null,
                    $prevArrow: null,
                    slideCount: null,
                    slideWidth: null,
                    $slideTrack: null,
                    $slides: null,
                    sliding: !1,
                    slideOffset: 0,
                    swipeLeft: null,
                    $list: null,
                    touchObject: {},
                    transformsEnabled: !1
                }, a.extend(e, e.initials), e.activeBreakpoint = null, e.animType = null, e.animProp = null, e.breakpoints = [], e.breakpointSettings = [], e.cssTransitions = !1, e.hidden = "hidden", e.paused = !1, e.positionProp = null, e.respondTo = null, e.rowCount = 1, e.shouldClick = !0, e.$slider = a(c), e.$slidesCache = null, e.transformType = null, e.transitionType = null, e.visibilityChange = "visibilitychange", e.windowWidth = 0, e.windowTimer = null, f = a(c).data("slick") || {}, e.options = a.extend({}, e.defaults, f, d), e.currentSlide = e.options.initialSlide, e.originalSettings = e.options, g = e.options.responsive || null, g && g.length > -1) {
                e.respondTo = e.options.respondTo || "window";
                for (h in g) g.hasOwnProperty(h) && (e.breakpoints.push(g[h].breakpoint), e.breakpointSettings[g[h].breakpoint] = g[h].settings);
                e.breakpoints.sort(function(a, b) {
                    return e.options.mobileFirst === !0 ? a - b : b - a
                })
            }
            "undefined" != typeof document.mozHidden ? (e.hidden = "mozHidden", e.visibilityChange = "mozvisibilitychange") : "undefined" != typeof document.msHidden ? (e.hidden = "msHidden", e.visibilityChange = "msvisibilitychange") : "undefined" != typeof document.webkitHidden && (e.hidden = "webkitHidden", e.visibilityChange = "webkitvisibilitychange"), e.autoPlay = a.proxy(e.autoPlay, e), e.autoPlayClear = a.proxy(e.autoPlayClear, e), e.changeSlide = a.proxy(e.changeSlide, e), e.clickHandler = a.proxy(e.clickHandler, e), e.selectHandler = a.proxy(e.selectHandler, e), e.setPosition = a.proxy(e.setPosition, e), e.swipeHandler = a.proxy(e.swipeHandler, e), e.dragHandler = a.proxy(e.dragHandler, e), e.keyHandler = a.proxy(e.keyHandler, e), e.autoPlayIterator = a.proxy(e.autoPlayIterator, e), e.instanceUid = b++, e.htmlExpr = /^(?:\s*(<[\w\W]+>)[^>]*)$/, e.init(), e.checkResponsive(!0)
        }
        var b = 0;
        return c
    }(), b.prototype.addSlide = b.prototype.slickAdd = function(b, c, d) {
        var e = this;
        if ("boolean" == typeof c) d = c, c = null;
        else if (0 > c || c >= e.slideCount) return !1;
        e.unload(), "number" == typeof c ? 0 === c && 0 === e.$slides.length ? a(b).appendTo(e.$slideTrack) : d ? a(b).insertBefore(e.$slides.eq(c)) : a(b).insertAfter(e.$slides.eq(c)) : d === !0 ? a(b).prependTo(e.$slideTrack) : a(b).appendTo(e.$slideTrack), e.$slides = e.$slideTrack.children(this.options.slide), e.$slideTrack.children(this.options.slide).detach(), e.$slideTrack.append(e.$slides), e.$slides.each(function(b, c) {
            a(c).attr("data-slick-index", b)
        }), e.$slidesCache = e.$slides, e.reinit()
    }, b.prototype.animateHeight = function() {
        var a = this;
        if (1 === a.options.slidesToShow && a.options.adaptiveHeight === !0 && a.options.vertical === !1) {
            var b = a.$slides.eq(a.currentSlide).outerHeight(!0);
            a.$list.animate({
                height: b
            }, a.options.speed)
        }
    }, b.prototype.animateSlide = function(b, c) {
        var d = {},
            e = this;
        e.animateHeight(), e.options.rtl === !0 && e.options.vertical === !1 && (b = -b), e.transformsEnabled === !1 ? e.options.vertical === !1 ? e.$slideTrack.animate({
            left: b
        }, e.options.speed, e.options.easing, c) : e.$slideTrack.animate({
            top: b
        }, e.options.speed, e.options.easing, c) : e.cssTransitions === !1 ? (e.options.rtl === !0 && (e.currentLeft = -e.currentLeft), a({
            animStart: e.currentLeft
        }).animate({
            animStart: b
        }, {
            duration: e.options.speed,
            easing: e.options.easing,
            step: function(a) {
                a = Math.ceil(a), e.options.vertical === !1 ? (d[e.animType] = "translate(" + a + "px, 0px)", e.$slideTrack.css(d)) : (d[e.animType] = "translate(0px," + a + "px)", e.$slideTrack.css(d))
            },
            complete: function() {
                c && c.call()
            }
        })) : (e.applyTransition(), b = Math.ceil(b), d[e.animType] = e.options.vertical === !1 ? "translate3d(" + b + "px, 0px, 0px)" : "translate3d(0px," + b + "px, 0px)", e.$slideTrack.css(d), c && setTimeout(function() {
            e.disableTransition(), c.call()
        }, e.options.speed))
    }, b.prototype.asNavFor = function(b) {
        var c = this,
            d = null !== c.options.asNavFor ? a(c.options.asNavFor).slick("getSlick") : null;
        null !== d && d.slideHandler(b, !0)
    }, b.prototype.applyTransition = function(a) {
        var b = this,
            c = {};
        c[b.transitionType] = b.options.fade === !1 ? b.transformType + " " + b.options.speed + "ms " + b.options.cssEase : "opacity " + b.options.speed + "ms " + b.options.cssEase, b.options.fade === !1 ? b.$slideTrack.css(c) : b.$slides.eq(a).css(c)
    }, b.prototype.autoPlay = function() {
        var a = this;
        a.autoPlayTimer && clearInterval(a.autoPlayTimer), a.slideCount > a.options.slidesToShow && a.paused !== !0 && (a.autoPlayTimer = setInterval(a.autoPlayIterator, a.options.autoplaySpeed))
    }, b.prototype.autoPlayClear = function() {
        var a = this;
        a.autoPlayTimer && clearInterval(a.autoPlayTimer)
    }, b.prototype.autoPlayIterator = function() {
        var a = this;
        a.options.infinite === !1 ? 1 === a.direction ? (a.currentSlide + 1 === a.slideCount - 1 && (a.direction = 0), a.slideHandler(a.currentSlide + a.options.slidesToScroll)) : (0 === a.currentSlide - 1 && (a.direction = 1), a.slideHandler(a.currentSlide - a.options.slidesToScroll)) : a.slideHandler(a.currentSlide + a.options.slidesToScroll)
    }, b.prototype.buildArrows = function() {
        var b = this;
        b.options.arrows === !0 && b.slideCount > b.options.slidesToShow && (b.$prevArrow = a(b.options.prevArrow), b.$nextArrow = a(b.options.nextArrow), b.htmlExpr.test(b.options.prevArrow) && b.$prevArrow.appendTo(b.options.appendArrows), b.htmlExpr.test(b.options.nextArrow) && b.$nextArrow.appendTo(b.options.appendArrows), b.options.infinite !== !0 && b.$prevArrow.addClass("slick-disabled"))
    }, b.prototype.buildDots = function() {
        var c, d, b = this;
        if (b.options.dots === !0 && b.slideCount > b.options.slidesToShow) {
            for (d = '<ul class="' + b.options.dotsClass + '">', c = 0; c <= b.getDotCount(); c += 1) d += "<li>" + b.options.customPaging.call(this, b, c) + "</li>";
            d += "</ul>", b.$dots = a(d).appendTo(b.options.appendDots), b.$dots.find("li").first().addClass("slick-active").attr("aria-hidden", "false")
        }
    }, b.prototype.buildOut = function() {
        var b = this;
        b.$slides = b.$slider.children(":not(.slick-cloned)").addClass("slick-slide"), b.slideCount = b.$slides.length, b.$slides.each(function(b, c) {
            a(c).attr("data-slick-index", b)
        }), b.$slidesCache = b.$slides, b.$slider.addClass("slick-slider"), b.$slideTrack = 0 === b.slideCount ? a('<div class="slick-track"/>').appendTo(b.$slider) : b.$slides.wrapAll('<div class="slick-track"/>').parent(), b.$list = b.$slideTrack.wrap('<div aria-live="polite" class="slick-list"/>').parent(), b.$slideTrack.css("opacity", 0), (b.options.centerMode === !0 || b.options.swipeToSlide === !0) && (b.options.slidesToScroll = 1), a("img[data-lazy]", b.$slider).not("[src]").addClass("slick-loading"), b.setupInfinite(), b.buildArrows(), b.buildDots(), b.updateDots(), b.options.accessibility === !0 && b.$list.prop("tabIndex", 0), b.setSlideClasses("number" == typeof this.currentSlide ? this.currentSlide : 0), b.options.draggable === !0 && b.$list.addClass("draggable")
    }, b.prototype.buildRows = function() {
        var b, c, d, e, f, g, h, a = this;
        if (e = document.createDocumentFragment(), g = a.$slider.children(), a.options.rows > 1) {
            for (h = a.options.slidesPerRow * a.options.rows, f = Math.ceil(g.length / h), b = 0; f > b; b++) {
                var i = document.createElement("div");
                for (c = 0; c < a.options.rows; c++) {
                    var j = document.createElement("div");
                    for (d = 0; d < a.options.slidesPerRow; d++) {
                        var k = b * h + (c * a.options.slidesPerRow + d);
                        g.get(k) && j.appendChild(g.get(k))
                    }
                    i.appendChild(j)
                }
                e.appendChild(i)
            }
            a.$slider.html(e), a.$slider.children().children().children().width(100 / a.options.slidesPerRow + "%").css({
                display: "inline-block"
            })
        }
    }, b.prototype.checkResponsive = function(b) {
        var d, e, f, c = this,
            g = c.$slider.width(),
            h = window.innerWidth || a(window).width();
        if ("window" === c.respondTo ? f = h : "slider" === c.respondTo ? f = g : "min" === c.respondTo && (f = Math.min(h, g)), c.originalSettings.responsive && c.originalSettings.responsive.length > -1 && null !== c.originalSettings.responsive) {
            e = null;
            for (d in c.breakpoints) c.breakpoints.hasOwnProperty(d) && (c.originalSettings.mobileFirst === !1 ? f < c.breakpoints[d] && (e = c.breakpoints[d]) : f > c.breakpoints[d] && (e = c.breakpoints[d]));
            null !== e ? null !== c.activeBreakpoint ? e !== c.activeBreakpoint && (c.activeBreakpoint = e, "unslick" === c.breakpointSettings[e] ? c.unslick() : (c.options = a.extend({}, c.originalSettings, c.breakpointSettings[e]), b === !0 && (c.currentSlide = c.options.initialSlide), c.refresh())) : (c.activeBreakpoint = e, "unslick" === c.breakpointSettings[e] ? c.unslick() : (c.options = a.extend({}, c.originalSettings, c.breakpointSettings[e]), b === !0 && (c.currentSlide = c.options.initialSlide), c.refresh())) : null !== c.activeBreakpoint && (c.activeBreakpoint = null, c.options = c.originalSettings, b === !0 && (c.currentSlide = c.options.initialSlide), c.refresh())
        }
    }, b.prototype.changeSlide = function(b, c) {
        var f, g, h, d = this,
            e = a(b.target);
        switch (e.is("a") && b.preventDefault(), h = 0 !== d.slideCount % d.options.slidesToScroll, f = h ? 0 : (d.slideCount - d.currentSlide) % d.options.slidesToScroll, b.data.message) {
            case "previous":
                g = 0 === f ? d.options.slidesToScroll : d.options.slidesToShow - f, d.slideCount > d.options.slidesToShow && d.slideHandler(d.currentSlide - g, !1, c);
                break;
            case "next":
                g = 0 === f ? d.options.slidesToScroll : f, d.slideCount > d.options.slidesToShow && d.slideHandler(d.currentSlide + g, !1, c);
                break;
            case "index":
                var i = 0 === b.data.index ? 0 : b.data.index || a(b.target).parent().index() * d.options.slidesToScroll;
                d.slideHandler(d.checkNavigable(i), !1, c);
                break;
            default:
                return
        }
    }, b.prototype.checkNavigable = function(a) {
        var c, d, b = this;
        if (c = b.getNavigableIndexes(), d = 0, a > c[c.length - 1]) a = c[c.length - 1];
        else
            for (var e in c) {
                if (a < c[e]) {
                    a = d;
                    break
                }
                d = c[e]
            }
        return a
    }, b.prototype.cleanUpEvents = function() {
        var b = this;
        b.options.dots === !0 && b.slideCount > b.options.slidesToShow && a("li", b.$dots).off("click.slick", b.changeSlide), b.options.dots === !0 && b.options.pauseOnDotsHover === !0 && b.options.autoplay === !0 && a("li", b.$dots).off("mouseenter.slick", b.setPaused.bind(b, !0)).off("mouseleave.slick", b.setPaused.bind(b, !1)), b.options.arrows === !0 && b.slideCount > b.options.slidesToShow && (b.$prevArrow && b.$prevArrow.off("click.slick", b.changeSlide), b.$nextArrow && b.$nextArrow.off("click.slick", b.changeSlide)), b.$list.off("touchstart.slick mousedown.slick", b.swipeHandler), b.$list.off("touchmove.slick mousemove.slick", b.swipeHandler), b.$list.off("touchend.slick mouseup.slick", b.swipeHandler), b.$list.off("touchcancel.slick mouseleave.slick", b.swipeHandler), b.$list.off("click.slick", b.clickHandler), b.options.autoplay === !0 && a(document).off(b.visibilityChange, b.visibility), b.$list.off("mouseenter.slick", b.setPaused.bind(b, !0)), b.$list.off("mouseleave.slick", b.setPaused.bind(b, !1)), b.options.accessibility === !0 && b.$list.off("keydown.slick", b.keyHandler), b.options.focusOnSelect === !0 && a(b.$slideTrack).children().off("click.slick", b.selectHandler), a(window).off("orientationchange.slick.slick-" + b.instanceUid, b.orientationChange), a(window).off("resize.slick.slick-" + b.instanceUid, b.resize), a("[draggable!=true]", b.$slideTrack).off("dragstart", b.preventDefault), a(window).off("load.slick.slick-" + b.instanceUid, b.setPosition), a(document).off("ready.slick.slick-" + b.instanceUid, b.setPosition)
    }, b.prototype.cleanUpRows = function() {
        var b, a = this;
        a.options.rows > 1 && (b = a.$slides.children().children(), b.removeAttr("style"), a.$slider.html(b))
    }, b.prototype.clickHandler = function(a) {
        var b = this;
        b.shouldClick === !1 && (a.stopImmediatePropagation(), a.stopPropagation(), a.preventDefault())
    }, b.prototype.destroy = function() {
        var b = this;
        b.autoPlayClear(), b.touchObject = {}, b.cleanUpEvents(), a(".slick-cloned", b.$slider).remove(), b.$dots && b.$dots.remove(), b.$prevArrow && "object" != typeof b.options.prevArrow && b.$prevArrow.remove(), b.$nextArrow && "object" != typeof b.options.nextArrow && b.$nextArrow.remove(), b.$slides && (b.$slides.removeClass("slick-slide slick-active slick-center slick-visible").attr("aria-hidden", "true").removeAttr("data-slick-index").css({
            position: "",
            left: "",
            top: "",
            zIndex: "",
            opacity: "",
            width: ""
        }), b.$slider.html(b.$slides)), b.cleanUpRows(), b.$slider.removeClass("slick-slider"), b.$slider.removeClass("slick-initialized")
    }, b.prototype.disableTransition = function(a) {
        var b = this,
            c = {};
        c[b.transitionType] = "", b.options.fade === !1 ? b.$slideTrack.css(c) : b.$slides.eq(a).css(c)
    }, b.prototype.fadeSlide = function(a, b) {
        var c = this;
        c.cssTransitions === !1 ? (c.$slides.eq(a).css({
            zIndex: 1e3
        }), c.$slides.eq(a).animate({
            opacity: 1
        }, c.options.speed, c.options.easing, b)) : (c.applyTransition(a), c.$slides.eq(a).css({
            opacity: 1,
            zIndex: 1e3
        }), b && setTimeout(function() {
            c.disableTransition(a), b.call()
        }, c.options.speed))
    }, b.prototype.filterSlides = b.prototype.slickFilter = function(a) {
        var b = this;
        null !== a && (b.unload(), b.$slideTrack.children(this.options.slide).detach(), b.$slidesCache.filter(a).appendTo(b.$slideTrack), b.reinit())
    }, b.prototype.getCurrent = b.prototype.slickCurrentSlide = function() {
        var a = this;
        return a.currentSlide
    }, b.prototype.getDotCount = function() {
        var a = this,
            b = 0,
            c = 0,
            d = 0;
        if (a.options.infinite === !0) d = Math.ceil(a.slideCount / a.options.slidesToScroll);
        else if (a.options.centerMode === !0) d = a.slideCount;
        else
            for (; b < a.slideCount;) ++d, b = c + a.options.slidesToShow, c += a.options.slidesToScroll <= a.options.slidesToShow ? a.options.slidesToScroll : a.options.slidesToShow;
        return d - 1
    }, b.prototype.getLeft = function(a) {
        var c, d, f, b = this,
            e = 0;
        return b.slideOffset = 0, d = b.$slides.first().outerHeight(), b.options.infinite === !0 ? (b.slideCount > b.options.slidesToShow && (b.slideOffset = -1 * b.slideWidth * b.options.slidesToShow, e = -1 * d * b.options.slidesToShow), 0 !== b.slideCount % b.options.slidesToScroll && a + b.options.slidesToScroll > b.slideCount && b.slideCount > b.options.slidesToShow && (a > b.slideCount ? (b.slideOffset = -1 * (b.options.slidesToShow - (a - b.slideCount)) * b.slideWidth, e = -1 * (b.options.slidesToShow - (a - b.slideCount)) * d) : (b.slideOffset = -1 * b.slideCount % b.options.slidesToScroll * b.slideWidth, e = -1 * b.slideCount % b.options.slidesToScroll * d))) : a + b.options.slidesToShow > b.slideCount && (b.slideOffset = (a + b.options.slidesToShow - b.slideCount) * b.slideWidth, e = (a + b.options.slidesToShow - b.slideCount) * d), b.slideCount <= b.options.slidesToShow && (b.slideOffset = 0, e = 0), b.options.centerMode === !0 && b.options.infinite === !0 ? b.slideOffset += b.slideWidth * Math.floor(b.options.slidesToShow / 2) - b.slideWidth : b.options.centerMode === !0 && (b.slideOffset = 0, b.slideOffset += b.slideWidth * Math.floor(b.options.slidesToShow / 2)), c = b.options.vertical === !1 ? -1 * a * b.slideWidth + b.slideOffset : -1 * a * d + e, b.options.variableWidth === !0 && (f = b.slideCount <= b.options.slidesToShow || b.options.infinite === !1 ? b.$slideTrack.children(".slick-slide").eq(a) : b.$slideTrack.children(".slick-slide").eq(a + b.options.slidesToShow), c = f[0] ? -1 * f[0].offsetLeft : 0, b.options.centerMode === !0 && (f = b.options.infinite === !1 ? b.$slideTrack.children(".slick-slide").eq(a) : b.$slideTrack.children(".slick-slide").eq(a + b.options.slidesToShow + 1), c = f[0] ? -1 * f[0].offsetLeft : 0, c += (b.$list.width() - f.outerWidth()) / 2)), c
    }, b.prototype.getOption = b.prototype.slickGetOption = function(a) {
        var b = this;
        return b.options[a]
    }, b.prototype.getNavigableIndexes = function() {
        var e, a = this,
            b = 0,
            c = 0,
            d = [];
        for (a.options.infinite === !1 ? (e = a.slideCount - a.options.slidesToShow + 1, a.options.centerMode === !0 && (e = a.slideCount)) : (b = -1 * a.options.slidesToScroll, c = -1 * a.options.slidesToScroll, e = 2 * a.slideCount); e > b;) d.push(b), b = c + a.options.slidesToScroll, c += a.options.slidesToScroll <= a.options.slidesToShow ? a.options.slidesToScroll : a.options.slidesToShow;
        return d
    }, b.prototype.getSlick = function() {
        return this
    }, b.prototype.getSlideCount = function() {
        var c, d, e, b = this;
        return e = b.options.centerMode === !0 ? b.slideWidth * Math.floor(b.options.slidesToShow / 2) : 0, b.options.swipeToSlide === !0 ? (b.$slideTrack.find(".slick-slide").each(function(c, f) {
            return f.offsetLeft - e + a(f).outerWidth() / 2 > -1 * b.swipeLeft ? (d = f, !1) : void 0
        }), c = Math.abs(a(d).attr("data-slick-index") - b.currentSlide) || 1) : b.options.slidesToScroll
    }, b.prototype.goTo = b.prototype.slickGoTo = function(a, b) {
        var c = this;
        c.changeSlide({
            data: {
                message: "index",
                index: parseInt(a)
            }
        }, b)
    }, b.prototype.init = function() {
        var b = this;
        a(b.$slider).hasClass("slick-initialized") || (a(b.$slider).addClass("slick-initialized"), b.buildRows(), b.buildOut(), b.setProps(), b.startLoad(), b.loadSlider(), b.initializeEvents(), b.updateArrows(), b.updateDots()), b.$slider.trigger("init", [b])
    }, b.prototype.initArrowEvents = function() {
        var a = this;
        a.options.arrows === !0 && a.slideCount > a.options.slidesToShow && (a.$prevArrow.on("click.slick", {
            message: "previous"
        }, a.changeSlide), a.$nextArrow.on("click.slick", {
            message: "next"
        }, a.changeSlide))
    }, b.prototype.initDotEvents = function() {
        var b = this;
        b.options.dots === !0 && b.slideCount > b.options.slidesToShow && a("li", b.$dots).on("click.slick", {
            message: "index"
        }, b.changeSlide), b.options.dots === !0 && b.options.pauseOnDotsHover === !0 && b.options.autoplay === !0 && a("li", b.$dots).on("mouseenter.slick", b.setPaused.bind(b, !0)).on("mouseleave.slick", b.setPaused.bind(b, !1))
    }, b.prototype.initializeEvents = function() {
        var b = this;
        b.initArrowEvents(), b.initDotEvents(), b.$list.on("touchstart.slick mousedown.slick", {
            action: "start"
        }, b.swipeHandler), b.$list.on("touchmove.slick mousemove.slick", {
            action: "move"
        }, b.swipeHandler), b.$list.on("touchend.slick mouseup.slick", {
            action: "end"
        }, b.swipeHandler), b.$list.on("touchcancel.slick mouseleave.slick", {
            action: "end"
        }, b.swipeHandler), b.$list.on("click.slick", b.clickHandler), b.options.autoplay === !0 && a(document).on(b.visibilityChange, b.visibility.bind(b)), b.$list.on("mouseenter.slick", b.setPaused.bind(b, !0)), b.$list.on("mouseleave.slick", b.setPaused.bind(b, !1)), b.options.accessibility === !0 && b.$list.on("keydown.slick", b.keyHandler), b.options.focusOnSelect === !0 && a(b.$slideTrack).children().on("click.slick", b.selectHandler), a(window).on("orientationchange.slick.slick-" + b.instanceUid, b.orientationChange.bind(b)), a(window).on("resize.slick.slick-" + b.instanceUid, b.resize.bind(b)), a("[draggable!=true]", b.$slideTrack).on("dragstart", b.preventDefault), a(window).on("load.slick.slick-" + b.instanceUid, b.setPosition), a(document).on("ready.slick.slick-" + b.instanceUid, b.setPosition)
    }, b.prototype.initUI = function() {
        var a = this;
        a.options.arrows === !0 && a.slideCount > a.options.slidesToShow && (a.$prevArrow.show(), a.$nextArrow.show()), a.options.dots === !0 && a.slideCount > a.options.slidesToShow && a.$dots.show(), a.options.autoplay === !0 && a.autoPlay()
    }, b.prototype.keyHandler = function(a) {
        var b = this;
        37 === a.keyCode && b.options.accessibility === !0 ? b.changeSlide({
            data: {
                message: "previous"
            }
        }) : 39 === a.keyCode && b.options.accessibility === !0 && b.changeSlide({
            data: {
                message: "next"
            }
        })
    }, b.prototype.lazyLoad = function() {
        function g(b) {
            a("img[data-lazy]", b).each(function() {
                var b = a(this),
                    c = a(this).attr("data-lazy"),
                    d = document.createElement("img");
                d.onload = function() {
                    b.animate({
                        opacity: 1
                    }, 200)
                }, d.src = c, b.css({
                    opacity: 0
                }).attr("src", c).removeAttr("data-lazy").removeClass("slick-loading")
            })
        }
        var c, d, e, f, b = this;
        b.options.centerMode === !0 ? b.options.infinite === !0 ? (e = b.currentSlide + (b.options.slidesToShow / 2 + 1), f = e + b.options.slidesToShow + 2) : (e = Math.max(0, b.currentSlide - (b.options.slidesToShow / 2 + 1)), f = 2 + (b.options.slidesToShow / 2 + 1) + b.currentSlide) : (e = b.options.infinite ? b.options.slidesToShow + b.currentSlide : b.currentSlide, f = e + b.options.slidesToShow, b.options.fade === !0 && (e > 0 && e--, f <= b.slideCount && f++)), c = b.$slider.find(".slick-slide").slice(e, f), g(c), b.slideCount <= b.options.slidesToShow ? (d = b.$slider.find(".slick-slide"), g(d)) : b.currentSlide >= b.slideCount - b.options.slidesToShow ? (d = b.$slider.find(".slick-cloned").slice(0, b.options.slidesToShow), g(d)) : 0 === b.currentSlide && (d = b.$slider.find(".slick-cloned").slice(-1 * b.options.slidesToShow), g(d))
    }, b.prototype.loadSlider = function() {
        var a = this;
        a.setPosition(), a.$slideTrack.css({
            opacity: 1
        }), a.$slider.removeClass("slick-loading"), a.initUI(), "progressive" === a.options.lazyLoad && a.progressiveLazyLoad()
    }, b.prototype.next = b.prototype.slickNext = function() {
        var a = this;
        a.changeSlide({
            data: {
                message: "next"
            }
        })
    }, b.prototype.orientationChange = function() {
        var a = this;
        a.checkResponsive(), a.setPosition()
    }, b.prototype.pause = b.prototype.slickPause = function() {
        var a = this;
        a.autoPlayClear(), a.paused = !0
    }, b.prototype.play = b.prototype.slickPlay = function() {
        var a = this;
        a.paused = !1, a.autoPlay()
    }, b.prototype.postSlide = function(a) {
        var b = this;
        b.$slider.trigger("afterChange", [b, a]), b.animating = !1, b.setPosition(), b.swipeLeft = null, b.options.autoplay === !0 && b.paused === !1 && b.autoPlay()
    }, b.prototype.prev = b.prototype.slickPrev = function() {
        var a = this;
        a.changeSlide({
            data: {
                message: "previous"
            }
        })
    }, b.prototype.preventDefault = function(a) {
        a.preventDefault()
    }, b.prototype.progressiveLazyLoad = function() {
        var c, d, b = this;
        c = a("img[data-lazy]", b.$slider).length, c > 0 && (d = a("img[data-lazy]", b.$slider).first(), d.attr("src", d.attr("data-lazy")).removeClass("slick-loading").load(function() {
            d.removeAttr("data-lazy"), b.progressiveLazyLoad(), b.options.adaptiveHeight === !0 && b.setPosition()
        }).error(function() {
            d.removeAttr("data-lazy"), b.progressiveLazyLoad()
        }))
    }, b.prototype.refresh = function() {
        var b = this,
            c = b.currentSlide;
        b.destroy(), a.extend(b, b.initials), b.init(), b.changeSlide({
            data: {
                message: "index",
                index: c
            }
        }, !1)
    }, b.prototype.reinit = function() {
        var b = this;
        b.$slides = b.$slideTrack.children(b.options.slide).addClass("slick-slide"), b.slideCount = b.$slides.length, b.currentSlide >= b.slideCount && 0 !== b.currentSlide && (b.currentSlide = b.currentSlide - b.options.slidesToScroll), b.slideCount <= b.options.slidesToShow && (b.currentSlide = 0), b.setProps(), b.setupInfinite(), b.buildArrows(), b.updateArrows(), b.initArrowEvents(), b.buildDots(), b.updateDots(), b.initDotEvents(), b.options.focusOnSelect === !0 && a(b.$slideTrack).children().on("click.slick", b.selectHandler), b.setSlideClasses(0), b.setPosition(), b.$slider.trigger("reInit", [b])
    }, b.prototype.resize = function() {
        var b = this;
        a(window).width() !== b.windowWidth && (clearTimeout(b.windowDelay), b.windowDelay = window.setTimeout(function() {
            b.windowWidth = a(window).width(), b.checkResponsive(), b.setPosition()
        }, 50))
    }, b.prototype.removeSlide = b.prototype.slickRemove = function(a, b, c) {
        var d = this;
        return "boolean" == typeof a ? (b = a, a = b === !0 ? 0 : d.slideCount - 1) : a = b === !0 ? --a : a, d.slideCount < 1 || 0 > a || a > d.slideCount - 1 ? !1 : (d.unload(), c === !0 ? d.$slideTrack.children().remove() : d.$slideTrack.children(this.options.slide).eq(a).remove(), d.$slides = d.$slideTrack.children(this.options.slide), d.$slideTrack.children(this.options.slide).detach(), d.$slideTrack.append(d.$slides), d.$slidesCache = d.$slides, d.reinit(), void 0)
    }, b.prototype.setCSS = function(a) {
        var d, e, b = this,
            c = {};
        b.options.rtl === !0 && (a = -a), d = "left" == b.positionProp ? Math.ceil(a) + "px" : "0px", e = "top" == b.positionProp ? Math.ceil(a) + "px" : "0px", c[b.positionProp] = a, b.transformsEnabled === !1 ? b.$slideTrack.css(c) : (c = {}, b.cssTransitions === !1 ? (c[b.animType] = "translate(" + d + ", " + e + ")", b.$slideTrack.css(c)) : (c[b.animType] = "translate3d(" + d + ", " + e + ", 0px)", b.$slideTrack.css(c)))
    }, b.prototype.setDimensions = function() {
        var a = this;
        a.options.vertical === !1 ? a.options.centerMode === !0 && a.$list.css({
            padding: "0px " + a.options.centerPadding
        }) : (a.$list.height(a.$slides.first().outerHeight(!0) * a.options.slidesToShow), a.options.centerMode === !0 && a.$list.css({
            padding: a.options.centerPadding + " 0px"
        })), a.listWidth = a.$list.width(), a.listHeight = a.$list.height(), a.options.vertical === !1 && a.options.variableWidth === !1 ? (a.slideWidth = Math.ceil(a.listWidth / a.options.slidesToShow), a.$slideTrack.width(Math.ceil(a.slideWidth * a.$slideTrack.children(".slick-slide").length))) : a.options.variableWidth === !0 ? a.$slideTrack.width(5e3 * a.slideCount) : (a.slideWidth = Math.ceil(a.listWidth), a.$slideTrack.height(Math.ceil(a.$slides.first().outerHeight(!0) * a.$slideTrack.children(".slick-slide").length)));
        var b = a.$slides.first().outerWidth(!0) - a.$slides.first().width();
        a.options.variableWidth === !1 && a.$slideTrack.children(".slick-slide").width(a.slideWidth - b)
    }, b.prototype.setFade = function() {
        var c, b = this;
        b.$slides.each(function(d, e) {
            c = -1 * b.slideWidth * d, b.options.rtl === !0 ? a(e).css({
                position: "relative",
                right: c,
                top: 0,
                zIndex: 800,
                opacity: 0
            }) : a(e).css({
                position: "relative",
                left: c,
                top: 0,
                zIndex: 800,
                opacity: 0
            })
        }), b.$slides.eq(b.currentSlide).css({
            zIndex: 900,
            opacity: 1
        })
    }, b.prototype.setHeight = function() {
        var a = this;
        if (1 === a.options.slidesToShow && a.options.adaptiveHeight === !0 && a.options.vertical === !1) {
            var b = a.$slides.eq(a.currentSlide).outerHeight(!0);
            a.$list.css("height", b)
        }
    }, b.prototype.setOption = b.prototype.slickSetOption = function(a, b, c) {
        var d = this;
        d.options[a] = b, c === !0 && (d.unload(), d.reinit())
    }, b.prototype.setPosition = function() {
        var a = this;
        a.setDimensions(), a.setHeight(), a.options.fade === !1 ? a.setCSS(a.getLeft(a.currentSlide)) : a.setFade(), a.$slider.trigger("setPosition", [a])
    }, b.prototype.setProps = function() {
        var a = this,
            b = document.body.style;
        a.positionProp = a.options.vertical === !0 ? "top" : "left", "top" === a.positionProp ? a.$slider.addClass("slick-vertical") : a.$slider.removeClass("slick-vertical"), (void 0 !== b.WebkitTransition || void 0 !== b.MozTransition || void 0 !== b.msTransition) && a.options.useCSS === !0 && (a.cssTransitions = !0), void 0 !== b.OTransform && (a.animType = "OTransform", a.transformType = "-o-transform", a.transitionType = "OTransition", void 0 === b.perspectiveProperty && void 0 === b.webkitPerspective && (a.animType = !1)), void 0 !== b.MozTransform && (a.animType = "MozTransform", a.transformType = "-moz-transform", a.transitionType = "MozTransition", void 0 === b.perspectiveProperty && void 0 === b.MozPerspective && (a.animType = !1)), void 0 !== b.webkitTransform && (a.animType = "webkitTransform", a.transformType = "-webkit-transform", a.transitionType = "webkitTransition", void 0 === b.perspectiveProperty && void 0 === b.webkitPerspective && (a.animType = !1)), void 0 !== b.msTransform && (a.animType = "msTransform", a.transformType = "-ms-transform", a.transitionType = "msTransition", void 0 === b.msTransform && (a.animType = !1)), void 0 !== b.transform && a.animType !== !1 && (a.animType = "transform", a.transformType = "transform", a.transitionType = "transition"), a.transformsEnabled = null !== a.animType && a.animType !== !1
    }, b.prototype.setSlideClasses = function(a) {
        var c, d, e, f, b = this;
        b.$slider.find(".slick-slide").removeClass("slick-active").attr("aria-hidden", "true").removeClass("slick-center"), d = b.$slider.find(".slick-slide"), b.options.centerMode === !0 ? (c = Math.floor(b.options.slidesToShow / 2), b.options.infinite === !0 && (a >= c && a <= b.slideCount - 1 - c ? b.$slides.slice(a - c, a + c + 1).addClass("slick-active").attr("aria-hidden", "false") : (e = b.options.slidesToShow + a, d.slice(e - c + 1, e + c + 2).addClass("slick-active").attr("aria-hidden", "false")), 0 === a ? d.eq(d.length - 1 - b.options.slidesToShow).addClass("slick-center") : a === b.slideCount - 1 && d.eq(b.options.slidesToShow).addClass("slick-center")), b.$slides.eq(a).addClass("slick-center")) : a >= 0 && a <= b.slideCount - b.options.slidesToShow ? b.$slides.slice(a, a + b.options.slidesToShow).addClass("slick-active").attr("aria-hidden", "false") : d.length <= b.options.slidesToShow ? d.addClass("slick-active").attr("aria-hidden", "false") : (f = b.slideCount % b.options.slidesToShow, e = b.options.infinite === !0 ? b.options.slidesToShow + a : a, b.options.slidesToShow == b.options.slidesToScroll && b.slideCount - a < b.options.slidesToShow ? d.slice(e - (b.options.slidesToShow - f), e + f).addClass("slick-active").attr("aria-hidden", "false") : d.slice(e, e + b.options.slidesToShow).addClass("slick-active").attr("aria-hidden", "false")), "ondemand" === b.options.lazyLoad && b.lazyLoad()
    }, b.prototype.setupInfinite = function() {
        var c, d, e, b = this;
        if (b.options.fade === !0 && (b.options.centerMode = !1), b.options.infinite === !0 && b.options.fade === !1 && (d = null, b.slideCount > b.options.slidesToShow)) {
            for (e = b.options.centerMode === !0 ? b.options.slidesToShow + 1 : b.options.slidesToShow, c = b.slideCount; c > b.slideCount - e; c -= 1) d = c - 1, a(b.$slides[d]).clone(!0).attr("id", "").attr("data-slick-index", d - b.slideCount).prependTo(b.$slideTrack).addClass("slick-cloned");
            for (c = 0; e > c; c += 1) d = c, a(b.$slides[d]).clone(!0).attr("id", "").attr("data-slick-index", d + b.slideCount).appendTo(b.$slideTrack).addClass("slick-cloned");
            b.$slideTrack.find(".slick-cloned").find("[id]").each(function() {
                a(this).attr("id", "")
            })
        }
    }, b.prototype.setPaused = function(a) {
        var b = this;
        b.options.autoplay === !0 && b.options.pauseOnHover === !0 && (b.paused = a, b.autoPlayClear())
    }, b.prototype.selectHandler = function(b) {
        var c = this,
            d = a(b.target).is(".slick-slide") ? a(b.target) : a(b.target).parents(".slick-slide"),
            e = parseInt(d.attr("data-slick-index"));
        return e || (e = 0), c.slideCount <= c.options.slidesToShow ? (c.$slider.find(".slick-slide").removeClass("slick-active").attr("aria-hidden", "true"), c.$slides.eq(e).addClass("slick-active").attr("aria-hidden", "false"), c.options.centerMode === !0 && (c.$slider.find(".slick-slide").removeClass("slick-center"), c.$slides.eq(e).addClass("slick-center")), c.asNavFor(e), void 0) : (c.slideHandler(e), void 0)
    }, b.prototype.slideHandler = function(a, b, c) {
        var d, e, f, g, h = null,
            i = this;
        return b = b || !1, i.animating === !0 && i.options.waitForAnimate === !0 || i.options.fade === !0 && i.currentSlide === a || i.slideCount <= i.options.slidesToShow ? void 0 : (b === !1 && i.asNavFor(a), d = a, h = i.getLeft(d), g = i.getLeft(i.currentSlide), i.currentLeft = null === i.swipeLeft ? g : i.swipeLeft, i.options.infinite === !1 && i.options.centerMode === !1 && (0 > a || a > i.getDotCount() * i.options.slidesToScroll) ? (i.options.fade === !1 && (d = i.currentSlide, c !== !0 ? i.animateSlide(g, function() {
            i.postSlide(d)
        }) : i.postSlide(d)), void 0) : i.options.infinite === !1 && i.options.centerMode === !0 && (0 > a || a > i.slideCount - i.options.slidesToScroll) ? (i.options.fade === !1 && (d = i.currentSlide, c !== !0 ? i.animateSlide(g, function() {
            i.postSlide(d)
        }) : i.postSlide(d)), void 0) : (i.options.autoplay === !0 && clearInterval(i.autoPlayTimer), e = 0 > d ? 0 !== i.slideCount % i.options.slidesToScroll ? i.slideCount - i.slideCount % i.options.slidesToScroll : i.slideCount + d : d >= i.slideCount ? 0 !== i.slideCount % i.options.slidesToScroll ? 0 : d - i.slideCount : d, i.animating = !0, i.$slider.trigger("beforeChange", [i, i.currentSlide, e]), f = i.currentSlide, i.currentSlide = e, i.setSlideClasses(i.currentSlide), i.updateDots(), i.updateArrows(), i.options.fade === !0 ? (c !== !0 ? i.fadeSlide(e, function() {
            i.postSlide(e)
        }) : i.postSlide(e), i.animateHeight(), void 0) : (c !== !0 ? i.animateSlide(h, function() {
            i.postSlide(e)
        }) : i.postSlide(e), void 0)))
    }, b.prototype.startLoad = function() {
        var a = this;
        a.options.arrows === !0 && a.slideCount > a.options.slidesToShow && (a.$prevArrow.hide(), a.$nextArrow.hide()), a.options.dots === !0 && a.slideCount > a.options.slidesToShow && a.$dots.hide(), a.$slider.addClass("slick-loading")
    }, b.prototype.swipeDirection = function() {
        var a, b, c, d, e = this;
        return a = e.touchObject.startX - e.touchObject.curX, b = e.touchObject.startY - e.touchObject.curY, c = Math.atan2(b, a), d = Math.round(180 * c / Math.PI), 0 > d && (d = 360 - Math.abs(d)), 45 >= d && d >= 0 ? e.options.rtl === !1 ? "left" : "right" : 360 >= d && d >= 315 ? e.options.rtl === !1 ? "left" : "right" : d >= 135 && 225 >= d ? e.options.rtl === !1 ? "right" : "left" : e.options.verticalSwiping === !0 ? d >= 35 && 135 >= d ? "left" : "right" : "vertical"
    }, b.prototype.swipeEnd = function() {
        var c, b = this;
        if (b.dragging = !1, b.shouldClick = b.touchObject.swipeLength > 10 ? !1 : !0, void 0 === b.touchObject.curX) return !1;
        if (b.touchObject.edgeHit === !0 && b.$slider.trigger("edge", [b, b.swipeDirection()]), b.touchObject.swipeLength >= b.touchObject.minSwipe) switch (b.swipeDirection()) {
            case "left":
                c = b.options.swipeToSlide ? b.checkNavigable(b.currentSlide + b.getSlideCount()) : b.currentSlide + b.getSlideCount(), b.slideHandler(c), b.currentDirection = 0, b.touchObject = {}, b.$slider.trigger("swipe", [b, "left"]);
                break;
            case "right":
                c = b.options.swipeToSlide ? b.checkNavigable(b.currentSlide - b.getSlideCount()) : b.currentSlide - b.getSlideCount(), b.slideHandler(c), b.currentDirection = 1, b.touchObject = {}, b.$slider.trigger("swipe", [b, "right"])
        } else b.touchObject.startX !== b.touchObject.curX && (b.slideHandler(b.currentSlide), b.touchObject = {})
    }, b.prototype.swipeHandler = function(a) {
        var b = this;
        if (!(b.options.swipe === !1 || "ontouchend" in document && b.options.swipe === !1 || b.options.draggable === !1 && -1 !== a.type.indexOf("mouse"))) switch (b.touchObject.fingerCount = a.originalEvent && void 0 !== a.originalEvent.touches ? a.originalEvent.touches.length : 1, b.touchObject.minSwipe = b.listWidth / b.options.touchThreshold, b.options.verticalSwiping === !0 && (b.touchObject.minSwipe = b.listHeight / b.options.touchThreshold), a.data.action) {
            case "start":
                b.swipeStart(a);
                break;
            case "move":
                b.swipeMove(a);
                break;
            case "end":
                b.swipeEnd(a)
        }
    }, b.prototype.swipeMove = function(a) {
        var d, e, f, g, h, b = this;
        return h = void 0 !== a.originalEvent ? a.originalEvent.touches : null, !b.dragging || h && 1 !== h.length ? !1 : (d = b.getLeft(b.currentSlide), b.touchObject.curX = void 0 !== h ? h[0].pageX : a.clientX, b.touchObject.curY = void 0 !== h ? h[0].pageY : a.clientY, b.touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(b.touchObject.curX - b.touchObject.startX, 2))), b.options.verticalSwiping === !0 && (b.touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(b.touchObject.curY - b.touchObject.startY, 2)))), e = b.swipeDirection(), "vertical" !== e ? (void 0 !== a.originalEvent && b.touchObject.swipeLength > 4 && a.preventDefault(), g = (b.options.rtl === !1 ? 1 : -1) * (b.touchObject.curX > b.touchObject.startX ? 1 : -1), b.options.verticalSwiping === !0 && (g = b.touchObject.curY > b.touchObject.startY ? 1 : -1), f = b.touchObject.swipeLength, b.touchObject.edgeHit = !1, b.options.infinite === !1 && (0 === b.currentSlide && "right" === e || b.currentSlide >= b.getDotCount() && "left" === e) && (f = b.touchObject.swipeLength * b.options.edgeFriction, b.touchObject.edgeHit = !0), b.swipeLeft = b.options.vertical === !1 ? d + f * g : d + f * (b.$list.height() / b.listWidth) * g, b.options.verticalSwiping === !0 && (b.swipeLeft = d + f * g), b.options.fade === !0 || b.options.touchMove === !1 ? !1 : b.animating === !0 ? (b.swipeLeft = null, !1) : (b.setCSS(b.swipeLeft), void 0)) : void 0)
    }, b.prototype.swipeStart = function(a) {
        var c, b = this;
        return 1 !== b.touchObject.fingerCount || b.slideCount <= b.options.slidesToShow ? (b.touchObject = {}, !1) : (void 0 !== a.originalEvent && void 0 !== a.originalEvent.touches && (c = a.originalEvent.touches[0]), b.touchObject.startX = b.touchObject.curX = void 0 !== c ? c.pageX : a.clientX, b.touchObject.startY = b.touchObject.curY = void 0 !== c ? c.pageY : a.clientY, b.dragging = !0, void 0)
    }, b.prototype.unfilterSlides = b.prototype.slickUnfilter = function() {
        var a = this;
        null !== a.$slidesCache && (a.unload(), a.$slideTrack.children(this.options.slide).detach(), a.$slidesCache.appendTo(a.$slideTrack), a.reinit())
    }, b.prototype.unload = function() {
        var b = this;
        a(".slick-cloned", b.$slider).remove(), b.$dots && b.$dots.remove(), b.$prevArrow && "object" != typeof b.options.prevArrow && b.$prevArrow.remove(), b.$nextArrow && "object" != typeof b.options.nextArrow && b.$nextArrow.remove(), b.$slides.removeClass("slick-slide slick-active slick-visible").attr("aria-hidden", "true").css("width", "")
    }, b.prototype.unslick = function() {
        var a = this;
        a.destroy()
    }, b.prototype.updateArrows = function() {
        var b, a = this;
        b = Math.floor(a.options.slidesToShow / 2), a.options.arrows === !0 && a.options.infinite !== !0 && a.slideCount > a.options.slidesToShow && (a.$prevArrow.removeClass("slick-disabled"), a.$nextArrow.removeClass("slick-disabled"), 0 === a.currentSlide ? (a.$prevArrow.addClass("slick-disabled"), a.$nextArrow.removeClass("slick-disabled")) : a.currentSlide >= a.slideCount - a.options.slidesToShow && a.options.centerMode === !1 ? (a.$nextArrow.addClass("slick-disabled"), a.$prevArrow.removeClass("slick-disabled")) : a.currentSlide >= a.slideCount - 1 && a.options.centerMode === !0 && (a.$nextArrow.addClass("slick-disabled"), a.$prevArrow.removeClass("slick-disabled")))
    }, b.prototype.updateDots = function() {
        var a = this;
        null !== a.$dots && (a.$dots.find("li").removeClass("slick-active").attr("aria-hidden", "true"), a.$dots.find("li").eq(Math.floor(a.currentSlide / a.options.slidesToScroll)).addClass("slick-active").attr("aria-hidden", "false"))
    }, b.prototype.visibility = function() {
        var a = this;
        document[a.hidden] ? (a.paused = !0, a.autoPlayClear()) : (a.paused = !1, a.autoPlay())
    }, a.fn.slick = function() {
        var g, a = this,
            c = arguments[0],
            d = Array.prototype.slice.call(arguments, 1),
            e = a.length,
            f = 0;
        for (f; e > f; f++)
            if ("object" == typeof c || "undefined" == typeof c ? a[f].slick = new b(a[f], c) : g = a[f].slick[c].apply(a[f].slick, d), "undefined" != typeof g) return g;
        return a
    }
});
var Io=Io||{};

Io.helperFunctions={};
Io.addons={};

Io.addons.Homepage = function() {
	console.log($('#carouselAutoplaySpeed').length>0);
	console.log($('#carouselAutoplaySpeed').attr('data-autoplay-attr'));
	
	var init = function(){
		
		// set image-src according to window-width
		Io.helperFunctions.checkImages.init($('.io .retina'));
		$(window).resize(function(){
			Io.helperFunctions.checkImages.init($('.io .retina'));
		});
		
		//initalize carousel
		$('.interone-slideshow').on('init', function(slick){
			$(this).show()
		}).slick({
			dots:true,
			autoplay: true,
			autoplaySpeed: $('#carouselAutoplaySpeed').length>0?$('#carouselAutoplaySpeed').attr('data-autoplay-attr'):3e3,
			lazyLoad: "progressive"
		});
		
		
		
	}
	init();
};

Io.addons.Doorpage = function() {
	var init = function(){
		//open/close tariffDetails
		$('.interone-tariff .opener').click(function(){
			$(this).parent().find('.tariffDetails').toggleClass('open');
			$(this).toggleClass('icon-stage_teaser_pfeil_oben icon-stage_teaser_pfeil_unten');
		});
		
		Io.helperFunctions.linkToCompleteElement($('.interone-tariff .tariffOptions .singleOption'));
		Io.helperFunctions.equalizeContainerHeights($('.interone-tariff'));
		Io.helperFunctions.checkImages.init($('.io .retina'));
		
		$(window).resize(function(){
			Io.helperFunctions.checkImages.init($('.io .retina'));
			Io.helperFunctions.equalizeContainerHeights($('.interone-tariff'));
		})
		
	}
	init();
};


// set image-src according to window-width
Io.helperFunctions.checkImages = function(){
	var init=function(identifier){
		identifier.each(function(){
			if (matchMedia('only screen and (min-width: 768px)').matches) {
				if(typeof $(this).attr('data-lazy') != "undefined"){
					if($(this).attr('data-lazy')!=$(this).attr('img-src')){
						$(this).attr('data-lazy',$(this).attr('img-src'));
					}
				}else{
					if($(this).attr('src')!=$(this).attr('img-src')){
						$(this).attr('src',$(this).attr('img-src'));
					}
				}
				
			}else{
				if(typeof $(this).attr('data-lazy') != "undefined"){
					if($(this).attr('data-lazy')!=$(this).attr('img-src-mobile')){
						$(this).attr('data-lazy',$(this).attr('img-src-mobile'));
					}
				}else{
					if($(this).attr('src')!=$(this).attr('img-src-mobile')){
						$(this).attr('src',$(this).attr('img-src-mobile'));
					}
				}
			}
		});
	}
	return {
		init: init
	};
}();


// set clickhandler on a target with the href of an a-tag inside
Io.helperFunctions.linkToCompleteElement = function(identifier) {
	identifier.each(function(i) {
		var url = $(this).find('a').attr('href');
		$(this).css('cursor','pointer').click(function() {
			self.location.href = url;
		});
	});
};

Io.helperFunctions.equalizeContainerHeights = function(identifier) {
	if (matchMedia('only screen and (min-width: 768px)').matches) {
		var maxHeight=0;
		identifier.each(function(i) {
			var height = $(this).outerHeight(true);
			maxHeight = Math.max(maxHeight,height);
		});
		identifier.css('min-height',maxHeight);
	}else{
		identifier.css('min-height','1px');
	}
};


/* Modernizr 2.8.3 (Custom Build) | MIT & BSD
 * Build: http://modernizr.com/download/#-fontface-backgroundsize-borderimage-borderradius-flexbox-flexboxlegacy-multiplebgs-opacity-textshadow-cssanimations-csscolumns-generatedcontent-cssgradients-cssreflections-csstransforms-csstransforms3d-csstransitions-input-inputtypes-localstorage-sessionstorage-touch-mq-cssclasses-addtest-prefixed-teststyles-testprop-testallprops-hasevent-prefixes-domprefixes
 */
;



window.Modernizr = (function( window, document, undefined ) {

    var version = '2.8.3',

    Modernizr = {},

    enableClasses = true,

    docElement = document.documentElement,

    mod = 'modernizr',
    modElem = document.createElement(mod),
    mStyle = modElem.style,

    inputElem  = document.createElement('input')  ,

    smile = ':)',

    toString = {}.toString,

    prefixes = ' -webkit- -moz- -o- -ms- '.split(' '),



    omPrefixes = 'Webkit Moz O ms',

    cssomPrefixes = omPrefixes.split(' '),

    domPrefixes = omPrefixes.toLowerCase().split(' '),


    tests = {},
    inputs = {},
    attrs = {},

    classes = [],

    slice = classes.slice,

    featureName, 


    injectElementWithStyles = function( rule, callback, nodes, testnames ) {

      var style, ret, node, docOverflow,
          div = document.createElement('div'),
                body = document.body,
                fakeBody = body || document.createElement('body');

      if ( parseInt(nodes, 10) ) {
                      while ( nodes-- ) {
              node = document.createElement('div');
              node.id = testnames ? testnames[nodes] : mod + (nodes + 1);
              div.appendChild(node);
          }
      }

                style = ['&#173;','<style id="s', mod, '">', rule, '</style>'].join('');
      div.id = mod;
          (body ? div : fakeBody).innerHTML += style;
      fakeBody.appendChild(div);
      if ( !body ) {
                fakeBody.style.background = '';
                fakeBody.style.overflow = 'hidden';
          docOverflow = docElement.style.overflow;
          docElement.style.overflow = 'hidden';
          docElement.appendChild(fakeBody);
      }

      ret = callback(div, rule);
        if ( !body ) {
          fakeBody.parentNode.removeChild(fakeBody);
          docElement.style.overflow = docOverflow;
      } else {
          div.parentNode.removeChild(div);
      }

      return !!ret;

    },

    testMediaQuery = function( mq ) {

      var matchMedia = window.matchMedia || window.msMatchMedia;
      if ( matchMedia ) {
        return matchMedia(mq) && matchMedia(mq).matches || false;
      }

      var bool;

      injectElementWithStyles('@media ' + mq + ' { #' + mod + ' { position: absolute; } }', function( node ) {
        bool = (window.getComputedStyle ?
                  getComputedStyle(node, null) :
                  node.currentStyle)['position'] == 'absolute';
      });

      return bool;

     },
 

    isEventSupported = (function() {

      var TAGNAMES = {
        'select': 'input', 'change': 'input',
        'submit': 'form', 'reset': 'form',
        'error': 'img', 'load': 'img', 'abort': 'img'
      };

      function isEventSupported( eventName, element ) {

        element = element || document.createElement(TAGNAMES[eventName] || 'div');
        eventName = 'on' + eventName;

            var isSupported = eventName in element;

        if ( !isSupported ) {
                if ( !element.setAttribute ) {
            element = document.createElement('div');
          }
          if ( element.setAttribute && element.removeAttribute ) {
            element.setAttribute(eventName, '');
            isSupported = is(element[eventName], 'function');

                    if ( !is(element[eventName], 'undefined') ) {
              element[eventName] = undefined;
            }
            element.removeAttribute(eventName);
          }
        }

        element = null;
        return isSupported;
      }
      return isEventSupported;
    })(),


    _hasOwnProperty = ({}).hasOwnProperty, hasOwnProp;

    if ( !is(_hasOwnProperty, 'undefined') && !is(_hasOwnProperty.call, 'undefined') ) {
      hasOwnProp = function (object, property) {
        return _hasOwnProperty.call(object, property);
      };
    }
    else {
      hasOwnProp = function (object, property) { 
        return ((property in object) && is(object.constructor.prototype[property], 'undefined'));
      };
    }


    if (!Function.prototype.bind) {
      Function.prototype.bind = function bind(that) {

        var target = this;

        if (typeof target != "function") {
            throw new TypeError();
        }

        var args = slice.call(arguments, 1),
            bound = function () {

            if (this instanceof bound) {

              var F = function(){};
              F.prototype = target.prototype;
              var self = new F();

              var result = target.apply(
                  self,
                  args.concat(slice.call(arguments))
              );
              if (Object(result) === result) {
                  return result;
              }
              return self;

            } else {

              return target.apply(
                  that,
                  args.concat(slice.call(arguments))
              );

            }

        };

        return bound;
      };
    }

    function setCss( str ) {
        mStyle.cssText = str;
    }

    function setCssAll( str1, str2 ) {
        return setCss(prefixes.join(str1 + ';') + ( str2 || '' ));
    }

    function is( obj, type ) {
        return typeof obj === type;
    }

    function contains( str, substr ) {
        return !!~('' + str).indexOf(substr);
    }

    function testProps( props, prefixed ) {
        for ( var i in props ) {
            var prop = props[i];
            if ( !contains(prop, "-") && mStyle[prop] !== undefined ) {
                return prefixed == 'pfx' ? prop : true;
            }
        }
        return false;
    }

    function testDOMProps( props, obj, elem ) {
        for ( var i in props ) {
            var item = obj[props[i]];
            if ( item !== undefined) {

                            if (elem === false) return props[i];

                            if (is(item, 'function')){
                                return item.bind(elem || obj);
                }

                            return item;
            }
        }
        return false;
    }

    function testPropsAll( prop, prefixed, elem ) {

        var ucProp  = prop.charAt(0).toUpperCase() + prop.slice(1),
            props   = (prop + ' ' + cssomPrefixes.join(ucProp + ' ') + ucProp).split(' ');

            if(is(prefixed, "string") || is(prefixed, "undefined")) {
          return testProps(props, prefixed);

            } else {
          props = (prop + ' ' + (domPrefixes).join(ucProp + ' ') + ucProp).split(' ');
          return testDOMProps(props, prefixed, elem);
        }
    }    tests['flexbox'] = function() {
      return testPropsAll('flexWrap');
    };


    tests['flexboxlegacy'] = function() {
        return testPropsAll('boxDirection');
    };



    tests['touch'] = function() {
        var bool;

        if(('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch) {
          bool = true;
        } else {
          injectElementWithStyles(['@media (',prefixes.join('touch-enabled),('),mod,')','{#modernizr{top:9px;position:absolute}}'].join(''), function( node ) {
            bool = node.offsetTop === 9;
          });
        }

        return bool;
    };

    tests['multiplebgs'] = function() {
                setCss('background:url(https://),url(https://),red url(https://)');

            return (/(url\s*\(.*?){3}/).test(mStyle.background);
    };    tests['backgroundsize'] = function() {
        return testPropsAll('backgroundSize');
    };

    tests['borderimage'] = function() {
        return testPropsAll('borderImage');
    };



    tests['borderradius'] = function() {
        return testPropsAll('borderRadius');
    };


    tests['textshadow'] = function() {
        return document.createElement('div').style.textShadow === '';
    };


    tests['opacity'] = function() {
                setCssAll('opacity:.55');

                    return (/^0.55$/).test(mStyle.opacity);
    };


    tests['cssanimations'] = function() {
        return testPropsAll('animationName');
    };


    tests['csscolumns'] = function() {
        return testPropsAll('columnCount');
    };


    tests['cssgradients'] = function() {
        var str1 = 'background-image:',
            str2 = 'gradient(linear,left top,right bottom,from(#9f9),to(white));',
            str3 = 'linear-gradient(left top,#9f9, white);';

        setCss(
                       (str1 + '-webkit- '.split(' ').join(str2 + str1) +
                       prefixes.join(str3 + str1)).slice(0, -str1.length)
        );

        return contains(mStyle.backgroundImage, 'gradient');
    };


    tests['cssreflections'] = function() {
        return testPropsAll('boxReflect');
    };


    tests['csstransforms'] = function() {
        return !!testPropsAll('transform');
    };


    tests['csstransforms3d'] = function() {

        var ret = !!testPropsAll('perspective');

                        if ( ret && 'webkitPerspective' in docElement.style ) {

                      injectElementWithStyles('@media (transform-3d),(-webkit-transform-3d){#modernizr{left:9px;position:absolute;height:3px;}}', function( node, rule ) {
            ret = node.offsetLeft === 9 && node.offsetHeight === 3;
          });
        }
        return ret;
    };


    tests['csstransitions'] = function() {
        return testPropsAll('transition');
    };



    tests['fontface'] = function() {
        var bool;

        injectElementWithStyles('@font-face {font-family:"font";src:url("https://")}', function( node, rule ) {
          var style = document.getElementById('smodernizr'),
              sheet = style.sheet || style.styleSheet,
              cssText = sheet ? (sheet.cssRules && sheet.cssRules[0] ? sheet.cssRules[0].cssText : sheet.cssText || '') : '';

          bool = /src/i.test(cssText) && cssText.indexOf(rule.split(' ')[0]) === 0;
        });

        return bool;
    };

    tests['generatedcontent'] = function() {
        var bool;

        injectElementWithStyles(['#',mod,'{font:0/0 a}#',mod,':after{content:"',smile,'";visibility:hidden;font:3px/1 a}'].join(''), function( node ) {
          bool = node.offsetHeight >= 3;
        });

        return bool;
    };



    tests['localstorage'] = function() {
        try {
            localStorage.setItem(mod, mod);
            localStorage.removeItem(mod);
            return true;
        } catch(e) {
            return false;
        }
    };

    tests['sessionstorage'] = function() {
        try {
            sessionStorage.setItem(mod, mod);
            sessionStorage.removeItem(mod);
            return true;
        } catch(e) {
            return false;
        }
    };

    function webforms() {
                                            Modernizr['input'] = (function( props ) {
            for ( var i = 0, len = props.length; i < len; i++ ) {
                attrs[ props[i] ] = !!(props[i] in inputElem);
            }
            if (attrs.list){
                                  attrs.list = !!(document.createElement('datalist') && window.HTMLDataListElement);
            }
            return attrs;
        })('autocomplete autofocus list placeholder max min multiple pattern required step'.split(' '));
                            Modernizr['inputtypes'] = (function(props) {

            for ( var i = 0, bool, inputElemType, defaultView, len = props.length; i < len; i++ ) {

                inputElem.setAttribute('type', inputElemType = props[i]);
                bool = inputElem.type !== 'text';

                                                    if ( bool ) {

                    inputElem.value         = smile;
                    inputElem.style.cssText = 'position:absolute;visibility:hidden;';

                    if ( /^range$/.test(inputElemType) && inputElem.style.WebkitAppearance !== undefined ) {

                      docElement.appendChild(inputElem);
                      defaultView = document.defaultView;

                                        bool =  defaultView.getComputedStyle &&
                              defaultView.getComputedStyle(inputElem, null).WebkitAppearance !== 'textfield' &&
                                                                                  (inputElem.offsetHeight !== 0);

                      docElement.removeChild(inputElem);

                    } else if ( /^(search|tel)$/.test(inputElemType) ){
                                                                                    } else if ( /^(url|email)$/.test(inputElemType) ) {
                                        bool = inputElem.checkValidity && inputElem.checkValidity() === false;

                    } else {
                                        bool = inputElem.value != smile;
                    }
                }

                inputs[ props[i] ] = !!bool;
            }
            return inputs;
        })('search tel url email datetime date month week time datetime-local number range color'.split(' '));
        }
    for ( var feature in tests ) {
        if ( hasOwnProp(tests, feature) ) {
                                    featureName  = feature.toLowerCase();
            Modernizr[featureName] = tests[feature]();

            classes.push((Modernizr[featureName] ? '' : 'no-') + featureName);
        }
    }

    Modernizr.input || webforms();


     Modernizr.addTest = function ( feature, test ) {
       if ( typeof feature == 'object' ) {
         for ( var key in feature ) {
           if ( hasOwnProp( feature, key ) ) {
             Modernizr.addTest( key, feature[ key ] );
           }
         }
       } else {

         feature = feature.toLowerCase();

         if ( Modernizr[feature] !== undefined ) {
                                              return Modernizr;
         }

         test = typeof test == 'function' ? test() : test;

         if (typeof enableClasses !== "undefined" && enableClasses) {
           docElement.className += ' ' + (test ? '' : 'no-') + feature;
         }
         Modernizr[feature] = test;

       }

       return Modernizr; 
     };


    setCss('');
    modElem = inputElem = null;


    Modernizr._version      = version;

    Modernizr._prefixes     = prefixes;
    Modernizr._domPrefixes  = domPrefixes;
    Modernizr._cssomPrefixes  = cssomPrefixes;

    Modernizr.mq            = testMediaQuery;

    Modernizr.hasEvent      = isEventSupported;

    Modernizr.testProp      = function(prop){
        return testProps([prop]);
    };

    Modernizr.testAllProps  = testPropsAll;


    Modernizr.testStyles    = injectElementWithStyles;
    Modernizr.prefixed      = function(prop, obj, elem){
      if(!obj) {
        return testPropsAll(prop, 'pfx');
      } else {
            return testPropsAll(prop, obj, elem);
      }
    };


    docElement.className = docElement.className.replace(/(^|\s)no-js(\s|$)/, '$1$2') +

                                                    (enableClasses ? ' js ' + classes.join(' ') : '');

    return Modernizr;

})(this, this.document);
;
/**
* autoNumeric.js
* @author: Bob Knothe
* @author: Sokolov Yura aka funny_falcon
* @version: 1.9.19 - 2014-03-23 GMT 2:00 PM
*
* Created by Robert J. Knothe on 2010-10-25. Please report any bugs to https://github.com/BobKnothe/autoNumeric
* Created by Sokolov Yura on 2010-11-07
*
* Copyright (c) 2011 Robert J. Knothe http://www.decorplanit.com/plugin/
*
* The MIT License (http://www.opensource.org/licenses/mit-license.php)
*
* Permission is hereby granted, free of charge, to any person
* obtaining a copy of this software and associated documentation
* files (the "Software"), to deal in the Software without
* restriction, including without limitation the rights to use,
* copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the
* Software is furnished to do so, subject to the following
* conditions:
*
* The above copyright notice and this permission notice shall be
* included in all copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
* OTHER DEALINGS IN THE SOFTWARE.
*/
(function ($) {
    "use strict";
    /*jslint browser: true*/
    /*global jQuery: false*/
    /* Cross browser routine for getting selected range/cursor position
     */
    function getElementSelection(that) {
        var position = {};
        if (that.selectionStart === undefined) {
            that.focus();
            var select = document.selection.createRange();
            position.length = select.text.length;
            select.moveStart('character', -that.value.length);
            position.end = select.text.length;
            position.start = position.end - position.length;
        } else {
            position.start = that.selectionStart;
            position.end = that.selectionEnd;
            position.length = position.end - position.start;
        }
        return position;
    }
    /**
     * Cross browser routine for setting selected range/cursor position
     */
    function setElementSelection(that, start, end) {
        if (that.selectionStart === undefined) {
            that.focus();
            var r = that.createTextRange();
            r.collapse(true);
            r.moveEnd('character', end);
            r.moveStart('character', start);
            r.select();
        } else {
            that.selectionStart = start;
            that.selectionEnd = end;
        }
    }
    /**
     * run callbacks in parameters if any
     * any parameter could be a callback:
     * - a function, which invoked with jQuery element, parameters and this parameter name and returns parameter value
     * - a name of function, attached to $(selector).autoNumeric.functionName(){} - which was called previously
     */
    function runCallbacks($this, settings) {
        /**
         * loops through the settings object (option array) to find the following
         * k = option name example k=aNum
         * val = option value example val=0123456789
         */
        $.each(settings, function (k, val) {
            if (typeof val === 'function') {
                settings[k] = val($this, settings, k);
            } else if (typeof $this.autoNumeric[val] === 'function') {
                /**
                 * calls the attached function from the html5 data example: data-a-sign="functionName"
                 */
                settings[k] = $this.autoNumeric[val]($this, settings, k);
            }
        });
    }
    function convertKeyToNumber(settings, key) {
        if (typeof (settings[key]) === 'string') {
            settings[key] *= 1;
        }
    }
    /**
     * Preparing user defined options for further usage
     * merge them with defaults appropriately
     */
    function autoCode($this, settings) {
        runCallbacks($this, settings);
        settings.oEvent = null;
        settings.tagList = ['B', 'CAPTION', 'CITE', 'CODE', 'DD', 'DEL', 'DIV', 'DFN', 'DT', 'EM', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'INS', 'KDB', 'LABEL', 'LI', 'OUTPUT', 'P', 'Q', 'S', 'SAMPLE', 'SPAN', 'STRONG', 'TD', 'TH', 'U', 'VAR'];
        var vmax = settings.vMax.toString().split('.'),
            vmin = (!settings.vMin && settings.vMin !== 0) ? [] : settings.vMin.toString().split('.');
        convertKeyToNumber(settings, 'vMax');
        convertKeyToNumber(settings, 'vMin');
        convertKeyToNumber(settings, 'mDec'); /** set mDec if not defained by user */
        settings.allowLeading = true;
        settings.aNeg = settings.vMin < 0 ? '-' : '';
        vmax[0] = vmax[0].replace('-', '');
        vmin[0] = vmin[0].replace('-', '');
        settings.mInt = Math.max(vmax[0].length, vmin[0].length, 1);
        if (settings.mDec === null) {
            var vmaxLength = 0,
                vminLength = 0;
            if (vmax[1]) {
                vmaxLength = vmax[1].length;
            }
            if (vmin[1]) {
                vminLength = vmin[1].length;
            }
            settings.mDec = Math.max(vmaxLength, vminLength);
        } /** set alternative decimal separator key */
        if (settings.altDec === null && settings.mDec > 0) {
            if (settings.aDec === '.' && settings.aSep !== ',') {
                settings.altDec = ',';
            } else if (settings.aDec === ',' && settings.aSep !== '.') {
                settings.altDec = '.';
            }
        }
        /** cache regexps for autoStrip */
        var aNegReg = settings.aNeg ? '([-\\' + settings.aNeg + ']?)' : '(-?)';
        settings.aNegRegAutoStrip = aNegReg;
        settings.skipFirstAutoStrip = new RegExp(aNegReg + '[^-' + (settings.aNeg ? '\\' + settings.aNeg : '') + '\\' + settings.aDec + '\\d]' + '.*?(\\d|\\' + settings.aDec + '\\d)');
        settings.skipLastAutoStrip = new RegExp('(\\d\\' + settings.aDec + '?)[^\\' + settings.aDec + '\\d]\\D*$');
        var allowed = '-' + settings.aNum + '\\' + settings.aDec;
        settings.allowedAutoStrip = new RegExp('[^' + allowed + ']', 'gi');
        settings.numRegAutoStrip = new RegExp(aNegReg + '(?:\\' + settings.aDec + '?(\\d+\\' + settings.aDec + '\\d+)|(\\d*(?:\\' + settings.aDec + '\\d*)?))');
        return settings;
    }
    /**
     * strip all unwanted characters and leave only a number alert
     */
    function autoStrip(s, settings, strip_zero) {
        if (settings.aSign) { /** remove currency sign */
            while (s.indexOf(settings.aSign) > -1) {
                s = s.replace(settings.aSign, '');
            }
        }
        s = s.replace(settings.skipFirstAutoStrip, '$1$2'); /** first replace anything before digits */
        s = s.replace(settings.skipLastAutoStrip, '$1'); /** then replace anything after digits */
        s = s.replace(settings.allowedAutoStrip, ''); /** then remove any uninterested characters */
        if (settings.altDec) {
            s = s.replace(settings.altDec, settings.aDec);
        } /** get only number string */
        var m = s.match(settings.numRegAutoStrip);
        s = m ? [m[1], m[2], m[3]].join('') : '';
        if ((settings.lZero === 'allow' || settings.lZero === 'keep') && strip_zero !== 'strip') {
            var parts = [],
                nSign = '';
            parts = s.split(settings.aDec);
            if (parts[0].indexOf('-') !== -1) {
                nSign = '-';
                parts[0] = parts[0].replace('-', '');
            }
            if (parts[0].length > settings.mInt && parts[0].charAt(0) === '0') { /** strip leading zero if need */
                parts[0] = parts[0].slice(1);
            }
            s = nSign + parts.join(settings.aDec);
        }
        if ((strip_zero && settings.lZero === 'deny') || (strip_zero && settings.lZero === 'allow' && settings.allowLeading === false)) {
            var strip_reg = '^' + settings.aNegRegAutoStrip + '0*(\\d' + (strip_zero === 'leading' ? ')' : '|$)');
            strip_reg = new RegExp(strip_reg);
            s = s.replace(strip_reg, '$1$2');
        }
        return s;
    }
    /**
     * places or removes brackets on negative values
     */
    function negativeBracket(s, nBracket, oEvent) { /** oEvent = settings.oEvent */
        nBracket = nBracket.split(',');
        if (oEvent === 'set' || oEvent === 'focusout') {
            s = s.replace('-', '');
            s = nBracket[0] + s + nBracket[1];
        } else if ((oEvent === 'get' || oEvent === 'focusin' || oEvent === 'pageLoad') && s.charAt(0) === nBracket[0]) {
            s = s.replace(nBracket[0], '-');
            s = s.replace(nBracket[1], '');
        }
        return s;
    }
    /**
     * truncate decimal part of a number
     */
    function truncateDecimal(s, aDec, mDec) {
        if (aDec && mDec) {
            var parts = s.split(aDec);
            /** truncate decimal part to satisfying length
             * cause we would round it anyway */
            if (parts[1] && parts[1].length > mDec) {
                if (mDec > 0) {
                    parts[1] = parts[1].substring(0, mDec);
                    s = parts.join(aDec);
                } else {
                    s = parts[0];
                }
            }
        }
        return s;
    }
    /**
     * prepare number string to be converted to real number
     */
    function fixNumber(s, aDec, aNeg) {
        if (aDec && aDec !== '.') {
            s = s.replace(aDec, '.');
        }
        if (aNeg && aNeg !== '-') {
            s = s.replace(aNeg, '-');
        }
        if (!s.match(/\d/)) {
            s += '0';
        }
        return s;
    }
    /**
     * function to handle numbers less than 0 that are stored in Exponential notation ex: .0000001 stored as 1e-7
     */
    function checkValue(value, settings) {
        var decimal = value.indexOf('.'),
            checkSmall = +value;
        if (decimal !== -1) {
            if (checkSmall < 0.000001 && checkSmall > -1) {
                value = +value;
                if (value < 0.000001 && value > 0) {
                    value = (value + 10).toString();
                    value = value.substring(1);
                }
                if (value < 0 && value > -1) {
                    value = (value - 10).toString();
                    value = '-' + value.substring(2);
                }
                value = value.toString();
            } else {
                var parts = value.split('.');
                if (parts[1] !== undefined) {
                    if (+parts[1] === 0) {
                        value = parts[0];
                    } else {
                        parts[1] = parts[1].replace(/0*$/, '');
                        value = parts.join('.');
                    }
                }
            }
        }
        return (settings.lZero === 'keep') ? value : value.replace(/^0*(\d)/, '$1');
    }
    /**
     * prepare real number to be converted to our format
     */
    function presentNumber(s, aDec, aNeg) {
        if (aNeg && aNeg !== '-') {
            s = s.replace('-', aNeg);
        }
        if (aDec && aDec !== '.') {
            s = s.replace('.', aDec);
        }
        return s;
    }
    /**
     * checking that number satisfy format conditions
     * and lays between settings.vMin and settings.vMax
     * and the string length does not exceed the digits in settings.vMin and settings.vMax
     */
    function autoCheck(s, settings) {
        s = autoStrip(s, settings);
        s = truncateDecimal(s, settings.aDec, settings.mDec);
        s = fixNumber(s, settings.aDec, settings.aNeg);
        var value = +s;
        if (settings.oEvent === 'set' && (value < settings.vMin || value > settings.vMax)) {
            $.error("The value (" + value + ") from the 'set' method falls outside of the vMin / vMax range");
        }
        return value >= settings.vMin && value <= settings.vMax;
    }
    /**
     * private function to check for empty value
     */
    function checkEmpty(iv, settings, signOnEmpty) {
        if (iv === '' || iv === settings.aNeg) {
            if (settings.wEmpty === 'zero') {
                return iv + '0';
            }
            if (settings.wEmpty === 'sign' || signOnEmpty) {
                return iv + settings.aSign;
            }
            return iv;
        }
        return null;
    }
    /**
     * private function that formats our number
     */
    function autoGroup(iv, settings) {
        iv = autoStrip(iv, settings);
        var testNeg = iv.replace(',', '.'),
            empty = checkEmpty(iv, settings, true);
        if (empty !== null) {
            return empty;
        }
        var digitalGroup = '';
        if (settings.dGroup === 2) {
            digitalGroup = /(\d)((\d)(\d{2}?)+)$/;
        } else if (settings.dGroup === 4) {
            digitalGroup = /(\d)((\d{4}?)+)$/;
        } else {
            digitalGroup = /(\d)((\d{3}?)+)$/;
        } /** splits the string at the decimal string */
        var ivSplit = iv.split(settings.aDec);
        if (settings.altDec && ivSplit.length === 1) {
            ivSplit = iv.split(settings.altDec);
        } /** assigns the whole number to the a varibale (s) */
        var s = ivSplit[0];
        if (settings.aSep) {
            while (digitalGroup.test(s)) { /** re-inserts the thousand sepparator via a regualer expression */
                s = s.replace(digitalGroup, '$1' + settings.aSep + '$2');
            }
        }
        if (settings.mDec !== 0 && ivSplit.length > 1) {
            if (ivSplit[1].length > settings.mDec) {
                ivSplit[1] = ivSplit[1].substring(0, settings.mDec);
            } /** joins the whole number with the deciaml value */
            iv = s + settings.aDec + ivSplit[1];
        } else { /** if whole numbers only */
            iv = s;
        }
        if (settings.aSign) {
            var has_aNeg = iv.indexOf(settings.aNeg) !== -1;
            iv = iv.replace(settings.aNeg, '');
            iv = settings.pSign === 'p' ? settings.aSign + iv : iv + settings.aSign;
            if (has_aNeg) {
                iv = settings.aNeg + iv;
            }
        }
        if (settings.oEvent === 'set' && testNeg < 0 && settings.nBracket !== null) { /** removes the negative sign and places brackets */
            iv = negativeBracket(iv, settings.nBracket, settings.oEvent);
        }
        return iv;
    }
    /**
     * round number after setting by pasting or $().autoNumericSet()
     * private function for round the number
     * please note this handled as text - JavaScript math function can return inaccurate values
     * also this offers multiple rounding methods that are not easily accomplished in JavaScript
     */
    function autoRound(iv, settings) { /** value to string */
        iv = (iv === '') ? '0' : iv.toString();
        convertKeyToNumber(settings, 'mDec'); /** set mDec to number needed when mDec set by 'update method */
        if (settings.mRound === 'CHF') {
            iv = (Math.round(iv * 20) / 20).toString();
        }
        var ivRounded = '',
            i = 0,
            nSign = '',
            rDec = (typeof (settings.aPad) === 'boolean' || settings.aPad === null) ? (settings.aPad ? settings.mDec : 0) : +settings.aPad;
        var truncateZeros = function (ivRounded) { /** truncate not needed zeros */
            var regex = (rDec === 0) ? (/(\.(?:\d*[1-9])?)0*$/) : rDec === 1 ? (/(\.\d(?:\d*[1-9])?)0*$/) : new RegExp('(\\.\\d{' + rDec + '}(?:\\d*[1-9])?)0*$');
            ivRounded = ivRounded.replace(regex, '$1'); /** If there are no decimal places, we don't need a decimal point at the end */
            if (rDec === 0) {
                ivRounded = ivRounded.replace(/\.$/, '');
            }
            return ivRounded;
        };
        if (iv.charAt(0) === '-') { /** Checks if the iv (input Value)is a negative value */
            nSign = '-';
            iv = iv.replace('-', ''); /** removes the negative sign will be added back later if required */
        }
        if (!iv.match(/^\d/)) { /** append a zero if first character is not a digit (then it is likely to be a dot)*/
            iv = '0' + iv;
        }
        if (nSign === '-' && +iv === 0) { /** determines if the value is zero - if zero no negative sign */
            nSign = '';
        }
        if ((+iv > 0 && settings.lZero !== 'keep') || (iv.length > 0 && settings.lZero === 'allow')) { /** trims leading zero's if needed */
            iv = iv.replace(/^0*(\d)/, '$1');
        }
        var dPos = iv.lastIndexOf('.'), /** virtual decimal position */
            vdPos = (dPos === -1) ? iv.length - 1 : dPos, /** checks decimal places to determine if rounding is required */
            cDec = (iv.length - 1) - vdPos; /** check if no rounding is required */
        if (cDec <= settings.mDec) {
            ivRounded = iv; /** check if we need to pad with zeros */
            if (cDec < rDec) {
                if (dPos === -1) {
                    ivRounded += '.';
                }
                var zeros = '000000';
                while (cDec < rDec) {
                    zeros = zeros.substring(0, rDec - cDec);
                    ivRounded += zeros;
                    cDec += zeros.length;
                }
            } else if (cDec > rDec) {
                ivRounded = truncateZeros(ivRounded);
            } else if (cDec === 0 && rDec === 0) {
                ivRounded = ivRounded.replace(/\.$/, '');
            }
            if (settings.mRound !== 'CHF') {
                return (+ivRounded === 0) ? ivRounded : nSign + ivRounded;
            }
            if (settings.mRound === 'CHF') {
                dPos = ivRounded.lastIndexOf('.');
                iv = ivRounded;
            }

        } /** rounded length of the string after rounding */
        var rLength = dPos + settings.mDec,
            tRound = +iv.charAt(rLength + 1),
            ivArray = iv.substring(0, rLength + 1).split(''),
            odd = (iv.charAt(rLength) === '.') ? (iv.charAt(rLength - 1) % 2) : (iv.charAt(rLength) % 2),
            onePass = true;
        odd = (odd === 0 && (iv.substring(rLength + 2, iv.length) > 0)) ? 1 : 0;
        if ((tRound > 4 && settings.mRound === 'S') || /** Round half up symmetric */
                (tRound > 4 && settings.mRound === 'A' && nSign === '') || /** Round half up asymmetric positive values */
                (tRound > 5 && settings.mRound === 'A' && nSign === '-') || /** Round half up asymmetric negative values */
                (tRound > 5 && settings.mRound === 's') || /** Round half down symmetric */
                (tRound > 5 && settings.mRound === 'a' && nSign === '') || /** Round half down asymmetric positive values */
                (tRound > 4 && settings.mRound === 'a' && nSign === '-') || /** Round half down asymmetric negative values */
                (tRound > 5 && settings.mRound === 'B') || /** Round half even "Banker's Rounding" */
                (tRound === 5 && settings.mRound === 'B' && odd === 1) || /** Round half even "Banker's Rounding" */
                (tRound > 0 && settings.mRound === 'C' && nSign === '') || /** Round to ceiling toward positive infinite */
                (tRound > 0 && settings.mRound === 'F' && nSign === '-') || /** Round to floor toward negative infinite */
                (tRound > 0 && settings.mRound === 'U') ||
                (settings.mRound === 'CHF')) { /** round up away from zero */
            for (i = (ivArray.length - 1); i >= 0; i -= 1) { /** Round up the last digit if required, and continue until no more 9's are found */
                if (ivArray[i] !== '.') {
                    if (settings.mRound === 'CHF' && ivArray[i] <= 2 && onePass) {
                        ivArray[i] = 0;
                        onePass = false;
                        break;
                    }
                    if (settings.mRound === 'CHF' && ivArray[i] <= 7 && onePass) {
                        ivArray[i] = 5;
                        onePass = false;
                        break;
                    }
                    if (settings.mRound === 'CHF' && onePass) {
                        ivArray[i] = 10;
                        onePass = false;
                    } else {
                        ivArray[i] = +ivArray[i] + 1;
                    }
                    if (ivArray[i] < 10) {
                        break;
                    }
                    if (i > 0) {
                        ivArray[i] = '0';
                    }
                }
            }
        }
        ivArray = ivArray.slice(0, rLength + 1); /** Reconstruct the string, converting any 10's to 0's */
        ivRounded = truncateZeros(ivArray.join('')); /** return rounded value */
        return (+ivRounded === 0) ? ivRounded : nSign + ivRounded;
    }
    /**
     * Holder object for field properties
     */
    function AutoNumericHolder(that, settings) {
        this.settings = settings;
        this.that = that;
        this.$that = $(that);
        this.formatted = false;
        this.settingsClone = autoCode(this.$that, this.settings);
        this.value = that.value;
    }
    AutoNumericHolder.prototype = {
        init: function (e) {
            this.value = this.that.value;
            this.settingsClone = autoCode(this.$that, this.settings);
            this.ctrlKey = e.ctrlKey;
            this.cmdKey = e.metaKey;
            this.shiftKey = e.shiftKey;
            this.selection = getElementSelection(this.that); /** keypress event overwrites meaningful value of e.keyCode */
            if (e.type === 'keydown' || e.type === 'keyup') {
                this.kdCode = e.keyCode;
            }
            this.which = e.which;
            this.processed = false;
            this.formatted = false;
        },
        setSelection: function (start, end, setReal) {
            start = Math.max(start, 0);
            end = Math.min(end, this.that.value.length);
            this.selection = {
                start: start,
                end: end,
                length: end - start
            };
            if (setReal === undefined || setReal) {
                setElementSelection(this.that, start, end);
            }
        },
        setPosition: function (pos, setReal) {
            this.setSelection(pos, pos, setReal);
        },
        getBeforeAfter: function () {
            var value = this.value,
                left = value.substring(0, this.selection.start),
                right = value.substring(this.selection.end, value.length);
            return [left, right];
        },
        getBeforeAfterStriped: function () {
            var parts = this.getBeforeAfter();
            parts[0] = autoStrip(parts[0], this.settingsClone);
            parts[1] = autoStrip(parts[1], this.settingsClone);
            return parts;
        },
        /**
         * strip parts from excess characters and leading zeroes
         */
        normalizeParts: function (left, right) {
            var settingsClone = this.settingsClone;
            right = autoStrip(right, settingsClone); /** if right is not empty and first character is not aDec, */
            /** we could strip all zeros, otherwise only leading */
            var strip = right.match(/^\d/) ? true : 'leading';
            left = autoStrip(left, settingsClone, strip); /** prevents multiple leading zeros from being entered */
            if ((left === '' || left === settingsClone.aNeg) && settingsClone.lZero === 'deny') {
                if (right > '') {
                    right = right.replace(/^0*(\d)/, '$1');
                }
            }
            var new_value = left + right; /** insert zero if has leading dot */
            if (settingsClone.aDec) {
                var m = new_value.match(new RegExp('^' + settingsClone.aNegRegAutoStrip + '\\' + settingsClone.aDec));
                if (m) {
                    left = left.replace(m[1], m[1] + '0');
                    new_value = left + right;
                }
            } /** insert zero if number is empty and io.wEmpty == 'zero' */
            if (settingsClone.wEmpty === 'zero' && (new_value === settingsClone.aNeg || new_value === '')) {
                left += '0';
            }
            return [left, right];
        },
        /**
         * set part of number to value keeping position of cursor
         */
        setValueParts: function (left, right) {
            var settingsClone = this.settingsClone,
                parts = this.normalizeParts(left, right),
                new_value = parts.join(''),
                position = parts[0].length;
            if (autoCheck(new_value, settingsClone)) {
                new_value = truncateDecimal(new_value, settingsClone.aDec, settingsClone.mDec);
                if (position > new_value.length) {
                    position = new_value.length;
                }
                this.value = new_value;
                this.setPosition(position, false);
                return true;
            }
            return false;
        },
        /**
         * helper function for expandSelectionOnSign
         * returns sign position of a formatted value
         */
        signPosition: function () {
            var settingsClone = this.settingsClone,
                aSign = settingsClone.aSign,
                that = this.that;
            if (aSign) {
                var aSignLen = aSign.length;
                if (settingsClone.pSign === 'p') {
                    var hasNeg = settingsClone.aNeg && that.value && that.value.charAt(0) === settingsClone.aNeg;
                    return hasNeg ? [1, aSignLen + 1] : [0, aSignLen];
                }
                var valueLen = that.value.length;
                return [valueLen - aSignLen, valueLen];
            }
            return [1000, -1];
        },
        /**
         * expands selection to cover whole sign
         * prevents partial deletion/copying/overwriting of a sign
         */
        expandSelectionOnSign: function (setReal) {
            var sign_position = this.signPosition(),
                selection = this.selection;
            if (selection.start < sign_position[1] && selection.end > sign_position[0]) { /** if selection catches something except sign and catches only space from sign */
                if ((selection.start < sign_position[0] || selection.end > sign_position[1]) && this.value.substring(Math.max(selection.start, sign_position[0]), Math.min(selection.end, sign_position[1])).match(/^\s*$/)) { /** then select without empty space */
                    if (selection.start < sign_position[0]) {
                        this.setSelection(selection.start, sign_position[0], setReal);
                    } else {
                        this.setSelection(sign_position[1], selection.end, setReal);
                    }
                } else { /** else select with whole sign */
                    this.setSelection(Math.min(selection.start, sign_position[0]), Math.max(selection.end, sign_position[1]), setReal);
                }
            }
        },
        /**
         * try to strip pasted value to digits
         */
        checkPaste: function () {
            if (this.valuePartsBeforePaste !== undefined) {
                var parts = this.getBeforeAfter(),
                    oldParts = this.valuePartsBeforePaste;
                delete this.valuePartsBeforePaste; /** try to strip pasted value first */
                parts[0] = parts[0].substr(0, oldParts[0].length) + autoStrip(parts[0].substr(oldParts[0].length), this.settingsClone);
                if (!this.setValueParts(parts[0], parts[1])) {
                    this.value = oldParts.join('');
                    this.setPosition(oldParts[0].length, false);
                }
            }
        },
        /**
         * process pasting, cursor moving and skipping of not interesting keys
         * if returns true, futher processing is not performed
         */
        skipAllways: function (e) {
            var kdCode = this.kdCode,
                which = this.which,
                ctrlKey = this.ctrlKey,
                cmdKey = this.cmdKey,
                shiftKey = this.shiftKey; /** catch the ctrl up on ctrl-v */
            if (((ctrlKey || cmdKey) && e.type === 'keyup' && this.valuePartsBeforePaste !== undefined) || (shiftKey && kdCode === 45)) {
                this.checkPaste();
                return false;
            }
            /** codes are taken from http://www.cambiaresearch.com/c4/702b8cd1-e5b0-42e6-83ac-25f0306e3e25/Javascript-Char-Codes-Key-Codes.aspx
             * skip Fx keys, windows keys, other special keys
             */
            if ((kdCode >= 112 && kdCode <= 123) || (kdCode >= 91 && kdCode <= 93) || (kdCode >= 9 && kdCode <= 31) || (kdCode < 8 && (which === 0 || which === kdCode)) || kdCode === 144 || kdCode === 145 || kdCode === 45) {
                return true;
            }
            if ((ctrlKey || cmdKey) && kdCode === 65) { /** if select all (a=65)*/
                return true;
            }
            if ((ctrlKey || cmdKey) && (kdCode === 67 || kdCode === 86 || kdCode === 88)) { /** if copy (c=67) paste (v=86) or cut (x=88) */
                if (e.type === 'keydown') {
                    this.expandSelectionOnSign();
                }
                if (kdCode === 86 || kdCode === 45) { /** try to prevent wrong paste */
                    if (e.type === 'keydown' || e.type === 'keypress') {
                        if (this.valuePartsBeforePaste === undefined) {
                            this.valuePartsBeforePaste = this.getBeforeAfter();
                        }
                    } else {
                        this.checkPaste();
                    }
                }
                return e.type === 'keydown' || e.type === 'keypress' || kdCode === 67;
            }
            if (ctrlKey || cmdKey) {
                return true;
            }
            if (kdCode === 37 || kdCode === 39) { /** jump over thousand separator */
                var aSep = this.settingsClone.aSep,
                    start = this.selection.start,
                    value = this.that.value;
                if (e.type === 'keydown' && aSep && !this.shiftKey) {
                    if (kdCode === 37 && value.charAt(start - 2) === aSep) {
                        this.setPosition(start - 1);
                    } else if (kdCode === 39 && value.charAt(start + 1) === aSep) {
                        this.setPosition(start + 1);
                    }
                }
                return true;
            }
            if (kdCode >= 34 && kdCode <= 40) {
                return true;
            }
            return false;
        },
        /**
         * process deletion of characters
         * returns true if processing performed
         */
        processAllways: function () {
            var parts; /** process backspace or delete */
            if (this.kdCode === 8 || this.kdCode === 46) {
                if (!this.selection.length) {
                    parts = this.getBeforeAfterStriped();
                    if (this.kdCode === 8) {
                        parts[0] = parts[0].substring(0, parts[0].length - 1);
                    } else {
                        parts[1] = parts[1].substring(1, parts[1].length);
                    }
                    this.setValueParts(parts[0], parts[1]);
                } else {
                    this.expandSelectionOnSign(false);
                    parts = this.getBeforeAfterStriped();
                    this.setValueParts(parts[0], parts[1]);
                }
                return true;
            }
            return false;
        },
        /**
         * process insertion of characters
         * returns true if processing performed
         */
        processKeypress: function () {
            var settingsClone = this.settingsClone,
                cCode = String.fromCharCode(this.which),
                parts = this.getBeforeAfterStriped(),
                left = parts[0],
                right = parts[1]; /** start rules when the decimal character key is pressed */
            /** always use numeric pad dot to insert decimal separator */
            if (cCode === settingsClone.aDec || (settingsClone.altDec && cCode === settingsClone.altDec) || ((cCode === '.' || cCode === ',') && this.kdCode === 110)) { /** do not allow decimal character if no decimal part allowed */
                if (!settingsClone.mDec || !settingsClone.aDec) {
                    return true;
                } /** do not allow decimal character before aNeg character */
                if (settingsClone.aNeg && right.indexOf(settingsClone.aNeg) > -1) {
                    return true;
                } /** do not allow decimal character if other decimal character present */
                if (left.indexOf(settingsClone.aDec) > -1) {
                    return true;
                }
                if (right.indexOf(settingsClone.aDec) > 0) {
                    return true;
                }
                if (right.indexOf(settingsClone.aDec) === 0) {
                    right = right.substr(1);
                }
                this.setValueParts(left + settingsClone.aDec, right);
                return true;
            } /** start rule on negative sign */

            if (cCode === '-' || cCode === '+') { /** prevent minus if not allowed */
                if (!settingsClone.aNeg) {
                    return true;
                } /** caret is always after minus */
                if (left === '' && right.indexOf(settingsClone.aNeg) > -1) {
                    left = settingsClone.aNeg;
                    right = right.substring(1, right.length);
                } /** change sign of number, remove part if should */
                if (left.charAt(0) === settingsClone.aNeg) {
                    left = left.substring(1, left.length);
                } else {
                    left = (cCode === '-') ? settingsClone.aNeg + left : left;
                }
                this.setValueParts(left, right);
                return true;
            } /** digits */
            if (cCode >= '0' && cCode <= '9') { /** if try to insert digit before minus */
                if (settingsClone.aNeg && left === '' && right.indexOf(settingsClone.aNeg) > -1) {
                    left = settingsClone.aNeg;
                    right = right.substring(1, right.length);
                }
                if (settingsClone.vMax <= 0 && settingsClone.vMin < settingsClone.vMax && this.value.indexOf(settingsClone.aNeg) === -1 && cCode !== '0') {
                    left = settingsClone.aNeg + left;
                }
                this.setValueParts(left + cCode, right);
                return true;
            } /** prevent any other character */
            return true;
        },
        /**
         * formatting of just processed value with keeping of cursor position
         */
        formatQuick: function () {
            var settingsClone = this.settingsClone,
                parts = this.getBeforeAfterStriped(),
                leftLength = this.value;
            if ((settingsClone.aSep === '' || (settingsClone.aSep !== '' && leftLength.indexOf(settingsClone.aSep) === -1)) && (settingsClone.aSign === '' || (settingsClone.aSign !== '' && leftLength.indexOf(settingsClone.aSign) === -1))) {
                var subParts = [],
                    nSign = '';
                subParts = leftLength.split(settingsClone.aDec);
                if (subParts[0].indexOf('-') > -1) {
                    nSign = '-';
                    subParts[0] = subParts[0].replace('-', '');
                    parts[0] = parts[0].replace('-', '');
                }
                if (subParts[0].length > settingsClone.mInt && parts[0].charAt(0) === '0') { /** strip leading zero if need */
                    parts[0] = parts[0].slice(1);
                }
                parts[0] = nSign + parts[0];
            }
            var value = autoGroup(this.value, this.settingsClone),
                position = value.length;
            if (value) {
                /** prepare regexp which searches for cursor position from unformatted left part */
                var left_ar = parts[0].split(''),
                    i = 0;
                for (i; i < left_ar.length; i += 1) { /** thanks Peter Kovari */
                    if (!left_ar[i].match('\\d')) {
                        left_ar[i] = '\\' + left_ar[i];
                    }
                }
                var leftReg = new RegExp('^.*?' + left_ar.join('.*?'));
                /** search cursor position in formatted value */
                var newLeft = value.match(leftReg);
                if (newLeft) {
                    position = newLeft[0].length;
                    /** if we are just before sign which is in prefix position */
                    if (((position === 0 && value.charAt(0) !== settingsClone.aNeg) || (position === 1 && value.charAt(0) === settingsClone.aNeg)) && settingsClone.aSign && settingsClone.pSign === 'p') {
                        /** place carret after prefix sign */
                        position = this.settingsClone.aSign.length + (value.charAt(0) === '-' ? 1 : 0);
                    }
                } else if (settingsClone.aSign && settingsClone.pSign === 's') {
                    /** if we could not find a place for cursor and have a sign as a suffix */
                    /** place carret before suffix currency sign */
                    position -= settingsClone.aSign.length;
                }
            }
            this.that.value = value;
            this.setPosition(position);
            this.formatted = true;
        }
    };
    /** thanks to Anthony & Evan C */
    function autoGet(obj) {
        if (typeof obj === 'string') {
            obj = obj.replace(/\[/g, "\\[").replace(/\]/g, "\\]");
            obj = '#' + obj.replace(/(:|\.)/g, '\\$1');
            /** obj = '#' + obj.replace(/([;&,\.\+\*\~':"\!\^#$%@\[\]\(\)=>\|])/g, '\\$1'); */
            /** possible modification to replace the above 2 lines */
        }
        return $(obj);
    }

    function getHolder($that, settings, update) {
        var data = $that.data('autoNumeric');
        if (!data) {
            data = {};
            $that.data('autoNumeric', data);
        }
        var holder = data.holder;
        if ((holder === undefined && settings) || update) {
            holder = new AutoNumericHolder($that.get(0), settings);
            data.holder = holder;
        }
        return holder;
    }
    var methods = {
        init: function (options) {
            return this.each(function () {
                var $this = $(this),
                    settings = $this.data('autoNumeric'), /** attempt to grab 'autoNumeric' settings, if they don't exist returns "undefined". */
                    tagData = $this.data(); /** attempt to grab HTML5 data, if they don't exist we'll get "undefined".*/
                if (typeof settings !== 'object') { /** If we couldn't grab settings, create them from defaults and passed options. */
                    var defaults = {
                        /** allowed numeric values
                         * please do not modify
                         */
                        aNum: '0123456789',
                        /** allowed thousand separator characters
                         * comma = ','
                         * period "full stop" = '.'
                         * apostrophe is escaped = '\''
                         * space = ' '
                         * none = ''
                         * NOTE: do not use numeric characters
                         */
                        aSep: ',',
                        /** digital grouping for the thousand separator used in Format
                         * dGroup: '2', results in 99,99,99,999 common in India for values less than 1 billion and greater than -1 billion
                         * dGroup: '3', results in 999,999,999 default
                         * dGroup: '4', results in 9999,9999,9999 used in some Asian countries
                         */
                        dGroup: '3',
                        /** allowed decimal separator characters
                         * period "full stop" = '.'
                         * comma = ','
                         */
                        aDec: '.',
                        /** allow to declare alternative decimal separator which is automatically replaced by aDec
                         * developed for countries the use a comma ',' as the decimal character
                         * and have keyboards\numeric pads that have a period 'full stop' as the decimal characters (Spain is an example)
                         */
                        altDec: null,
                        /** allowed currency symbol
                         * Must be in quotes aSign: '$', a space is allowed aSign: '$ '
                         */
                        aSign: '',
                        /** placement of currency sign
                         * for prefix pSign: 'p',
                         * for suffix pSign: 's',
                         */
                        pSign: 'p',
                        /** maximum possible value
                         * value must be enclosed in quotes and use the period for the decimal point
                         * value must be larger than vMin
                         */
                        vMax: '999999999.99',
                        /** minimum possible value
                         * value must be enclosed in quotes and use the period for the decimal point
                         * value must be smaller than vMax
                         */
                        vMin: '0.00',
                        /** max number of decimal places = used to override decimal places set by the vMin & vMax values
                         * value must be enclosed in quotes example mDec: '3',
                         * This can also set the value via a call back function mDec: 'css:#
                         */
                        mDec: null,
                        /** method used for rounding
                         * mRound: 'S', Round-Half-Up Symmetric (default)
                         * mRound: 'A', Round-Half-Up Asymmetric
                         * mRound: 's', Round-Half-Down Symmetric (lower case s)
                         * mRound: 'a', Round-Half-Down Asymmetric (lower case a)
                         * mRound: 'B', Round-Half-Even "Bankers Rounding"
                         * mRound: 'U', Round Up "Round-Away-From-Zero"
                         * mRound: 'D', Round Down "Round-Toward-Zero" - same as truncate
                         * mRound: 'C', Round to Ceiling "Toward Positive Infinity"
                         * mRound: 'F', Round to Floor "Toward Negative Infinity"
                         */
                        mRound: 'S',
                        /** controls decimal padding
                         * aPad: true - always Pad decimals with zeros
                         * aPad: false - does not pad with zeros.
                         * aPad: `some number` - pad decimals with zero to number different from mDec
                         * thanks to Jonas Johansson for the suggestion
                         */
                        aPad: true,
                        /** places brackets on negative value -$ 999.99 to (999.99)
                         * visible only when the field does NOT have focus the left and right symbols should be enclosed in quotes and seperated by a comma
                         * nBracket: null, nBracket: '(,)', nBracket: '[,]', nBracket: '<,>' or nBracket: '{,}'
                         */
                        nBracket: null,
                        /** Displayed on empty string
                         * wEmpty: 'empty', - input can be blank
                         * wEmpty: 'zero', - displays zero
                         * wEmpty: 'sign', - displays the currency sign
                         */
                        wEmpty: 'empty',
                        /** controls leading zero behavior
                         * lZero: 'allow', - allows leading zeros to be entered. Zeros will be truncated when entering additional digits. On focusout zeros will be deleted.
                         * lZero: 'deny', - allows only one leading zero on values less than one
                         * lZero: 'keep', - allows leading zeros to be entered. on fousout zeros will be retained.
                         */
                        lZero: 'allow',
                        /** determine if the default value will be formatted on page ready.
                         * true = automatically formats the default value on page ready
                         * false = will not format the default value
                         */
                        aForm: true,
                        /** future use */
                        onSomeEvent: function () {}
                    };
                    settings = $.extend({}, defaults, tagData, options); /** Merge defaults, tagData and options */
                    if (settings.aDec === settings.aSep) {
                        $.error("autoNumeric will not function properly when the decimal character aDec: '" + settings.aDec + "' and thousand separator aSep: '" + settings.aSep + "' are the same character");
                        return this;
                    }
                    $this.data('autoNumeric', settings); /** Save our new settings */
                } else {
                    return this;
                }
                settings.lastSetValue = '';
                settings.runOnce = false;
                var holder = getHolder($this, settings);
                if ($.inArray($this.prop('tagName'), settings.tagList) === -1 && $this.prop('tagName') !== 'INPUT') {
                    $.error("The <" + $this.prop('tagName') + "> is not supported by autoNumeric()");
                    return this;
                }
                if (settings.runOnce === false && settings.aForm) {/** routine to format default value on page load */
                    if ($this.is('input[type=text], input[type=hidden], input[type=tel], input:not([type])')) {
                        var setValue = true;
                        if ($this[0].value === '' && settings.wEmpty === 'empty') {
                            $this[0].value = '';
                            setValue = false;
                        }
                        if ($this[0].value === '' && settings.wEmpty === 'sign') {
                            $this[0].value = settings.aSign;
                            setValue = false;
                        }
                        if (setValue) {
                            $this.autoNumeric('set', $this.val());
                        }
                    }
                    if ($.inArray($this.prop('tagName'), settings.tagList) !== -1 && $this.text() !== '') {
                        $this.autoNumeric('set', $this.text());
                    }
                }
                settings.runOnce = true;
                if ($this.is('input[type=text], input[type=hidden], input[type=tel], input:not([type])')) { /**added hidden type */
                    $this.on('keydown.autoNumeric', function (e) {
                        holder = getHolder($this);
                        if (holder.settings.aDec === holder.settings.aSep) {
                            $.error("autoNumeric will not function properly when the decimal character aDec: '" + holder.settings.aDec + "' and thousand separator aSep: '" + holder.settings.aSep + "' are the same character");
                            return this;
                        }
                        if (holder.that.readOnly) {
                            holder.processed = true;
                            return true;
                        }
                        /** The below streamed code / comment allows the "enter" keydown to throw a change() event */
                        /** if (e.keyCode === 13 && holder.inVal !== $this.val()){
                            $this.change();
                            holder.inVal = $this.val();
                        }*/
                        holder.init(e);
                        holder.settings.oEvent = 'keydown';
                        if (holder.skipAllways(e)) {
                            holder.processed = true;
                            return true;
                        }
                        if (holder.processAllways()) {
                            holder.processed = true;
                            holder.formatQuick();
                            e.preventDefault();
                            return false;
                        }
                        holder.formatted = false;
                        return true;
                    });
                    $this.on('keypress.autoNumeric', function (e) {
                        var holder = getHolder($this),
                            processed = holder.processed;
                        holder.init(e);
                        holder.settings.oEvent = 'keypress';
                        if (holder.skipAllways(e)) {
                            return true;
                        }
                        if (processed) {
                            e.preventDefault();
                            return false;
                        }
                        if (holder.processAllways() || holder.processKeypress()) {
                            holder.formatQuick();
                            e.preventDefault();
                            return false;
                        }
                        holder.formatted = false;
                    });
                    $this.on('keyup.autoNumeric', function (e) {
                        var holder = getHolder($this);
                        holder.init(e);
                        holder.settings.oEvent = 'keyup';
                        var skip = holder.skipAllways(e);
                        holder.kdCode = 0;
                        delete holder.valuePartsBeforePaste;
                        if ($this[0].value === holder.settings.aSign) { /** added to properly place the caret when only the currency is present */
                            if (holder.settings.pSign === 's') {
                                setElementSelection(this, 0, 0);
                            } else {
                                setElementSelection(this, holder.settings.aSign.length, holder.settings.aSign.length);
                            }
                        }
                        if (skip) {
                            return true;
                        }
                        if (this.value === '') {
                            return true;
                        }
                        if (!holder.formatted) {
                            holder.formatQuick();
                        }
                    });
                    $this.on('focusin.autoNumeric', function () {
                        var holder = getHolder($this);
                        holder.settingsClone.oEvent = 'focusin';
                        if (holder.settingsClone.nBracket !== null) {
                            var checkVal = $this.val();
                            $this.val(negativeBracket(checkVal, holder.settingsClone.nBracket, holder.settingsClone.oEvent));
                        }
                        holder.inVal = $this.val();
                        var onempty = checkEmpty(holder.inVal, holder.settingsClone, true);
                        if (onempty !== null) {
                            $this.val(onempty);
                            if (holder.settings.pSign === 's') {
                                setElementSelection(this, 0, 0);
                            } else {
                                setElementSelection(this, holder.settings.aSign.length, holder.settings.aSign.length);
                            }
                        }
                    });
                    $this.on('focusout.autoNumeric', function () {
                        var holder = getHolder($this),
                            settingsClone = holder.settingsClone,
                            value = $this.val(),
                            origValue = value;
                        holder.settingsClone.oEvent = 'focusout';
                        var strip_zero = ''; /** added to control leading zero */
                        if (settingsClone.lZero === 'allow') { /** added to control leading zero */
                            settingsClone.allowLeading = false;
                            strip_zero = 'leading';
                        }
                        if (value !== '') {
                            value = autoStrip(value, settingsClone, strip_zero);
                            if (checkEmpty(value, settingsClone) === null && autoCheck(value, settingsClone, $this[0])) {
                                value = fixNumber(value, settingsClone.aDec, settingsClone.aNeg);
                                value = autoRound(value, settingsClone);
                                value = presentNumber(value, settingsClone.aDec, settingsClone.aNeg);
                            } else {
                                value = '';
                            }
                        }
                        var groupedValue = checkEmpty(value, settingsClone, false);
                        if (groupedValue === null) {
                            groupedValue = autoGroup(value, settingsClone);
                        }
                        if (groupedValue !== origValue) {
                            $this.val(groupedValue);
                        }
                        if (groupedValue !== holder.inVal) {
                            $this.change();
                            delete holder.inVal;
                        }
                        if (settingsClone.nBracket !== null && $this.autoNumeric('get') < 0) {
                            holder.settingsClone.oEvent = 'focusout';
                            $this.val(negativeBracket($this.val(), settingsClone.nBracket, settingsClone.oEvent));
                        }
                    });
                }
            });
        },
        /** method to remove settings and stop autoNumeric() */
        destroy: function () {
            return $(this).each(function () {
                var $this = $(this);
                $this.off('.autoNumeric');
                $this.removeData('autoNumeric');
            });
        },
        /** method to update settings - can call as many times */
        update: function (options) {
            return $(this).each(function () {
                var $this = autoGet($(this)),
                    settings = $this.data('autoNumeric');
                if (typeof settings !== 'object') {
                    $.error("You must initialize autoNumeric('init', {options}) prior to calling the 'update' method");
                    return this;
                }
                var strip = $this.autoNumeric('get');
                settings = $.extend(settings, options);
                getHolder($this, settings, true);
                if (settings.aDec === settings.aSep) {
                    $.error("autoNumeric will not function properly when the decimal character aDec: '" + settings.aDec + "' and thousand separator aSep: '" + settings.aSep + "' are the same character");
                    return this;
                }
                $this.data('autoNumeric', settings);
                if ($this.val() !== '' || $this.text() !== '') {
                    return $this.autoNumeric('set', strip);
                }
                return;
            });
        },
        /** returns a formatted strings for "input:text" fields Uses jQuery's .val() method*/
        set: function (valueIn) {
            return $(this).each(function () {
                var $this = autoGet($(this)),
                    settings = $this.data('autoNumeric'),
                    value = valueIn.toString(),
                    testValue = valueIn.toString();
                if (typeof settings !== 'object') {
                    $.error("You must initialize autoNumeric('init', {options}) prior to calling the 'set' method");
                    return this;
                }
               /** allows locale decimal separator to be a comma */
                if ((testValue === $this.attr('value') || testValue === $this.text()) && settings.runOnce === false) {
                    value = value.replace(',', '.');
                }
                /** routine to handle page re-load from back button */
                if (testValue !== $this.attr('value') && $this.prop('tagName') === 'INPUT' && settings.runOnce === false) {
                    value = autoStrip(value, settings);
                }
                /** returns a empty string if the value being 'set' contains non-numeric characters and or more than decimal point (full stop) and will not be formatted */
                if (!$.isNumeric(+value)) {
                    return '';
                }
                value = checkValue(value, settings);
                settings.oEvent = 'set';
                settings.lastSetValue = value; /** saves the unrounded value from the set method - $('selector').data('autoNumeric').lastSetValue; - helpful when you need to change the rounding accuracy*/
                value.toString();
                if (value !== '') {
                    value = autoRound(value, settings);
                }
                value = presentNumber(value, settings.aDec, settings.aNeg);
                if (!autoCheck(value, settings)) {
                    value = autoRound('', settings);
                }
                value = autoGroup(value, settings);
                if ($this.is('input[type=text], input[type=hidden], input[type=tel], input:not([type])')) { /**added hidden type */
                    return $this.val(value);
                }
                if ($.inArray($this.prop('tagName'), settings.tagList) !== -1) {
                    return $this.text(value);
                }
                $.error("The <" + $this.prop('tagName') + "> is not supported by autoNumeric()");
                return false;
            });
        },
        /** method to get the unformatted value from a specific input field, returns a numeric value */
        get: function () {
            var $this = autoGet($(this)),
                settings = $this.data('autoNumeric');
            if (typeof settings !== 'object') {
                $.error("You must initialize autoNumeric('init', {options}) prior to calling the 'get' method");
                return this;
            }
            settings.oEvent = 'get';
            var getValue = '';
            /** determine the element type then use .eq(0) selector to grab the value of the first element in selector */
            if ($this.is('input[type=text], input[type=hidden], input[type=tel], input:not([type])')) { /**added hidden type */
                getValue = $this.eq(0).val();
            } else if ($.inArray($this.prop('tagName'), settings.tagList) !== -1) {
                getValue = $this.eq(0).text();
            } else {
                $.error("The <" + $this.prop('tagName') + "> is not supported by autoNumeric()");
                return false;
            }
            if ((getValue === '' && settings.wEmpty === 'empty') || (getValue === settings.aSign && (settings.wEmpty === 'sign' || settings.wEmpty === 'empty'))) {
                return '';
            }
            if (settings.nBracket !== null && getValue !== '') {
                getValue = negativeBracket(getValue, settings.nBracket, settings.oEvent);
            }
            if (settings.runOnce || settings.aForm === false) {
                getValue = autoStrip(getValue, settings);
            }
            getValue = fixNumber(getValue, settings.aDec, settings.aNeg);
            if (+getValue === 0 && settings.lZero !== 'keep') {
                getValue = '0';
            }
            if (settings.lZero === 'keep') {
                return getValue;
            }
            getValue = checkValue(getValue, settings);
            return getValue; /** returned Numeric String */
        },
        /** method to get the unformatted value from multiple fields */
        getString: function () {
            var isAutoNumeric = false,
                $this = autoGet($(this)),
                str = $this.serialize(),
                parts = str.split('&'),
                i = 0;
            for (i; i < parts.length; i += 1) {
                var miniParts = parts[i].split('=');
                var settings = $('*[name="' + decodeURIComponent(miniParts[0]) + '"]').data('autoNumeric');
                if (typeof settings === 'object') {
                    if (miniParts[1] !== null && $('*[name="' + decodeURIComponent(miniParts[0]) + '"]').data('autoNumeric') !== undefined) {
                        miniParts[1] = $('input[name="' + decodeURIComponent(miniParts[0]) + '"]').autoNumeric('get');
                        parts[i] = miniParts.join('=');
                        isAutoNumeric = true;
                    }
                }
            }
            if (isAutoNumeric === true) {
                return parts.join('&');
            }
            $.error("You must initialize autoNumeric('init', {options}) prior to calling the 'getString' method");
            return this;
        },
        /** method to get the unformatted value from multiple fields */
        getArray: function () {
            var isAutoNumeric = false,
                $this = autoGet($(this)),
                formFields = $this.serializeArray();
            $.each(formFields, function (i, field) {
                var settings = $('*[name="' + decodeURIComponent(field.name) + '"]').data('autoNumeric');
                if (typeof settings === 'object') {
                    if (field.value !== '' && $('*[name="' + decodeURIComponent(field.name) + '"]').data('autoNumeric') !== undefined) {
                        field.value = $('input[name="' + decodeURIComponent(field.name) + '"]').autoNumeric('get').toString();
                    }
                    isAutoNumeric = true;
                }
            });
            if (isAutoNumeric === true) {
                return formFields;
            }
            $.error("You must initialize autoNumeric('init', {options}) prior to calling the 'getArray' method");
            return this;
        },
        /** returns the settings object for those who need to look under the hood */
        getSettings: function () {
            var $this = autoGet($(this));
            return $this.eq(0).data('autoNumeric');
        }
    };
    $.fn.autoNumeric = function (method) {
        if (methods[method]) {
            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));
        }
        if (typeof method === 'object' || !method) {
            return methods.init.apply(this, arguments);
        }
        $.error('Method "' + method + '" is not supported by autoNumeric()');
    };
}(jQuery));
/* Chosen v1.1.0 | (c) 2011-2013 by Harvest | MIT License, https://github.com/harvesthq/chosen/blob/master/LICENSE.md */
!function(){var a,AbstractChosen,Chosen,SelectParser,b,c={}.hasOwnProperty,d=function(a,b){function d(){this.constructor=a}for(var e in b)c.call(b,e)&&(a[e]=b[e]);return d.prototype=b.prototype,a.prototype=new d,a.__super__=b.prototype,a};SelectParser=function(){function SelectParser(){this.options_index=0,this.parsed=[]}return SelectParser.prototype.add_node=function(a){return"OPTGROUP"===a.nodeName.toUpperCase()?this.add_group(a):this.add_option(a)},SelectParser.prototype.add_group=function(a){var b,c,d,e,f,g;for(b=this.parsed.length,this.parsed.push({array_index:b,group:!0,label:this.escapeExpression(a.label),children:0,disabled:a.disabled}),f=a.childNodes,g=[],d=0,e=f.length;e>d;d++)c=f[d],g.push(this.add_option(c,b,a.disabled));return g},SelectParser.prototype.add_option=function(a,b,c){return"OPTION"===a.nodeName.toUpperCase()?(""!==a.text?(null!=b&&(this.parsed[b].children+=1),this.parsed.push({array_index:this.parsed.length,options_index:this.options_index,value:a.value,text:a.text,html:a.innerHTML,selected:a.selected,disabled:c===!0?c:a.disabled,group_array_index:b,classes:a.className,style:a.style.cssText})):this.parsed.push({array_index:this.parsed.length,options_index:this.options_index,empty:!0}),this.options_index+=1):void 0},SelectParser.prototype.escapeExpression=function(a){var b,c;return null==a||a===!1?"":/[\&\<\>\"\'\`]/.test(a)?(b={"<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;"},c=/&(?!\w+;)|[\<\>\"\'\`]/g,a.replace(c,function(a){return b[a]||"&amp;"})):a},SelectParser}(),SelectParser.select_to_array=function(a){var b,c,d,e,f;for(c=new SelectParser,f=a.childNodes,d=0,e=f.length;e>d;d++)b=f[d],c.add_node(b);return c.parsed},AbstractChosen=function(){function AbstractChosen(a,b){this.form_field=a,this.options=null!=b?b:{},AbstractChosen.browser_is_supported()&&(this.is_multiple=this.form_field.multiple,this.set_default_text(),this.set_default_values(),this.setup(),this.set_up_html(),this.register_observers())}return AbstractChosen.prototype.set_default_values=function(){var a=this;return this.click_test_action=function(b){return a.test_active_click(b)},this.activate_action=function(b){return a.activate_field(b)},this.active_field=!1,this.mouse_on_container=!1,this.results_showing=!1,this.result_highlighted=null,this.allow_single_deselect=null!=this.options.allow_single_deselect&&null!=this.form_field.options[0]&&""===this.form_field.options[0].text?this.options.allow_single_deselect:!1,this.disable_search_threshold=this.options.disable_search_threshold||0,this.disable_search=this.options.disable_search||!1,this.enable_split_word_search=null!=this.options.enable_split_word_search?this.options.enable_split_word_search:!0,this.group_search=null!=this.options.group_search?this.options.group_search:!0,this.search_contains=this.options.search_contains||!1,this.single_backstroke_delete=null!=this.options.single_backstroke_delete?this.options.single_backstroke_delete:!0,this.max_selected_options=this.options.max_selected_options||1/0,this.inherit_select_classes=this.options.inherit_select_classes||!1,this.display_selected_options=null!=this.options.display_selected_options?this.options.display_selected_options:!0,this.display_disabled_options=null!=this.options.display_disabled_options?this.options.display_disabled_options:!0},AbstractChosen.prototype.set_default_text=function(){return this.default_text=this.form_field.getAttribute("data-placeholder")?this.form_field.getAttribute("data-placeholder"):this.is_multiple?this.options.placeholder_text_multiple||this.options.placeholder_text||AbstractChosen.default_multiple_text:this.options.placeholder_text_single||this.options.placeholder_text||AbstractChosen.default_single_text,this.results_none_found=this.form_field.getAttribute("data-no_results_text")||this.options.no_results_text||AbstractChosen.default_no_result_text},AbstractChosen.prototype.mouse_enter=function(){return this.mouse_on_container=!0},AbstractChosen.prototype.mouse_leave=function(){return this.mouse_on_container=!1},AbstractChosen.prototype.input_focus=function(){var a=this;if(this.is_multiple){if(!this.active_field)return setTimeout(function(){return a.container_mousedown()},50)}else if(!this.active_field)return this.activate_field()},AbstractChosen.prototype.input_blur=function(){var a=this;return this.mouse_on_container?void 0:(this.active_field=!1,setTimeout(function(){return a.blur_test()},100))},AbstractChosen.prototype.results_option_build=function(a){var b,c,d,e,f;for(b="",f=this.results_data,d=0,e=f.length;e>d;d++)c=f[d],b+=c.group?this.result_add_group(c):this.result_add_option(c),(null!=a?a.first:void 0)&&(c.selected&&this.is_multiple?this.choice_build(c):c.selected&&!this.is_multiple&&this.single_set_selected_text(c.text));return b},AbstractChosen.prototype.result_add_option=function(a){var b,c;return a.search_match?this.include_option_in_results(a)?(b=[],a.disabled||a.selected&&this.is_multiple||b.push("active-result"),!a.disabled||a.selected&&this.is_multiple||b.push("disabled-result"),a.selected&&b.push("result-selected"),null!=a.group_array_index&&b.push("group-option"),""!==a.classes&&b.push(a.classes),c=document.createElement("li"),c.className=b.join(" "),c.style.cssText=a.style,c.setAttribute("data-option-array-index",a.array_index),c.innerHTML=a.search_text,this.outerHTML(c)):"":""},AbstractChosen.prototype.result_add_group=function(a){var b;return a.search_match||a.group_match?a.active_options>0?(b=document.createElement("li"),b.className="group-result",b.innerHTML=a.search_text,this.outerHTML(b)):"":""},AbstractChosen.prototype.results_update_field=function(){return this.set_default_text(),this.is_multiple||this.results_reset_cleanup(),this.result_clear_highlight(),this.results_build(),this.results_showing?this.winnow_results():void 0},AbstractChosen.prototype.reset_single_select_options=function(){var a,b,c,d,e;for(d=this.results_data,e=[],b=0,c=d.length;c>b;b++)a=d[b],a.selected?e.push(a.selected=!1):e.push(void 0);return e},AbstractChosen.prototype.results_toggle=function(){return this.results_showing?this.results_hide():this.results_show()},AbstractChosen.prototype.results_search=function(){return this.results_showing?this.winnow_results():this.results_show()},AbstractChosen.prototype.winnow_results=function(){var a,b,c,d,e,f,g,h,i,j,k,l,m;for(this.no_results_clear(),e=0,g=this.get_search_text(),a=g.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&"),d=this.search_contains?"":"^",c=new RegExp(d+a,"i"),j=new RegExp(a,"i"),m=this.results_data,k=0,l=m.length;l>k;k++)b=m[k],b.search_match=!1,f=null,this.include_option_in_results(b)&&(b.group&&(b.group_match=!1,b.active_options=0),null!=b.group_array_index&&this.results_data[b.group_array_index]&&(f=this.results_data[b.group_array_index],0===f.active_options&&f.search_match&&(e+=1),f.active_options+=1),(!b.group||this.group_search)&&(b.search_text=b.group?b.label:b.html,b.search_match=this.search_string_match(b.search_text,c),b.search_match&&!b.group&&(e+=1),b.search_match?(g.length&&(h=b.search_text.search(j),i=b.search_text.substr(0,h+g.length)+"</em>"+b.search_text.substr(h+g.length),b.search_text=i.substr(0,h)+"<em>"+i.substr(h)),null!=f&&(f.group_match=!0)):null!=b.group_array_index&&this.results_data[b.group_array_index].search_match&&(b.search_match=!0)));return this.result_clear_highlight(),1>e&&g.length?(this.update_results_content(""),this.no_results(g)):(this.update_results_content(this.results_option_build()),this.winnow_results_set_highlight())},AbstractChosen.prototype.search_string_match=function(a,b){var c,d,e,f;if(b.test(a))return!0;if(this.enable_split_word_search&&(a.indexOf(" ")>=0||0===a.indexOf("["))&&(d=a.replace(/\[|\]/g,"").split(" "),d.length))for(e=0,f=d.length;f>e;e++)if(c=d[e],b.test(c))return!0},AbstractChosen.prototype.choices_count=function(){var a,b,c,d;if(null!=this.selected_option_count)return this.selected_option_count;for(this.selected_option_count=0,d=this.form_field.options,b=0,c=d.length;c>b;b++)a=d[b],a.selected&&(this.selected_option_count+=1);return this.selected_option_count},AbstractChosen.prototype.choices_click=function(a){return a.preventDefault(),this.results_showing||this.is_disabled?void 0:this.results_show()},AbstractChosen.prototype.keyup_checker=function(a){var b,c;switch(b=null!=(c=a.which)?c:a.keyCode,this.search_field_scale(),b){case 8:if(this.is_multiple&&this.backstroke_length<1&&this.choices_count()>0)return this.keydown_backstroke();if(!this.pending_backstroke)return this.result_clear_highlight(),this.results_search();break;case 13:if(a.preventDefault(),this.results_showing)return this.result_select(a);break;case 27:return this.results_showing&&this.results_hide(),!0;case 9:case 38:case 40:case 16:case 91:case 17:break;default:return this.results_search()}},AbstractChosen.prototype.clipboard_event_checker=function(){var a=this;return setTimeout(function(){return a.results_search()},50)},AbstractChosen.prototype.container_width=function(){return null!=this.options.width?this.options.width:""+this.form_field.offsetWidth+"px"},AbstractChosen.prototype.include_option_in_results=function(a){return this.is_multiple&&!this.display_selected_options&&a.selected?!1:!this.display_disabled_options&&a.disabled?!1:a.empty?!1:!0},AbstractChosen.prototype.search_results_touchstart=function(a){return this.touch_started=!0,this.search_results_mouseover(a)},AbstractChosen.prototype.search_results_touchmove=function(a){return this.touch_started=!1,this.search_results_mouseout(a)},AbstractChosen.prototype.search_results_touchend=function(a){return this.touch_started?this.search_results_mouseup(a):void 0},AbstractChosen.prototype.outerHTML=function(a){var b;return a.outerHTML?a.outerHTML:(b=document.createElement("div"),b.appendChild(a),b.innerHTML)},AbstractChosen.browser_is_supported=function(){return"Microsoft Internet Explorer"===window.navigator.appName?document.documentMode>=8:/iP(od|hone)/i.test(window.navigator.userAgent)?!1:/Android/i.test(window.navigator.userAgent)&&/Mobile/i.test(window.navigator.userAgent)?!1:!0},AbstractChosen.default_multiple_text="Select Some Options",AbstractChosen.default_single_text="Select an Option",AbstractChosen.default_no_result_text="No results match",AbstractChosen}(),a=jQuery,a.fn.extend({chosen:function(b){return AbstractChosen.browser_is_supported()?this.each(function(){var c,d;c=a(this),d=c.data("chosen"),"destroy"===b&&d?d.destroy():d||c.data("chosen",new Chosen(this,b))}):this}}),Chosen=function(c){function Chosen(){return b=Chosen.__super__.constructor.apply(this,arguments)}return d(Chosen,c),Chosen.prototype.setup=function(){return this.form_field_jq=a(this.form_field),this.current_selectedIndex=this.form_field.selectedIndex,this.is_rtl=this.form_field_jq.hasClass("chosen-rtl")},Chosen.prototype.set_up_html=function(){var b,c;return b=["chosen-container"],b.push("chosen-container-"+(this.is_multiple?"multi":"single")),this.inherit_select_classes&&this.form_field.className&&b.push(this.form_field.className),this.is_rtl&&b.push("chosen-rtl"),c={"class":b.join(" "),style:"width: "+this.container_width()+";",title:this.form_field.title},this.form_field.id.length&&(c.id=this.form_field.id.replace(/[^\w]/g,"_")+"_chosen"),this.container=a("<div />",c),this.is_multiple?this.container.html('<ul class="chosen-choices"><li class="search-field"><input type="text" value="'+this.default_text+'" class="default" autocomplete="off" style="width:25px;" /></li></ul><div class="chosen-drop"><ul class="chosen-results"></ul></div>'):this.container.html('<a class="chosen-single chosen-default" tabindex="-1"><span>'+this.default_text+'</span><div><b></b></div></a><div class="chosen-drop"><div class="chosen-search"><input type="text" autocomplete="off" /></div><ul class="chosen-results"></ul></div>'),this.form_field_jq.hide().after(this.container),this.dropdown=this.container.find("div.chosen-drop").first(),this.search_field=this.container.find("input").first(),this.search_results=this.container.find("ul.chosen-results").first(),this.search_field_scale(),this.search_no_results=this.container.find("li.no-results").first(),this.is_multiple?(this.search_choices=this.container.find("ul.chosen-choices").first(),this.search_container=this.container.find("li.search-field").first()):(this.search_container=this.container.find("div.chosen-search").first(),this.selected_item=this.container.find(".chosen-single").first()),this.results_build(),this.set_tab_index(),this.set_label_behavior(),this.form_field_jq.trigger("chosen:ready",{chosen:this})},Chosen.prototype.register_observers=function(){var a=this;return this.container.bind("mousedown.chosen",function(b){a.container_mousedown(b)}),this.container.bind("mouseup.chosen",function(b){a.container_mouseup(b)}),this.container.bind("mouseenter.chosen",function(b){a.mouse_enter(b)}),this.container.bind("mouseleave.chosen",function(b){a.mouse_leave(b)}),this.search_results.bind("mouseup.chosen",function(b){a.search_results_mouseup(b)}),this.search_results.bind("mouseover.chosen",function(b){a.search_results_mouseover(b)}),this.search_results.bind("mouseout.chosen",function(b){a.search_results_mouseout(b)}),this.search_results.bind("mousewheel.chosen DOMMouseScroll.chosen",function(b){a.search_results_mousewheel(b)}),this.search_results.bind("touchstart.chosen",function(b){a.search_results_touchstart(b)}),this.search_results.bind("touchmove.chosen",function(b){a.search_results_touchmove(b)}),this.search_results.bind("touchend.chosen",function(b){a.search_results_touchend(b)}),this.form_field_jq.bind("chosen:updated.chosen",function(b){a.results_update_field(b)}),this.form_field_jq.bind("chosen:activate.chosen",function(b){a.activate_field(b)}),this.form_field_jq.bind("chosen:open.chosen",function(b){a.container_mousedown(b)}),this.form_field_jq.bind("chosen:close.chosen",function(b){a.input_blur(b)}),this.search_field.bind("blur.chosen",function(b){a.input_blur(b)}),this.search_field.bind("keyup.chosen",function(b){a.keyup_checker(b)}),this.search_field.bind("keydown.chosen",function(b){a.keydown_checker(b)}),this.search_field.bind("focus.chosen",function(b){a.input_focus(b)}),this.search_field.bind("cut.chosen",function(b){a.clipboard_event_checker(b)}),this.search_field.bind("paste.chosen",function(b){a.clipboard_event_checker(b)}),this.is_multiple?this.search_choices.bind("click.chosen",function(b){a.choices_click(b)}):this.container.bind("click.chosen",function(a){a.preventDefault()})},Chosen.prototype.destroy=function(){return a(this.container[0].ownerDocument).unbind("click.chosen",this.click_test_action),this.search_field[0].tabIndex&&(this.form_field_jq[0].tabIndex=this.search_field[0].tabIndex),this.container.remove(),this.form_field_jq.removeData("chosen"),this.form_field_jq.show()},Chosen.prototype.search_field_disabled=function(){return this.is_disabled=this.form_field_jq[0].disabled,this.is_disabled?(this.container.addClass("chosen-disabled"),this.search_field[0].disabled=!0,this.is_multiple||this.selected_item.unbind("focus.chosen",this.activate_action),this.close_field()):(this.container.removeClass("chosen-disabled"),this.search_field[0].disabled=!1,this.is_multiple?void 0:this.selected_item.bind("focus.chosen",this.activate_action))},Chosen.prototype.container_mousedown=function(b){return this.is_disabled||(b&&"mousedown"===b.type&&!this.results_showing&&b.preventDefault(),null!=b&&a(b.target).hasClass("search-choice-close"))?void 0:(this.active_field?this.is_multiple||!b||a(b.target)[0]!==this.selected_item[0]&&!a(b.target).parents("a.chosen-single").length||(b.preventDefault(),this.results_toggle()):(this.is_multiple&&this.search_field.val(""),a(this.container[0].ownerDocument).bind("click.chosen",this.click_test_action),this.results_show()),this.activate_field())},Chosen.prototype.container_mouseup=function(a){return"ABBR"!==a.target.nodeName||this.is_disabled?void 0:this.results_reset(a)},Chosen.prototype.search_results_mousewheel=function(a){var b;return a.originalEvent&&(b=-a.originalEvent.wheelDelta||a.originalEvent.detail),null!=b?(a.preventDefault(),"DOMMouseScroll"===a.type&&(b=40*b),this.search_results.scrollTop(b+this.search_results.scrollTop())):void 0},Chosen.prototype.blur_test=function(){return!this.active_field&&this.container.hasClass("chosen-container-active")?this.close_field():void 0},Chosen.prototype.close_field=function(){return a(this.container[0].ownerDocument).unbind("click.chosen",this.click_test_action),this.active_field=!1,this.results_hide(),this.container.removeClass("chosen-container-active"),this.clear_backstroke(),this.show_search_field_default(),this.search_field_scale()},Chosen.prototype.activate_field=function(){return this.container.addClass("chosen-container-active"),this.active_field=!0,this.search_field.val(this.search_field.val()),this.search_field.focus()},Chosen.prototype.test_active_click=function(b){var c;return c=a(b.target).closest(".chosen-container"),c.length&&this.container[0]===c[0]?this.active_field=!0:this.close_field()},Chosen.prototype.results_build=function(){return this.parsing=!0,this.selected_option_count=null,this.results_data=SelectParser.select_to_array(this.form_field),this.is_multiple?this.search_choices.find("li.search-choice").remove():this.is_multiple||(this.single_set_selected_text(),this.disable_search||this.form_field.options.length<=this.disable_search_threshold?(this.search_field[0].readOnly=!0,this.container.addClass("chosen-container-single-nosearch")):(this.search_field[0].readOnly=!1,this.container.removeClass("chosen-container-single-nosearch"))),this.update_results_content(this.results_option_build({first:!0})),this.search_field_disabled(),this.show_search_field_default(),this.search_field_scale(),this.parsing=!1},Chosen.prototype.result_do_highlight=function(a){var b,c,d,e,f;if(a.length){if(this.result_clear_highlight(),this.result_highlight=a,this.result_highlight.addClass("highlighted"),d=parseInt(this.search_results.css("maxHeight"),10),f=this.search_results.scrollTop(),e=d+f,c=this.result_highlight.position().top+this.search_results.scrollTop(),b=c+this.result_highlight.outerHeight(),b>=e)return this.search_results.scrollTop(b-d>0?b-d:0);if(f>c)return this.search_results.scrollTop(c)}},Chosen.prototype.result_clear_highlight=function(){return this.result_highlight&&this.result_highlight.removeClass("highlighted"),this.result_highlight=null},Chosen.prototype.results_show=function(){return this.is_multiple&&this.max_selected_options<=this.choices_count()?(this.form_field_jq.trigger("chosen:maxselected",{chosen:this}),!1):(this.container.addClass("chosen-with-drop"),this.results_showing=!0,this.search_field.focus(),this.search_field.val(this.search_field.val()),this.winnow_results(),this.form_field_jq.trigger("chosen:showing_dropdown",{chosen:this}))},Chosen.prototype.update_results_content=function(a){return this.search_results.html(a)},Chosen.prototype.results_hide=function(){return this.results_showing&&(this.result_clear_highlight(),this.container.removeClass("chosen-with-drop"),this.form_field_jq.trigger("chosen:hiding_dropdown",{chosen:this})),this.results_showing=!1},Chosen.prototype.set_tab_index=function(){var a;return this.form_field.tabIndex?(a=this.form_field.tabIndex,this.form_field.tabIndex=-1,this.search_field[0].tabIndex=a):void 0},Chosen.prototype.set_label_behavior=function(){var b=this;return this.form_field_label=this.form_field_jq.parents("label"),!this.form_field_label.length&&this.form_field.id.length&&(this.form_field_label=a("label[for='"+this.form_field.id+"']")),this.form_field_label.length>0?this.form_field_label.bind("click.chosen",function(a){return b.is_multiple?b.container_mousedown(a):b.activate_field()}):void 0},Chosen.prototype.show_search_field_default=function(){return this.is_multiple&&this.choices_count()<1&&!this.active_field?(this.search_field.val(this.default_text),this.search_field.addClass("default")):(this.search_field.val(""),this.search_field.removeClass("default"))},Chosen.prototype.search_results_mouseup=function(b){var c;return c=a(b.target).hasClass("active-result")?a(b.target):a(b.target).parents(".active-result").first(),c.length?(this.result_highlight=c,this.result_select(b),this.search_field.focus()):void 0},Chosen.prototype.search_results_mouseover=function(b){var c;return c=a(b.target).hasClass("active-result")?a(b.target):a(b.target).parents(".active-result").first(),c?this.result_do_highlight(c):void 0},Chosen.prototype.search_results_mouseout=function(b){return a(b.target).hasClass("active-result")?this.result_clear_highlight():void 0},Chosen.prototype.choice_build=function(b){var c,d,e=this;return c=a("<li />",{"class":"search-choice"}).html("<span>"+b.html+"</span>"),b.disabled?c.addClass("search-choice-disabled"):(d=a("<a />",{"class":"search-choice-close","data-option-array-index":b.array_index}),d.bind("click.chosen",function(a){return e.choice_destroy_link_click(a)}),c.append(d)),this.search_container.before(c)},Chosen.prototype.choice_destroy_link_click=function(b){return b.preventDefault(),b.stopPropagation(),this.is_disabled?void 0:this.choice_destroy(a(b.target))},Chosen.prototype.choice_destroy=function(a){return this.result_deselect(a[0].getAttribute("data-option-array-index"))?(this.show_search_field_default(),this.is_multiple&&this.choices_count()>0&&this.search_field.val().length<1&&this.results_hide(),a.parents("li").first().remove(),this.search_field_scale()):void 0},Chosen.prototype.results_reset=function(){return this.reset_single_select_options(),this.form_field.options[0].selected=!0,this.single_set_selected_text(),this.show_search_field_default(),this.results_reset_cleanup(),this.form_field_jq.trigger("change"),this.active_field?this.results_hide():void 0},Chosen.prototype.results_reset_cleanup=function(){return this.current_selectedIndex=this.form_field.selectedIndex,this.selected_item.find("abbr").remove()},Chosen.prototype.result_select=function(a){var b,c;return this.result_highlight?(b=this.result_highlight,this.result_clear_highlight(),this.is_multiple&&this.max_selected_options<=this.choices_count()?(this.form_field_jq.trigger("chosen:maxselected",{chosen:this}),!1):(this.is_multiple?b.removeClass("active-result"):this.reset_single_select_options(),c=this.results_data[b[0].getAttribute("data-option-array-index")],c.selected=!0,this.form_field.options[c.options_index].selected=!0,this.selected_option_count=null,this.is_multiple?this.choice_build(c):this.single_set_selected_text(c.text),(a.metaKey||a.ctrlKey)&&this.is_multiple||this.results_hide(),this.search_field.val(""),(this.is_multiple||this.form_field.selectedIndex!==this.current_selectedIndex)&&this.form_field_jq.trigger("change",{selected:this.form_field.options[c.options_index].value}),this.current_selectedIndex=this.form_field.selectedIndex,this.search_field_scale())):void 0},Chosen.prototype.single_set_selected_text=function(a){return null==a&&(a=this.default_text),a===this.default_text?this.selected_item.addClass("chosen-default"):(this.single_deselect_control_build(),this.selected_item.removeClass("chosen-default")),this.selected_item.find("span").text(a)},Chosen.prototype.result_deselect=function(a){var b;return b=this.results_data[a],this.form_field.options[b.options_index].disabled?!1:(b.selected=!1,this.form_field.options[b.options_index].selected=!1,this.selected_option_count=null,this.result_clear_highlight(),this.results_showing&&this.winnow_results(),this.form_field_jq.trigger("change",{deselected:this.form_field.options[b.options_index].value}),this.search_field_scale(),!0)},Chosen.prototype.single_deselect_control_build=function(){return this.allow_single_deselect?(this.selected_item.find("abbr").length||this.selected_item.find("span").first().after('<abbr class="search-choice-close"></abbr>'),this.selected_item.addClass("chosen-single-with-deselect")):void 0},Chosen.prototype.get_search_text=function(){return this.search_field.val()===this.default_text?"":a("<div/>").text(a.trim(this.search_field.val())).html()},Chosen.prototype.winnow_results_set_highlight=function(){var a,b;return b=this.is_multiple?[]:this.search_results.find(".result-selected.active-result"),a=b.length?b.first():this.search_results.find(".active-result").first(),null!=a?this.result_do_highlight(a):void 0},Chosen.prototype.no_results=function(b){var c;return c=a('<li class="no-results">'+this.results_none_found+' "<span></span>"</li>'),c.find("span").first().html(b),this.search_results.append(c),this.form_field_jq.trigger("chosen:no_results",{chosen:this})},Chosen.prototype.no_results_clear=function(){return this.search_results.find(".no-results").remove()},Chosen.prototype.keydown_arrow=function(){var a;return this.results_showing&&this.result_highlight?(a=this.result_highlight.nextAll("li.active-result").first())?this.result_do_highlight(a):void 0:this.results_show()},Chosen.prototype.keyup_arrow=function(){var a;return this.results_showing||this.is_multiple?this.result_highlight?(a=this.result_highlight.prevAll("li.active-result"),a.length?this.result_do_highlight(a.first()):(this.choices_count()>0&&this.results_hide(),this.result_clear_highlight())):void 0:this.results_show()},Chosen.prototype.keydown_backstroke=function(){var a;return this.pending_backstroke?(this.choice_destroy(this.pending_backstroke.find("a").first()),this.clear_backstroke()):(a=this.search_container.siblings("li.search-choice").last(),a.length&&!a.hasClass("search-choice-disabled")?(this.pending_backstroke=a,this.single_backstroke_delete?this.keydown_backstroke():this.pending_backstroke.addClass("search-choice-focus")):void 0)},Chosen.prototype.clear_backstroke=function(){return this.pending_backstroke&&this.pending_backstroke.removeClass("search-choice-focus"),this.pending_backstroke=null},Chosen.prototype.keydown_checker=function(a){var b,c;switch(b=null!=(c=a.which)?c:a.keyCode,this.search_field_scale(),8!==b&&this.pending_backstroke&&this.clear_backstroke(),b){case 8:this.backstroke_length=this.search_field.val().length;break;case 9:this.results_showing&&!this.is_multiple&&this.result_select(a),this.mouse_on_container=!1;break;case 13:a.preventDefault();break;case 38:a.preventDefault(),this.keyup_arrow();break;case 40:a.preventDefault(),this.keydown_arrow()}},Chosen.prototype.search_field_scale=function(){var b,c,d,e,f,g,h,i,j;if(this.is_multiple){for(d=0,h=0,f="position:absolute; left: -1000px; top: -1000px; display:none;",g=["font-size","font-style","font-weight","font-family","line-height","text-transform","letter-spacing"],i=0,j=g.length;j>i;i++)e=g[i],f+=e+":"+this.search_field.css(e)+";";return b=a("<div />",{style:f}),b.text(this.search_field.val()),a("body").append(b),h=b.width()+25,b.remove(),c=this.container.outerWidth(),h>c-10&&(h=c-10),this.search_field.css({width:h+"px"})}},Chosen}(AbstractChosen)}.call(this);
/**
* Allows text inputs to display a placeholder message until it gets focus, at which point the input
* is set to empty.
*
* This simulated the placeholder attribute in html5.
* http://dev.w3.org/html5/spec/Overview.html#the-placeholder-attribute
*
* @copyright Clock Limited 2010
* @license http://opensource.org/licenses/bsd-license.php New BSD License
* @author Paul Serby <paul.serby@clock.co.uk>
*/
(function ($) {
    $.fn.placeholder = function (text) {
        
        return this.each(function () {
            
            var
            context = $(this),
                placeholderText,
                nativePlaceholderSupport = ('placeholder' in document.createElement('input'));
            function onBlur(event) {
                checkIfEmpty($(event.target));
            }
            
            function checkIfEmpty() {
                if (context.val() === '') {
                    /* if (context.attr('type') === 'password') {
                        try {
                            context.attr('type', 'text');
                        } catch(e) {
                            return false;
                        }
                    } */
                    context.val(placeholderText);
                    context.addClass('ui-placeholder');
                }
            }
            
            function onFocus(event) {
                context.removeClass('ui-placeholder');
                if (context.val() === placeholderText) {
                    context.val('');
                }
            }
            
            if (text === undefined) {
                placeholderText = $(this).attr('placeholder');
            } else {
                placeholderText = text;
            }
            
            if (!nativePlaceholderSupport) {
                checkIfEmpty(context.blur(onBlur).focus(onFocus));
                context.parents('form').submit(function(event) {
                    if (context.val() === placeholderText) {
                        context.val('');
                    }
                });
            } else {
                context.attr('placeholder', placeholderText);
            }
        });
    };
})(jQuery);

/*IE-8 GK login placeholder issue*/
$('.lt-ie9 .gkLogin,.lt-ie10 .gkLogin').on('click',function(e){
    $('.radio-container li input').placeholder();
});

$(document).ready(function() {	
	if($('.imageteasertextoverlay ul li').length > 0 || $('.imageteasertextoverlay ol li').length > 0){
		$('.imageteasertextoverlay ul li, .imageteasertextoverlay ol li').wrapInner('<span></span>');
    }	
    if($('a[anchor="bookmark"]').length > 0 && window.location.hash !=""){ 
        /*$('html, body').animate({ 
            'scrollTop':   $('a[name="' + window.location.hash.substring(1, window.location.hash.length) + '"]').offset().top 
        }, 10, 'easeInOutExpo'); */
        var h = window.location.hash;
        if (h) {
            var headerH = $('#headerDiv').outerHeight();
            $('html, body').stop().animate({
                scrollTop : $('a[name="' + window.location.hash.substring(1, window.location.hash.length) + '"]').offset().top
            }, 10, 'easeInOutExpo');
        }
    } ; 
    if($('.lt-ie10,.lt-ie9').length > 0){
        $('input, textarea').placeholder();
    }
    if($('.benefit-icon')[0]){
        $('.benefit-icon').addClass('icon-check icon-check_3').parent().addClass('benefit_iconSection');
        $('ul li .benefit_iconSection').parents('ul').attr('class', 'benefitUl');
    }
    //Remove box-border from forms one-column
    targetsolarCheck =  $('.solarRechner').parents('.one-column');
    targetformCheck = $('.formValidationcontainer').parents('.one-column');
    targetnoboxShadowCheck = $('.onecolumnnoshadow').parents('.one-column');
    //targetTabs = $('.tabs').parents('.one-column');
    targetsolarCheck.addClass('noBoxShadow');
    targetformCheck.addClass('noBoxShadow');
    targetnoboxShadowCheck.addClass('noBoxShadow');
    //targetTabs.addClass('noBoxShadow');

    //Remove bottom margin for text media heading if only heading is there
    row_2 = $('.media-content .row-2')
    for(i=0;i<row_2.length;i++){
        if((row_2[i].children.length)==1){
            $(row_2[i].children).css('margin-bottom','0')
        }
    }
    //Adding the lastComponent class to last component in one column
    //$('.one-column .parsys > div:last-child').addClass('lastComponent')

    /* Adjustments for Safari on Mac */
    if (navigator.userAgent && navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Mac') != -1 && navigator.userAgent.indexOf('Chrome') == -1 && navigator.userAgent.indexOf('iPad') == -1) {
        $('html').addClass('safari-mac'); // provide a class for the safari-mac specific css to filter with
    }
    if (navigator.userAgent.match(/iPad;.*CPU.*OS 6_\d/i)) {
        $('html').addClass('ipadios6');
    }
    if (navigator.userAgent.indexOf('iPad') !== -1) {
        $('html').addClass('ipadClass');
    }
    if (navigator.userAgent.indexOf('iPhone') !== -1) {
        $('html').addClass('iphoneClass');
    }
    if(/nexus 7/i.test(navigator.userAgent)) {
        $('html').addClass('nexus7');
    }
    var ie11Styles = [
        'msTextCombineHorizontal'];

    /*
    * Test all IE only CSS properties
    */
    var d = document;
    var b = d.body;
    var s = b.style;
    var ieVersion = null;
    var property;
    // Test IE11 properties
    for (var i = 0; i < ie11Styles.length; i++) {
        property = ie11Styles[i];

    if (s[property] != undefined) {
            ieVersion = "ie11";
            $('html').addClass('ie11');
        }
    }

    $(window).bind('orientationchange', function(event) {
        if ( $('ul.ui-autocomplete').length!==0 ){
            $("ul.ui-autocomplete").css("display","none");
        }
    });

    /*Re-organizing stage teasers. Only the first stage teaser comes first and the other teasers come after the 4/10 containers.*/
    $(window).on("debouncedresize", function() {
        if($("#content").hasClass("home_page") && $('.teasersContainer').length <=0 && $(window).width() <= 767){
            var firstStageTeaser = $('.stageteaser_140').first();
            var getLast140teaser = $('.stageteaser_140').last();
            $("<div class='teasersContainer visible-xs firstStageTeaser'></div>").insertBefore(firstStageTeaser);
            $( "<div class='teasersContainer restStageTeasers visible-xs'></div>" ).insertAfter( getLast140teaser );
            /*Move all stage teasers except the first one to the bottom.*/
            $('.stageteaser_140').each(function(){
                if(!$(this).is(firstStageTeaser)) {
                    $(this).find('.sViewport').clone().appendTo('.restStageTeasers');
                }
                else {
                    $(this).find('.sViewport').clone().appendTo('.firstStageTeaser');
                }
            });
        }
    });

	if(typeof String.prototype.trim !== 'function') {
      String.prototype.trim = function() {
        return $.trim(this); 
      };
    }
    //Masonry Implementation
    if (( $(window).width() >= 768 && $(window).width() < 1024 ) && ($('.carousel-inner .teaser-170-container:not(.fixedHeight)'))) {
        $('.carousel-inner').addClass('iPadFlexibleTeaser');
    }
    
    if ( $('.carousel-inner.iPadFlexibleTeaser').length>0 ){
        var $container = $('.carousel-inner.iPadFlexibleTeaser');
        $container.isotope({
            itemSelector : '.item',
            columnWidth : 30
        });
        if($('.carousel-inner.iPadFlexibleTeaser .teaser-170-container:not(.fixedHeight)')){
            $( window ).on( "orientationchange", function( event ) {
                location.reload();
            });
        }
    }
});

/*hide loader on author*/
$(window).load(function() {
    if ((($("body").hasClass("cq-wcm-edit") === true) || ( $('#ovaerrorpage').length>0 )) && ( $('#ovaLoading').length>0 )) {
        $('#ovaLoading').removeClass('visible');
    }
});

$(window).load(function() {
    setTimeout(function() {
        if ((($("body").hasClass("cq-wcm-edit") === true) || ( $('#ovaerrorpage').length>0 )) && ( $('#ovaLoading').length>0 )) {
            $('#ovaLoading').removeClass('visible');
        }
    }, 5000);
});

/**
 * jQuery.ScrollTo - Easy element scrolling using jQuery.
 * Copyright (c) 2007-2009 Ariel Flesler - aflesler(at)gmail(dot)com | http://flesler.blogspot.com
 * Dual licensed under MIT and GPL.
 * Date: 5/25/2009
 * @author Ariel Flesler
 * @version 1.4.2
 *
 * http://flesler.blogspot.com/2007/10/jqueryscrollto.html
 */
;(function(d){var k=d.scrollTo=function(a,i,e){d(window).scrollTo(a,i,e)};k.defaults={axis:'xy',duration:parseFloat(d.fn.jquery)>=1.3?0:1};k.window=function(a){return d(window)._scrollable()};d.fn._scrollable=function(){return this.map(function(){var a=this,i=!a.nodeName||d.inArray(a.nodeName.toLowerCase(),['iframe','#document','html','body'])!=-1;if(!i)return a;var e=(a.contentWindow||a).document||a.ownerDocument||a;return d.browser.safari||e.compatMode=='BackCompat'?e.body:e.documentElement})};d.fn.scrollTo=function(n,j,b){if(typeof j=='object'){b=j;j=0}if(typeof b=='function')b={onAfter:b};if(n=='max')n=9e9;b=d.extend({},k.defaults,b);j=j||b.speed||b.duration;b.queue=b.queue&&b.axis.length>1;if(b.queue)j/=2;b.offset=p(b.offset);b.over=p(b.over);return this._scrollable().each(function(){var q=this,r=d(q),f=n,s,g={},u=r.is('html,body');switch(typeof f){case'number':case'string':if(/^([+-]=)?\d+(\.\d+)?(px|%)?$/.test(f)){f=p(f);break}f=d(f,this);case'object':if(f.is||f.style)s=(f=d(f)).offset()}d.each(b.axis.split(''),function(a,i){var e=i=='x'?'Left':'Top',h=e.toLowerCase(),c='scroll'+e,l=q[c],m=k.max(q,i);if(s){g[c]=s[h]+(u?0:l-r.offset()[h]);if(b.margin){g[c]-=parseInt(f.css('margin'+e))||0;g[c]-=parseInt(f.css('border'+e+'Width'))||0}g[c]+=b.offset[h]||0;if(b.over[h])g[c]+=f[i=='x'?'width':'height']()*b.over[h]}else{var o=f[h];g[c]=o.slice&&o.slice(-1)=='%'?parseFloat(o)/100*m:o}if(/^\d+$/.test(g[c]))g[c]=g[c]<=0?0:Math.min(g[c],m);if(!a&&b.queue){if(l!=g[c])t(b.onAfterFirst);delete g[c]}});t(b.onAfter);function t(a){r.animate(g,j,b.easing,a&&function(){a.call(this,n,b)})}}).end()};k.max=function(a,i){var e=i=='x'?'Width':'Height',h='scroll'+e;if(!d(a).is('html,body'))return a[h]-d(a)[e.toLowerCase()]();var c='client'+e,l=a.ownerDocument.documentElement,m=a.ownerDocument.body;return Math.max(l[h],m[h])-Math.min(l[c],m[c])};function p(a){return typeof a=='object'?a:{top:a,left:a}}})(jQuery);

var applyBorders = function() {
    if($('table').length > 0){
      $('table tr').each(function(){
        var $thisTd = $(this).find('td:first');
        if($thisTd){
          if($thisTd.css('display') == 'none' ){
            $thisTd.next('td').addClass('bdr-rgt');
          }
          else{
            $thisTd.addClass('bdr-rgt');
          }
        }
      });
    }
}

/*! matchMedia() polyfill - Test a CSS media type/query in JS. Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas. Dual MIT/BSD license */

window.matchMedia = window.matchMedia || (function(doc, undefined){

  var bool,
      docElem  = doc.documentElement,
      refNode  = docElem.firstElementChild || docElem.firstChild,
      // fakeBody required for <FF4 when executed in <head>
      fakeBody = doc.createElement('body'),
      div      = doc.createElement('div');

  div.id = 'mq-test-1';
  div.style.cssText = "position:absolute;top:-100em";
  fakeBody.style.background = "none";
  fakeBody.appendChild(div);

  return function(q){

    div.innerHTML = '&shy;<style media="'+q+'"> #mq-test-1 { width: 42px; }</style>';

    docElem.insertBefore(fakeBody, refNode);
    bool = div.offsetWidth === 42;
    docElem.removeChild(fakeBody);

    return { matches: bool, media: q };
  };

}(document));
/*jslint forin: true, sloppy: true, unparam: true, vars: true, white: true */
/*global document, jQuery, log */

var eon = window.eon || {};

(function(window, document, $, eon) {
	
	/**
	 * Tabs
	 *
	 * The tabs are based on the tabs from jQuery UI.
	 *
	 * Expects the following (minimum) markup:
	 * <div class="tabs">
	 *   <ol>
	 *     <li><a href="#tab-1">First</a></li>
	 *     <li><a href="#tab-2">Second</a></li>
	 *   </ol>
	 *   <div id="tab-1">Tab 1</div>
	 *   <div id="tab-2">Tab 2</div>
	 * </div>
	 *
	 * @see jqueryui.com/demos/tabs/
	 * @author Finn Pröpper, Sapient GmbH <fproepper@sapient.com>
	 */
	eon.tabs = (function () {
		// Add a new tab
		var initadd_button = function() { 
			$(".add-button").click(function(){
				if($(".new-tabs ol li").length < 4){
					var channelval = $("#channels").val();
					var newli = $('<li class="newtab"><a href="#">' + channelval + '</a></li>').insertBefore('.add-group');				
				}
				else{
					alert("You can't add more then 4 tabs");
				}				
				
				$.colorbox.close();
			
			});
		}
		// remove tab
		var initremove_button = function() { 
			$(".action-trash").click(function(){
				if ($('.new-tabs ol li:first-child')){
					alert("other");
				}
				else{
				var removetab = $('.new-tabs ol li.ui-state-active').remove();
				}
			});
		}
		/**
		 * Init function
		 */
		var init = function() {
			$(".tabs").tabs({options: {keyboard:false}});
			//initadd_button();
			//initremove_button();
		};
		
		/**
		 * Return public properties/methods
		 * 
		 * @see www.wait-till-i.com/2007/08/22/again-with-the-module-pattern-reveal-something-to-the-world/
		 */
		return {
			init : init
		};
		
	}());
	
}(window, document, jQuery, eon));
// Bind init function to DOM load
jQuery(eon.tabs.init);

/**
* E.ON DE Config Class
**/

// Declaring namespace parameter
var eonde = eonde || {};

/**
*  Class for generic values and configurations specific to
*  E.ON DE application
**/
eonde.Config = function(window, $) {

	var init = function() {
		ko.validation.init({
			decorateElement: true,
		    errorElementClass: 'error',
			insertMessages: false
		});
	};

	var serviceURLs = {};

    //Detect browser support for CORS
	if ('withCredentials' in new XMLHttpRequest()) {
	    //supports cross-domain requests
	    $.support.cors = true;  
	    serviceURLs.api = $('.basepage_hostUrl').attr('data-attr');
	} else {
	  //Time to retreat with a fallback
	  //Request will be sent to the reverse proxy
	  serviceURLs.api = window.location.protocol + '//' + window.location.hostname + (window.location.port!="" ? ":" + window.location.port : "") + '/';
	}

	serviceURLs.formService = serviceURLs.api + $('.basepage_formService').attr('data-attr');
    serviceURLs.zipcodeService = serviceURLs.api + $('.basepage_zipcodeService').attr('data-attr');
    serviceURLs.streetService = serviceURLs.api + $('.basepage_streetService').attr('data-attr');
    serviceURLs.gridOperatorsService = serviceURLs.api + $('.basepage_gridOperatorsService').attr('data-attr');
    serviceURLs.offersService = serviceURLs.api + $('.basepage_offersService').attr('data-attr');
	serviceURLs.cscModeOffersService = serviceURLs.api + $('.basepage_cscModeOffersService').attr('data-attr');
    serviceURLs.contractService = serviceURLs.api + $('.basepage_contractService').attr('data-attr');
	serviceURLs.cscModeContractService = serviceURLs.api + $('.basepage_cscModeContractService').attr('data-attr');
    serviceURLs.bankNamesService = serviceURLs.api + $('.basepage_bankNamesService').attr('data-attr');
    serviceURLs.energyProvidersService = serviceURLs.api + $('.basepage_energyProvidersService').attr('data-attr');
    serviceURLs.pdfService = serviceURLs.api + $('.basepage_pdfService').attr('data-attr');
    serviceURLs.apsContactService = serviceURLs.api + $('.basepage_apsContactService').attr('data-attr');
    serviceURLs.productServiceURL = serviceURLs.api + $('.basepage_productServiceURL').attr('data-attr');
    serviceURLs.productsServiceURL = serviceURLs.api + $('.basepage_productsServiceURL').attr('data-attr');
	serviceURLs.cscModeProductsServiceURL = serviceURLs.api + $('.basepage_cscModeProductsServiceURL').attr('data-attr');
    serviceURLs.distInfoService = serviceURLs.api + $('.basepage_distInfoService').attr('data-attr');
    serviceURLs.completeFormService = serviceURLs.api + $('.basepage_ovaCompletionUrl').attr('data-attr');

	
    serviceURLs.jsonZipService = $('.basepage_jsonZipService').attr('data-attr');
	serviceURLs.registerServiceUrlForBC = serviceURLs.api + $('.basepage_registerServiceUrlForBC').attr('data-attr');
	serviceURLs.passwordServiceUrlForBC = serviceURLs.api + $('.basepage_passwordServiceUrlForBC').attr('data-attr');
	serviceURLs.solarSubmitUrlService = serviceURLs.api + $('.basepage_solarSubmitUrl').attr('data-attr');
	serviceURLs.jsonReductionService = $('.basepage_jsonReduction').attr('data-attr');
	serviceURLs.jsonCompensationService = $('.basepage_jsonCompensation').attr('data-attr');
	serviceURLs.passwordExpiredServiceUrl = serviceURLs.api + $('.basepage_passwordExpiredServiceUrl').attr('data-attr');
	serviceURLs.contractPdfServiceUrl = serviceURLs.api + $('.basepage_contractPdfServiceUrl').attr('data-attr');
	serviceURLs.cscModeContractPdfServiceUrl = serviceURLs.api + $('.basepage_cscModeContractPdfServiceUrl').attr('data-attr');
	serviceURLs.BCLoginServiceUrlService = serviceURLs.api + $('.basepage_BCLoginServiceUrl').attr('data-attr');
	serviceURLs.registerServiceUrl = serviceURLs.api + $('.basepage_registerServiceUrl').attr('data-attr');
	serviceURLs.passwordServiceUrl = serviceURLs.api + $('.basepage_passwordServiceUrl').attr('data-attr');
	serviceURLs.RCLoginServiceUrl = serviceURLs.api + $('.basepage_RCLoginServiceUrl').attr('data-attr');
	serviceURLs.loginMaintenanceURL = serviceURLs.api + $('.basepage_loginMaintenanceUrl').attr('data-attr');
    
	serviceURLs.authorization =  $('.basepage_authorization').attr('data-attr');
	return {
		init: init,
		serviceURLs: serviceURLs
	};

}(window, jQuery);

$(function() {
	eonde.Config.init();
});
/** 
* E.ON DE Utils Wrapper Class
**/

// Declaring namespace parameter
var eonde = eonde || {};

/**
*  Wrapper class for all utility methods specific to
*  E.ON DE application
**/
eonde.Utils = function(window, $) {
    var _ajaxErrorMessages,             //AJAX response code custom error messages
        zipValidationParams = {         //Validation parameters for Zip Code
            minlength: 6,
            required: {message: 'Bitte geben Sie eine gültige PLZ ein.'}, 
            pattern: {  
                message: 'Bitte geben Sie eine gültige PLZ ein.',
                params: /^\d{4,5}\s+[^0-9\s]+.*$/
            }
        },
        consumptionValidationParams = { //Validation parameters for Consumption
            required: true, 
            pattern: {  
                message: 'Geben Sie gültige Verbrauch.',
                params: /^\d*$/
            }
        },
        _ovaBranchCnt = 48,
        _ovaDepartmentCnt = 10,
        _ovaFunctionCnt = 24;   
    
    /*
    Returns the QueryString object with all URL parameters as object properties.
    Example usage : eonde.Utils.QueryString.customerType
    */
    var QueryString = function () {
        // This function is anonymous, is executed immediately and 
        // the return value is assigned to QueryString!
        var query_string = {};
        var query = window.location.search.substring(1);
        var vars = query.split("&");
        for (var i=0;i<vars.length;i++) {
            var pair = vars[i].split("=");
            // If first entry with this name
            if (typeof query_string[pair[0]] === "undefined") {
                query_string[pair[0]] = pair[1];
                // If second entry with this name
            } else if (typeof query_string[pair[0]] === "string") {
                var arr = [ query_string[pair[0]], pair[1] ];
                query_string[pair[0]] = arr;
                // If third or later entry with this name
            } else {
                query_string[pair[0]].push(pair[1]);
            }
        } 
        return query_string;
    } ();

    /**
    *   Method to initialize parameters for the
    *   Utils wrapper, currently checks for JQuery object definition
    **/
    var init = function() {
        if ($ === undefined) { 
            return false; 
        }
        /*Uncomment this if you do not need the wcmmode*/
        /*if(/localhost:4502/.test(window.location.href) && QueryString.wcmmode == undefined) {
            if(/\?/.test(window.location.href))
                window.location.href += '&wcmmode=disabled';
            else
                window.location.href += '?wcmmode=disabled';
        }*/
    };

    /*Returns true if browser is IE8*/
    var isIE8 = (function() {
        return /msie 8/i.test(navigator.userAgent);
    })();
    
    /**
     *  Check for Touch Device
    **/
    var isTouchDevice = (('ontouchstart' in window) || (navigator.msMaxTouchPoints > 0)),
        winWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth,
        ipadWidth = parseInt(1024),// Min width defined so that above this width we'll apply custom drop down
        maxTouchHandHeldDeviceWidth = parseInt(1280);//This value is used because some new touch desktop's in market with touch functionality
        
    /*Checking whether viewport is medium. For IE 8, the viewport is always L*/
    var isMediumViewPort = function() {
        if(this.isIE8)  {
            return false;
        }
        return winWidth >= 768 && winWidth < 1024;
    };

    /*Checking whether viewport is small. For IE 8, the viewport is always L*/
    var isSmallViewPort = function() {
        if(this.isIE8)  {
            return false;
        }
        return winWidth < 768;
    };

    /*Checking whether viewport is large. For IE 8, the viewport is always L*/
    var isLargeViewPort = function() {
        if(this.isIE8)  {
            return true;
        }
        return winWidth >= 1024;
    };
    
    /*Stores the current viewport*/
    var currentViewPort = isLargeViewPort() ? 1 : isMediumViewPort() ? 2 : 3;

    /*Binding in case the viewport changes. Sets the newer currentViewPort*/
    $(window).on("resize", function() {
        if(currentViewPort !== (isLargeViewPort() ? 1 : isMediumViewPort() ? 2 : 3)) {
            currentViewPort = isLargeViewPort() ? 1 : isMediumViewPort() ? 2 : 3;
            $(window).trigger("eonde.Utils.viewportChanged");
        }
        winWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
    });
    
    /**
    *   Method to initialize parameters for the
    *   AJAX wrapper method, currently contains error messages
    *   corresponding to http response codes
    **/
    var ajaxInit = function() {
        _ajaxErrorMessages = {
            noConnection:"No Connection Found", 
            fileNotFound: "File Not Found", 
            serverError: "Server Error", 
            parserError: "Parse Error", 
            timeout: "Request Timed Out", 
            ajaxReqAbort: "Ajax Request Aborted"
        };
    };
    
    /**
    *   Method to initialize parameters for the
    *   Knockout Validations for various form fields
    *   Knockout-Validation.js plugin is used to validate form fields
    *   @ param: customOptions containing custom options for individual components
    **/
    var koValidationInit = function(customOptions) {
        var _defaultOptions = {
            registerExtenders: true,
            messagesOnModified: true,
            insertMessages: false,
            parseInputAttributes: true,
            errorsAsTitle: false,
            messageTemplate: null
        };
        
        var _options = $.extend({},_defaultOptions, customOptions); 
        
        ko.validation.configure(_options);
    };
    
    /**
    *   Ajax Wrapper function to return $.ajax, which is a promise object. 
    *   A promise acts as a proxy for a result of an asynchronous function.
    *   When $.ajax() is invoked a request is sent to the server, 
    *   but the function returns immediately without waiting for the response.
    *   The promise object represents that unknown response.
    **/
    var getXhrObj = function(customOptions){
        var _defaultOptions = { 
            type: 'POST', 
            async: true,
            cache: false, 
            url: '', 
            data: {},
            contentType : "application/json; charset=utf-8",
            dataType: "json",
            errorDiv: $('<div class="error-zone"></div>')
        },
            _objConfig = $.extend({}, _defaultOptions, customOptions),
            
            _objAjaxParam = {
                type: _objConfig.type, //mandatory field
                url: _objConfig.url, //mandatory
                headers: (_objConfig.headers !== undefined) ? _objConfig.headers : {}, 
                async: (_objConfig.async !== undefined) ? _objConfig.async : true,
                data : (_objConfig.data !== undefined) ? _objConfig.data :{},
                dataType : (_objConfig.dataType !== undefined) ? _objConfig.dataType:'json',
                cache: (_objConfig.cache !== undefined) ? _objConfig.cache : true,
                contentType: (_objConfig.contentType !== undefined) ? _objConfig.contentType : 'application/x-www-form-urlencoded',
                errorDiv : (_objConfig.errorDiv !== undefined) ? _objConfig.errorDiv :  $('<div class="error-zone"></div>'),
                // Global beforeSend wrapper with user defined function
                beforeSend: function (jqXHR) {
                    // Execute user defined method
                    if (typeof _objConfig.beforeSend === 'function') {
                        _objConfig.beforeSend(jqXHR);
                    }
                }
            },
            
            /*
            This ajax wrapper function returns the return value from $.ajax, 
            which is a promise object. A promise acts as a proxy for a result of an asynchronous function.
            When $.ajax() is invoked a request is sent to the server, 
            but the function returns immediately without waiting for the response.
            The promise object represents that unknown response.
            */
            _objJqXHR = $.ajax(_objAjaxParam),
            
            strErrorMsg = "";
        
        /* handling ajax failure*/
        /*_objJqXHR.fail(
        function(jqXHR, textStatus) {
        switch(jqXHR.status){
        case 0   : strErrorMsg = _ajaxErrorMessages.noConnection;
        return;
        break;
        case 404 : strErrorMsg = _ajaxErrorMessages.fileNotFound;
        break;
        case 500 : strErrorMsg = _ajaxErrorMessages.serverError;
        break;
        default :  strErrorMsg = jqXHR.responseText;
        };
        switch(textStatus){
        case 'parsererror' :    strErrorMsg = _ajaxErrorMessages.parserError;
        break;
        
        case 'timeout'     :    strErrorMsg = _ajaxErrorMessages.timeout;
        break;
        
        case 'abort'       :    strErrorMsg = _ajaxErrorMessages.ajaxReqAbort;
        break;
        };
        
        _objAjaxParam.errorDiv
        .html(strErrorMsg)
        .removeClass('display-none');
        
        if(customOptions.errorDiv === undefined){
        $(".error-zone").remove();
        $('.main-container').prepend(_objAjaxParam.errorDiv);
        $("html, body").animate({ scrollTop: 0 }, "slow");
        }
        });*/
        // return deferred ajax request object
        return _objJqXHR;
    };
    
    /**
    *   Method to check null and undefined values for any variable
    *   @ param: variable to be checked for null and undefined
    **/
    var _isNullAndUndef = function(variable) {
        if (variable === null || variable === undefined) { 
            return true;
        }
        return false;
    };
    
    /**
    *   Method to check key format for null, undefined and string type
    *   for key to be used in Internat Storage and Cookie Storage
    *   @ param: key to be validated for correct type
    **/
    var _checkKeyType = function(key){
        if (key === null || key === undefined) {
            return false;
        }
        
        if (typeof(key)  !== 'string') {
            return false;
        }
        
        return true;
    };
    
    /**
    *   Method to track Form customer events and push data to Google Tag Manager
    *   @ param:    category of the form for which event needs to be tracked
    *               action field in error
    *               step at which the error has occurred
    *               label if any for the field in error
    **/
    var trackFormErrorEvent = function(category, action, step, label) {
        if (typeof dataLayer != 'undefined') {
            dataLayer.push({
                "event":"customEvent",
                "eventCategory": category + " Error",
                "eventAction": action + " | Step" + step,
                "eventLabel": label != undefined ? label : "FALSE",
                "eventProperty":"",
                "eventValue":""
            });
        }
    };
    
    /**
    *   Method to track virtual page calls and push data to Google Tag Manager
    *   @ param:    serviceName of the service for which call needs to be tracked
    **/
    var trackVirtualPageCall = function(serviceName) {
        if (typeof dataLayer != 'undefined') {
            dataLayer.push({
                'event': 'customView', 
                'page': document.location.pathname + serviceName
            });
        }
    };
    
    /**
    *   Method to set value in HTML5 Internal Storage
    *   @ param:    key to be used as key for storing value
    *               value to be stored
    *               options containing the TTL (expiry time) for the value
    **/
    var setIStorageValue = function(key, value, options) {
        if (_checkKeyType(key)) {
            if (Modernizr.localstorage) {
				if (!_isNullAndUndef(options) && !jQuery.isEmptyObject(options)) {
					$.jStorage.set(key, value, options);
				} else {
					$.jStorage.set(key, value);
				}
			}
        }
    };
    
    /**
    *   Method to get value stored in HTML5 Internal Storage
    *   for a specific key
    *   @ param:    key for the value to be retrieved
    *               defaultValue value to be displayed in absence of value stored
    **/
    var getIStorageValue = function(key, defaultValue) {
        if (_checkKeyType(key)) {  
			if (Modernizr.localstorage) {
				if (!_isNullAndUndef(defaultValue) ) {
					return $.jStorage.get(key, defaultValue);
				} else {
					return $.jStorage.get(key);
				}
			}
        }
    };
    
    /**
    *   Method to clear value stored in HTML5 Internal Storage
    *   for a specific key
    *   @ param: key whose value needs to be cleared
    **/
    var clearIStorageValue = function(key) {
        if (!$.jStorage.storageAvailable()) {
            return false;
        }
        
        if (_checkKeyType(key)) {
            $.jStorage.deleteKey(key);
        }
    };
    
    /**
    *   Method to set value in cookie
    *   @ param:    key to be used as key for storing value
    *               value to be stored
    *               options containing the expiry time and path values if required
    **/
    var setCookie = function(key, value, options) {
        if (_checkKeyType(key)) {
            if (!_isNullAndUndef(options) && !jQuery.isEmptyObject(options)) {
                $.cookie(key, value, options);
            } else {
                $.cookie(key, value);
            }
        }
    };
    
    /**
    *   Method to get value stored in cookie
    *   @ param:    key for the value stored
    **/
    var getCookie = function(key) {
        if (_checkKeyType(key)) {       
            $.cookie(key);
        }
    };
    
    /**
    *   Method to delete value stored in cookie
    *   @ param:    key for the value to be cleared
    *               options path information if mentioned during cookie set
    **/
    var deleteCookie = function(key, options) {
        if (_checkKeyType(key)) {
            if (!_isNullAndUndef(options) && !jQuery.isEmptyObject(options)) {
                $.removeCookie(key, options);
            } else {
                $.removeCookie(key);
            }
        }
    };
    
    
    /**
    *   Method to get branch, function and department lists for OVA Form
    *   @ param:    key indicating the data to fetch i.e. branch, function or department
    **/
    var getOVAStaticValues = function(key) {
        if (_checkKeyType(key)) {
            var ovaList = [];
            switch (key) {
                case "branch":
                    for (var i = 1; i <= _ovaBranchCnt; i++) {
                        ovaList.push(eonde.i18n.get('ova.form.dd.branch.Branche' + i));
                    }
                    break;
                case "department":
                    for (var i = 1; i <= _ovaDepartmentCnt; i++) {
                        ovaList.push(eonde.i18n.get('ova.form.dd.branch.department_gm' + i));
                    }
                    break;
                case "function":
                    for (var i = 1; i <= _ovaFunctionCnt; i++) {
                        ovaList.push(eonde.i18n.get('ova.form.dd.branch.function_gm' + i));
                    }
                    break;
            }
            ovaList.sort();
            ovaList.push(eonde.i18n.get('ova.form.dd.branch.Branche49'));
            return ovaList;
        }
    };
    
    /**
    *   Method to get error message corresponding to input error code
    *   @ param:    errorCode to be decoded
    **/
    var decodeError = function(errorCode) {
        if (_checkKeyType(errorCode)) {
            return eonde.i18n.get(errorCode.toLowerCase());
        }
    };
    
    /**
    *   Method to read the response text of the backend service and extract the error code. Error code
    *   is then translated into the corresponding error message using the decodeError method of eonde.Utils.
    *   Error is also tracked in Google Analytics with the help of trackFormErrorEvent method of eonde.Utils.
    *   @ param:    data received from service
    *               formName of the form raising the error
    *               step at which the form is
    *               customerType optional customer type value
    **/
    var showBackendErrors = function(data, formName, step, customerType) {
        var error = null;
        var keyPrefix = "";
        if (formName === "Online") {
            keyPrefix += "online_";
        }
        if (data.responseText) {
            try {
                var errorObj = jQuery.parseJSON(data.responseText);
                if (errorObj != null && errorObj.error) {
                    
                    error ="<p>" + (errorObj.error["code"] != "" ? decodeError(keyPrefix + errorObj.error["code"]) : decodeError('ERR_SERVICE')) + "</p>";
                    if (errorObj.error["code"] != "" && formName !== "Online") {
                        var formField = errorObj.error["parameter"];
                        var errorClass = "input-error";
                        if (document.getElementById(formField)) {
                            document.getElementById(formField).className += " " + errorClass;
                        }
                        trackFormErrorEvent(formName, errorObj.error["code"] + (customerType && customerType == "gw" ? "_GM" : "" ), step);
                    }
                } else if(errorObj != null && errorObj.status && errorObj['status'] == '500') {
                      error = "<p>"+decodeError('ERR_SERVICE')+"</p>"; 
                } else if (errorObj != null && errorObj.code) {
                    error = "<p>" + (errorObj["code"] != "" ? decodeError(keyPrefix + errorObj["code"]) : decodeError('ERR_SERVICE')) + "</p>";
                    if (errorObj["code"] != "" && formName !== "Online") {
                        var formField = errorObj["parameter"];
                        var errorClass = "input-error";
                        if (document.getElementById(formField)) {
                            document.getElementById(formField).className += " " + errorClass;
                        }
                        trackFormErrorEvent(formName, errorObj["code"] + (customerType && customerType == "gw" ? "_GM" : "" ), step);
                    }
                } else if(errorObj != null && errorObj.length >0) {
                    var errorStr = "";
                    for (var i=0; i<errorObj.length; i++) {
                        errorStr += "<p>" + (errorObj[i]["code"] != "" ? decodeError(keyPrefix + errorObj[i]["code"]) : decodeError('ERR_SERVICE')) + "</p>"; 
                        if (errorObj[i]["code"] != "" && formName !== "Online") {
                            var formField = errorObj[i]["parameter"];
                            var errorClass = "input-error";
                            if (document.getElementById(formField)) {
                                document.getElementById(formField).className += " " + errorClass;
                            }
                            trackFormErrorEvent(formName, errorObj[i]["code"] + (customerType && customerType == "gw" ? "_GM" : "" ), step);
                        }                           
                    }
                    error = errorStr;                          
                }
            } catch(e) {
                error = "<p>"+decodeError('ERR_SERVICE')+"</p>";
            }
        } else {
            error = "<p>"+decodeError('ERR_SERVICE')+"</p>";
        }
        return error;
    }

    /*Takes the callback function as a parameter and executes it with a delay if the browser is IE8.
    @parameters -
    callback : the function to be executed with delay
    */
    var delayIfIE8 = function(callback) {
        if(this.isIE8) {
            setTimeout(callback, 1100);
        }
        else{
            callback();
        }
    }
    
    /**
    *   Method to find out the closest possible value to which slider for consumption entry can be moved
    *   upon manually entering value into the consumption input field
    *   @ param:    array containing discrete values for the consumption slider
    *               x value for which closest slider value needs to be calculated
    **/
    var getClosestRange = function(array, x) {
        var index = 0;
        if (x != undefined && x != null) {
            var low = 0;
            var high = array.length - 1;
            var mid = parseInt((low + high) / 2);
            var a = [];
            
            x = parseInt(x.split('.').join(''));
            
            for (var i = 0, len = array.length; i < len; i++) {
                a.push(parseInt(array[i].split('.').join('')));
            }
            
            if (x < a[low]) {
                index = low;
            } 
            else if (x > a[high]) {
                index = high;
            } 
            else if (x > a[mid]) {
                for (var j = mid, ext = high; j <= ext; j++) {
                    if (x == a[j]) {
                        index = j;
                        break;
                    } else if (x < a[j]) {
                        if ((a[j] - x) > (x - a[j - 1])) index = j - 1;
                        else index = j;
                        break;
                    }
                }
            } else {
                for (var j = 0, ext = mid; j <= ext; j++) {
                    if (x == a[j]) {
                        index = j;
                        break;
                    } else if (x < a[j]) {
                        if ((a[j] - x) > (x - a[j - 1])) index = j - 1;
                        else index = j;
                        break;
                    }
                }
            }
        }
        return index;
    }
    
    /**
    *   Method to update the progress indicator text
    **/
    var formProgressSteps = function(){
        var index = $('.progressIndicator ul:first-child li').length;
        if(index <= 0)
            return ;
        var dotIndex = $('.activeIndicator span').text().indexOf('.');
        if (dotIndex > -1 && isSmallViewPort()) {
            var currentStep = $('.progressIndicator ul li').index($('li.activeIndicator '))+1,
                activeIndicatorText = $('.activeIndicator span').text(),
                currentStr = activeIndicatorText.replace(".",""),
                str = activeIndicatorText.substring(0,dotIndex),
                finalvalue = currentStr.replace(str, currentStep+ "/"+index);
            $('.activeIndicator span').text(finalvalue);
        }
        else if (!isSmallViewPort()) {
            $('.progressIndicator ul li span').each(function() {
                var $this = $(this);
                var slashIndex = $this.text().indexOf('/');
                if(slashIndex) {
                    var replaceString = "/"+index;
                    var finalvalue = $this.text().replace(replaceString,".");
                    $this.text(finalvalue);
                }
            });
        }

    }

    /**
    *   Method to resize the frozen columns for Fix and eFix price tables in S Viewport
    **/
    var resizePriceTable = function() {
        if(isSmallViewPort() ) {
            $(".priceTableContainer .getScroll table.fixTable tr").each(function() {
                var div = $(this).find("td.firstCell div");
                //var div = th.find("div");
                if ($(this).height() < div.height()) {
                    $(this).height(div.height() + 20);
                }
            });
        }
    }

    var chosenOptions = {
        touch:true,
        "disable_search": true 
    };
    /**
     * Custom Select Box
    **/
    var console = console || { log: function() {} };
    var customeSelect = function(){
        if(!eonde.Utils.isTouchDevice || 
            eonde.Utils.isTouchDevice && eonde.Utils.winWidth > eonde.Utils.maxTouchHandHeldDeviceWidth ){
             $("select:not(.no-custom-dd)").chosen(chosenOptions);
        }else{
            if($('.chosen-container').length){
                 $("select:not(.no-custom-dd)").chosen('destroy'); 
            } 
        }
    };

    /*
    @private formatConsumption : method to format the consumption input value and append thousands separator
    @param nStr: value of the consumption to be formatted
    */
    var formatConsumption = function(nStr) {

        if(nStr && nStr !== undefined) {
            nStr=nStr.toString().replace(/[\.\,]/g,'');
            var type = $('.locale').attr('data-attr'),
                dec = type === 'de' ? ',' : '.',
                tho = type === 'de' ? '.' : ',',
                sep = tho;
                nStr+='';
                var x = nStr.split(dec),
                x1 = x[0],
                x2 = null,
                rgx = /(\d+)(\d{3})/;
            if (x.length > 1) {
                x2 = x[1];
            }
            while (rgx.test(x1)) {
                x1 = x1.replace(rgx, '$1' + sep + '$2');
            }
            if (x2 !== null && x2!=="") {
              x1 += dec + x2;
            }
            return x1;
        }
    }
	
	/**
    *   Method to change delay in autocomplete initiation. After every character input, the delay is 500 ms.
    *   But after 5 inputs, there is no delay.
    *   @param plz - the zipcode input element that has the autocomplete plugin.
    */
    var changeDelayZipAutocomplete = function(plz) {
        var $plz = $(plz);
        if(plz.value.toString().length >= 4) {
            /*For Small Devices, we change the delay after 500ms*/
            if(this.isSmallViewPort()) {
                setTimeout(function() {
                    $plz.autocomplete("option", "delay", 0);
                }, 500);
            }
            else 
                $plz.autocomplete("option", "delay", 0);
        }
        else 
            $plz.autocomplete("option", "delay", 500);
    };
	
	/**
    *   Method to read the input data and create a list of zip codes and city combination to 
    *   be displayed as a drop down list of zip code autocomplete fields.
    *   @ param:    data received from service containing zip city codes to be formatted as list
    **/
	var getZipCodesList = function (data, arrayObs) {
		var zipCityList = new Array();
        if (arrayObs) {
            arrayObs.removeAll();
        }
		var i = 0;
		$.each(data, function(index, value) {
			$.each(value.cities, function (idx, val) {
				zipCityList[i++] = value.zipCode + " " + val;
                if (arrayObs) {
                    arrayObs.push(value.zipCode + " " + val);
                }
			});
		});

		return zipCityList;
	}

    // Return public fields and methods
    return {
        zipValidationParams: zipValidationParams,
        consumptionValidationParams: consumptionValidationParams,
        init: init,
        ajaxInit: ajaxInit,
        koValidationInit: koValidationInit,
        getAjaxObj: getXhrObj,
        trackFormErrorEvent: trackFormErrorEvent,
        trackVirtualPageCall: trackVirtualPageCall,
        setIStorageValue: setIStorageValue,
        getIStorageValue: getIStorageValue,
        clearIStorageValue: clearIStorageValue,
        setCookie: setCookie,
        getCookie: getCookie,
        deleteCookie: deleteCookie,
        formProgressSteps: formProgressSteps,
        getOVAStaticValues: getOVAStaticValues,
        decodeError: decodeError,
        showBackendErrors: showBackendErrors,
        getClosestRange: getClosestRange,
        isTouchDevice : isTouchDevice,
        ipadWidth : ipadWidth,
        maxTouchHandHeldDeviceWidth : maxTouchHandHeldDeviceWidth,
        winWidth : winWidth,
        customeSelect : customeSelect,
        isMediumViewPort : isMediumViewPort,
        isSmallViewPort : isSmallViewPort,
        isLargeViewPort : isLargeViewPort,
        currentViewPort : currentViewPort,
        resizePriceTable : resizePriceTable,
        formatConsumption : formatConsumption,
		getZipCodesList : getZipCodesList,
        delayIfIE8 : delayIfIE8,
        isIE8 : isIE8,
        QueryString : QueryString,
        changeDelayZipAutocomplete : changeDelayZipAutocomplete
    };
}(window, jQuery);

//On Load Scripts for the application
$(document).ready(function() {
    eonde.Utils.init();
    
    //Initializing OVA and Online Form Steps logic
    $(window).on("debouncedresize", function () {
        eonde.Utils.formProgressSteps();
        window.setTimeout(function(){
            eonde.Utils.winWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
            eonde.Utils.customeSelect();
        }, 700);
    });
    window.setTimeout(function(){$(window).resize();}, 1000);
    
    //Scrolling to top position in case location hash is used
    if (location.hash){
        window.scrollTo(0,0);
    }
    eonde.language = $('.locale').attr('data-attr');
    //Ideally this should be moved to a new file
    eonde.integer_number = {format: "#,##0", locale:eonde.language};
    
    eonde.default_price = {format: "#,##0.00", locale:eonde.language};
    
    eonde.detailed_price = {format: "#,##0.000", locale:eonde.language};
    // custom Knockout binding to display price values
    ko.bindingHandlers.price = {
        precision: 2,
        update: function(element, valueAccessor, allBindingsAccessor){
            return ko.bindingHandlers.text.update(element,function(){
                var value = +(ko.utils.unwrapObservable(valueAccessor()) || 0),
                    unit = ko.utils.unwrapObservable(allBindingsAccessor().unit === undefined ? eonde.i18n.get("productdetail.tab2.ct.per.kwh.suffix") : allBindingsAccessor().unit), 
                        precision = ko.utils.unwrapObservable(allBindingsAccessor().precision === undefined ? ko.bindingHandlers.price.precision : allBindingsAccessor().precision);

                if(typeof valueAccessor() === "string") {
                    return valueAccessor() + " " + unit;
                }
                if(allBindingsAccessor().isZero && value === 0)
                    return '-';
                if(precision == 0) {
                    return $.formatNumber(value, eonde.integer_number) + " " + unit;
                }
                if (precision > 2) {
                    return $.formatNumber(value, eonde.detailed_price) + " " + unit;
                }
                return $.formatNumber(value, eonde.default_price) + " " + unit;
            });
        }
    };
    
    // custom Knockout binding to display kilowatt hour values
    ko.bindingHandlers.kilowattHours = {
        update: function(element, valueAccessor, allBindingsAccessor){
            return ko.bindingHandlers.text.update(element,function(){
                var value = +(ko.utils.unwrapObservable(valueAccessor()) || 0);
                return $.formatNumber(value, eonde.integer_number) + " " + eonde.i18n.get("productdetail.tab2.kwh.suffix");
            });
        }
    };

    //Overwrite toLocaleString to handle FF-28 bug
    Number.prototype.toLocaleString = function (type) {
        var dec = type === 'de' ? ',' : '.',
            tho = type === 'de' ? '.' : ',';
        var neg = this < 0;
        var isDec = this % 1 != 0;
        var f = this.toFixed(2).slice(+neg);
        return (neg ? "-" : "") + f.slice(0, - 3) .replace(/(?=(?!^)(?:\d{3})+(?!\d))/g, tho)
        + (isDec ? dec + f.slice( - 2) : "");
    };
    
    //Adding custom event for resizing columns for price table in S Viewport
    $(document).on("pricetable.S.init", eonde.Utils.resizePriceTable);
    
    function fixIE8IconRenderingIssue() {
        /* hack for ie8 rendering issue, don't remove */
        if (typeof ("Modernizr") !== "undefined" && $("html").hasClass("no-csstransitions")) {
            try {
                $("html").removeClass("no-csstransitions").addClass("no-csstransitions");
            } catch (e) {
            }
        }
    }

    function fixIE8ProgressBarRenderingIssue() {
        /* hack for ie8 rendering issue, don't remove */
        if (typeof ("Modernizr") !== "undefined") {
            try {
                var head = document.getElementsByTagName('head')[0],
                    style = document.createElement('style');
                style.type = 'text/css';
                style.styleSheet.cssText = 'li.activeIndicator:before,li.activeIndicator:after{content:none !important}';
                head.appendChild(style);
                setTimeout(function(){
                    head.removeChild(style);
                }, 1000);
            } catch (e) {
            }
        }
    }
    $(function() {
       var progressLoadDone = 0;
        /* hack for ie8 rendering issue, don't remove */
        $(document).on("respond.mediaApplied", function() {
            if (/msie 8/i.test(window.navigator.userAgent)) {
                if(progressLoadDone==0){
                    progressLoadDone=1;
                    setTimeout(fixIE8ProgressBarRenderingIssue, 5000);
                }
                setTimeout(fixIE8IconRenderingIssue, 15000);
            }
        });

        if (typeof (window.respondJsMediaApplied) !== "undefined") {
            setTimeout(fixIE8IconRenderingIssue, 20000);
        }

    });


    $(window).load(function() {
        /* hack for ie8 rendering issue, don't remove */
        if (/msie 8/i.test(window.navigator.userAgent)) {
            setTimeout(fixIE8IconRenderingIssue, 20000);
        }
    });
	
	/* we need this only on touch devices in order to identify if page has been scrolled*/
	if (Modernizr.touch) {
		/* cache dom references */ 
		if($(window).width() < 1024){
			var $body = jQuery('body'); 

			/* bind events */
			$(document).on('focus', 'input', function(e) {
				$body.addClass('fixFixedTouch');
			})
			.on('blur', 'input', function(e) {
				$body.removeClass('fixFixedTouch');
			});
		}
	} 
});
$(function() {
    var gsDeviceType = ($(window).width() > 1023)?"desktop":"tab-mob";

    if(gsDeviceType == 'desktop'){
        $.fn.getSize = function() {    
            var $wrap = $("<div />").appendTo($("body"));
            $wrap.css({
                "position":   "absolute !important",
                "visibility": "hidden !important",
                "display":    "block !important"
            });
        
            $clone = $(this).clone().appendTo($wrap);

            sizes = {
                "width": this.width(),
                "height": this.height()
            };
        
            $wrap.remove();
        
            return sizes;
        };
        $('.flyoutDiv > .container').each(function(){
            var dimensions = $(this).getSize();
			//$(this).parent().height(dimensions.height+20);
        });
    }
	
	function stickyHeader(){
		if($(window).width()>=1024){
            if($(window).scrollTop()==0){
                $('#headerDiv').addClass('sticky');
            }
            else{
                $('#headerDiv').removeClass('sticky');
            }
        }	
	}

	/*Defect fix for ESSONG-5510.*/
	var $itemsHiddenOnLoad = $('.languageselector-container, #srch-term');
	/*There are times when desperate measures have to be used.*/
	if(eonde.Utils.isIE8) {
		/*There have been instances of people trying to just find out something wrong with anything and everything. They consider the behaviour of IE8 to be the 
		Developer's fault. It is the Developer's fault. Just not the web developer who is coding for IE8, but the responsibility lies with Microsoft. If they had done
		a better job then our jobs would have been so much easier. I'm tired of repainting the DOM and using setTimeouts. This is not what I signed up for.*/
        var $iconLink = $('.languageselector-container').find('[class^="icon"]');
		setTimeout(function() {
			$itemsHiddenOnLoad.removeClass('hidden');
			$iconLink.removeClass('icon-link_pfeil');
		}, 3522);
		/*Take that IE8. U NO REPAINT DOM, then I will do it for you.*/
		setTimeout(function(){
			$iconLink.addClass('icon-link_pfeil')
		}, 4530);
	}
	else {
		/*Code introduced for other browsers because IE8 is a sucky one.*/
		$itemsHiddenOnLoad.removeClass('hidden');
	}
	/*Defect end*/

	$(window).on('scroll',function(){
		stickyHeader();
	});

    stickyHeader();
	
	var flyoutID = 0;

	$('.js-toggle-flyout').on('mouseenter', function (e) {
		var _this = $(this),
			apsContainer = $("#"+_this.data("flyout")).find('.ApsContainer');
		if(apsContainer[0]){
			var currentFlyout = $("#"+_this.data("flyout")).closest('.flyoutDiv'),
				height = Math.max(apsContainer.height(), currentFlyout.find('.container').height());
			//currentFlyout.height(height+20);
		}
		clearTimeout(flyoutID);    	
    	flyoutID = setTimeout (function () {
    		$('.flyoutDiv').removeAttr('style');
			if($("#"+_this.data("flyout")).length> 0){
    			$('.flyoutDiv').addClass('closed');
    		}
    		else {
    			$('.flyoutDiv').addClass('closed', 'linear');
    		}
			$(".js-toggle-flyout").removeClass('flyout-active');
			$("#"+_this.data("flyout")).removeClass('closed');
    	},500);
		
	});
	$('.js-toggle-flyout').on('mouseleave', function (e) {
		clearTimeout(flyoutID);
		var _this = $(this);
		$("#"+_this.data("flyout")).css({'box-shadow' : 'none'});
		flyoutID = setTimeout (function () {
			var inputs = $('.flyoutDiv input');
			$.each(inputs, function(e) {
				if ($(this).val() !== '' && $(this).val() !== 'PLZ') {
					$(this).blur();
				}
			});
			$('.flyoutDiv').addClass('closed', 'easeInOutQuad');
		},500);
	});
	$('.flyoutDiv').on('mouseenter', function (e) {

		clearTimeout(flyoutID);
		$('.flyoutDiv').removeAttr('style');
		$("ul").find("[data-flyout='" + $(this).attr('id') + "']").addClass('flyout-active');
		$(this).removeClass('closed');
	});
	$('.flyoutDiv').on('mouseleave', function (e) {
		var _this = $(this);
		var isSlectBoxOpen = false;
		$(document.body).on("hover", "select", function (e) {
			isSlectBoxOpen = true;
		})
		.on("blur change", "select", function (e) {
			isSlectBoxOpen = false;
		});
		$("#"+_this.data("flyout")).css({'box-shadow' : 'none'});
		setTimeout (function () {
			if(!isSlectBoxOpen){
				clearTimeout(flyoutID);
				var inputs = $('.flyoutDiv input');
				$.each(inputs, function(e) {
					if ($(this).val() !== '' && $(this).val() !== 'PLZ') {
						$(this).blur();
					}
				});
				_this.addClass('closed', 'easeInOutQuad');
				$(".js-toggle-flyout").removeClass('flyout-active');
			}
		}, 6);
	});

	
	$('.login-container').click(function(){
		
		
		if($("#serviceContactDiv.smarthelp_container-md .ApsContainer").length > 0){
			$("#serviceContactDiv.smarthelp_container-md .ApsContainer").animate({height : '0px'}, function(){
				$('#serviceContactDiv.smarthelp_container-md .ApsContainer').css('display', 'none');
				$("#serviceContactDiv.smarthelp_container-md").trigger("mouseleave");
			});
		}
		if($("#serviceContactDiv.smarthelp_container-md .widerServiceContact").length > 0){
			$("#serviceContactDiv.smarthelp_container-md .widerServiceContact").animate({height : '0px'}, function(){
				$('#serviceContactDiv.smarthelp_container-md .widerServiceContact').css('display', 'none');
				$("#serviceContactDiv.smarthelp_container-md").trigger("mouseleave");
			});
		}
	});
	/*cookie disclaimer functionality*/
	//var customerType = $('#switcher_Type').data('cq-attr');
	var flagCookie = $('#enableCookieFlag').data('cq-attr');
	//var disclaimer_Expiry = {TTL: 1800000};
	$('.disclaimerClose').click(function(){
		eonde.Utils.setIStorageValue("cookie_disclaimer","true");		
		$('.cookie_disclaimer').css('display','none');	
		$('#headerDiv').removeClass('diclaimerHeaderVisible');
		$('.bodyContent').removeClass('dislaimerHeaderBody');		
	});
	var cookieDisclaimerValue= eonde.Utils.getIStorageValue("cookie_disclaimer", "");
	if(cookieDisclaimerValue!=="true" && flagCookie === true){	
		$('.cookie_disclaimer').css('display','block');
		$('#headerDiv').addClass('diclaimerHeaderVisible');
		$('.bodyContent').addClass('dislaimerHeaderBody');				
	}
});
/*!

Holder - 2.3.1 - client side image placeholders
(c) 2012-2014 Ivan Malopinsky / http://imsky.co

Provided under the MIT License.
Commercial use requires attribution.

*/
var Holder = Holder || {};
(function (app, win) {
var system_config = {
	use_svg: false,
	use_canvas: false,
	use_fallback: false
};
var instance_config = {};
var preempted = false;
canvas = document.createElement('canvas');
var dpr = 1, bsr = 1;
var resizable_images = [];

if (!canvas.getContext) {
	system_config.use_fallback = true;
} else {
	if (canvas.toDataURL("image/png")
		.indexOf("data:image/png") < 0) {
		//Android doesn't support data URI
		system_config.use_fallback = true;
	} else {
		var ctx = canvas.getContext("2d");
	}
}

if(!!document.createElementNS && !!document.createElementNS('http://www.w3.org/2000/svg', 'svg').createSVGRect){
	system_config.use_svg = true;
	system_config.use_canvas = false;
}

if(!system_config.use_fallback){
    dpr = window.devicePixelRatio || 1,
    bsr = ctx.webkitBackingStorePixelRatio || ctx.mozBackingStorePixelRatio || ctx.msBackingStorePixelRatio || ctx.oBackingStorePixelRatio || ctx.backingStorePixelRatio || 1;
}

var ratio = dpr / bsr;

var settings = {
	domain: "holder.js",
	images: "img",
	bgnodes: ".holderjs",
	themes: {
		"gray": {
			background: "#eee",
			foreground: "#aaa",
			size: 12
		},
		"social": {
			background: "#3a5a97",
			foreground: "#fff",
			size: 12
		},
		"industrial": {
			background: "#434A52",
			foreground: "#C2F200",
			size: 12
		},
		"sky": {
			background: "#0D8FDB",
			foreground: "#fff",
			size: 12
		},
		"vine": {
			background: "#39DBAC",
			foreground: "#1E292C",
			size: 12
		},
		"lava": {
			background: "#F8591A",
			foreground: "#1C2846",
			size: 12
		}
	},
	stylesheet: ""
};
app.flags = {
	dimensions: {
		regex: /^(\d+)x(\d+)$/,
		output: function (val) {
			var exec = this.regex.exec(val);
			return {
				width: +exec[1],
				height: +exec[2]
			}
		}
	},
	fluid: {
		regex: /^([0-9%]+)x([0-9%]+)$/,
		output: function (val) {
			var exec = this.regex.exec(val);
			return {
				width: exec[1],
				height: exec[2]
			}
		}
	},
	colors: {
		regex: /#([0-9a-f]{3,})\:#([0-9a-f]{3,})/i,
		output: function (val) {
			var exec = this.regex.exec(val);
			return {
				size: settings.themes.gray.size,
				foreground: "#" + exec[2],
				background: "#" + exec[1]
			}
		}
	},
	text: {
		regex: /text\:(.*)/,
		output: function (val) {
			return this.regex.exec(val)[1];
		}
	},
	font: {
		regex: /font\:(.*)/,
		output: function (val) {
			return this.regex.exec(val)[1];
		}
	},
	auto: {
		regex: /^auto$/
	},
	textmode: {
		regex: /textmode\:(.*)/,
		output: function(val){
			return this.regex.exec(val)[1];
		}
	}
}

function text_size(width, height, template) {
	height = parseInt(height, 10);
	width = parseInt(width, 10);
	var bigSide = Math.max(height, width)
	var smallSide = Math.min(height, width)
	var scale = 1 / 12;
	var newHeight = Math.min(smallSide * 0.75, 0.75 * bigSide * scale);
	return {
		height: Math.round(Math.max(template.size, newHeight))
	}
}

var svg_el = (function(){
	//Prevent IE <9 from initializing SVG renderer
	if(!window.XMLSerializer) return;
	var serializer = new XMLSerializer();
	var svg_ns = "http://www.w3.org/2000/svg"
	var svg = document.createElementNS(svg_ns, "svg");
	//IE throws an exception if this is set and Chrome requires it to be set
	if(svg.webkitMatchesSelector){
		svg.setAttribute("xmlns", "http://www.w3.org/2000/svg")
	}
	var bg_el = document.createElementNS(svg_ns, "rect")
	var text_el = document.createElementNS(svg_ns, "text")
	var textnode_el = document.createTextNode(null)
	text_el.setAttribute("text-anchor", "middle")
	text_el.appendChild(textnode_el)
	svg.appendChild(bg_el)
	svg.appendChild(text_el)

	return function(props){
		svg.setAttribute("width",props.width);
		svg.setAttribute("height", props.height);
		bg_el.setAttribute("width", props.width);
		bg_el.setAttribute("height", props.height);
		bg_el.setAttribute("fill", props.template.background);
		text_el.setAttribute("x", props.width/2)
		text_el.setAttribute("y", props.height/2)
		textnode_el.nodeValue=props.text
		text_el.setAttribute("style", css_properties({
		"fill": props.template.foreground,
		"font-weight": "bold",
		"font-size": props.text_height+"px",
		"font-family":props.font,
		"dominant-baseline":"central"
		}))
		return serializer.serializeToString(svg)
	}
})()

function css_properties(props){
	var ret = [];
	for(p in props){
		if(props.hasOwnProperty(p)){
			ret.push(p+":"+props[p])
		}
	}
	return ret.join(";")
}

function draw_canvas(args) {
	var ctx = args.ctx,
		dimensions = args.dimensions,
		template = args.template,
		ratio = args.ratio,
		holder = args.holder,
		literal = holder.textmode == "literal",
		exact = holder.textmode == "exact";

	var ts = text_size(dimensions.width, dimensions.height, template);
	var text_height = ts.height;
	var width = dimensions.width * ratio,
		height = dimensions.height * ratio;
	var font = template.font ? template.font : "Arial,Helvetica,sans-serif";
	canvas.width = width;
	canvas.height = height;
	ctx.textAlign = "center";
	ctx.textBaseline = "middle";
	ctx.fillStyle = template.background;
	ctx.fillRect(0, 0, width, height);
	ctx.fillStyle = template.foreground;
	ctx.font = "bold " + text_height + "px " + font;
	var text = template.text ? template.text : (Math.floor(dimensions.width) + "x" + Math.floor(dimensions.height));
	if (literal) {
		var dimensions = holder.dimensions;
		text = dimensions.width + "x" + dimensions.height;
	}
	else if(exact && holder.exact_dimensions){
		var dimensions = holder.exact_dimensions;
		text = (Math.floor(dimensions.width) + "x" + Math.floor(dimensions.height));
	}
	var text_width = ctx.measureText(text).width;
	if (text_width / width >= 0.75) {
		text_height = Math.floor(text_height * 0.75 * (width / text_width));
	}
	//Resetting font size if necessary
	ctx.font = "bold " + (text_height * ratio) + "px " + font;
	ctx.fillText(text, (width / 2), (height / 2), width);
	return canvas.toDataURL("image/png");
}

function draw_svg(args){
	var dimensions = args.dimensions,
		template = args.template,
		holder = args.holder,
		literal = holder.textmode == "literal",
		exact = holder.textmode == "exact";

	var ts = text_size(dimensions.width, dimensions.height, template);
	var text_height = ts.height;
	var width = dimensions.width,
		height = dimensions.height;
		
	var font = template.font ? template.font : "Arial,Helvetica,sans-serif";
	var text = template.text ? template.text : (Math.floor(dimensions.width) + "x" + Math.floor(dimensions.height));
	
	if (literal) {
		var dimensions = holder.dimensions;
		text = dimensions.width + "x" + dimensions.height;
	}
	else if(exact && holder.exact_dimensions){
		var dimensions = holder.exact_dimensions;
		text = (Math.floor(dimensions.width) + "x" + Math.floor(dimensions.height));
	}
	var string = svg_el({
		text: text, 
		width:width, 
		height:height, 
		text_height:text_height, 
		font:font, 
		template:template
	})
	return "data:image/svg+xml;base64,"+btoa(string);
}

function draw(args) {
	if(instance_config.use_canvas && !instance_config.use_svg){
		return draw_canvas(args);
	}
	else{
		return draw_svg(args);
	}
}

function render(mode, el, holder, src) {
	var dimensions = holder.dimensions,
		theme = holder.theme,
		text = holder.text ? decodeURIComponent(holder.text) : holder.text;
	var dimensions_caption = dimensions.width + "x" + dimensions.height;
	theme = (text ? extend(theme, {
		text: text
	}) : theme);
	theme = (holder.font ? extend(theme, {
		font: holder.font
	}) : theme);
	el.setAttribute("data-src", src);
	holder.theme = theme;
	el.holder_data = holder;
	
	if (mode == "image") {
		el.setAttribute("alt", text ? text : theme.text ? theme.text + " [" + dimensions_caption + "]" : dimensions_caption);
		if (instance_config.use_fallback || !holder.auto) {
			el.style.width = dimensions.width + "px";
			el.style.height = dimensions.height + "px";
		}
		if (instance_config.use_fallback) {
			el.style.backgroundColor = theme.background;
		} else {
			el.setAttribute("src", draw({ctx: ctx, dimensions: dimensions, template: theme, ratio:ratio, holder: holder}));
			
			if(holder.textmode && holder.textmode == "exact"){
				resizable_images.push(el);
				resizable_update(el);
			}
			
		}
	} else if (mode == "background") {
		if (!instance_config.use_fallback) {
			el.style.backgroundImage = "url(" + draw({ctx:ctx, dimensions: dimensions, template: theme, ratio: ratio, holder: holder}) + ")";
			el.style.backgroundSize = dimensions.width + "px " + dimensions.height + "px";
		}
	} else if (mode == "fluid") {
		el.setAttribute("alt", text ? text : theme.text ? theme.text + " [" + dimensions_caption + "]" : dimensions_caption);
		if (dimensions.height.slice(-1) == "%") {
			el.style.height = dimensions.height
		} else if(holder.auto == null || !holder.auto){
			el.style.height = dimensions.height + "px"
		}
		if (dimensions.width.slice(-1) == "%") {
			el.style.width = dimensions.width
		} else if(holder.auto == null || !holder.auto){
			el.style.width = dimensions.width + "px"
		}
		if (el.style.display == "inline" || el.style.display === "" || el.style.display == "none") {
			el.style.display = "block";
		}
		
		set_initial_dimensions(el)
		
		if (instance_config.use_fallback) {
			el.style.backgroundColor = theme.background;
		} else {
			resizable_images.push(el);
			resizable_update(el);
		}
	}
}

function dimension_check(el, callback) {
	var dimensions = {
		height: el.clientHeight,
		width: el.clientWidth
	};
	if (!dimensions.height && !dimensions.width) {
		el.setAttribute("data-holder-invisible", true)
		callback.call(this, el)
	}
	else{
		el.removeAttribute("data-holder-invisible")
		return dimensions;
	}
}

function set_initial_dimensions(el){
	if(el.holder_data){
		var dimensions = dimension_check(el, app.invisible_error_fn( set_initial_dimensions))
		if(dimensions){
			var holder = el.holder_data;
			holder.initial_dimensions = dimensions;
			holder.fluid_data = {
				fluid_height: holder.dimensions.height.slice(-1) == "%",
				fluid_width: holder.dimensions.width.slice(-1) == "%",
				mode: null
			}
			if(holder.fluid_data.fluid_width && !holder.fluid_data.fluid_height){
				holder.fluid_data.mode = "width"
				holder.fluid_data.ratio = holder.initial_dimensions.width / parseFloat(holder.dimensions.height)
			}
			else if(!holder.fluid_data.fluid_width && holder.fluid_data.fluid_height){
				holder.fluid_data.mode = "height";
				holder.fluid_data.ratio = parseFloat(holder.dimensions.width) / holder.initial_dimensions.height
			}
		}
	}
}

function resizable_update(element) {
	var images;
	if (element.nodeType == null) {
		images = resizable_images;
	} else {
		images = [element]
	}
	for (var i in images) {
		if (!images.hasOwnProperty(i)) {
			continue;
		}
		var el = images[i]
		if (el.holder_data) {
			var holder = el.holder_data;
			var dimensions = dimension_check(el, app.invisible_error_fn( resizable_update))
			if(dimensions){
				if(holder.fluid){
					if(holder.auto){
						switch(holder.fluid_data.mode){
							case "width":
								dimensions.height = dimensions.width / holder.fluid_data.ratio;
							break;
							case "height":
								dimensions.width = dimensions.height * holder.fluid_data.ratio;
							break;
						}
					}
					el.setAttribute("src", draw({
						ctx: ctx,
						dimensions: dimensions,
						template: holder.theme,
						ratio: ratio,
						holder: holder
					}))
				}
				if(holder.textmode && holder.textmode == "exact"){
					holder.exact_dimensions = dimensions;
					el.setAttribute("src", draw({
						ctx: ctx,
						dimensions: holder.dimensions,
						template: holder.theme,
						ratio: ratio,
						holder: holder
					}))
				}
			}
		}
	}
}

function parse_flags(flags, options) {
	var ret = {
		theme: extend(settings.themes.gray, {})
	};
	var render = false;
	for (var fl = flags.length, j = 0; j < fl; j++) {
		var flag = flags[j];
		if (app.flags.dimensions.match(flag)) {
			render = true;
			ret.dimensions = app.flags.dimensions.output(flag);
		} else if (app.flags.fluid.match(flag)) {
			render = true;
			ret.dimensions = app.flags.fluid.output(flag);
			ret.fluid = true;
		} else if (app.flags.textmode.match(flag)) {
			ret.textmode = app.flags.textmode.output(flag)
		} else if (app.flags.colors.match(flag)) {
			ret.theme = app.flags.colors.output(flag);
		} else if (options.themes[flag]) {
			//If a theme is specified, it will override custom colors
			if(options.themes.hasOwnProperty(flag)){
				ret.theme = extend(options.themes[flag], {});
			}
		} else if (app.flags.font.match(flag)) {
			ret.font = app.flags.font.output(flag);
		} else if (app.flags.auto.match(flag)) {
			ret.auto = true;
		} else if (app.flags.text.match(flag)) {
			ret.text = app.flags.text.output(flag);
		}
	}
	return render ? ret : false;
}

for (var flag in app.flags) {
	if (!app.flags.hasOwnProperty(flag)) continue;
	app.flags[flag].match = function (val) {
		return val.match(this.regex)
	}
}

app.invisible_error_fn = function(fn){
	return function(el){
		if(el.hasAttribute("data-holder-invisible")){
			throw new Error("Holder: invisible placeholder")
		}
	}
}

app.add_theme = function (name, theme) {
	name != null && theme != null && (settings.themes[name] = theme);
	return app;
};

app.add_image = function (src, el) {
	var node = selector(el);
	if (node.length) {
		for (var i = 0, l = node.length; i < l; i++) {
			var img = document.createElement("img")
			img.setAttribute("data-src", src);
			node[i].appendChild(img);
		}
	}
	return app;
};

app.run = function (o) {
	instance_config = extend({}, system_config)
	preempted = true;

	var options = extend(settings, o),
		images = [],
		imageNodes = [],
		bgnodes = [];
		
	if(options.use_canvas != null && options.use_canvas){
		instance_config.use_canvas = true;
		instance_config.use_svg = false;
	}
		
	if (typeof (options.images) == "string") {
		imageNodes = selector(options.images);
	} else if (window.NodeList && options.images instanceof window.NodeList) {
		imageNodes = options.images;
	} else if (window.Node && options.images instanceof window.Node) {
		imageNodes = [options.images];
	} else if(window.HTMLCollection && options.images instanceof window.HTMLCollection){
		imageNodes = options.images
	}

	if (typeof (options.bgnodes) == "string") {
		bgnodes = selector(options.bgnodes);
	} else if (window.NodeList && options.elements instanceof window.NodeList) {
		bgnodes = options.bgnodes;
	} else if (window.Node && options.bgnodes instanceof window.Node) {
		bgnodes = [options.bgnodes];
	}
	for (i = 0, l = imageNodes.length; i < l; i++) images.push(imageNodes[i]);
	var holdercss = document.getElementById("holderjs-style");
	if (!holdercss) {
		holdercss = document.createElement("style");
		holdercss.setAttribute("id", "holderjs-style");
		holdercss.type = "text/css";
		document.getElementsByTagName("head")[0].appendChild(holdercss);
	}
	if (!options.nocss) {
		if (holdercss.styleSheet) {
			holdercss.styleSheet.cssText += options.stylesheet;
		} else {
			holdercss.appendChild(document.createTextNode(options.stylesheet));
		}
	}
	var cssregex = new RegExp(options.domain + "\/(.*?)\"?\\)");
	for (var l = bgnodes.length, i = 0; i < l; i++) {
		var src = window.getComputedStyle(bgnodes[i], null)
			.getPropertyValue("background-image");
		var flags = src.match(cssregex);
		var bgsrc = bgnodes[i].getAttribute("data-background-src");
		if (flags) {
			var holder = parse_flags(flags[1].split("/"), options);
			if (holder) {
				render("background", bgnodes[i], holder, src);
			}
		} else if (bgsrc != null) {
			var holder = parse_flags(bgsrc.substr(bgsrc.lastIndexOf(options.domain) + options.domain.length + 1)
				.split("/"), options);
			if (holder) {
				render("background", bgnodes[i], holder, src);
			}
		}
	}
	for (l = images.length, i = 0; i < l; i++) {
		var attr_data_src, attr_src;
		attr_src = attr_data_src = src = null;
		try {
			attr_src = images[i].getAttribute("src");
			attr_datasrc = images[i].getAttribute("data-src");
		} catch (e) {}
		if (attr_datasrc == null && !! attr_src && attr_src.indexOf(options.domain) >= 0) {
			src = attr_src;
		} else if ( !! attr_datasrc && attr_datasrc.indexOf(options.domain) >= 0) {
			src = attr_datasrc;
		}
		if (src) {
			var holder = parse_flags(src.substr(src.lastIndexOf(options.domain) + options.domain.length + 1).split("/"), options);
			if (holder) {
				if (holder.fluid) {
					render("fluid", images[i], holder, src)
				} else {
					render("image", images[i], holder, src);
				}
			}
		}
	}
	return app;
};

contentLoaded(win, function () {
	if (window.addEventListener) {
		window.addEventListener("resize", resizable_update, false);
		window.addEventListener("orientationchange", resizable_update, false);
	} else {
		window.attachEvent("onresize", resizable_update)
	}
	preempted || app.run({});
});
if (typeof define === "function" && define.amd) {
	define([], function () {
		return app;
	});
}

//github.com/davidchambers/Base64.js
(function(){function t(t){this.message=t}var e="undefined"!=typeof exports?exports:this,r="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";t.prototype=Error(),t.prototype.name="InvalidCharacterError",e.btoa||(e.btoa=function(e){for(var o,n,a=0,i=r,c="";e.charAt(0|a)||(i="=",a%1);c+=i.charAt(63&o>>8-8*(a%1))){if(n=e.charCodeAt(a+=.75),n>255)throw new t("'btoa' failed");o=o<<8|n}return c}),e.atob||(e.atob=function(e){if(e=e.replace(/=+$/,""),1==e.length%4)throw new t("'atob' failed");for(var o,n,a=0,i=0,c="";n=e.charAt(i++);~n&&(o=a%4?64*o+n:n,a++%4)?c+=String.fromCharCode(255&o>>(6&-2*a)):0)n=r.indexOf(n);return c})})();

//getElementsByClassName polyfill
document.getElementsByClassName||(document.getElementsByClassName=function(e){var t=document,n,r,i,s=[];if(t.querySelectorAll)return t.querySelectorAll("."+e);if(t.evaluate){r=".//*[contains(concat(' ', @class, ' '), ' "+e+" ')]",n=t.evaluate(r,t,null,0,null);while(i=n.iterateNext())s.push(i)}else{n=t.getElementsByTagName("*"),r=new RegExp("(^|\\s)"+e+"(\\s|$)");for(i=0;i<n.length;i++)r.test(n[i].className)&&s.push(n[i])}return s})

//getComputedStyle polyfill
window.getComputedStyle||(window.getComputedStyle=function(e){return this.el=e,this.getPropertyValue=function(t){var n=/(\-([a-z]){1})/g;return t=="float"&&(t="styleFloat"),n.test(t)&&(t=t.replace(n,function(){return arguments[2].toUpperCase()})),e.currentStyle[t]?e.currentStyle[t]:null},this})

//http://javascript.nwbox.com/ContentLoaded by Diego Perini with modifications
function contentLoaded(n,t){var l="complete",s="readystatechange",u=!1,h=u,c=!0,i=n.document,a=i.documentElement,e=i.addEventListener?"addEventListener":"attachEvent",v=i.addEventListener?"removeEventListener":"detachEvent",f=i.addEventListener?"":"on",r=function(e){(e.type!=s||i.readyState==l)&&((e.type=="load"?n:i)[v](f+e.type,r,u),!h&&(h=!0)&&t.call(n,null))},o=function(){try{a.doScroll("left")}catch(n){setTimeout(o,50);return}r("poll")};if(i.readyState==l)t.call(n,"lazy");else{if(i.createEventObject&&a.doScroll){try{c=!n.frameElement}catch(y){}c&&o()}i[e](f+"DOMContentLoaded",r,u),i[e](f+s,r,u),n[e](f+"load",r,u)}}

//https://gist.github.com/991057 by Jed Schmidt with modifications
function selector(a,b){var a=a.match(/^(\W)?(.*)/),b=b||document,c=b["getElement"+(a[1]?"#"==a[1]?"ById":"sByClassName":"sByTagName")],d=c.call(b,a[2]),e=[];return null!==d&&(e=d.length||0===d.length?d:[d]),e}

//shallow object property extend
function extend(a,b){
	var c={};
	for(var i in a){
		if(a.hasOwnProperty(i)){
			c[i]=a[i];
		}
	}
	for(var i in b){
		if(b.hasOwnProperty(i)){
			c[i]=b[i];
		}
	}
	return c
}

//hasOwnProperty polyfill
if (!Object.prototype.hasOwnProperty)
    /*jshint -W001, -W103 */
    Object.prototype.hasOwnProperty = function(prop) {
		var proto = this.__proto__ || this.constructor.prototype;
		return (prop in this) && (!(prop in proto) || proto[prop] !== this[prop]);
	}
    /*jshint +W001, +W103 */

})(Holder, window);

/*! Copyright (c) 2011 Piotr Rochala (http://rocha.la)
 * Dual licensed under the MIT (http://www.opensource.org/licenses/mit-license.php)
 * and GPL (http://www.opensource.org/licenses/gpl-license.php) licenses.
 *
 * Version: 1.3.0
 *
 */
(function($) {

  jQuery.fn.extend({
    slimScroll: function(options) {

      var defaults = {

        // width in pixels of the visible scroll area
        width : 'auto',

        // height in pixels of the visible scroll area
        height : '250px',

        // width in pixels of the scrollbar and rail
        size : '7px',

        // scrollbar color, accepts any hex/color value
        color: '#000',

        // scrollbar position - left/right
        position : 'right',

        // distance in pixels between the side edge and the scrollbar
        distance : '1px',

        // default scroll position on load - top / bottom / $('selector')
        start : 'top',

        // sets scrollbar opacity
        opacity : .4,

        // enables always-on mode for the scrollbar
        alwaysVisible : false,

        // check if we should hide the scrollbar when user is hovering over
        disableFadeOut : false,

        // sets visibility of the rail
        railVisible : false,

        // sets rail color
        railColor : '#333',

        // sets rail opacity
        railOpacity : .2,

        // whether  we should use jQuery UI Draggable to enable bar dragging
        railDraggable : true,

        // defautlt CSS class of the slimscroll rail
        railClass : 'slimScrollRail',

        // defautlt CSS class of the slimscroll bar
        barClass : 'slimScrollBar',

        // defautlt CSS class of the slimscroll wrapper
        wrapperClass : 'slimScrollDiv',

        // check if mousewheel should scroll the window if we reach top/bottom
        allowPageScroll : false,

        // scroll amount applied to each mouse wheel step
        wheelStep : 20,

        // scroll amount applied when user is using gestures
        touchScrollStep : 200,

        // sets border radius
        borderRadius: '7px',

        // sets border radius of the rail
        railBorderRadius : '7px'
      };

      var o = $.extend(defaults, options);

      // do it for every element that matches selector
      this.each(function(){

      var isOverPanel, isOverBar, isDragg, queueHide, touchDif,
        barHeight, percentScroll, lastScroll,
        divS = '<div></div>',
        minBarHeight = 30,
        releaseScroll = false;

        // used in event handlers and for better minification
        var me = $(this);

        // ensure we are not binding it again
        if (me.parent().hasClass(o.wrapperClass))
        {
            // start from last bar position
            var offset = me.scrollTop();

            // find bar and rail
            bar = me.parent().find('.' + o.barClass);
            rail = me.parent().find('.' + o.railClass);

            getBarHeight();

            // check if we should scroll existing instance
            if ($.isPlainObject(options))
            {
              // Pass height: auto to an existing slimscroll object to force a resize after contents have changed
              if ( 'height' in options && options.height == 'auto' ) {
                me.parent().css('height', 'auto');
                me.css('height', 'auto');
                var height = me.parent().parent().height();
                me.parent().css('height', height);
                me.css('height', height);
              }

              if ('scrollTo' in options)
              {
                // jump to a static point
                offset = parseInt(o.scrollTo);
              }
              else if ('scrollBy' in options)
              {
                // jump by value pixels
                offset += parseInt(o.scrollBy);
              }
              else if ('destroy' in options)
              {
                // remove slimscroll elements
                bar.remove();
                rail.remove();
                me.unwrap();
                return;
              }

              // scroll content by the given offset
              scrollContent(offset, false, true);
            }

            return;
        }

        // optionally set height to the parent's height
        o.height = (o.height == 'auto') ? me.parent().height() : o.height;

        // wrap content
        var wrapper = $(divS)
          .addClass(o.wrapperClass)
          .css({
            position: 'relative',
            overflow: 'hidden',
            width: o.width,
            height: o.height
          });

        // update style for the div
        me.css({
          overflow: 'hidden',
          width: o.width,
          height: o.height
        });

        // create scrollbar rail
        var rail = $(divS)
          .addClass(o.railClass)
          .css({
            width: o.size,
            height: '100%',
            position: 'absolute',
            top: 0,
            display: (o.alwaysVisible && o.railVisible) ? 'block' : 'none',
            'border-radius': o.railBorderRadius,
            background: o.railColor,
            opacity: o.railOpacity,
            zIndex: 90
          });

        // create scrollbar
        var bar = $(divS)
          .addClass(o.barClass)
          .css({
            background: o.color,
            width: o.size,
            position: 'absolute',
            top: 0,
            opacity: o.opacity,
            display: o.alwaysVisible ? 'block' : 'none',
            'border-radius' : o.borderRadius,
            BorderRadius: o.borderRadius,
            MozBorderRadius: o.borderRadius,
            WebkitBorderRadius: o.borderRadius,
            zIndex: 99
          });

        // set position
        var posCss = (o.position == 'right') ? { right: o.distance } : { left: o.distance };
        rail.css(posCss);
        bar.css(posCss);

        // wrap it
        me.wrap(wrapper);

        // append to parent div
        me.parent().append(bar);
        me.parent().append(rail);

        // make it draggable and no longer dependent on the jqueryUI
        if (o.railDraggable){
          bar.bind("mousedown", function(e) {
            var $doc = $(document);
            isDragg = true;
            t = parseFloat(bar.css('top'));
            pageY = e.pageY;

            $doc.bind("mousemove.slimscroll", function(e){
              currTop = t + e.pageY - pageY;
              bar.css('top', currTop);
              scrollContent(0, bar.position().top, false);// scroll content
            });

            $doc.bind("mouseup.slimscroll", function(e) {
              isDragg = false;hideBar();
              $doc.unbind('.slimscroll');
            });
            return false;
          }).bind("selectstart.slimscroll", function(e){
            e.stopPropagation();
            e.preventDefault();
            return false;
          });
        }

        // on rail over
        rail.hover(function(){
          showBar();
        }, function(){
          hideBar();
        });

        // on bar over
        bar.hover(function(){
          isOverBar = true;
        }, function(){
          isOverBar = false;
        });

        // show on parent mouseover
        me.hover(function(){
          isOverPanel = true;
          showBar();
          hideBar();
        }, function(){
          isOverPanel = false;
          hideBar();
        });

        // support for mobile
        me.bind('touchstart', function(e,b){
          if (e.originalEvent.touches.length)
          {
            // record where touch started
            touchDif = e.originalEvent.touches[0].pageY;
          }
        });

        me.bind('touchmove', function(e){
          // prevent scrolling the page if necessary
          if(!releaseScroll)
          {
  		      e.originalEvent.preventDefault();
		      }
          if (e.originalEvent.touches.length)
          {
            // see how far user swiped
            var diff = (touchDif - e.originalEvent.touches[0].pageY) / o.touchScrollStep;
            // scroll content
            scrollContent(diff, true);
            touchDif = e.originalEvent.touches[0].pageY;
          }
        });

        // set up initial height
        getBarHeight();

        // check start position
        if (o.start === 'bottom')
        {
          // scroll content to bottom
          bar.css({ top: me.outerHeight() - bar.outerHeight() });
          scrollContent(0, true);
        }
        else if (o.start !== 'top')
        {
          // assume jQuery selector
          scrollContent($(o.start).position().top, null, true);

          // make sure bar stays hidden
          if (!o.alwaysVisible) { bar.hide(); }
        }

        // attach scroll events
        attachWheel();

        function _onWheel(e)
        {
          // use mouse wheel only when mouse is over
          if (!isOverPanel) { return; }

          var e = e || window.event;

          var delta = 0;
          if (e.wheelDelta) { delta = -e.wheelDelta/120; }
          if (e.detail) { delta = e.detail / 3; }

          var target = e.target || e.srcTarget || e.srcElement;
          if ($(target).closest('.' + o.wrapperClass).is(me.parent())) {
            // scroll content
            scrollContent(delta, true);
          }

          // stop window scroll
          if (e.preventDefault && !releaseScroll) { e.preventDefault(); }
          if (!releaseScroll) { e.returnValue = false; }
        }

        function scrollContent(y, isWheel, isJump)
        {
          releaseScroll = false;
          var delta = y;
          var maxTop = me.outerHeight() - bar.outerHeight();

          if (isWheel)
          {
            // move bar with mouse wheel
            delta = parseInt(bar.css('top')) + y * parseInt(o.wheelStep) / 100 * bar.outerHeight();

            // move bar, make sure it doesn't go out
            delta = Math.min(Math.max(delta, 0), maxTop);

            // if scrolling down, make sure a fractional change to the
            // scroll position isn't rounded away when the scrollbar's CSS is set
            // this flooring of delta would happened automatically when
            // bar.css is set below, but we floor here for clarity
            delta = (y > 0) ? Math.ceil(delta) : Math.floor(delta);

            // scroll the scrollbar
            bar.css({ top: delta + 'px' });
          }

          // calculate actual scroll amount
          percentScroll = parseInt(bar.css('top')) / (me.outerHeight() - bar.outerHeight());
          delta = percentScroll * (me[0].scrollHeight - me.outerHeight());

          if (isJump)
          {
            delta = y;
            var offsetTop = delta / me[0].scrollHeight * me.outerHeight();
            offsetTop = Math.min(Math.max(offsetTop, 0), maxTop);
            bar.css({ top: offsetTop + 'px' });
          }

          // scroll content
          me.scrollTop(delta);

          // fire scrolling event
          me.trigger('slimscrolling', ~~delta);

          // ensure bar is visible
          showBar();

          // trigger hide when scroll is stopped
          hideBar();
        }

        function attachWheel()
        {
          if (window.addEventListener)
          {
            this.addEventListener('DOMMouseScroll', _onWheel, false );
            this.addEventListener('mousewheel', _onWheel, false );
            this.addEventListener('MozMousePixelScroll', _onWheel, false );
          }
          else
          {
            document.attachEvent("onmousewheel", _onWheel)
          }
        }

        function getBarHeight()
        {
          // calculate scrollbar height and make sure it is not too small
          barHeight = Math.max((me.outerHeight() / me[0].scrollHeight) * me.outerHeight(), minBarHeight);
          bar.css({ height: barHeight + 'px' });

          // hide scrollbar if content is not long enough
          var display = barHeight == me.outerHeight() ? 'none' : 'block';
          bar.css({ display: display });
        }

        function showBar()
        {
          // recalculate bar height
          getBarHeight();
          clearTimeout(queueHide);

          // when bar reached top or bottom
          if (percentScroll == ~~percentScroll)
          {
            //release wheel
            releaseScroll = o.allowPageScroll;

            // publish approporiate event
            if (lastScroll != percentScroll)
            {
                var msg = (~~percentScroll == 0) ? 'top' : 'bottom';
                me.trigger('slimscroll', msg);
            }
          }
          else
          {
            releaseScroll = false;
          }
          lastScroll = percentScroll;

          // show only when required
          if(barHeight >= me.outerHeight()) {
            //allow window scroll
            releaseScroll = true;
            return;
          }
          bar.stop(true,true).fadeIn('fast');
          if (o.railVisible) { rail.stop(true,true).fadeIn('fast'); }
        }

        function hideBar()
        {
          // only hide when options allow it
          if (!o.alwaysVisible)
          {
            queueHide = setTimeout(function(){
              if (!(o.disableFadeOut && isOverPanel) && !isOverBar && !isDragg)
              {
                bar.fadeOut('slow');
                rail.fadeOut('slow');
              }
            }, 1000);
          }
        }

      });

      // maintain chainability
      return this;
    }
  });

  jQuery.fn.extend({
    slimscroll: jQuery.fn.slimScroll
  });

})(jQuery);



/*
* jQuery UI Touch Punch 0.2.2
*
* Copyright 2011, Dave Furfero
* Dual licensed under the MIT or GPL Version 2 licenses.
*
* Depends:
* jquery.ui.widget.js
* jquery.ui.mouse.js
*/
(function(b){b.support.touch="ontouchend" in document;if(!b.support.touch){return;}var c=b.ui.mouse.prototype,e=c._mouseInit,a;function d(g,h){if(g.originalEvent.touches.length>1){return;}g.preventDefault();var i=g.originalEvent.changedTouches[0],f=document.createEvent("MouseEvents");f.initMouseEvent(h,true,true,window,1,i.screenX,i.screenY,i.clientX,i.clientY,false,false,false,false,0,null);g.target.dispatchEvent(f);}c._touchStart=function(g){var f=this;if(a||!f._mouseCapture(g.originalEvent.changedTouches[0])){return;}a=true;f._touchMoved=false;d(g,"mouseover");d(g,"mousemove");d(g,"mousedown");};c._touchMove=function(f){if(!a){return;}this._touchMoved=true;d(f,"mousemove");};c._touchEnd=function(f){if(!a){return;}d(f,"mouseup");d(f,"mouseout");if(!this._touchMoved){d(f,"click");}a=false;};c._mouseInit=function(){var f=this;f.element.bind("touchstart",b.proxy(f,"_touchStart")).bind("touchmove",b.proxy(f,"_touchMove")).bind("touchend",b.proxy(f,"_touchEnd"));e.call(f);};})(jQuery);

  /*
 * ----------------------------- JSTORAGE -------------------------------------
 * Simple local storage wrapper to save data on the browser side, supporting
 * all major browsers - IE6+, Firefox2+, Safari4+, Chrome4+ and Opera 10.5+
 *
 * Author: Andris Reinman, andris.reinman@gmail.com
 * Project homepage: www.jstorage.info
 *
 * Licensed under Unlicense:
 *
 * This is free and unencumbered software released into the public domain.
 * 
 * Anyone is free to copy, modify, publish, use, compile, sell, or
 * distribute this software, either in source code form or as a compiled
 * binary, for any purpose, commercial or non-commercial, and by any
 * means.
 * 
 * In jurisdictions that recognize copyright laws, the author or authors
 * of this software dedicate any and all copyright interest in the
 * software to the public domain. We make this dedication for the benefit
 * of the public at large and to the detriment of our heirs and
 * successors. We intend this dedication to be an overt act of
 * relinquishment in perpetuity of all present and future rights to this
 * software under copyright law.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 * 
 * For more information, please refer to <http://unlicense.org/>
 */
 (function(){
    var
        /* jStorage version */
        JSTORAGE_VERSION = "0.4.8",

        /* detect a dollar object or create one if not found */
        $ = window.jQuery || window.$ || (window.$ = {}),

        /* check for a JSON handling support */
        JSON = {
            parse:
                window.JSON && (window.JSON.parse || window.JSON.decode) ||
                String.prototype.evalJSON && function(str){return String(str).evalJSON();} ||
                $.parseJSON ||
                $.evalJSON,
            stringify:
                Object.toJSON ||
                window.JSON && (window.JSON.stringify || window.JSON.encode) ||
                $.toJSON
        };

    // Break if no JSON support was found
    if(!("parse" in JSON) || !("stringify" in JSON)){
        throw new Error("No JSON support found, include //cdnjs.cloudflare.com/ajax/libs/json2/20110223/json2.js to page");
    }

    var
        /* This is the object, that holds the cached values */
        _storage = {__jstorage_meta:{CRC32:{}}},

        /* Actual browser storage (localStorage or globalStorage["domain"]) */
        _storage_service = {jStorage:"{}"},

        /* DOM element for older IE versions, holds userData behavior */
        _storage_elm = null,

        /* How much space does the storage take */
        _storage_size = 0,

        /* which backend is currently used */
        _backend = false,

        /* onchange observers */
        _observers = {},

        /* timeout to wait after onchange event */
        _observer_timeout = false,

        /* last update time */
        _observer_update = 0,

        /* pubsub observers */
        _pubsub_observers = {},

        /* skip published items older than current timestamp */
        _pubsub_last = +new Date(),

        /* Next check for TTL */
        _ttl_timeout,

        /**
         * XML encoding and decoding as XML nodes can't be JSON'ized
         * XML nodes are encoded and decoded if the node is the value to be saved
         * but not if it's as a property of another object
         * Eg. -
         *   $.jStorage.set("key", xmlNode);        // IS OK
         *   $.jStorage.set("key", {xml: xmlNode}); // NOT OK
         */
        _XMLService = {

            /**
             * Validates a XML node to be XML
             * based on jQuery.isXML function
             */
            isXML: function(elm){
                var documentElement = (elm ? elm.ownerDocument || elm : 0).documentElement;
                return documentElement ? documentElement.nodeName !== "HTML" : false;
            },

            /**
             * Encodes a XML node to string
             * based on http://www.mercurytide.co.uk/news/article/issues-when-working-ajax/
             */
            encode: function(xmlNode) {
                if(!this.isXML(xmlNode)){
                    return false;
                }
                try{ // Mozilla, Webkit, Opera
                    return new XMLSerializer().serializeToString(xmlNode);
                }catch(E1) {
                    try {  // IE
                        return xmlNode.xml;
                    }catch(E2){}
                }
                return false;
            },

            /**
             * Decodes a XML node from string
             * loosely based on http://outwestmedia.com/jquery-plugins/xmldom/
             */
            decode: function(xmlString){
                var dom_parser = ("DOMParser" in window && (new DOMParser()).parseFromString) ||
                        (window.ActiveXObject && function(_xmlString) {
                    var xml_doc = new ActiveXObject("Microsoft.XMLDOM");
                    xml_doc.async = "false";
                    xml_doc.loadXML(_xmlString);
                    return xml_doc;
                }),
                resultXML;
                if(!dom_parser){
                    return false;
                }
                resultXML = dom_parser.call("DOMParser" in window && (new DOMParser()) || window, xmlString, "text/xml");
                return this.isXML(resultXML)?resultXML:false;
            }
        };


    ////////////////////////// PRIVATE METHODS ////////////////////////

    /**
     * Initialization function. Detects if the browser supports DOM Storage
     * or userData behavior and behaves accordingly.
     */
    function _init(){
        /* Check if browser supports localStorage */
        var localStorageReallyWorks = false;
        if("localStorage" in window){
            try {
                window.localStorage.setItem("_tmptest", "tmpval");
                localStorageReallyWorks = true;
                window.localStorage.removeItem("_tmptest");
            } catch(BogusQuotaExceededErrorOnIos5) {
                // Thanks be to iOS5 Private Browsing mode which throws
                // QUOTA_EXCEEDED_ERRROR DOM Exception 22.
            }
        }

        if(localStorageReallyWorks){
            try {
                if(window.localStorage) {
                    _storage_service = window.localStorage;
                    _backend = "localStorage";
                    _observer_update = _storage_service.jStorage_update;
                }
            } catch(E3) {/* Firefox fails when touching localStorage and cookies are disabled */}
        }
        /* Check if browser supports globalStorage */
        else if("globalStorage" in window){
            try {
                if(window.globalStorage) {
                    if(window.location.hostname == "localhost"){
                        _storage_service = window.globalStorage["localhost.localdomain"];
                    }
                    else{
                        _storage_service = window.globalStorage[window.location.hostname];
                    }
                    _backend = "globalStorage";
                    _observer_update = _storage_service.jStorage_update;
                }
            } catch(E4) {/* Firefox fails when touching localStorage and cookies are disabled */}
        }
        /* Check if browser supports userData behavior */
        else {
            _storage_elm = document.createElement("link");
            if(_storage_elm.addBehavior){

                /* Use a DOM element to act as userData storage */
                _storage_elm.style.behavior = "url(#default#userData)";

                /* userData element needs to be inserted into the DOM! */
                document.getElementsByTagName("head")[0].appendChild(_storage_elm);

                try{
                    _storage_elm.load("jStorage");
                }catch(E){
                    // try to reset cache
                    _storage_elm.setAttribute("jStorage", "{}");
                    _storage_elm.save("jStorage");
                    _storage_elm.load("jStorage");
                }

                var data = "{}";
                try{
                    data = _storage_elm.getAttribute("jStorage");
                }catch(E5){}

                try{
                    _observer_update = _storage_elm.getAttribute("jStorage_update");
                }catch(E6){}

                _storage_service.jStorage = data;
                _backend = "userDataBehavior";
            }else{
                _storage_elm = null;
                return;
            }
        }

        // Load data from storage
        _load_storage();

        // remove dead keys
        _handleTTL();

        // start listening for changes
        _setupObserver();

        // initialize publish-subscribe service
        _handlePubSub();

        // handle cached navigation
        if("addEventListener" in window){
            window.addEventListener("pageshow", function(event){
                if(event.persisted){
                    _storageObserver();
                }
            }, false);
        }
    }

    /**
     * Reload data from storage when needed
     */
    function _reloadData(){
        var data = "{}";

        if(_backend == "userDataBehavior"){
            _storage_elm.load("jStorage");

            try{
                data = _storage_elm.getAttribute("jStorage");
            }catch(E5){}

            try{
                _observer_update = _storage_elm.getAttribute("jStorage_update");
            }catch(E6){}

            _storage_service.jStorage = data;
        }

        _load_storage();

        // remove dead keys
        _handleTTL();

        _handlePubSub();
    }

    /**
     * Sets up a storage change observer
     */
    function _setupObserver(){
        if(_backend == "localStorage" || _backend == "globalStorage"){
            if("addEventListener" in window){
                window.addEventListener("storage", _storageObserver, false);
            }else{
                document.attachEvent("onstorage", _storageObserver);
            }
        }else if(_backend == "userDataBehavior"){
            setInterval(_storageObserver, 1000);
        }
    }

    /**
     * Fired on any kind of data change, needs to check if anything has
     * really been changed
     */
    function _storageObserver(){
        var updateTime;
        // cumulate change notifications with timeout
        clearTimeout(_observer_timeout);
        _observer_timeout = setTimeout(function(){

            if(_backend == "localStorage" || _backend == "globalStorage"){
                updateTime = _storage_service.jStorage_update;
            }else if(_backend == "userDataBehavior"){
                _storage_elm.load("jStorage");
                try{
                    updateTime = _storage_elm.getAttribute("jStorage_update");
                }catch(E5){}
            }

            if(updateTime && updateTime != _observer_update){
                _observer_update = updateTime;
                _checkUpdatedKeys();
            }

        }, 25);
    }

    /**
     * Reloads the data and checks if any keys are changed
     */
    function _checkUpdatedKeys(){
        var oldCrc32List = JSON.parse(JSON.stringify(_storage.__jstorage_meta.CRC32)),
            newCrc32List;

        _reloadData();
        newCrc32List = JSON.parse(JSON.stringify(_storage.__jstorage_meta.CRC32));

        var key,
            updated = [],
            removed = [];

        for(key in oldCrc32List){
            if(oldCrc32List.hasOwnProperty(key)){
                if(!newCrc32List[key]){
                    removed.push(key);
                    continue;
                }
                if(oldCrc32List[key] != newCrc32List[key] && String(oldCrc32List[key]).substr(0,2) == "2."){
                    updated.push(key);
                }
            }
        }

        for(key in newCrc32List){
            if(newCrc32List.hasOwnProperty(key)){
                if(!oldCrc32List[key]){
                    updated.push(key);
                }
            }
        }

        _fireObservers(updated, "updated");
        _fireObservers(removed, "deleted");
    }

    /**
     * Fires observers for updated keys
     *
     * @param {Array|String} keys Array of key names or a key
     * @param {String} action What happened with the value (updated, deleted, flushed)
     */
    function _fireObservers(keys, action){
        keys = [].concat(keys || []);
        if(action == "flushed"){
            keys = [];
            for(var key in _observers){
                if(_observers.hasOwnProperty(key)){
                    keys.push(key);
                }
            }
            action = "deleted";
        }
        for(var i=0, len = keys.length; i<len; i++){
            if(_observers[keys[i]]){
                for(var j=0, jlen = _observers[keys[i]].length; j<jlen; j++){
                    _observers[keys[i]][j](keys[i], action);
                }
            }
            if(_observers["*"]){
                for(var j=0, jlen = _observers["*"].length; j<jlen; j++){
                    _observers["*"][j](keys[i], action);
                }
            }
        }
    }

    /**
     * Publishes key change to listeners
     */
    function _publishChange(){
        var updateTime = (+new Date()).toString();

        if(_backend == "localStorage" || _backend == "globalStorage"){
            try {
                _storage_service.jStorage_update = updateTime;
            } catch (E8) {
                // safari private mode has been enabled after the jStorage initialization
                _backend = false;
            }
        }else if(_backend == "userDataBehavior"){
            _storage_elm.setAttribute("jStorage_update", updateTime);
            _storage_elm.save("jStorage");
        }

        _storageObserver();
    }

    /**
     * Loads the data from the storage based on the supported mechanism
     */
    function _load_storage(){
        /* if jStorage string is retrieved, then decode it */
        if(_storage_service.jStorage){
            try{
                _storage = JSON.parse(String(_storage_service.jStorage));
            }catch(E6){_storage_service.jStorage = "{}";}
        }else{
            _storage_service.jStorage = "{}";
        }
        _storage_size = _storage_service.jStorage?String(_storage_service.jStorage).length:0;

        if(!_storage.__jstorage_meta){
            _storage.__jstorage_meta = {};
        }
        if(!_storage.__jstorage_meta.CRC32){
            _storage.__jstorage_meta.CRC32 = {};
        }
    }

    /**
     * This functions provides the "save" mechanism to store the jStorage object
     */
    function _save(){
        _dropOldEvents(); // remove expired events
        try{
            _storage_service.jStorage = JSON.stringify(_storage);
            // If userData is used as the storage engine, additional
            if(_storage_elm) {
                _storage_elm.setAttribute("jStorage",_storage_service.jStorage);
                _storage_elm.save("jStorage");
            }
            _storage_size = _storage_service.jStorage?String(_storage_service.jStorage).length:0;
        }catch(E7){/* probably cache is full, nothing is saved this way*/}
    }

    /**
     * Function checks if a key is set and is string or numberic
     *
     * @param {String} key Key name
     */
    function _checkKey(key){
        if(typeof key != "string" && typeof key != "number"){
            throw new TypeError("Key name must be string or numeric");
        }
        if(key == "__jstorage_meta"){
            throw new TypeError("Reserved key name");
        }
        return true;
    }

    /**
     * Removes expired keys
     */
    function _handleTTL(){
        var curtime, i, TTL, CRC32, nextExpire = Infinity, changed = false, deleted = [];

        clearTimeout(_ttl_timeout);

        if(!_storage.__jstorage_meta || typeof _storage.__jstorage_meta.TTL != "object"){
            // nothing to do here
            return;
        }

        curtime = +new Date();
        TTL = _storage.__jstorage_meta.TTL;

        CRC32 = _storage.__jstorage_meta.CRC32;
        for(i in TTL){
            if(TTL.hasOwnProperty(i)){
                if(TTL[i] <= curtime){
                    delete TTL[i];
                    delete CRC32[i];
                    delete _storage[i];
                    changed = true;
                    deleted.push(i);
                }else if(TTL[i] < nextExpire){
                    nextExpire = TTL[i];
                }
            }
        }

        // set next check
        if(nextExpire != Infinity){
            _ttl_timeout = setTimeout(_handleTTL, nextExpire - curtime);
        }

        // save changes
        if(changed){
            _save();
            _publishChange();
            _fireObservers(deleted, "deleted");
        }
    }

    /**
     * Checks if there's any events on hold to be fired to listeners
     */
    function _handlePubSub(){
        var i, len;
        if(!_storage.__jstorage_meta.PubSub){
            return;
        }
        var pubelm,
            _pubsubCurrent = _pubsub_last;

        for(i=len=_storage.__jstorage_meta.PubSub.length-1; i>=0; i--){
            pubelm = _storage.__jstorage_meta.PubSub[i];
            if(pubelm[0] > _pubsub_last){
                _pubsubCurrent = pubelm[0];
                _fireSubscribers(pubelm[1], pubelm[2]);
            }
        }

        _pubsub_last = _pubsubCurrent;
    }

    /**
     * Fires all subscriber listeners for a pubsub channel
     *
     * @param {String} channel Channel name
     * @param {Mixed} payload Payload data to deliver
     */
    function _fireSubscribers(channel, payload){
        if(_pubsub_observers[channel]){
            for(var i=0, len = _pubsub_observers[channel].length; i<len; i++){
                // send immutable data that can't be modified by listeners
                try{
                    _pubsub_observers[channel][i](channel, JSON.parse(JSON.stringify(payload)));
                }catch(E){};
            }
        }
    }

    /**
     * Remove old events from the publish stream (at least 2sec old)
     */
    function _dropOldEvents(){
        if(!_storage.__jstorage_meta.PubSub){
            return;
        }

        var retire = +new Date() - 2000;

        for(var i=0, len = _storage.__jstorage_meta.PubSub.length; i<len; i++){
            if(_storage.__jstorage_meta.PubSub[i][0] <= retire){
                // deleteCount is needed for IE6
                _storage.__jstorage_meta.PubSub.splice(i, _storage.__jstorage_meta.PubSub.length - i);
                break;
            }
        }

        if(!_storage.__jstorage_meta.PubSub.length){
            delete _storage.__jstorage_meta.PubSub;
        }

    }

    /**
     * Publish payload to a channel
     *
     * @param {String} channel Channel name
     * @param {Mixed} payload Payload to send to the subscribers
     */
    function _publish(channel, payload){
        if(!_storage.__jstorage_meta){
            _storage.__jstorage_meta = {};
        }
        if(!_storage.__jstorage_meta.PubSub){
            _storage.__jstorage_meta.PubSub = [];
        }

        _storage.__jstorage_meta.PubSub.unshift([+new Date, channel, payload]);

        _save();
        _publishChange();
    }


    /**
     * JS Implementation of MurmurHash2
     *
     *  SOURCE: https://github.com/garycourt/murmurhash-js (MIT licensed)
     *
     * @author <a href="mailto:gary.court@gmail.com">Gary Court</a>
     * @see http://github.com/garycourt/murmurhash-js
     * @author <a href="mailto:aappleby@gmail.com">Austin Appleby</a>
     * @see http://sites.google.com/site/murmurhash/
     *
     * @param {string} str ASCII only
     * @param {number} seed Positive integer only
     * @return {number} 32-bit positive integer hash
     */

    function murmurhash2_32_gc(str, seed) {
        var
            l = str.length,
            h = seed ^ l,
            i = 0,
            k;

        while (l >= 4) {
            k =
                ((str.charCodeAt(i) & 0xff)) |
                ((str.charCodeAt(++i) & 0xff) << 8) |
                ((str.charCodeAt(++i) & 0xff) << 16) |
                ((str.charCodeAt(++i) & 0xff) << 24);

            k = (((k & 0xffff) * 0x5bd1e995) + ((((k >>> 16) * 0x5bd1e995) & 0xffff) << 16));
            k ^= k >>> 24;
            k = (((k & 0xffff) * 0x5bd1e995) + ((((k >>> 16) * 0x5bd1e995) & 0xffff) << 16));

            h = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16)) ^ k;

            l -= 4;
            ++i;
        }

        switch (l) {
            case 3: h ^= (str.charCodeAt(i + 2) & 0xff) << 16;
            case 2: h ^= (str.charCodeAt(i + 1) & 0xff) << 8;
            case 1: h ^= (str.charCodeAt(i) & 0xff);
                h = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16));
        }

        h ^= h >>> 13;
        h = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16));
        h ^= h >>> 15;

        return h >>> 0;
    }

    ////////////////////////// PUBLIC INTERFACE /////////////////////////

    $.jStorage = {
        /* Version number */
        version: JSTORAGE_VERSION,

        /**
         * Sets a key's value.
         *
         * @param {String} key Key to set. If this value is not set or not
         *              a string an exception is raised.
         * @param {Mixed} value Value to set. This can be any value that is JSON
         *              compatible (Numbers, Strings, Objects etc.).
         * @param {Object} [options] - possible options to use
         * @param {Number} [options.TTL] - optional TTL value
         * @return {Mixed} the used value
         */
        set: function(key, value, options){
            _checkKey(key);

            options = options || {};

            // undefined values are deleted automatically
            if(typeof value == "undefined"){
                this.deleteKey(key);
                return value;
            }

            if(_XMLService.isXML(value)){
                value = {_is_xml:true,xml:_XMLService.encode(value)};
            }else if(typeof value == "function"){
                return undefined; // functions can't be saved!
            }else if(value && typeof value == "object"){
                // clone the object before saving to _storage tree
                value = JSON.parse(JSON.stringify(value));
            }

            _storage[key] = value;

            _storage.__jstorage_meta.CRC32[key] = "2." + murmurhash2_32_gc(JSON.stringify(value), 0x9747b28c);

            this.setTTL(key, options.TTL || 0); // also handles saving and _publishChange

            _fireObservers(key, "updated");
            return value;
        },

        /**
         * Looks up a key in cache
         *
         * @param {String} key - Key to look up.
         * @param {mixed} def - Default value to return, if key didn't exist.
         * @return {Mixed} the key value, default value or null
         */
        get: function(key, def){
            _checkKey(key);
            if(key in _storage){
                if(_storage[key] && typeof _storage[key] == "object" && _storage[key]._is_xml) {
                    return _XMLService.decode(_storage[key].xml);
                }else{
                    return _storage[key];
                }
            }
            return typeof(def) == "undefined" ? null : def;
        },

        /**
         * Deletes a key from cache.
         *
         * @param {String} key - Key to delete.
         * @return {Boolean} true if key existed or false if it didn't
         */
        deleteKey: function(key){
            _checkKey(key);
            if(key in _storage){
                delete _storage[key];
                // remove from TTL list
                if(typeof _storage.__jstorage_meta.TTL == "object" &&
                  key in _storage.__jstorage_meta.TTL){
                    delete _storage.__jstorage_meta.TTL[key];
                }

                delete _storage.__jstorage_meta.CRC32[key];

                _save();
                _publishChange();
                _fireObservers(key, "deleted");
                return true;
            }
            return false;
        },

        /**
         * Sets a TTL for a key, or remove it if ttl value is 0 or below
         *
         * @param {String} key - key to set the TTL for
         * @param {Number} ttl - TTL timeout in milliseconds
         * @return {Boolean} true if key existed or false if it didn't
         */
        setTTL: function(key, ttl){
            var curtime = +new Date();
            _checkKey(key);
            ttl = Number(ttl) || 0;
            if(key in _storage){

                if(!_storage.__jstorage_meta.TTL){
                    _storage.__jstorage_meta.TTL = {};
                }

                // Set TTL value for the key
                if(ttl>0){
                    _storage.__jstorage_meta.TTL[key] = curtime + ttl;
                }else{
                    delete _storage.__jstorage_meta.TTL[key];
                }

                _save();

                _handleTTL();

                _publishChange();
                return true;
            }
            return false;
        },

        /**
         * Gets remaining TTL (in milliseconds) for a key or 0 when no TTL has been set
         *
         * @param {String} key Key to check
         * @return {Number} Remaining TTL in milliseconds
         */
        getTTL: function(key){
            var curtime = +new Date(), ttl;
            _checkKey(key);
            if(key in _storage && _storage.__jstorage_meta.TTL && _storage.__jstorage_meta.TTL[key]){
                ttl = _storage.__jstorage_meta.TTL[key] - curtime;
                return ttl || 0;
            }
            return 0;
        },

        /**
         * Deletes everything in cache.
         *
         * @return {Boolean} Always true
         */
        flush: function(){
            _storage = {__jstorage_meta:{CRC32:{}}};
            _save();
            _publishChange();
            _fireObservers(null, "flushed");
            return true;
        },

        /**
         * Returns a read-only copy of _storage
         *
         * @return {Object} Read-only copy of _storage
        */
        storageObj: function(){
            function F() {}
            F.prototype = _storage;
            return new F();
        },

        /**
         * Returns an index of all used keys as an array
         * ["key1", "key2",.."keyN"]
         *
         * @return {Array} Used keys
        */
        index: function(){
            var index = [], i;
            for(i in _storage){
                if(_storage.hasOwnProperty(i) && i != "__jstorage_meta"){
                    index.push(i);
                }
            }
            return index;
        },

        /**
         * How much space in bytes does the storage take?
         *
         * @return {Number} Storage size in chars (not the same as in bytes,
         *                  since some chars may take several bytes)
         */
        storageSize: function(){
            return _storage_size;
        },

        /**
         * Which backend is currently in use?
         *
         * @return {String} Backend name
         */
        currentBackend: function(){
            return _backend;
        },

        /**
         * Test if storage is available
         *
         * @return {Boolean} True if storage can be used
         */
        storageAvailable: function(){
            return !!_backend;
        },

        /**
         * Register change listeners
         *
         * @param {String} key Key name
         * @param {Function} callback Function to run when the key changes
         */
        listenKeyChange: function(key, callback){
            _checkKey(key);
            if(!_observers[key]){
                _observers[key] = [];
            }
            _observers[key].push(callback);
        },

        /**
         * Remove change listeners
         *
         * @param {String} key Key name to unregister listeners against
         * @param {Function} [callback] If set, unregister the callback, if not - unregister all
         */
        stopListening: function(key, callback){
            _checkKey(key);

            if(!_observers[key]){
                return;
            }

            if(!callback){
                delete _observers[key];
                return;
            }

            for(var i = _observers[key].length - 1; i>=0; i--){
                if(_observers[key][i] == callback){
                    _observers[key].splice(i,1);
                }
            }
        },

        /**
         * Subscribe to a Publish/Subscribe event stream
         *
         * @param {String} channel Channel name
         * @param {Function} callback Function to run when the something is published to the channel
         */
        subscribe: function(channel, callback){
            channel = (channel || "").toString();
            if(!channel){
                throw new TypeError("Channel not defined");
            }
            if(!_pubsub_observers[channel]){
                _pubsub_observers[channel] = [];
            }
            _pubsub_observers[channel].push(callback);
        },

        /**
         * Publish data to an event stream
         *
         * @param {String} channel Channel name
         * @param {Mixed} payload Payload to deliver
         */
        publish: function(channel, payload){
            channel = (channel || "").toString();
            if(!channel){
                throw new TypeError("Channel not defined");
            }

            _publish(channel, payload);
        },

        /**
         * Reloads the data from browser storage
         */
        reInit: function(){
            _reloadData();
        },

        /**
         * Removes reference from global objects and saves it as jStorage
         *
         * @param {Boolean} option if needed to save object as simple "jStorage" in windows context
         */
         noConflict: function( saveInGlobal ) {
            delete window.$.jStorage

            if ( saveInGlobal ) {
                window.jStorage = this;
            }

            return this;
         }
    };

    // Initialize jStorage
    _init();

})();
/*!
* jquery.navmenu.js
* This file contains the code for the main navigation.
*
* @project   E.ON SOnG
* @date      2014-08-18
* @author    Daniel Köntös, SapientNitro <dkoentoes2@sapient.com>
* @licensor  E.ON
* @site      E.ON SOnG
*
* Description: 
* ------------
* Initialization:
*   without parameters: $('.mySelector').Navmenu();
*   with use of parameters: 
*       $('.mySelector').Navmenu({
*           debug: false,
*           hooks: {
*               onShowBefore: function(){
*                   // do some stuff before menu is shown
*               }
*           }
*       });
*
* External access to the instance: 
*   $('.mySelector').data('Navmenu');
*
* Public functions for external access: 
*   .showMenu()
*   .hideMenu()
*   .toggleMenu()
*
* Usage of public functions example:
*   $('.mySelector').data('Navmenu').showMenu();
*/
;(function($){
    "use strict";
    $.Navmenu = function(element, params){
        var nm = this,
            $nm = $(element),
            defaults = {
                debug: true,
                debounce: 0,
                selectors: {
                    overlay: '.overlayNav',
                    wrapperMenu: 'div:first',
                    menuSwitchDivNav: '.switchdivNav',
                    menuTrigger: 'button.dl-trigger',
                    menu: '.dl-menu',
                    menuItems: 'li a',
                    navbar: 'nav.navbar'
                },
                viewports: {
                    s: {
                        from: 0,
                        to: 767,
                        visibleMenus: 1
                    },
                    m: {
                        from: 768,
                        to: 1023,
                        visibleMenus: 2
                    },
                    l: {
                        from: 1024,
                        to: false,
                        visibleMenus: false
                    } 
                },
                hooks: {
                    onShowBefore: false,
                    onShowAfter: false,
                    onHideBefore: false,
                    onHideAfter: false
                }
            },
            privates = {
                viewportWidth: $(window).width(),
                windowWidth: $(window).width(),
                $overlay: false,
                $wrapperMenu: false,
                $menuSwitchDivNav: false,
                $menuTrigger: false,
                $menu: false,
                $menuItems: false,
                $menuStage: false,
                $activeSubmenu: false,
                $navbar: false,
                stageWidth: 0,
                activeLevel: 0,
                slideStepWidth: false,
                stealthMode: true,
                slideDuration: 0,
                classes: {
                    menuOpen: 'dl-menuopen',
                    menuStage: 'dl-menu-stage',
                    submenu: 'dl-submenu',
                    submenuClone: 'dl-submenu-clone',
                    submenuTitle: 'mainlink',
                    submenuBacklink: 'dl-back',
                    submenuVisible: 'dl-visible',
                    submenuActive: 'dl-active-menu',
                    wrapperMenu: 'dl-wrapper-menu',
                    menuLinkActive: 'dl-wrapper-link-active'
                }
            };

        nm.config = {};

        nm._init = function(){
            // merge params, defaults and privates into config
            nm.config = $.extend({}, defaults, params, privates);

            debug(nm.config, 'dir');

            setObjects();
            setLevelsAndMarkup();
            setEvents();
        };

        nm.showMenu = function(){
            debug('running showMenu');

            runHook('onShowBefore');

            if(!isMenuOpened()){
                nm.config.$wrapperMenu.show().addClass(nm.config.classes.menuOpen);
                nm.config.$menuTrigger.addClass('dl-active');
                resetOverlay();
            }
            else{
                debug('menu is already opened');
            }

            runHook('onShowAfter');
            if (nm.config.stealthMode) {
                nm.config.$menu.find('> li').each(function(item,index) {
                    var $anchor = $(this).find('> a');
                    if($anchor.attr('href') !== '#' && (window.location.pathname.indexOf($anchor.attr('href').substring(0, $anchor.attr('href').length - 5) + '/') >= 0 || window.location.pathname.indexOf($anchor.attr('href')) >= 0)) {
                        if(hasSubmenu($anchor)){
                            triggerAction($anchor.get(0));
                        }
                    }
                });
            }
        };
        nm.hideMenu = function(){
            debug('running hideMenu');

            runHook('onHideBefore');

            if(isMenuOpened()){
                nm.config.$wrapperMenu.hide().removeClass(nm.config.classes.menuOpen);
                nm.config.$menuTrigger.removeClass('dl-active');
                nm.config.$overlay.hide();

                resetMenus(true);
                nm.config.stealthMode = true;
                nm.config.slideDuration = 0;
            }

            runHook('onHideAfter');
        };
        nm.toggleMenu = function(){
            debug('running toggleMenu');
            if(isMenuOpened()){
                nm.hideMenu();
                nm.config.stealthMode = true;
                nm.config.slideDuration = 0;
            }
            else{
                nm.showMenu();
            }
        };

        // all private functions
        var setEvents = function(){
                var debouncedResize = debounce(function(){
                    if (getViewport(nm.config.viewportWidth) != getViewport()) {
                        resetOverlay();
                        nm.hideMenu();
                    }
                    resetViewport();
                    setSlideStepWidth();
                });

                // set the resize handler for correct setting of width height and positions
                $(window).on('resize', debouncedResize);

                // set the show hide menutrigger
                nm.config.$menuTrigger.on('click', nm.toggleMenu);

                // menuitems 
                nm.config.$menuItems.on('click', function(e){
                    nm.config.stealthMode = false;
                    nm.config.slideDuration = 400;
                    if(hasSubmenu($(this))){
                        e.preventDefault();
                        triggerAction(this);
                    }
                });

                $('.'+nm.config.classes.submenuBacklink).on('click', function(e){
                    nm.config.stealthMode = false;
                    nm.config.slideDuration = 400;
                    e.preventDefault();
                    slideBack($(this));
                });
            },
            setObjects = function(){
                nm.config.$overlay = $(nm.config.selectors.overlay);
                nm.config.$wrapperMenu = $nm.find(nm.config.selectors.wrapperMenu).addClass(nm.config.classes.wrapperMenu);
                nm.config.$menuSwitchDivNav = $nm.find(nm.config.selectors.menuSwitchDivNav);
                nm.config.$menuTrigger = $nm.find(nm.config.selectors.menuTrigger);
                nm.config.$menu = $nm.find(nm.config.selectors.menu);
                nm.config.$menuItems = nm.config.$menu.find(nm.config.selectors.menuItems);
                nm.config.$submenus = nm.config.$menu.find('.'+nm.config.classes.submenu);
                nm.config.$navbar = $(nm.config.selectors.navbar);

                nm.config.$menuStage = $('<div/>').addClass(nm.config.classes.menuStage).appendTo(nm.config.$wrapperMenu);
                nm.config.$menu.detach().appendTo(nm.config.$menuStage);

                nm.config.stageWidth = nm.config.$menuStage.width();
                nm.config.windowWidth = $(window).width();
            },
            setLevelsAndMarkup = function(){
                nm.config.$menu.addClass(nm.config.classes.submenuVisible+' '+nm.config.classes.submenuActive).data('level', 0);
                nm.config.$submenus.each(function(i,e){
                    var $this = $(this),
                        thisMainLinkText = $this.find( '> li.mainlink a' ).text(),
                        thisMainLinkHref = $this.find( '> li.mainlink a' ).attr('href');

                    // store the level in a data attribute
                    $this.data('level', $this.parents('ul').length);

                    // set back link and correct title
                    $this.find( '> li:nth-child(1)' ).after('<li class="'+nm.config.classes.submenuBacklink+'"><a href="#">'+eonde.i18n.get("mainnavigation.back")+'</a></li>');

                    // set main level link again and paste it into the list, after the back-link
                    $this.find( '> li.dl-back' ).after('<li class="dl-doorpage"><a href="'+thisMainLinkHref+'">'+eonde.i18n.get("mainnavigation.overview")+' '+thisMainLinkText+'</a></li>');
                });
            },
            triggerAction = function(item){
                var $item = $(item),
                    $activeLinks = $('.'+nm.config.classes.menuLinkActive),
                    submenu = getSubmenu($item),
                    submenuClone = cloneSubmenu(submenu),
                    level = submenu.data('level');

                debug('getActiveLevel(): '+getActiveLevel());
                debug('level: '+level);

                // remove last link highlight if next submenu is on same level as active submenu
                if(getActiveLevel() === level){
                    $activeLinks.last().removeClass(nm.config.classes.menuLinkActive);
                    $item.addClass(nm.config.classes.menuLinkActive);
                }
                else{
                    $item.addClass(nm.config.classes.menuLinkActive);
                }

                slideToSublevel(level, submenuClone);
            },
            slideToSublevel = function(level, submenuClone){
                var lastSubmenu = submenuClone || nm.config.$menuStage.find('>ul:last');

                debug('lastSubmenu:');
                debug(lastSubmenu);
                
                nm.config.$activeSubmenu = nm.config.$activeSubmenu || lastSubmenu;

                if(!nm.config.slideStepWidth){
                    setSlideStepWidth();
                }

                debug('slideStepWidth: '+getSlideStepWidth());

                if(getActiveLevel() === level){
                    debug('we are on the same level so first of all slide out the active submenu and then slide in the target submenu');
                    // check if the height of the overlay needs to be adjusted - compare the relevant menus (the new one and the one that stays visible)
                    var visibleMenus = nm.config.$menuStage.find('>ul.'+nm.config.classes.submenuVisible),
                        menusToCompare = lastSubmenu.add(visibleMenus[0]),
                        compareHeight = 0;

                    // first toggle the backlink ...
                    toggleBackLink($(menusToCompare[menusToCompare.length-1]));
                    // and then compare the menus to get the correct height
                    compareHeight = compareSubmenuHeight(menusToCompare);

                    if(compareHeight > getOverlayHeight()){
                        setOverlayHeight(compareHeight);
                    }


                    // slide out active submenu and slide in new submenu
                    nm.config.$activeSubmenu.animate({
                        left: '+='+getSlideStepWidth()
                    }, nm.config.slideDuration, function(){
                        nm.config.$activeSubmenu.remove();
                        lastSubmenu.show().animate({
                            left: '-='+getSlideStepWidth()
                        }, nm.config.slideDuration, function(){
                            setVisibleMenuFlag();
                        });
                    
                        setActiveSubmenu(lastSubmenu);

                        if(compareHeight < getOverlayHeight()){
                            setOverlayHeight(compareHeight);
                        }
                    });
                }
                else {
                    var viewport = getViewport(),
                        lastVisibleMenu = nm.config.$menuStage.find('>ul.'+nm.config.classes.submenuVisible+':last'),
                        menusToCompare = (viewport === 's') ? lastSubmenu : lastSubmenu.add(lastVisibleMenu),
                        compareHeight = 0;

                    // first toggle the backlink ...
                    toggleBackLink($(menusToCompare[menusToCompare.length-1]));
                    // and then compare the menus to get the correct height
                    compareHeight = compareSubmenuHeight(menusToCompare);

                    debug('b menusToCompare');
                    debug(menusToCompare);
                    debug('b compareHeight');
                    debug(compareHeight);

                    if(compareHeight > getOverlayHeight()){
                        setOverlayHeight(compareHeight);
                    }

                    switch(viewport){
                        case 's':
                            var submenus = nm.config.$menuStage.children().removeClass(nm.config.classes.submenuVisible),
                                slideStep = (Math.round(parseInt(getSlideStepWidth(), 10) * 100) / 100)+'%';
                            
                            lastSubmenu.addClass(nm.config.classes.submenuVisible).show();
                            submenus.animate({
                                left: '-='+slideStep
                            }, nm.config.slideDuration, function(){
                                setVisibleMenuFlag();
                            });

                            debug('slideStep: '+slideStep);
                            break;
                        case 'm':
                            if(getActiveLevel() === 0){
                                lastSubmenu.css({
                                    left: nm.config.$menuStage.width()
                                }).show().animate({
                                    left: getSlideStepWidth()
                                }, nm.config.slideDuration, function(){
                                    setVisibleMenuFlag();
                                });
                            }
                            else{
                                lastSubmenu.show();
                                nm.config.$menuStage.children('ul').animate({
                                    left: '-='+getSlideStepWidth()
                                }, nm.config.slideDuration, function(){
                                    setVisibleMenuFlag();
                                });
                            }
                            break;
                        default: 
                            break;
                    }

                    setActiveLevel(level);
                    setActiveSubmenu(lastSubmenu);

                    if(compareHeight < getOverlayHeight()){
                        setOverlayHeight(compareHeight);
                    }
                    if (nm.config.stealthMode) {
                        resetOverlay();
                        lastSubmenu.find('> li').each(function(item,index) {
                            var $anchor = $(this).find('> a');
                            if($anchor.attr('href') !== '#' && (window.location.pathname.indexOf($anchor.attr('href').substring(0, $anchor.attr('href').length - 5) + '/') >= 0 || window.location.pathname.indexOf($anchor.attr('href')) >= 0)) {
                                if(hasSubmenu($anchor)){
                                    triggerAction($anchor.get(0));
                }
                            }
                        });
                    }
                }
            },
            slideBack = function(trigger){
                var oldStageWidth = nm.config.stageWidth,
                    newStageWidth = getStageWidth(),
                    viewport = getViewport(),
                    viewportVisibleMenus = nm.config.viewports[viewport].visibleMenus,
                    activeLevel = getActiveLevel(),
                    $activeLinks = $('.'+nm.config.classes.menuLinkActive),
                    $selectedSubmenu = trigger.parent('ul'),
                    $newActiveSubmenu = $selectedSubmenu.prev('ul'),
                    $followingSubmenus = $selectedSubmenu.nextAll(),
                    $menusToSlide = (isViewport('m') && activeLevel === 1) ? $selectedSubmenu : nm.config.$menuStage.children('ul'),
                    visibleMenus = $menusToSlide.slice($menusToSlide.length - viewportVisibleMenus),
                    $newVisibleSubmenu = $(visibleMenus[0]).prev('ul'),
                    menusToCompare = (isViewport('m') && activeLevel !== 1) ? $newVisibleSubmenu.add(visibleMenus[0]) : $newVisibleSubmenu,
                    compareHeight = 0;

                // first toggle the backlink ...
                toggleBackLink($newActiveSubmenu);
                // and then compare the menus to get the correct height
                compareHeight = compareSubmenuHeight(menusToCompare);

                debug('trigger:');
                debug(trigger);

                debug('$selectedSubmenu:');
                debug($selectedSubmenu);

                debug('$newActiveSubmenu: ');
                debug($newActiveSubmenu);

                debug('viewport: ' + viewport + '\nviewportVisibleMenus: ' + viewportVisibleMenus);

                debug(' $menusToSlide.length - viewportVisibleMenus + 2 = '+
                        $menusToSlide.length + '-' + viewportVisibleMenus + ' + 2 = ' +
                        ($menusToSlide.length - viewportVisibleMenus + 2));

                debug('visibleMenus: ');
                debug(visibleMenus);
                debug('$menusToSlide: ');
                debug($menusToSlide);

                debug('slideBack menusToCompare (amount '+menusToCompare.length+'): ');
                debug(menusToCompare);
                debug('slideBack compareHeight: '+compareHeight);

                if(compareHeight > getOverlayHeight()){
                    setOverlayHeight(compareHeight);
                }

                $menusToSlide.animate({
                    left: '+='+getSlideStepWidth()
                }, function(){ 
                    if($followingSubmenus.length !== 0){
                        $followingSubmenus.remove();
                    }
                    else{
                        $selectedSubmenu.remove();
                    }

                    var activeSubmenu = $newActiveSubmenu;

                    $activeLinks.last().removeClass(nm.config.classes.menuLinkActive);

                    setActiveLevel(activeSubmenu.data('level'));
                    setActiveSubmenu(activeSubmenu);
                    setVisibleMenuFlag();

                    debug('slideBack compareHeight: '+compareHeight);
                    if(compareHeight < getOverlayHeight()){
                        setOverlayHeight(compareHeight);
                    }
                });
            },
            resetMenus = function(forceNoAnimation){
                var $activeLinks = $('.'+nm.config.classes.menuLinkActive);

                if(forceNoAnimation){
                    nm.config.$menu.addClass(nm.config.classes.submenuVisible).css('left', 0);
                    nm.config.$menu.nextAll('.'+nm.config.classes.submenu).remove();
                }
                else{
                    nm.config.$menuStage.find('ul').animate({
                        left: '-='+getSlideStepWidth()
                    });
                }
                $activeLinks.removeClass(nm.config.classes.menuLinkActive);
                setActiveLevel(0);
            },
            setSlideStepWidth = function(){
                nm.config.slideStepWidth = (Math.round((100 / nm.config.viewports[getViewport()].visibleMenus) * 100) / 100)+'%';
            },
            getSlideStepWidth = function(){
                return nm.config.slideStepWidth;
            },
            setActiveLevel = function(level){
                nm.config.activeLevel = level;
            },
            getActiveLevel = function(level){
                return nm.config.activeLevel;
            },
            setActiveSubmenu = function(submenu){
                $('.'+nm.config.classes.submenuActive).removeClass(nm.config.classes.submenuActive);
                nm.config.$activeSubmenu = submenu.addClass(nm.config.classes.submenuActive);

                if(isViewport('m')){
                    // nm.config.$menuStage.find('>ul .'+nm.config.classes.submenuBacklink).hide();
                    // submenu.find('.'+nm.config.classes.submenuBacklink).show();
                    // toggleBackLink(submenu);
                }

                //setOverlayHeight();
            },
            getActiveSubmenu = function(submenu){
                return nm.config.$activeSubmenu;
            },
            toggleBackLink = function(menu){
                nm.config.$menuStage.find('>ul .'+nm.config.classes.submenuBacklink).hide();
                menu.find('.'+nm.config.classes.submenuBacklink).show();
            },
            setVisibleMenuFlag = function(){
                var menus = nm.config.$menuStage.find('>ul');

                menus.each(function(i,e){
                    var $this = $(this);

                    if(menuIsVisibleInStage($this)){
                        $this.addClass(nm.config.classes.submenuVisible);
                    }
                    else{
                        $this.removeClass(nm.config.classes.submenuVisible);
                    }
                });
            },
            menuIsVisibleInStage = function(menu){
                var menus = nm.config.$menuStage.find('>ul'),
                    leftPos = parseInt(menu.css('left'), 10) || 0;

                return (leftPos >= 0 && leftPos < nm.config.$menuStage.width()) ? true : false;
            },
            hasSubmenu = function(item){
                return (item.next('ul.dl-submenu').length !== 0) ? true : false;
            },
            getSubmenu = function(item){
                var submenu = item.next('ul.dl-submenu');
                return (submenu.length !== 0) ? submenu : false;
            },
            cloneSubmenu = function(submenu){
                var clonedSubmenu = submenu.clone(true, true).hide().addClass(nm.config.classes.submenuClone).appendTo($(nm.config.$menuStage)),
                    viewport = getViewport(),
                    visibleMenus = nm.config.viewports[viewport].visibleMenus,
                    cloneLeftPosition = (visibleMenus > nm.config.$menuStage.children('ul').length) ? (100 / visibleMenus)+'%' : '100%';

                // set position of the new clone
                clonedSubmenu.css({
                    left: cloneLeftPosition
                });

                return clonedSubmenu;
            },
            setStageWidth = function(){
                nm.config.$menuStage.width(nm.config.$wrapperMenu.width());
                //setMenuElementsWidthAndPosition();
            },
            getStageWidth = function(){
                return nm.config.$menuStage.width();
            },
            setMenuElementsWidthAndPosition = function(){
                if(isMenuOpened()){
                    nm.config.$menuStage.children().each(function(i,e){
                        var $this = $(this);

                        debug('$this left: '+$this.css('left'));

                        if($this.hasClass(nm.config.classes.submenuActive)){
                            $this.css('left', getSlideStepWidth());
                        }

                        if(menuIsVisibleInStage($this)){
                            debug('yep, im visible!');
                            $this.addClass(nm.config.classes.submenuVisible);
                        }
                        else{
                            debug('nope, im not visible!');
                            $this.removeClass(nm.config.classes.submenuVisible);
                        }
                    });
                }
            },
            resetViewport = function(){
                nm.config.viewportWidth = $(window).width();
                resetOverlay();
            },
            debounce = function(callback, pause, immediate) {
                var timeout;
                pause = pause || nm.config.debounce;

                return function() {
                    var context = this,
                        args = arguments;

                    clearTimeout(timeout);
                    timeout = setTimeout(function() {
                        timeout = null;
                        if (!immediate) callback.apply(context, args);
                    }, pause);
                    if (immediate && !timeout) callback.apply(context, args);
                };
            },
            isMenuOpened = function(){
                return nm.config.$wrapperMenu.hasClass(nm.config.classes.menuOpen);
            },
            isViewport = function(viewport){
                var viewportData = nm.config.viewports[viewport],
                    actualWidth = nm.config.viewportWidth;
                return (viewportData.from <= actualWidth && (viewportData.to >= actualWidth || !viewportData.to)) ? true : false;
            },
            isWidthChange = function(){
                if ($(window).width() == nm.config.windowWidth) {
                    return false;
                } else {
                    return true;
                }
            },
            getViewport = function(width){
                width = width || $(window).width();

                for(var viewport in nm.config.viewports){
                    if(nm.config.viewports[viewport].from <= width && (nm.config.viewports[viewport].to >= width || !nm.config.viewports[viewport].to)){
                        return viewport;   
                        break;
                    }
                }
            },
            resetOverlay = function(){
                if(isMenuOpened()){
                    var offsetWrapperMenu = nm.config.$menuSwitchDivNav.offset().top,
                        borderWidth = nm.config.$menuSwitchDivNav.height();

                    setOverlayHeight();
                    nm.config.$overlay.css({
                        top: offsetWrapperMenu,
                        borderTopWidth: borderWidth
                    }).show();
                }
            },
            compareSubmenuHeight = function(menusToCompare){
                var height = 0;

                menusToCompare.each(function(i,e){
                    var $this = $(this),
                        thisHeight = $this.height();

                    if(thisHeight > height){
                        height = thisHeight;
                    }
                });

                return height;
            },
            setOverlayHeight = function(height){
                var newHeight = height || 0;

                debug('setting overlayHeight to: '+newHeight);

                if(newHeight === 0){
                    nm.config.$menuStage.find('>ul.'+nm.config.classes.submenuVisible).each(function(){
                        var $this = $(this),
                            thisHeight = $this.outerHeight();

                            debug('submenu: ');
                            debug($this);

                        if(thisHeight > newHeight){
                            newHeight = thisHeight;
                        }
                    });
                }

                nm.config.$overlay.height(newHeight);
                nm.config.$menuStage.height(newHeight);
            },
            getOverlayHeight = function(){
                return nm.config.$overlay.height();
            },
            runHook = function(hookName){
                if(typeof nm.config.hooks[hookName] === 'function'){
                    debug('running "'+hookName+'"');
                    nm.config.hooks[hookName].call();
                }
            },
            debug = function(args, debugFunc){
                debugFunc = debugFunc || 'log';
                if(nm.config.debug && window.console && window.console[debugFunc]){
                    //console[debugFunc](args);
                }
            };

        // initialize the plugin
        nm._init();
    };

    $.fn.Navmenu = function(element){
        return this.each(function(){
            if (void 0 === $(this).data("Navmenu")) {
                var navmenu = new $.Navmenu(this, element);
                $(this).data("Navmenu", navmenu);
            }
        });
    };
})(jQuery);


$(document).ready(function(){
    $('#dl-menu').Navmenu({
        debug: true,
        hooks: {
            onShowBefore: function(){
                if($('.login-container').hasClass('open')){
                    $('.login-container').trigger("click"); 
                }

                if($('.search-form-container').hasClass('activeSearch')){
                    $('.searchform').trigger("click");
                }
            }  
        }
    });
});
/*
Copyright (c) 2010,2011,2012,2013 Morgan Roderick http://roderick.dk
License: MIT - http://mrgnrdrck.mit-license.org

https://github.com/mroderick/PubSubJS
*/
/*jslint white:true, plusplus:true, stupid:true*/
/*global
    setTimeout,
    module,
    exports,
    define,
    require,
    window
*/
(function(root, factory){
    'use strict';

    // CommonJS
    if (typeof exports === 'object' && module){
        module.exports = factory();

    // AMD
    } else if (typeof define === 'function' && define.amd){
        define(factory);
    // Browser
    } else {
        root.PubSub = factory();
    }
}( ( typeof window === 'object' && window ) || this, function(){

    'use strict';

    var PubSub = {},
        messages = {},
        lastUid = -1;

    /**
     *  Returns a function that throws the passed exception, for use as argument for setTimeout
     *  @param { Object } ex An Error object
     */
    function throwException( ex ){
        return function reThrowException(){
            throw ex;
        };
    }

    function callSubscriberWithDelayedExceptions( subscriber, message, data ){
        try {
            subscriber( message, data );
        } catch( ex ){
            setTimeout( throwException( ex ), 0);
        }
    }

    function callSubscriberWithImmediateExceptions( subscriber, message, data ){
        subscriber( message, data );
    }

    function deliverMessage( originalMessage, matchedMessage, data, immediateExceptions ){
        var subscribers = messages[matchedMessage],
            callSubscriber = immediateExceptions ? callSubscriberWithImmediateExceptions : callSubscriberWithDelayedExceptions,
            i, j;

        if ( !messages.hasOwnProperty( matchedMessage ) ) {
            return;
        }

        // do not cache the length of the subscribers array, as it might change if there are unsubscribtions
        // by subscribers during delivery of a topic
        // see https://github.com/mroderick/PubSubJS/issues/26
        for ( i = 0; i < subscribers.length; i++ ){
            callSubscriber( subscribers[i].func, originalMessage, data );
        }
    }

    function createDeliveryFunction( message, data, immediateExceptions ){
        return function deliverNamespaced(){
            var topic = String( message ),
                position = topic.lastIndexOf( '.' );

            // deliver the message as it is now
            deliverMessage(message, message, data, immediateExceptions);

            // trim the hierarchy and deliver message to each level
            while( position !== -1 ){
                topic = topic.substr( 0, position );
                position = topic.lastIndexOf('.');
                deliverMessage( message, topic, data );
            }
        };
    }

    function messageHasSubscribers( message ){
        var topic = String( message ),
            found = messages.hasOwnProperty( topic ),
            position = topic.lastIndexOf( '.' );

        while ( !found && position !== -1 ){
            topic = topic.substr( 0, position );
            position = topic.lastIndexOf('.');
            found = messages.hasOwnProperty( topic );
        }

        return found && messages[topic].length > 0;
    }

    function publish( message, data, sync, immediateExceptions ){
        var deliver = createDeliveryFunction( message, data, immediateExceptions ),
            hasSubscribers = messageHasSubscribers( message );

        if ( !hasSubscribers ){
            return false;
        }

        if ( sync === true ){
            deliver();
        } else {
            setTimeout( deliver, 0 );
        }
        return true;
    }

    /**
     *  PubSub.publish( message[, data] ) -> Boolean
     *  - message (String): The message to publish
     *  - data: The data to pass to subscribers
     *  Publishes the the message, passing the data to it's subscribers
    **/
    PubSub.publish = function( message, data ){
        return publish( message, data, false, PubSub.immediateExceptions );
    };

    /**
     *  PubSub.publishSync( message[, data] ) -> Boolean
     *  - message (String): The message to publish
     *  - data: The data to pass to subscribers
     *  Publishes the the message synchronously, passing the data to it's subscribers
    **/
    PubSub.publishSync = function( message, data ){
        return publish( message, data, true, PubSub.immediateExceptions );
    };

    /**
     *  PubSub.subscribe( message, func ) -> String
     *  - message (String): The message to subscribe to
     *  - func (Function): The function to call when a new message is published
     *  Subscribes the passed function to the passed message. Every returned token is unique and should be stored if
     *  you need to unsubscribe
    **/
    PubSub.subscribe = function( message, func ){
        if ( typeof func !== 'function'){
            return false;
        }

        // message is not registered yet
        if ( !messages.hasOwnProperty( message ) ){
            messages[message] = [];
        }

        // forcing token as String, to allow for future expansions without breaking usage
        // and allow for easy use as key names for the 'messages' object
        var token = String(++lastUid);
        messages[message].push( { token : token, func : func } );

        // return token for unsubscribing
        return token;
    };

    /**
     *  PubSub.unsubscribe( tokenOrFunction ) -> String | Boolean
     *  - tokenOrFunction (String|Function): The token of the function to unsubscribe or func passed in on subscribe
     *  Unsubscribes a specific subscriber from a specific message using the unique token
     *  or if using Function as argument, it will remove all subscriptions with that function
    **/
    PubSub.unsubscribe = function( tokenOrFunction ){
        var isToken = typeof tokenOrFunction === 'string',
            key = isToken ? 'token' : 'func',
            succesfulReturnValue = isToken ? tokenOrFunction : true,

            result = false,
            m, i;

        for ( m in messages ){
            if ( messages.hasOwnProperty( m ) ){
                for ( i = messages[m].length-1 ; i >= 0; i-- ){
                    if ( messages[m][i][key] === tokenOrFunction ){
                        messages[m].splice( i, 1 );
                        result = succesfulReturnValue;

                        // tokens are unique, so we can just return here
                        if ( isToken ){
                            return result;
                        }
                    }
                }
            }
        }

        return result;
    };

    return PubSub;
}));

$(document).ready(function(){
    
    ko.validation.init({
        parseInputAttributes: false,
        decorateElement: true,
        errorElementClass: 'loginElementError',
        errorMessageClass: 'loginInputError',
        insertMessages: false,
        messagesOnModified: true
        
    });
	    
	if($('.lt-ie9').length){

        $('.lt-ie9 .search-form-container input[type=radio]').on('change', function(e){
            $('.search-form-container .checkedInput').removeClass('checkedInput');
            var thisObj = $(this);
            thisObj.closest('div').siblings().find('label').removeClass('checkedInput');
            thisObj.siblings('label').addClass('checkedInput');
        });
    
        $('.lt-ie9 .search-form-container label.radio input[checked=checked]').parent('label.radio').children('label').addClass('checkedInput');
    }
    var searchModel = ValidatedViewModel(function () {
        
        var self = this;
        
        self.searchTerm=ko.observable("");
		
        if($('.searchTermAttribute').length) {
			self.searchTerm($('.searchTermAttribute').attr('data-attr'));
            $('.js-search').html(self.searchTerm());
        }
        var cache = {};
        var oldterm;
        
        self.searchTermList = function (data) {
            var searTermList = new Array();
            var i = 0;
            $.each(data, function(index, value) {
                searTermList[i++]=value.name;
            });
            return searTermList;
        }

        self.getSearchResults = function (request, response) {
            var element = this.element;
            request.term=(request.term).toLowerCase();
            if (request.term.indexOf(oldterm) >= 0) {
                if (typeof (oldterm) != 'undefined') {
                    var data = jQuery.grep(cache[oldterm],
                    function (ele) {
                       return (ele.name.toString().indexOf(request.term) >= 0);
                    });
                    response($.map(self.searchTermList(data), function (item) {
                        return { value: item }
                    }));
                    return;
                }
            } else {
                cache = {};
                
                eonde.Utils.ajaxInit();

                $.ajax({
                    headers : { Accept : "text/html,application/xhtml+xml,application/xml"},
                    dataType: "json",
                    type: 'GET',
                    url: "/suggest?q="+request.term+"&max=10&site="+$('.gsaCollection').attr('data-attr')+"&client="+$('.gsaFrontEnd').attr('data-attr')+"&access=p&format=rich",
                    autoFocus: true
                }).done( function(data) {
                   $('.ui-helper-hidden-accessible').css('display', 'none');
                    oldterm = request.term;
                    cache[request.term] = data.results;
                    response($.map(self.searchTermList(data.results), function (item) {
                        return {
                            value: item
                        }
                    }));
                }).fail(function(data) {
                    //Do nothing on fail
                });
            }
        }
    });

    self.updateZipValue2 = function(event, ui) {
        self.searchTerm(ui.item.value);
      	return false;
    }
    
    $('.search-form-container').each(function(){
        var vm = new searchModel();
        ko.applyBindings(vm,this);
        var container = this;
        $(this).find('#srch-term').autocomplete({
            source: vm.getSearchResults,
            minLength: 3,
            messages: {
                noResults: '',
                results: function() {}
            },
            select:function( event, ui ) {
                vm.searchTerm(ui.item.value);
                $(container).find('button[name="go"]').click();
            },
            change:vm.updateZipValue2
        });
        $(this).find('#srch-term').placeholder();
    });
});
/*jslint forin: true, sloppy: true, unparam: true, vars: true, white: true */
/*global document, jQuery, log */

var eon = window.eon || {};

(function(window, document, $, eon) {
	
	eon.plugin = eon.plugin || {};
	
	/**
	 * Tooltip
	 *
	 * Implemented as a jQuery plugin as it can appear more than once on
	 * a page.
	 *
	 * Expects the following (minimum) markup (tag is interchangable) for
	 * automated tooltip markup creation:
	 * <a href="#" class="tooltip-anchor" title="tooltip content"></a>
	 * 
	 * or supports manually created markup:
	 * <div class="tooltip-anchor" title="tooltip content">
	 *   <span class="tooltip-bubble"></span>
	 * </div>[...]
	 * <div class="external-content-source">tooltip content</div>
	 * 
	 * Now the plugin is called like this (see end of this file):
	 * jQuery('.tooltip').tooltip(optionObject);
	 * 
	 * optionObject can contain the following options
	 * {
	 *   tooltipBubble         : ".tooltip-bubble",
	 *   contentSourceSelector : ".external-content-source" or "attirbute",
	 *   horizontalShift       : -35,
	 *   verticalShift         : -10
	 * }
	 * 
	 * If no optionObject is defined, the default behaviour is to get the 
	 * content from the title attribute of the parent ('.tooltip') and to 
	 * create the tooltipBubble(".tooltip-bubble") as new Node. The named 
	 * classes can be used for individual styling. 
	 * The options vertical - & horizontalShift control the visual shift 
	 * to the left/right and to the top/bottom relative to the accordant
	 * tooltip-anchor.
	 * 
	 * The tooltip behaviour is automatically bound to all elements with 
	 * class="tooltip". The position is automatically detected by the target
	 * element's position.
	 * Apart from that the script handles some ARIA attributes and best
	 * practices for tooltips from the WCAG Guidelines.
	 * 
	 * A lot of the visual stuff is managed through CSS, so make sure to
	 * check this out as well. (see section=tooltip)
	 *
	 * @author Niklas Zillingr, Sapient GmbH <nzillinger@sapient.com>
	 */
	eon.plugin.tooltip = {
		
		/**
		 * Default values
		 * 
		 * @type {object}
		 */
		options : {
			tooltipBubble         : "",
			contentSourceSelector : "",
			horizontalShift       : -35,
			verticalShift         : -10,
			accessibilityPrefix   : CQ.I18n.getMessage('tooltip.accessibilityPrefix')
		},
		
		/**
		 * Constructor function
		 * 
		 * @see init()
		 * @param {jQuery} Element which shall be used for the tooltip
		 * @param {object} Optional parameters
		 */
		construct : function(element, options) {
			// Default stuff
			this.options = $.extend({}, this.options, options);
			this.element = element;
			this.domElement = element.get(0);
			if ( !$(this.element).hasClass('no-prevent-default')) {
				this.element.attr("href", "javascript:void(0);");
			}
			// local helper declarations
			var contentBox = $('<span class="tooltip-content"></span>'),
				accessibilityPrefix = $('<span class="hidden">'+ this.options.accessibilityPrefix +' </span>'),
				tickBorder = $('<span class="tooltip-tick-border"></span>'),
				tick = $('<span class="tooltip-tick"></span>'),
                closeBtn = $('<span class="toolTipClose visible-xs visible-sm hidden-md hidden-lg">×</span>'),
				individualAttributeContent = element.attr(this.options.contentSourceSelector), 
				titleAttributeContent = element.attr("title"),
				content = "";
			
			// Grab or create the wrapping tooltip bubble
			if(this.options.tooltipBubble === ""){
				bubble = $('<span class="tooltip-bubble"></span>');
			} else {
				bubble = element.find(this.options.tooltipBubble).first();
			}

			// Grab the content from ...
			if(this.options.contentSourceSelector === "" && titleAttributeContent !== 'undefined' && titleAttributeContent !== false){
				var closedisplay = '';
				if(eonde.Utils.isTouchDevice){
					closedisplay ='style="display: block"'
				}
				// ... the element's title attribute or assign an empty string
				content = '<span class="toolTipClose" '+closedisplay+'>×</span>'+titleAttributeContent;
				// remove the title to avoid native tooltips
				element.removeAttr("title");
			} else if(typeof individualAttributeContent !== 'undefined' && individualAttributeContent !== false){
				// ... any other passed attribute of the element
				content = '<span class="toolTipClose" '+closedisplay+'>×</span>'+individualAttributeContent;
			} else {
				// ... from an external element (outside of the tooltip context)
				content = '<span class="toolTipClose" '+closedisplay+'>×</span>'+$(this.options.contentSourceSelector).text();
			}
			
			// add content to the box
			contentBox.html(content);
			// add descriptive accessibility prefix
			contentBox.prepend(accessibilityPrefix);
			
			// append a default content box to safely separate style and content
			// append the tick boxes (little triangle) and set initial class
			bubble.append(contentBox).append(tickBorder).append(tick);

			// wrap linktext into definition tag and cache the node
			this.element.wrapInner('<dfn></dfn>');
			this.dfn = this.element.find("dfn");
			this.dfn.addClass("dfn-term");
			
			// append to the DOM element
			this.element.append(bubble);
			
			// caching some references
			this.bubble = bubble;
            this.closeBtn = closeBtn;
			this.contentBox = contentBox;
			this.content = content;
			this.tickBorder = tickBorder;
			this.tick = tick;
			this.gridelement = this.element.closest(".gridelement");
			this.isHiddenOverflow = (this.gridelement.css("overflow") === "hidden");
			
			// set the current body font-size for the content 
			// to decouple it from the parent element
			this.contentBox.css("font-size",$("body").css("font-size"));
			
			// Init object
			this.init();
			return this;
		},
		
		/**
		 * Init function
		 * 
		 * Filters header & body element, writes some ARIA attributes and
		 * binds the opener event.
		 */
		init : function() {

			// Cancel if any element is missing
			if (!this.bubble.length || !this.contentBox.length) {
				return;
			}
			// Write ARIA attributes
			this.writeAriaAttributes();
			
			// Hide tooltip for all (including screen readers)
			this.bubble.addClass("hide");
			
			// Bind interaction events to tooltip
			var self = this;
			//handle keyevents
			this.element.bind("keydown", function(e){
				self.handleKeyInput(e)
			});
			//handle hover behaviour

            var hasTouch = $("html").hasClass("touch");
            if (!hasTouch) {
                this.element.hover(function(e){
                    // mouse in
                    self.open();
                },function(e){
                    //mouse out
                    self.close();
                });
            } else {
				this.element.click(function(e){
                    if (self.bubble.hasClass("hide")) {
                        self.open();
                    } else {
						self.close();
                    }
                    e.preventDefault();
                    return false;
                });
                this.element.find(".toolTipClose").on("click",function(e) {
                    self.close();
                    e.preventDefault();
                    e.stopPropagation();
                    return false;
                });
            }

			//handle focus behaviour
			this.element.focusin(function(e){
				// mouse in
				self.open();
			}).focusout(function(e){
				//mouse out
				self.close();
			});
		},
		
		/**
		 * Writes the basic ARIA attributes
		 */
		writeAriaAttributes : function() {
			// generate unique ID for ARIA binding
			var tooltipId = this.bubble.generateId().attr("id");
			// tie tooltip elements together via aria relations
			this.dfn.attr("aria-describedby",tooltipId);
			this.bubble.attr("role","tooltip").attr("aria-hidden","true");
		},
		
		/**
		 * Binds a handler for all keyboard input (key events)
		 * 
		 * @param {event} keyEvent
		 */
		handleKeyInput : function(keyEvent) {
			switch(keyEvent.which){
				case 27 : this.close();
					break;
				default : 
					return
			}
		},
		
		/**
		 * Sets tooltip to target position, depending on the viewport
		 * and the scroll offset
		 */
		setPosition : function(){
			var scrollTop = $(window).scrollTop(),
				offsetParent = this.element.offsetParent().offset(),
				offsetTooltipAnchor = this.element.offset(),
				tooltipAnchorPositionX = offsetTooltipAnchor.left - offsetParent.left,
				tooltipAnchorPositionY = offsetTooltipAnchor.top - offsetParent.top, 
				tooltipAnchorHeight = this.element.height(), tooltipHeight;

			// if tooltip is hidden - we paint it invisible to the render tree
			// in order to determine the current height, otherwise we assign it immediately
			if(this.bubble.hasClass("hide")){
				tooltipHeight = this.bubble.css("opacity",0).removeClass("hide").height();
			} else {
				tooltipHeight = this.bubble.height();
			}

            var windowWidth = $(window).width();
				var tooltipwidth = this.bubble.width();
                var calculateLeft = tooltipAnchorPositionX + this.options.horizontalShift;
            	var dfnWidth = this.dfn.width();
            	//var anchorleftPos = this.element.offset().left;



            if($(window).width() <= 584){

                if(calculateLeft <= 0){
                    calculateLeft = 12;
                    $('.tooltip-tick, .tooltip-tick-border').css('left','10px');
                };
            }


            if($(window).width() >= 300 && $(window).width() <= 584 && tooltipAnchorPositionX >= 120){
				calculateLeft = tooltipAnchorPositionX + this.options.horizontalShift -100;
                $('.tooltip-tick, .tooltip-tick-border').css('left', 130);
            }



			// assign the propper tick to the bubble
			if(tooltipAnchorPositionY - scrollTop > tooltipHeight){
				// display tooltip above the anchor

				this.bubble.removeClass("top-tick").addClass("bottom-tick");

				this.bubble.css({
					"left" : calculateLeft,
					"top"  : tooltipAnchorPositionY - tooltipHeight + this.options.verticalShift
				});

                this.closeBtn.css({
					"top"  : '-35px'
				});

			} else {
				// display tooltip below the anchor
				this.bubble.removeClass("bottom-tick").addClass("top-tick");
				this.bubble.css({
					"left" : calculateLeft,
					"top"  : tooltipAnchorPositionY + tooltipAnchorHeight - this.options.verticalShift
				});
                this.closeBtn.css({
					"top"  : tooltipHeight
				});
			}
		}, 

		/**
		 * Opens the tooltip
		 */
		open : function() {
			// set position dynamically when opening because in
			// this way we catch any user controlled text resizing
			this.setPosition();
			
			// show tooltip
			this.bubble.css("opacity","").removeClass("hide").attr("aria-hidden","false");
			
			// author environment only!!!
			// disable the overflow:hidden property to prevent cutting off the tooltip
			if(this.isHiddenOverflow){
				this.gridelement.css("overflow", "visible");
			}
		},

		/**
		 * Closes the tooltip
		 */
		close : function() {
			//show tooltip
			this.bubble.addClass("hide").attr("aria-hidden","true");
			// author environment only!!!
			// enable the overflow:hidden property if it was set before
			if(this.isHiddenOverflow){
				this.gridelement.css("overflow", "hidden");
			}
			$('.tooltip-tick, .tooltip-tick-border').removeAttr('style');
		}

	};

	// Define plugin
	$.createPlugin("tooltip", eon.plugin.tooltip);

	// Controller
	eon.tooltips = (function () {
		var init = function() {
			$(".tooltip-anchor").tooltip().click(function(event) { 
                if($("html").hasClass("touch")){
					$('.tooltip-anchor').not(this).find('span.tooltip-bubble').addClass('hide');
                }
				if ( !$(this).hasClass('no-prevent-default')) {
					event.preventDefault(); 
				}
			});
		};
		return {
			init : init
		};
	}());
	
}(window, document, jQuery, eon));
// Bind init function to DOM load
jQuery(eon.tooltips.init);
var infoIcon = function () {
	$(document).find('button.eon-info-icon').each(function () {
		var $element = $(this);
		$element.popover({
			html: true,
			//title: eonde.i18n.get('infoicon.button.close.label1') + '<button class="close">&times</button>'
            title: '<button class="close">&times</button>'
		});
       $element.on('click', function (e) {
            $('button.eon-info-icon').not(this).popover('hide');
            $('button.eon-info-icon').not(this).siblings('.popover').css('display','none');
        });
        /*ova last icon not working ESSONG-5963*/
        $('.infocontainer h2 button.eon-info-icon').on('click', function (e) {
            $('button.eon-info-icon').siblings('.popover').css('display','block');
            $('button.eon-info-icon').parents().find('td .popover').css('display','none');
        });
    });
     $(document).on('touchstart click', 'div.popover h3.popover-title', function(e){
        $(this).parents('.popover.in').removeClass('in').removeAttr('style');
        return false;
    });
}
$(document).ready( function () {
    infoIcon();
});
/**
 * @license jahashtable, a JavaScript implementation of a hash table. It creates a single constructor function called
 * Hashtable in the global scope.
 *
 * http://www.timdown.co.uk/jshashtable/
 * Copyright 2013 Tim Down.
 * Version: 3.0
 * Build date: 17 July 2013
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var Hashtable=function(t){function n(t){return typeof t==p?t:""+t}function e(t){var r;return typeof t==p?t:typeof t.hashCode==y?(r=t.hashCode(),typeof r==p?r:e(r)):n(t)}function r(t,n){for(var e in n)n.hasOwnProperty(e)&&(t[e]=n[e])}function i(t,n){return t.equals(n)}function u(t,n){return typeof n.equals==y?n.equals(t):t===n}function o(n){return function(e){if(null===e)throw new Error("null is not a valid "+n);if(e===t)throw new Error(n+" must not be undefined")}}function s(t,n,e,r){this[0]=t,this.entries=[],this.addEntry(n,e),null!==r&&(this.getEqualityFunction=function(){return r})}function a(t){return function(n){for(var e,r=this.entries.length,i=this.getEqualityFunction(n);r--;)if(e=this.entries[r],i(n,e[0]))switch(t){case E:return!0;case K:return e;case q:return[r,e[1]]}return!1}}function l(t){return function(n){for(var e=n.length,r=0,i=this.entries,u=i.length;u>r;++r)n[e+r]=i[r][t]}}function f(t,n){for(var e,r=t.length;r--;)if(e=t[r],n===e[0])return r;return null}function h(t,n){var e=t[n];return e&&e instanceof s?e:null}function c(){var n=[],i={},u={replaceDuplicateKey:!0,hashCode:e,equals:null},o=arguments[0],a=arguments[1];a!==t?(u.hashCode=o,u.equals=a):o!==t&&r(u,o);var l=u.hashCode,c=u.equals;this.properties=u,this.put=function(t,e){g(t),d(e);var r,o,a=l(t),f=null;return r=h(i,a),r?(o=r.getEntryForKey(t),o?(u.replaceDuplicateKey&&(o[0]=t),f=o[1],o[1]=e):r.addEntry(t,e)):(r=new s(a,t,e,c),n.push(r),i[a]=r),f},this.get=function(t){g(t);var n=l(t),e=h(i,n);if(e){var r=e.getEntryForKey(t);if(r)return r[1]}return null},this.containsKey=function(t){g(t);var n=l(t),e=h(i,n);return e?e.containsKey(t):!1},this.containsValue=function(t){d(t);for(var e=n.length;e--;)if(n[e].containsValue(t))return!0;return!1},this.clear=function(){n.length=0,i={}},this.isEmpty=function(){return!n.length};var y=function(t){return function(){for(var e=[],r=n.length;r--;)n[r][t](e);return e}};this.keys=y("keys"),this.values=y("values"),this.entries=y("getEntries"),this.remove=function(t){g(t);var e,r=l(t),u=null,o=h(i,r);return o&&(u=o.removeEntryForKey(t),null!==u&&0==o.entries.length&&(e=f(n,r),n.splice(e,1),delete i[r])),u},this.size=function(){for(var t=0,e=n.length;e--;)t+=n[e].entries.length;return t}}var y="function",p="string",v="undefined";if(typeof encodeURIComponent==v||Array.prototype.splice===t||Object.prototype.hasOwnProperty===t)return null;var g=o("key"),d=o("value"),E=0,K=1,q=2;return s.prototype={getEqualityFunction:function(t){return typeof t.equals==y?i:u},getEntryForKey:a(K),getEntryAndIndexForKey:a(q),removeEntryForKey:function(t){var n=this.getEntryAndIndexForKey(t);return n?(this.entries.splice(n[0],1),n[1]):null},addEntry:function(t,n){this.entries.push([t,n])},keys:l(0),values:l(1),getEntries:function(t){for(var n=t.length,e=0,r=this.entries,i=r.length;i>e;++e)t[n+e]=r[e].slice(0)},containsKey:a(E),containsValue:function(t){for(var n=this.entries,e=n.length;e--;)if(t===n[e][1])return!0;return!1}},c.prototype={each:function(t){for(var n,e=this.entries(),r=e.length;r--;)n=e[r],t(n[0],n[1])},equals:function(t){var n,e,r,i=this.size();if(i==t.size()){for(n=this.keys();i--;)if(e=n[i],r=t.get(e),null===r||r!==this.get(e))return!1;return!0}return!1},putAll:function(t,n){for(var e,r,i,u,o=t.entries(),s=o.length,a=typeof n==y;s--;)e=o[s],r=e[0],i=e[1],a&&(u=this.get(r))&&(i=n(r,u,i)),this.put(r,i)},clone:function(){var t=new c(this.properties);return t.putAll(this),t}},c.prototype.toQueryString=function(){for(var t,e=this.entries(),r=e.length,i=[];r--;)t=e[r],i[r]=encodeURIComponent(n(t[0]))+"="+encodeURIComponent(n(t[1]));return i.join("&")},c}();
(function(k){var a=new Hashtable();var f=["ae","au","ca","cn","eg","gb","hk","il","in","jp","sk","th","tw","us"];var b=["at","br","de","dk","es","gr","it","nl","pt","tr","vn"];var i=["bg","cz","fi","fr","no","pl","ru","se"];var d=["ch"];var g=[[".",","],[",","."],[","," "],[".","'"]];var c=[f,b,i,d];function j(n,l,m){this.dec=n;this.group=l;this.neg=m}function h(){for(var l=0;l<c.length;l++){var n=c[l];for(var m=0;m<n.length;m++){a.put(n[m],l)}}}function e(l,r){if(a.size()==0){h()}var q=".";var o=",";var p="-";if(r==false){if(l.indexOf("_")!=-1){l=l.split("_")[1].toLowerCase()}else{if(l.indexOf("-")!=-1){l=l.split("-")[1].toLowerCase()}}}var n=a.get(l);if(n){var m=g[n];if(m){q=m[0];o=m[1]}}return new j(q,o,p)}k.fn.formatNumber=function(l,m,n){return this.each(function(){if(m==null){m=true}if(n==null){n=true}var p;if(k(this).is(":input")){p=new String(k(this).val())}else{p=new String(k(this).text())}var o=k.formatNumber(p,l);if(m){if(k(this).is(":input")){k(this).val(o)}else{k(this).text(o)}}if(n){return o}})};k.formatNumber=function(q,w){var w=k.extend({},k.fn.formatNumber.defaults,w);var l=e(w.locale.toLowerCase(),w.isFullLocale);var n=l.dec;var u=l.group;var o=l.neg;var m="0#-,.";var t="";var s=false;for(var r=0;r<w.format.length;r++){if(m.indexOf(w.format.charAt(r))==-1){t=t+w.format.charAt(r)}else{if(r==0&&w.format.charAt(r)=="-"){s=true;continue}else{break}}}var v="";for(var r=w.format.length-1;r>=0;r--){if(m.indexOf(w.format.charAt(r))==-1){v=w.format.charAt(r)+v}else{break}}w.format=w.format.substring(t.length);w.format=w.format.substring(0,w.format.length-v.length);var p=new Number(q);return k._formatNumber(p,w,v,t,s)};k._formatNumber=function(m,q,n,H,t){var q=k.extend({},k.fn.formatNumber.defaults,q);var F=e(q.locale.toLowerCase(),q.isFullLocale);var E=F.dec;var w=F.group;var l=F.neg;if(q.overrideGroupSep!=null){w=q.overrideGroupSep}if(q.overrideDecSep!=null){E=q.overrideDecSep}if(q.overrideNegSign!=null){l=q.overrideNegSign}var z=false;if(isNaN(m)){if(q.nanForceZero==true){m=0;z=true}else{return""}}if(q.isPercentage==true||(q.autoDetectPercentage&&n.charAt(n.length-1)=="%")){m=m*100}var B="";if(q.format.indexOf(".")>-1){var G=E;var u=q.format.substring(q.format.lastIndexOf(".")+1);if(q.round==true){m=new Number(m.toFixed(u.length))}else{var L=m.toString();if(L.lastIndexOf(".")>0){L=L.substring(0,L.lastIndexOf(".")+u.length+1)}m=new Number(L)}var A=new Number(m.toString().substring(m.toString().indexOf(".")));decimalString=new String(A.toFixed(u.length));decimalString=decimalString.substring(decimalString.lastIndexOf(".")+1);for(var I=0;I<u.length;I++){if(u.charAt(I)=="#"&&decimalString.charAt(I)!="0"){G+=decimalString.charAt(I);continue}else{if(u.charAt(I)=="#"&&decimalString.charAt(I)=="0"){var r=decimalString.substring(I);if(r.match("[1-9]")){G+=decimalString.charAt(I);continue}else{break}}else{if(u.charAt(I)=="0"){G+=decimalString.charAt(I)}}}}B+=G}else{m=Math.round(m)}var v=Math.floor(m);if(m<0){v=Math.ceil(m)}var D="";if(q.format.indexOf(".")==-1){D=q.format}else{D=q.format.substring(0,q.format.indexOf("."))}var K="";if(!(v==0&&D.substr(D.length-1)=="#")||z){var x=new String(Math.abs(v));var p=9999;if(D.lastIndexOf(",")!=-1){p=D.length-D.lastIndexOf(",")-1}var o=0;for(var I=x.length-1;I>-1;I--){K=x.charAt(I)+K;o++;if(o==p&&I!=0){K=w+K;o=0}}if(D.length>K.length){var J=D.indexOf("0");if(J!=-1){var C=D.length-J;var s=D.length-K.length-1;while(K.length<C){var y=D.charAt(s);if(y==","){y=w}K=y+K;s--}}}}if(!K&&D.indexOf("0",D.length-1)!==-1){K="0"}B=K+B;if(m<0&&t&&H.length>0){H=l+H}else{if(m<0){B=l+B}}if(!q.decimalSeparatorAlwaysShown){if(B.lastIndexOf(E)==B.length-1){B=B.substring(0,B.length-1)}}B=H+B+n;return B};k.fn.parseNumber=function(l,m,o){if(m==null){m=true}if(o==null){o=true}var p;if(k(this).is(":input")){p=new String(k(this).val())}else{p=new String(k(this).text())}var n=k.parseNumber(p,l);if(n){if(m){if(k(this).is(":input")){k(this).val(n.toString())}else{k(this).text(n.toString())}}if(o){return n}}};k.parseNumber=function(u,z){var z=k.extend({},k.fn.parseNumber.defaults,z);var m=e(z.locale.toLowerCase(),z.isFullLocale);var r=m.dec;var x=m.group;var s=m.neg;if(z.overrideGroupSep!=null){x=z.overrideGroupSep}if(z.overrideDecSep!=null){r=z.overrideDecSep}if(z.overrideNegSign!=null){s=z.overrideNegSign}var l="1234567890";var p=".-";var n=z.strict;while(u.indexOf(x)>-1){u=u.replace(x,"")}u=u.replace(r,".").replace(s,"-");var y="";var q=false;if(z.isPercentage==true||(z.autoDetectPercentage&&u.charAt(u.length-1)=="%")){q=true}for(var v=0;v<u.length;v++){if(l.indexOf(u.charAt(v))>-1){y=y+u.charAt(v)}else{if(p.indexOf(u.charAt(v))>-1){y=y+u.charAt(v);p=p.replace(u.charAt(v),"")}else{if(z.allowPostfix){break}else{if(n){y="NaN";break}}}}}var t=new Number(y);if(q){t=t/100;var w=y.indexOf(".");if(w!=-1){var o=y.length-w-1;t=t.toFixed(o+2)}else{t=t.toFixed(2)}}return t};k.fn.parseNumber.defaults={locale:"us",decimalSeparatorAlwaysShown:false,isPercentage:false,autoDetectPercentage:true,isFullLocale:false,strict:false,overrideGroupSep:null,overrideDecSep:null,overrideNegSign:null,allowPostfix:false};k.fn.formatNumber.defaults={format:"#,###.00",locale:"us",decimalSeparatorAlwaysShown:false,nanForceZero:true,round:true,isFullLocale:false,overrideGroupSep:null,overrideDecSep:null,overrideNegSign:null,isPercentage:false,autoDetectPercentage:true};Number.prototype.toFixed=function(l){return k._roundNumber(this,l)};k._roundNumber=function(n,m){var l=Math.pow(10,m||0);var o=String(Math.round(n*l)/l);if(m>0){var p=o.indexOf(".");if(p==-1){o+=".";p=0}else{p=o.length-(p+1)}while(p<m){o+="0";p++}}return o}})(jQuery);
eonde = window.eonde || {};
eonde.regionalnav = {};
eonde.regionalnav = {
     updateNavigation : function(data) {
        $('.left-nav li[data-id]').addClass('hide');
        $('.eondeFooter li[data-id]').addClass('hide');
        $('.eondeFooter div[data-id]').addClass('hide');
        $('.dl-submenu li[data-id]').addClass('hide');

         $('.sitemapContainer li[data-id]').each(function() {
             if($(this).is("li") && $(this).is(":last-child")) {
                 $(this).prev().css("border-bottom","0");
             }
	             $(this).addClass('hide');
         });

				if( data != null || data != "") {
					$.each(data, function(k, v) {
						$('.left-nav li[data-id]').each(function(){
							var regionalizedNav = $(this).attr('data-id');
							if(k === regionalizedNav){
								$(this).removeClass('hide');
							}
						});
					});
					
					$.each(data, function(k, v) {
						$('.dl-submenu li[data-id]').each(function(){
							var regionalizedNav = $(this).attr('data-id');
							if(k === regionalizedNav){
								$(this).removeClass('hide');
							}
						});
					});

                    $.each(data, function(k, v) {
						$('.eondeFooter li[data-id]').each(function(){
							var regionalizedNav = $(this).attr('data-id');
							if(k === regionalizedNav){
								$(this).removeClass('hide');
							}
						});
					});

                    $.each(data, function(k, v) {
						$('.eondeFooter div[data-id]').each(function(){
							var regionalizedNav = $(this).attr('data-id');
							if(k === regionalizedNav){
								$(this).removeClass('hide');
							}
						});
					});

                    $.each(data, function(k, v) {
						$('.sitemapContainer li[data-id]').each(function(){
							var regionalizedNav = $(this).attr('data-id');
							if(k === regionalizedNav){
								if($(this).is("li") && $(this).is(":last-child")) {
                 							$(this).prev().css("border-bottom","1px solid #D5D5D5");
             					}					
								$(this).removeClass('hide');

							}
						});
					});
				}

    },
    getNav : function(){
        var $userType=$('.nav_userType').attr('data-attr');
        var zip = eonde.Utils.getIStorageValue($userType + "[zip]");
		if(zip != null) {
			$.ajax({
				dataType: "json",
				type : 'GET',
				url: "/etc/eonde/getnavigation."+zip+".json"
			}).done( function(data) {
                eonde.regionalnav.updateNavigation(data);

			}).fail(function() {
			});
		}
        else {
            var data={};
			eonde.regionalnav.updateNavigation(data);
        }
    }

};
$(document).ready(function(){
    if($('.dl-submenu')[0]){
        eonde.regionalnav.getNav();
    } 
});
/*! Copyright 2012, Ben Lin (http://dreamerslab.com/)
 * Licensed under the MIT License (LICENSE.txt).
 *
 * Version: 1.0.16
 *
 * Requires: jQuery >= 1.2.3
 */
(function(a){a.fn.addBack=a.fn.addBack||a.fn.andSelf;
a.fn.extend({actual:function(b,l){if(!this[b]){throw'$.actual => The jQuery method "'+b+'" you called does not exist';}var f={absolute:false,clone:false,includeMargin:false};
var i=a.extend(f,l);var e=this.eq(0);var h,j;if(i.clone===true){h=function(){var m="position: absolute !important; top: -1000 !important; ";e=e.clone().attr("style",m).appendTo("body");
};j=function(){e.remove();};}else{var g=[];var d="";var c;h=function(){c=e.parents().addBack().filter(":hidden");d+="visibility: hidden !important; display: block !important; ";
if(i.absolute===true){d+="position: absolute !important; ";}c.each(function(){var m=a(this);var n=m.attr("style");g.push(n);m.attr("style",n?n+";"+d:d);
});};j=function(){c.each(function(m){var o=a(this);var n=g[m];if(n===undefined){o.removeAttr("style");}else{o.attr("style",n);}});};}h();var k=/(outer)/.test(b)?e[b](i.includeMargin):e[b]();
j();return k;}});})(jQuery);
/*!
* ie9fix.js
* This script is for IE9. It doubles the number of selectors allowed by default
* in single CSS file from 4095 to 8190
* @date     2014-04-09 
* @author   SAMEER GUPTA, SapientNitro <sgupta139@sapient.com>
* @NOTE     
*/

function cssLimitCheck() {
    if (!document.styleSheets) {
        return;
    }

    for (var i = 0; i < document.styleSheets.length; i++) {
        processSheet(document.styleSheets[i]);
    }
    
    function processSheet(sheet) {
        if (sheet.href==null || sheet.cssRules.length===0) {
            return;
        }

        $.get(sheet.href, function(response) {
            response = response.replace(/(\/\*)(.|\r|\n)*?(\*\/)/g, "\n").replace(/\s*{/, "{");
            processCSSText(response, getValidLastCSSRule(sheet.cssRules));
        });
    }
    
    function processCSSText(cssText, lastRule) {
        if (cssText===null || lastRule===null) {
            return;
        }
        var idx = cssText.indexOf(lastRule.selectorText);
		if (idx == -1) {
			idx = cssText.indexOf(lastRule.selectorText.replace(/[\s]>[\s]/g,">").replace(/[\s]+[\s]/g,"+").replace(/[\s]~[\s]/g,"~"));
		}
        if (idx!==-1) {
            var extraCss = cssText.substring(idx);
            if (extraCss.length > 0) {
                var ss = document.createStyleSheet();
                ss.cssText = extraCss;
            }
        }
    }
    
    /*
     * IE9 changes order of selectors, so find one where change will not occur
     * IE9 changes selectors like .one.two to .two.one, so we will ignore such selectors
     */
    function getValidLastCSSRule(rules) {
        var lastRule;
        for (var i=rules.length-1; i>0; i--) {
            var rule = rules[i];
            if (!(rule instanceof CSSStyleRule)) {
                continue;
            }
            var parts = rule.selectorText.split(/ |,/);
            var hasCorrectPattern = true;
            for (var j=0; j<parts.length; j++) {
                if (parts[j].indexOf(".", 1)>-1) {
                    hasCorrectPattern = false;
                    break;
                }
            }
            if (hasCorrectPattern) {
                lastRule = rule;
                break;
            }
        }
        return lastRule;
    }

};
$(function() {
    if (/MSIE 9/.test(window.navigator.appVersion)) {
    	cssLimitCheck();
    }
});

/*!
 * Isotope PACKAGED v2.2.2
 *
 * Licensed GPLv3 for open source use
 * or Isotope Commercial License for commercial use
 *
 * http://isotope.metafizzy.co
 * Copyright 2015 Metafizzy
 */

!function(a){function b(){}function c(a){function c(b){b.prototype.option||(b.prototype.option=function(b){a.isPlainObject(b)&&(this.options=a.extend(!0,this.options,b))})}function e(b,c){a.fn[b]=function(e){if("string"==typeof e){for(var g=d.call(arguments,1),h=0,i=this.length;i>h;h++){var j=this[h],k=a.data(j,b);if(k)if(a.isFunction(k[e])&&"_"!==e.charAt(0)){var l=k[e].apply(k,g);if(void 0!==l)return l}else f("no such method '"+e+"' for "+b+" instance");else f("cannot call methods on "+b+" prior to initialization; attempted to call '"+e+"'")}return this}return this.each(function(){var d=a.data(this,b);d?(d.option(e),d._init()):(d=new c(this,e),a.data(this,b,d))})}}if(a){var f="undefined"==typeof console?b:function(a){console.error(a)};return a.bridget=function(a,b){c(b),e(a,b)},a.bridget}}var d=Array.prototype.slice;"function"==typeof define&&define.amd?define("jquery-bridget/jquery.bridget",["jquery"],c):c("object"==typeof exports?require("jquery"):a.jQuery)}(window),function(a){function b(b){var c=a.event;return c.target=c.target||c.srcElement||b,c}var c=document.documentElement,d=function(){};c.addEventListener?d=function(a,b,c){a.addEventListener(b,c,!1)}:c.attachEvent&&(d=function(a,c,d){a[c+d]=d.handleEvent?function(){var c=b(a);d.handleEvent.call(d,c)}:function(){var c=b(a);d.call(a,c)},a.attachEvent("on"+c,a[c+d])});var e=function(){};c.removeEventListener?e=function(a,b,c){a.removeEventListener(b,c,!1)}:c.detachEvent&&(e=function(a,b,c){a.detachEvent("on"+b,a[b+c]);try{delete a[b+c]}catch(d){a[b+c]=void 0}});var f={bind:d,unbind:e};"function"==typeof define&&define.amd?define("eventie/eventie",f):"object"==typeof exports?module.exports=f:a.eventie=f}(window),function(){"use strict";function a(){}function b(a,b){for(var c=a.length;c--;)if(a[c].listener===b)return c;return-1}function c(a){return function(){return this[a].apply(this,arguments)}}var d=a.prototype,e=this,f=e.EventEmitter;d.getListeners=function(a){var b,c,d=this._getEvents();if(a instanceof RegExp){b={};for(c in d)d.hasOwnProperty(c)&&a.test(c)&&(b[c]=d[c])}else b=d[a]||(d[a]=[]);return b},d.flattenListeners=function(a){var b,c=[];for(b=0;b<a.length;b+=1)c.push(a[b].listener);return c},d.getListenersAsObject=function(a){var b,c=this.getListeners(a);return c instanceof Array&&(b={},b[a]=c),b||c},d.addListener=function(a,c){var d,e=this.getListenersAsObject(a),f="object"==typeof c;for(d in e)e.hasOwnProperty(d)&&-1===b(e[d],c)&&e[d].push(f?c:{listener:c,once:!1});return this},d.on=c("addListener"),d.addOnceListener=function(a,b){return this.addListener(a,{listener:b,once:!0})},d.once=c("addOnceListener"),d.defineEvent=function(a){return this.getListeners(a),this},d.defineEvents=function(a){for(var b=0;b<a.length;b+=1)this.defineEvent(a[b]);return this},d.removeListener=function(a,c){var d,e,f=this.getListenersAsObject(a);for(e in f)f.hasOwnProperty(e)&&(d=b(f[e],c),-1!==d&&f[e].splice(d,1));return this},d.off=c("removeListener"),d.addListeners=function(a,b){return this.manipulateListeners(!1,a,b)},d.removeListeners=function(a,b){return this.manipulateListeners(!0,a,b)},d.manipulateListeners=function(a,b,c){var d,e,f=a?this.removeListener:this.addListener,g=a?this.removeListeners:this.addListeners;if("object"!=typeof b||b instanceof RegExp)for(d=c.length;d--;)f.call(this,b,c[d]);else for(d in b)b.hasOwnProperty(d)&&(e=b[d])&&("function"==typeof e?f.call(this,d,e):g.call(this,d,e));return this},d.removeEvent=function(a){var b,c=typeof a,d=this._getEvents();if("string"===c)delete d[a];else if(a instanceof RegExp)for(b in d)d.hasOwnProperty(b)&&a.test(b)&&delete d[b];else delete this._events;return this},d.removeAllListeners=c("removeEvent"),d.emitEvent=function(a,b){var c,d,e,f,g=this.getListenersAsObject(a);for(e in g)if(g.hasOwnProperty(e))for(d=g[e].length;d--;)c=g[e][d],c.once===!0&&this.removeListener(a,c.listener),f=c.listener.apply(this,b||[]),f===this._getOnceReturnValue()&&this.removeListener(a,c.listener);return this},d.trigger=c("emitEvent"),d.emit=function(a){var b=Array.prototype.slice.call(arguments,1);return this.emitEvent(a,b)},d.setOnceReturnValue=function(a){return this._onceReturnValue=a,this},d._getOnceReturnValue=function(){return this.hasOwnProperty("_onceReturnValue")?this._onceReturnValue:!0},d._getEvents=function(){return this._events||(this._events={})},a.noConflict=function(){return e.EventEmitter=f,a},"function"==typeof define&&define.amd?define("eventEmitter/EventEmitter",[],function(){return a}):"object"==typeof module&&module.exports?module.exports=a:e.EventEmitter=a}.call(this),function(a){function b(a){if(a){if("string"==typeof d[a])return a;a=a.charAt(0).toUpperCase()+a.slice(1);for(var b,e=0,f=c.length;f>e;e++)if(b=c[e]+a,"string"==typeof d[b])return b}}var c="Webkit Moz ms Ms O".split(" "),d=document.documentElement.style;"function"==typeof define&&define.amd?define("get-style-property/get-style-property",[],function(){return b}):"object"==typeof exports?module.exports=b:a.getStyleProperty=b}(window),function(a,b){function c(a){var b=parseFloat(a),c=-1===a.indexOf("%")&&!isNaN(b);return c&&b}function d(){}function e(){for(var a={width:0,height:0,innerWidth:0,innerHeight:0,outerWidth:0,outerHeight:0},b=0,c=h.length;c>b;b++){var d=h[b];a[d]=0}return a}function f(b){function d(){if(!m){m=!0;var d=a.getComputedStyle;if(j=function(){var a=d?function(a){return d(a,null)}:function(a){return a.currentStyle};return function(b){var c=a(b);return c||g("Style returned "+c+". Are you running this code in a hidden iframe on Firefox? See http://bit.ly/getsizebug1"),c}}(),k=b("boxSizing")){var e=document.createElement("div");e.style.width="200px",e.style.padding="1px 2px 3px 4px",e.style.borderStyle="solid",e.style.borderWidth="1px 2px 3px 4px",e.style[k]="border-box";var f=document.body||document.documentElement;f.appendChild(e);var h=j(e);l=200===c(h.width),f.removeChild(e)}}}function f(a){if(d(),"string"==typeof a&&(a=document.querySelector(a)),a&&"object"==typeof a&&a.nodeType){var b=j(a);if("none"===b.display)return e();var f={};f.width=a.offsetWidth,f.height=a.offsetHeight;for(var g=f.isBorderBox=!(!k||!b[k]||"border-box"!==b[k]),m=0,n=h.length;n>m;m++){var o=h[m],p=b[o];p=i(a,p);var q=parseFloat(p);f[o]=isNaN(q)?0:q}var r=f.paddingLeft+f.paddingRight,s=f.paddingTop+f.paddingBottom,t=f.marginLeft+f.marginRight,u=f.marginTop+f.marginBottom,v=f.borderLeftWidth+f.borderRightWidth,w=f.borderTopWidth+f.borderBottomWidth,x=g&&l,y=c(b.width);y!==!1&&(f.width=y+(x?0:r+v));var z=c(b.height);return z!==!1&&(f.height=z+(x?0:s+w)),f.innerWidth=f.width-(r+v),f.innerHeight=f.height-(s+w),f.outerWidth=f.width+t,f.outerHeight=f.height+u,f}}function i(b,c){if(a.getComputedStyle||-1===c.indexOf("%"))return c;var d=b.style,e=d.left,f=b.runtimeStyle,g=f&&f.left;return g&&(f.left=b.currentStyle.left),d.left=c,c=d.pixelLeft,d.left=e,g&&(f.left=g),c}var j,k,l,m=!1;return f}var g="undefined"==typeof console?d:function(a){console.error(a)},h=["paddingLeft","paddingRight","paddingTop","paddingBottom","marginLeft","marginRight","marginTop","marginBottom","borderLeftWidth","borderRightWidth","borderTopWidth","borderBottomWidth"];"function"==typeof define&&define.amd?define("get-size/get-size",["get-style-property/get-style-property"],f):"object"==typeof exports?module.exports=f(require("desandro-get-style-property")):a.getSize=f(a.getStyleProperty)}(window),function(a){function b(a){"function"==typeof a&&(b.isReady?a():g.push(a))}function c(a){var c="readystatechange"===a.type&&"complete"!==f.readyState;b.isReady||c||d()}function d(){b.isReady=!0;for(var a=0,c=g.length;c>a;a++){var d=g[a];d()}}function e(e){return"complete"===f.readyState?d():(e.bind(f,"DOMContentLoaded",c),e.bind(f,"readystatechange",c),e.bind(a,"load",c)),b}var f=a.document,g=[];b.isReady=!1,"function"==typeof define&&define.amd?define("doc-ready/doc-ready",["eventie/eventie"],e):"object"==typeof exports?module.exports=e(require("eventie")):a.docReady=e(a.eventie)}(window),function(a){"use strict";function b(a,b){return a[g](b)}function c(a){if(!a.parentNode){var b=document.createDocumentFragment();b.appendChild(a)}}function d(a,b){c(a);for(var d=a.parentNode.querySelectorAll(b),e=0,f=d.length;f>e;e++)if(d[e]===a)return!0;return!1}function e(a,d){return c(a),b(a,d)}var f,g=function(){if(a.matches)return"matches";if(a.matchesSelector)return"matchesSelector";for(var b=["webkit","moz","ms","o"],c=0,d=b.length;d>c;c++){var e=b[c],f=e+"MatchesSelector";if(a[f])return f}}();if(g){var h=document.createElement("div"),i=b(h,"div");f=i?b:e}else f=d;"function"==typeof define&&define.amd?define("matches-selector/matches-selector",[],function(){return f}):"object"==typeof exports?module.exports=f:window.matchesSelector=f}(Element.prototype),function(a,b){"use strict";"function"==typeof define&&define.amd?define("fizzy-ui-utils/utils",["doc-ready/doc-ready","matches-selector/matches-selector"],function(c,d){return b(a,c,d)}):"object"==typeof exports?module.exports=b(a,require("doc-ready"),require("desandro-matches-selector")):a.fizzyUIUtils=b(a,a.docReady,a.matchesSelector)}(window,function(a,b,c){var d={};d.extend=function(a,b){for(var c in b)a[c]=b[c];return a},d.modulo=function(a,b){return(a%b+b)%b};var e=Object.prototype.toString;d.isArray=function(a){return"[object Array]"==e.call(a)},d.makeArray=function(a){var b=[];if(d.isArray(a))b=a;else if(a&&"number"==typeof a.length)for(var c=0,e=a.length;e>c;c++)b.push(a[c]);else b.push(a);return b},d.indexOf=Array.prototype.indexOf?function(a,b){return a.indexOf(b)}:function(a,b){for(var c=0,d=a.length;d>c;c++)if(a[c]===b)return c;return-1},d.removeFrom=function(a,b){var c=d.indexOf(a,b);-1!=c&&a.splice(c,1)},d.isElement="function"==typeof HTMLElement||"object"==typeof HTMLElement?function(a){return a instanceof HTMLElement}:function(a){return a&&"object"==typeof a&&1==a.nodeType&&"string"==typeof a.nodeName},d.setText=function(){function a(a,c){b=b||(void 0!==document.documentElement.textContent?"textContent":"innerText"),a[b]=c}var b;return a}(),d.getParent=function(a,b){for(;a!=document.body;)if(a=a.parentNode,c(a,b))return a},d.getQueryElement=function(a){return"string"==typeof a?document.querySelector(a):a},d.handleEvent=function(a){var b="on"+a.type;this[b]&&this[b](a)},d.filterFindElements=function(a,b){a=d.makeArray(a);for(var e=[],f=0,g=a.length;g>f;f++){var h=a[f];if(d.isElement(h))if(b){c(h,b)&&e.push(h);for(var i=h.querySelectorAll(b),j=0,k=i.length;k>j;j++)e.push(i[j])}else e.push(h)}return e},d.debounceMethod=function(a,b,c){var d=a.prototype[b],e=b+"Timeout";a.prototype[b]=function(){var a=this[e];a&&clearTimeout(a);var b=arguments,f=this;this[e]=setTimeout(function(){d.apply(f,b),delete f[e]},c||100)}},d.toDashed=function(a){return a.replace(/(.)([A-Z])/g,function(a,b,c){return b+"-"+c}).toLowerCase()};var f=a.console;return d.htmlInit=function(c,e){b(function(){for(var b=d.toDashed(e),g=document.querySelectorAll(".js-"+b),h="data-"+b+"-options",i=0,j=g.length;j>i;i++){var k,l=g[i],m=l.getAttribute(h);try{k=m&&JSON.parse(m)}catch(n){f&&f.error("Error parsing "+h+" on "+l.nodeName.toLowerCase()+(l.id?"#"+l.id:"")+": "+n);continue}var o=new c(l,k),p=a.jQuery;p&&p.data(l,e,o)}})},d}),function(a,b){"use strict";"function"==typeof define&&define.amd?define("outlayer/item",["eventEmitter/EventEmitter","get-size/get-size","get-style-property/get-style-property","fizzy-ui-utils/utils"],function(c,d,e,f){return b(a,c,d,e,f)}):"object"==typeof exports?module.exports=b(a,require("wolfy87-eventemitter"),require("get-size"),require("desandro-get-style-property"),require("fizzy-ui-utils")):(a.Outlayer={},a.Outlayer.Item=b(a,a.EventEmitter,a.getSize,a.getStyleProperty,a.fizzyUIUtils))}(window,function(a,b,c,d,e){"use strict";function f(a){for(var b in a)return!1;return b=null,!0}function g(a,b){a&&(this.element=a,this.layout=b,this.position={x:0,y:0},this._create())}function h(a){return a.replace(/([A-Z])/g,function(a){return"-"+a.toLowerCase()})}var i=a.getComputedStyle,j=i?function(a){return i(a,null)}:function(a){return a.currentStyle},k=d("transition"),l=d("transform"),m=k&&l,n=!!d("perspective"),o={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"otransitionend",transition:"transitionend"}[k],p=["transform","transition","transitionDuration","transitionProperty"],q=function(){for(var a={},b=0,c=p.length;c>b;b++){var e=p[b],f=d(e);f&&f!==e&&(a[e]=f)}return a}();e.extend(g.prototype,b.prototype),g.prototype._create=function(){this._transn={ingProperties:{},clean:{},onEnd:{}},this.css({position:"absolute"})},g.prototype.handleEvent=function(a){var b="on"+a.type;this[b]&&this[b](a)},g.prototype.getSize=function(){this.size=c(this.element)},g.prototype.css=function(a){var b=this.element.style;for(var c in a){var d=q[c]||c;b[d]=a[c]}},g.prototype.getPosition=function(){var a=j(this.element),b=this.layout.options,c=b.isOriginLeft,d=b.isOriginTop,e=a[c?"left":"right"],f=a[d?"top":"bottom"],g=this.layout.size,h=-1!=e.indexOf("%")?parseFloat(e)/100*g.width:parseInt(e,10),i=-1!=f.indexOf("%")?parseFloat(f)/100*g.height:parseInt(f,10);h=isNaN(h)?0:h,i=isNaN(i)?0:i,h-=c?g.paddingLeft:g.paddingRight,i-=d?g.paddingTop:g.paddingBottom,this.position.x=h,this.position.y=i},g.prototype.layoutPosition=function(){var a=this.layout.size,b=this.layout.options,c={},d=b.isOriginLeft?"paddingLeft":"paddingRight",e=b.isOriginLeft?"left":"right",f=b.isOriginLeft?"right":"left",g=this.position.x+a[d];c[e]=this.getXValue(g),c[f]="";var h=b.isOriginTop?"paddingTop":"paddingBottom",i=b.isOriginTop?"top":"bottom",j=b.isOriginTop?"bottom":"top",k=this.position.y+a[h];c[i]=this.getYValue(k),c[j]="",this.css(c),this.emitEvent("layout",[this])},g.prototype.getXValue=function(a){var b=this.layout.options;return b.percentPosition&&!b.isHorizontal?a/this.layout.size.width*100+"%":a+"px"},g.prototype.getYValue=function(a){var b=this.layout.options;return b.percentPosition&&b.isHorizontal?a/this.layout.size.height*100+"%":a+"px"},g.prototype._transitionTo=function(a,b){this.getPosition();var c=this.position.x,d=this.position.y,e=parseInt(a,10),f=parseInt(b,10),g=e===this.position.x&&f===this.position.y;if(this.setPosition(a,b),g&&!this.isTransitioning)return void this.layoutPosition();var h=a-c,i=b-d,j={};j.transform=this.getTranslate(h,i),this.transition({to:j,onTransitionEnd:{transform:this.layoutPosition},isCleaning:!0})},g.prototype.getTranslate=function(a,b){var c=this.layout.options;return a=c.isOriginLeft?a:-a,b=c.isOriginTop?b:-b,n?"translate3d("+a+"px, "+b+"px, 0)":"translate("+a+"px, "+b+"px)"},g.prototype.goTo=function(a,b){this.setPosition(a,b),this.layoutPosition()},g.prototype.moveTo=m?g.prototype._transitionTo:g.prototype.goTo,g.prototype.setPosition=function(a,b){this.position.x=parseInt(a,10),this.position.y=parseInt(b,10)},g.prototype._nonTransition=function(a){this.css(a.to),a.isCleaning&&this._removeStyles(a.to);for(var b in a.onTransitionEnd)a.onTransitionEnd[b].call(this)},g.prototype._transition=function(a){if(!parseFloat(this.layout.options.transitionDuration))return void this._nonTransition(a);var b=this._transn;for(var c in a.onTransitionEnd)b.onEnd[c]=a.onTransitionEnd[c];for(c in a.to)b.ingProperties[c]=!0,a.isCleaning&&(b.clean[c]=!0);if(a.from){this.css(a.from);var d=this.element.offsetHeight;d=null}this.enableTransition(a.to),this.css(a.to),this.isTransitioning=!0};var r="opacity,"+h(q.transform||"transform");g.prototype.enableTransition=function(){this.isTransitioning||(this.css({transitionProperty:r,transitionDuration:this.layout.options.transitionDuration}),this.element.addEventListener(o,this,!1))},g.prototype.transition=g.prototype[k?"_transition":"_nonTransition"],g.prototype.onwebkitTransitionEnd=function(a){this.ontransitionend(a)},g.prototype.onotransitionend=function(a){this.ontransitionend(a)};var s={"-webkit-transform":"transform","-moz-transform":"transform","-o-transform":"transform"};g.prototype.ontransitionend=function(a){if(a.target===this.element){var b=this._transn,c=s[a.propertyName]||a.propertyName;if(delete b.ingProperties[c],f(b.ingProperties)&&this.disableTransition(),c in b.clean&&(this.element.style[a.propertyName]="",delete b.clean[c]),c in b.onEnd){var d=b.onEnd[c];d.call(this),delete b.onEnd[c]}this.emitEvent("transitionEnd",[this])}},g.prototype.disableTransition=function(){this.removeTransitionStyles(),this.element.removeEventListener(o,this,!1),this.isTransitioning=!1},g.prototype._removeStyles=function(a){var b={};for(var c in a)b[c]="";this.css(b)};var t={transitionProperty:"",transitionDuration:""};return g.prototype.removeTransitionStyles=function(){this.css(t)},g.prototype.removeElem=function(){this.element.parentNode.removeChild(this.element),this.css({display:""}),this.emitEvent("remove",[this])},g.prototype.remove=function(){if(!k||!parseFloat(this.layout.options.transitionDuration))return void this.removeElem();var a=this;this.once("transitionEnd",function(){a.removeElem()}),this.hide()},g.prototype.reveal=function(){delete this.isHidden,this.css({display:""});var a=this.layout.options,b={},c=this.getHideRevealTransitionEndProperty("visibleStyle");b[c]=this.onRevealTransitionEnd,this.transition({from:a.hiddenStyle,to:a.visibleStyle,isCleaning:!0,onTransitionEnd:b})},g.prototype.onRevealTransitionEnd=function(){this.isHidden||this.emitEvent("reveal")},g.prototype.getHideRevealTransitionEndProperty=function(a){var b=this.layout.options[a];if(b.opacity)return"opacity";for(var c in b)return c},g.prototype.hide=function(){this.isHidden=!0,this.css({display:""});var a=this.layout.options,b={},c=this.getHideRevealTransitionEndProperty("hiddenStyle");b[c]=this.onHideTransitionEnd,this.transition({from:a.visibleStyle,to:a.hiddenStyle,isCleaning:!0,onTransitionEnd:b})},g.prototype.onHideTransitionEnd=function(){this.isHidden&&(this.css({display:"none"}),this.emitEvent("hide"))},g.prototype.destroy=function(){this.css({position:"",left:"",right:"",top:"",bottom:"",transition:"",transform:""})},g}),function(a,b){"use strict";"function"==typeof define&&define.amd?define("outlayer/outlayer",["eventie/eventie","eventEmitter/EventEmitter","get-size/get-size","fizzy-ui-utils/utils","./item"],function(c,d,e,f,g){return b(a,c,d,e,f,g)}):"object"==typeof exports?module.exports=b(a,require("eventie"),require("wolfy87-eventemitter"),require("get-size"),require("fizzy-ui-utils"),require("./item")):a.Outlayer=b(a,a.eventie,a.EventEmitter,a.getSize,a.fizzyUIUtils,a.Outlayer.Item)}(window,function(a,b,c,d,e,f){"use strict";function g(a,b){var c=e.getQueryElement(a);if(!c)return void(h&&h.error("Bad element for "+this.constructor.namespace+": "+(c||a)));this.element=c,i&&(this.$element=i(this.element)),this.options=e.extend({},this.constructor.defaults),this.option(b);var d=++k;this.element.outlayerGUID=d,l[d]=this,this._create(),this.options.isInitLayout&&this.layout()}var h=a.console,i=a.jQuery,j=function(){},k=0,l={};return g.namespace="outlayer",g.Item=f,g.defaults={containerStyle:{position:"relative"},isInitLayout:!0,isOriginLeft:!0,isOriginTop:!0,isResizeBound:!0,isResizingContainer:!0,transitionDuration:"0.4s",hiddenStyle:{opacity:0,transform:"scale(0.001)"},visibleStyle:{opacity:1,transform:"scale(1)"}},e.extend(g.prototype,c.prototype),g.prototype.option=function(a){e.extend(this.options,a)},g.prototype._create=function(){this.reloadItems(),this.stamps=[],this.stamp(this.options.stamp),e.extend(this.element.style,this.options.containerStyle),this.options.isResizeBound&&this.bindResize()},g.prototype.reloadItems=function(){this.items=this._itemize(this.element.children)},g.prototype._itemize=function(a){for(var b=this._filterFindItemElements(a),c=this.constructor.Item,d=[],e=0,f=b.length;f>e;e++){var g=b[e],h=new c(g,this);d.push(h)}return d},g.prototype._filterFindItemElements=function(a){return e.filterFindElements(a,this.options.itemSelector)},g.prototype.getItemElements=function(){for(var a=[],b=0,c=this.items.length;c>b;b++)a.push(this.items[b].element);return a},g.prototype.layout=function(){this._resetLayout(),this._manageStamps();var a=void 0!==this.options.isLayoutInstant?this.options.isLayoutInstant:!this._isLayoutInited;this.layoutItems(this.items,a),this._isLayoutInited=!0},g.prototype._init=g.prototype.layout,g.prototype._resetLayout=function(){this.getSize()},g.prototype.getSize=function(){this.size=d(this.element)},g.prototype._getMeasurement=function(a,b){var c,f=this.options[a];f?("string"==typeof f?c=this.element.querySelector(f):e.isElement(f)&&(c=f),this[a]=c?d(c)[b]:f):this[a]=0},g.prototype.layoutItems=function(a,b){a=this._getItemsForLayout(a),this._layoutItems(a,b),this._postLayout()},g.prototype._getItemsForLayout=function(a){for(var b=[],c=0,d=a.length;d>c;c++){var e=a[c];e.isIgnored||b.push(e)}return b},g.prototype._layoutItems=function(a,b){if(this._emitCompleteOnItems("layout",a),a&&a.length){for(var c=[],d=0,e=a.length;e>d;d++){var f=a[d],g=this._getItemLayoutPosition(f);g.item=f,g.isInstant=b||f.isLayoutInstant,c.push(g)}this._processLayoutQueue(c)}},g.prototype._getItemLayoutPosition=function(){return{x:0,y:0}},g.prototype._processLayoutQueue=function(a){for(var b=0,c=a.length;c>b;b++){var d=a[b];this._positionItem(d.item,d.x,d.y,d.isInstant)}},g.prototype._positionItem=function(a,b,c,d){d?a.goTo(b,c):a.moveTo(b,c)},g.prototype._postLayout=function(){this.resizeContainer()},g.prototype.resizeContainer=function(){if(this.options.isResizingContainer){var a=this._getContainerSize();a&&(this._setContainerMeasure(a.width,!0),this._setContainerMeasure(a.height,!1))}},g.prototype._getContainerSize=j,g.prototype._setContainerMeasure=function(a,b){if(void 0!==a){var c=this.size;c.isBorderBox&&(a+=b?c.paddingLeft+c.paddingRight+c.borderLeftWidth+c.borderRightWidth:c.paddingBottom+c.paddingTop+c.borderTopWidth+c.borderBottomWidth),a=Math.max(a,0),this.element.style[b?"width":"height"]=a+"px"}},g.prototype._emitCompleteOnItems=function(a,b){function c(){e.dispatchEvent(a+"Complete",null,[b])}function d(){g++,g===f&&c()}var e=this,f=b.length;if(!b||!f)return void c();for(var g=0,h=0,i=b.length;i>h;h++){var j=b[h];j.once(a,d)}},g.prototype.dispatchEvent=function(a,b,c){var d=b?[b].concat(c):c;if(this.emitEvent(a,d),i)if(this.$element=this.$element||i(this.element),b){var e=i.Event(b);e.type=a,this.$element.trigger(e,c)}else this.$element.trigger(a,c)},g.prototype.ignore=function(a){var b=this.getItem(a);b&&(b.isIgnored=!0)},g.prototype.unignore=function(a){var b=this.getItem(a);b&&delete b.isIgnored},g.prototype.stamp=function(a){if(a=this._find(a)){this.stamps=this.stamps.concat(a);for(var b=0,c=a.length;c>b;b++){var d=a[b];this.ignore(d)}}},g.prototype.unstamp=function(a){if(a=this._find(a))for(var b=0,c=a.length;c>b;b++){var d=a[b];e.removeFrom(this.stamps,d),this.unignore(d)}},g.prototype._find=function(a){return a?("string"==typeof a&&(a=this.element.querySelectorAll(a)),a=e.makeArray(a)):void 0},g.prototype._manageStamps=function(){if(this.stamps&&this.stamps.length){this._getBoundingRect();for(var a=0,b=this.stamps.length;b>a;a++){var c=this.stamps[a];this._manageStamp(c)}}},g.prototype._getBoundingRect=function(){var a=this.element.getBoundingClientRect(),b=this.size;this._boundingRect={left:a.left+b.paddingLeft+b.borderLeftWidth,top:a.top+b.paddingTop+b.borderTopWidth,right:a.right-(b.paddingRight+b.borderRightWidth),bottom:a.bottom-(b.paddingBottom+b.borderBottomWidth)}},g.prototype._manageStamp=j,g.prototype._getElementOffset=function(a){var b=a.getBoundingClientRect(),c=this._boundingRect,e=d(a),f={left:b.left-c.left-e.marginLeft,top:b.top-c.top-e.marginTop,right:c.right-b.right-e.marginRight,bottom:c.bottom-b.bottom-e.marginBottom};return f},g.prototype.handleEvent=function(a){var b="on"+a.type;this[b]&&this[b](a)},g.prototype.bindResize=function(){this.isResizeBound||(b.bind(a,"resize",this),this.isResizeBound=!0)},g.prototype.unbindResize=function(){this.isResizeBound&&b.unbind(a,"resize",this),this.isResizeBound=!1},g.prototype.onresize=function(){function a(){b.resize(),delete b.resizeTimeout}this.resizeTimeout&&clearTimeout(this.resizeTimeout);var b=this;this.resizeTimeout=setTimeout(a,100)},g.prototype.resize=function(){this.isResizeBound&&this.needsResizeLayout()&&this.layout()},g.prototype.needsResizeLayout=function(){var a=d(this.element),b=this.size&&a;return b&&a.innerWidth!==this.size.innerWidth},g.prototype.addItems=function(a){var b=this._itemize(a);return b.length&&(this.items=this.items.concat(b)),b},g.prototype.appended=function(a){var b=this.addItems(a);b.length&&(this.layoutItems(b,!0),this.reveal(b))},g.prototype.prepended=function(a){var b=this._itemize(a);if(b.length){var c=this.items.slice(0);this.items=b.concat(c),this._resetLayout(),this._manageStamps(),this.layoutItems(b,!0),this.reveal(b),this.layoutItems(c)}},g.prototype.reveal=function(a){this._emitCompleteOnItems("reveal",a);for(var b=a&&a.length,c=0;b&&b>c;c++){var d=a[c];d.reveal()}},g.prototype.hide=function(a){this._emitCompleteOnItems("hide",a);for(var b=a&&a.length,c=0;b&&b>c;c++){var d=a[c];d.hide()}},g.prototype.revealItemElements=function(a){var b=this.getItems(a);this.reveal(b)},g.prototype.hideItemElements=function(a){var b=this.getItems(a);this.hide(b)},g.prototype.getItem=function(a){for(var b=0,c=this.items.length;c>b;b++){var d=this.items[b];if(d.element===a)return d}},g.prototype.getItems=function(a){a=e.makeArray(a);for(var b=[],c=0,d=a.length;d>c;c++){var f=a[c],g=this.getItem(f);g&&b.push(g)}return b},g.prototype.remove=function(a){var b=this.getItems(a);if(this._emitCompleteOnItems("remove",b),b&&b.length)for(var c=0,d=b.length;d>c;c++){var f=b[c];f.remove(),e.removeFrom(this.items,f)}},g.prototype.destroy=function(){var a=this.element.style;a.height="",a.position="",a.width="";for(var b=0,c=this.items.length;c>b;b++){var d=this.items[b];d.destroy()}this.unbindResize();var e=this.element.outlayerGUID;delete l[e],delete this.element.outlayerGUID,i&&i.removeData(this.element,this.constructor.namespace)},g.data=function(a){a=e.getQueryElement(a);var b=a&&a.outlayerGUID;return b&&l[b]},g.create=function(a,b){function c(){g.apply(this,arguments)}return Object.create?c.prototype=Object.create(g.prototype):e.extend(c.prototype,g.prototype),c.prototype.constructor=c,c.defaults=e.extend({},g.defaults),e.extend(c.defaults,b),c.prototype.settings={},c.namespace=a,c.data=g.data,c.Item=function(){f.apply(this,arguments)},c.Item.prototype=new f,e.htmlInit(c,a),i&&i.bridget&&i.bridget(a,c),c},g.Item=f,g}),function(a,b){"use strict";"function"==typeof define&&define.amd?define("isotope/js/item",["outlayer/outlayer"],b):"object"==typeof exports?module.exports=b(require("outlayer")):(a.Isotope=a.Isotope||{},a.Isotope.Item=b(a.Outlayer))}(window,function(a){"use strict";function b(){a.Item.apply(this,arguments)}b.prototype=new a.Item,b.prototype._create=function(){this.id=this.layout.itemGUID++,a.Item.prototype._create.call(this),this.sortData={}},b.prototype.updateSortData=function(){if(!this.isIgnored){this.sortData.id=this.id,this.sortData["original-order"]=this.id,this.sortData.random=Math.random();var a=this.layout.options.getSortData,b=this.layout._sorters;for(var c in a){var d=b[c];this.sortData[c]=d(this.element,this)}}};var c=b.prototype.destroy;return b.prototype.destroy=function(){c.apply(this,arguments),this.css({display:""})},b}),function(a,b){"use strict";"function"==typeof define&&define.amd?define("isotope/js/layout-mode",["get-size/get-size","outlayer/outlayer"],b):"object"==typeof exports?module.exports=b(require("get-size"),require("outlayer")):(a.Isotope=a.Isotope||{},a.Isotope.LayoutMode=b(a.getSize,a.Outlayer))}(window,function(a,b){"use strict";function c(a){this.isotope=a,a&&(this.options=a.options[this.namespace],this.element=a.element,this.items=a.filteredItems,this.size=a.size)}return function(){function a(a){return function(){return b.prototype[a].apply(this.isotope,arguments)}}for(var d=["_resetLayout","_getItemLayoutPosition","_manageStamp","_getContainerSize","_getElementOffset","needsResizeLayout"],e=0,f=d.length;f>e;e++){var g=d[e];c.prototype[g]=a(g)}}(),c.prototype.needsVerticalResizeLayout=function(){var b=a(this.isotope.element),c=this.isotope.size&&b;return c&&b.innerHeight!=this.isotope.size.innerHeight},c.prototype._getMeasurement=function(){this.isotope._getMeasurement.apply(this,arguments)},c.prototype.getColumnWidth=function(){this.getSegmentSize("column","Width")},c.prototype.getRowHeight=function(){this.getSegmentSize("row","Height")},c.prototype.getSegmentSize=function(a,b){var c=a+b,d="outer"+b;if(this._getMeasurement(c,d),!this[c]){var e=this.getFirstItemSize();this[c]=e&&e[d]||this.isotope.size["inner"+b]}},c.prototype.getFirstItemSize=function(){var b=this.isotope.filteredItems[0];return b&&b.element&&a(b.element)},c.prototype.layout=function(){this.isotope.layout.apply(this.isotope,arguments)},c.prototype.getSize=function(){this.isotope.getSize(),this.size=this.isotope.size},c.modes={},c.create=function(a,b){function d(){c.apply(this,arguments)}return d.prototype=new c,b&&(d.options=b),d.prototype.namespace=a,c.modes[a]=d,d},c}),function(a,b){"use strict";"function"==typeof define&&define.amd?define("masonry/masonry",["outlayer/outlayer","get-size/get-size","fizzy-ui-utils/utils"],b):"object"==typeof exports?module.exports=b(require("outlayer"),require("get-size"),require("fizzy-ui-utils")):a.Masonry=b(a.Outlayer,a.getSize,a.fizzyUIUtils)}(window,function(a,b,c){var d=a.create("masonry");return d.prototype._resetLayout=function(){this.getSize(),this._getMeasurement("columnWidth","outerWidth"),this._getMeasurement("gutter","outerWidth"),this.measureColumns();var a=this.cols;for(this.colYs=[];a--;)this.colYs.push(0);this.maxY=0},d.prototype.measureColumns=function(){if(this.getContainerWidth(),!this.columnWidth){var a=this.items[0],c=a&&a.element;this.columnWidth=c&&b(c).outerWidth||this.containerWidth}var d=this.columnWidth+=this.gutter,e=this.containerWidth+this.gutter,f=e/d,g=d-e%d,h=g&&1>g?"round":"floor";f=Math[h](f),this.cols=Math.max(f,1)},d.prototype.getContainerWidth=function(){var a=this.options.isFitWidth?this.element.parentNode:this.element,c=b(a);this.containerWidth=c&&c.innerWidth},d.prototype._getItemLayoutPosition=function(a){a.getSize();var b=a.size.outerWidth%this.columnWidth,d=b&&1>b?"round":"ceil",e=Math[d](a.size.outerWidth/this.columnWidth);e=Math.min(e,this.cols);for(var f=this._getColGroup(e),g=Math.min.apply(Math,f),h=c.indexOf(f,g),i={x:this.columnWidth*h,y:g},j=g+a.size.outerHeight,k=this.cols+1-f.length,l=0;k>l;l++)this.colYs[h+l]=j;return i},d.prototype._getColGroup=function(a){if(2>a)return this.colYs;for(var b=[],c=this.cols+1-a,d=0;c>d;d++){var e=this.colYs.slice(d,d+a);b[d]=Math.max.apply(Math,e)}return b},d.prototype._manageStamp=function(a){var c=b(a),d=this._getElementOffset(a),e=this.options.isOriginLeft?d.left:d.right,f=e+c.outerWidth,g=Math.floor(e/this.columnWidth);g=Math.max(0,g);var h=Math.floor(f/this.columnWidth);h-=f%this.columnWidth?0:1,h=Math.min(this.cols-1,h);for(var i=(this.options.isOriginTop?d.top:d.bottom)+c.outerHeight,j=g;h>=j;j++)this.colYs[j]=Math.max(i,this.colYs[j])},d.prototype._getContainerSize=function(){this.maxY=Math.max.apply(Math,this.colYs);var a={height:this.maxY};return this.options.isFitWidth&&(a.width=this._getContainerFitWidth()),a},d.prototype._getContainerFitWidth=function(){for(var a=0,b=this.cols;--b&&0===this.colYs[b];)a++;return(this.cols-a)*this.columnWidth-this.gutter},d.prototype.needsResizeLayout=function(){var a=this.containerWidth;return this.getContainerWidth(),a!==this.containerWidth},d}),function(a,b){"use strict";"function"==typeof define&&define.amd?define("isotope/js/layout-modes/masonry",["../layout-mode","masonry/masonry"],b):"object"==typeof exports?module.exports=b(require("../layout-mode"),require("masonry-layout")):b(a.Isotope.LayoutMode,a.Masonry)}(window,function(a,b){"use strict";function c(a,b){for(var c in b)a[c]=b[c];return a}var d=a.create("masonry"),e=d.prototype._getElementOffset,f=d.prototype.layout,g=d.prototype._getMeasurement;
c(d.prototype,b.prototype),d.prototype._getElementOffset=e,d.prototype.layout=f,d.prototype._getMeasurement=g;var h=d.prototype.measureColumns;d.prototype.measureColumns=function(){this.items=this.isotope.filteredItems,h.call(this)};var i=d.prototype._manageStamp;return d.prototype._manageStamp=function(){this.options.isOriginLeft=this.isotope.options.isOriginLeft,this.options.isOriginTop=this.isotope.options.isOriginTop,i.apply(this,arguments)},d}),function(a,b){"use strict";"function"==typeof define&&define.amd?define("isotope/js/layout-modes/fit-rows",["../layout-mode"],b):"object"==typeof exports?module.exports=b(require("../layout-mode")):b(a.Isotope.LayoutMode)}(window,function(a){"use strict";var b=a.create("fitRows");return b.prototype._resetLayout=function(){this.x=0,this.y=0,this.maxY=0,this._getMeasurement("gutter","outerWidth")},b.prototype._getItemLayoutPosition=function(a){a.getSize();var b=a.size.outerWidth+this.gutter,c=this.isotope.size.innerWidth+this.gutter;0!==this.x&&b+this.x>c&&(this.x=0,this.y=this.maxY);var d={x:this.x,y:this.y};return this.maxY=Math.max(this.maxY,this.y+a.size.outerHeight),this.x+=b,d},b.prototype._getContainerSize=function(){return{height:this.maxY}},b}),function(a,b){"use strict";"function"==typeof define&&define.amd?define("isotope/js/layout-modes/vertical",["../layout-mode"],b):"object"==typeof exports?module.exports=b(require("../layout-mode")):b(a.Isotope.LayoutMode)}(window,function(a){"use strict";var b=a.create("vertical",{horizontalAlignment:0});return b.prototype._resetLayout=function(){this.y=0},b.prototype._getItemLayoutPosition=function(a){a.getSize();var b=(this.isotope.size.innerWidth-a.size.outerWidth)*this.options.horizontalAlignment,c=this.y;return this.y+=a.size.outerHeight,{x:b,y:c}},b.prototype._getContainerSize=function(){return{height:this.y}},b}),function(a,b){"use strict";"function"==typeof define&&define.amd?define(["outlayer/outlayer","get-size/get-size","matches-selector/matches-selector","fizzy-ui-utils/utils","isotope/js/item","isotope/js/layout-mode","isotope/js/layout-modes/masonry","isotope/js/layout-modes/fit-rows","isotope/js/layout-modes/vertical"],function(c,d,e,f,g,h){return b(a,c,d,e,f,g,h)}):"object"==typeof exports?module.exports=b(a,require("outlayer"),require("get-size"),require("desandro-matches-selector"),require("fizzy-ui-utils"),require("./item"),require("./layout-mode"),require("./layout-modes/masonry"),require("./layout-modes/fit-rows"),require("./layout-modes/vertical")):a.Isotope=b(a,a.Outlayer,a.getSize,a.matchesSelector,a.fizzyUIUtils,a.Isotope.Item,a.Isotope.LayoutMode)}(window,function(a,b,c,d,e,f,g){function h(a,b){return function(c,d){for(var e=0,f=a.length;f>e;e++){var g=a[e],h=c.sortData[g],i=d.sortData[g];if(h>i||i>h){var j=void 0!==b[g]?b[g]:b,k=j?1:-1;return(h>i?1:-1)*k}}return 0}}var i=a.jQuery,j=String.prototype.trim?function(a){return a.trim()}:function(a){return a.replace(/^\s+|\s+$/g,"")},k=document.documentElement,l=k.textContent?function(a){return a.textContent}:function(a){return a.innerText},m=b.create("isotope",{layoutMode:"masonry",isJQueryFiltering:!0,sortAscending:!0});m.Item=f,m.LayoutMode=g,m.prototype._create=function(){this.itemGUID=0,this._sorters={},this._getSorters(),b.prototype._create.call(this),this.modes={},this.filteredItems=this.items,this.sortHistory=["original-order"];for(var a in g.modes)this._initLayoutMode(a)},m.prototype.reloadItems=function(){this.itemGUID=0,b.prototype.reloadItems.call(this)},m.prototype._itemize=function(){for(var a=b.prototype._itemize.apply(this,arguments),c=0,d=a.length;d>c;c++){var e=a[c];e.id=this.itemGUID++}return this._updateItemsSortData(a),a},m.prototype._initLayoutMode=function(a){var b=g.modes[a],c=this.options[a]||{};this.options[a]=b.options?e.extend(b.options,c):c,this.modes[a]=new b(this)},m.prototype.layout=function(){return!this._isLayoutInited&&this.options.isInitLayout?void this.arrange():void this._layout()},m.prototype._layout=function(){var a=this._getIsInstant();this._resetLayout(),this._manageStamps(),this.layoutItems(this.filteredItems,a),this._isLayoutInited=!0},m.prototype.arrange=function(a){function b(){d.reveal(c.needReveal),d.hide(c.needHide)}this.option(a),this._getIsInstant();var c=this._filter(this.items);this.filteredItems=c.matches;var d=this;this._bindArrangeComplete(),this._isInstant?this._noTransition(b):b(),this._sort(),this._layout()},m.prototype._init=m.prototype.arrange,m.prototype._getIsInstant=function(){var a=void 0!==this.options.isLayoutInstant?this.options.isLayoutInstant:!this._isLayoutInited;return this._isInstant=a,a},m.prototype._bindArrangeComplete=function(){function a(){b&&c&&d&&e.dispatchEvent("arrangeComplete",null,[e.filteredItems])}var b,c,d,e=this;this.once("layoutComplete",function(){b=!0,a()}),this.once("hideComplete",function(){c=!0,a()}),this.once("revealComplete",function(){d=!0,a()})},m.prototype._filter=function(a){var b=this.options.filter;b=b||"*";for(var c=[],d=[],e=[],f=this._getFilterTest(b),g=0,h=a.length;h>g;g++){var i=a[g];if(!i.isIgnored){var j=f(i);j&&c.push(i),j&&i.isHidden?d.push(i):j||i.isHidden||e.push(i)}}return{matches:c,needReveal:d,needHide:e}},m.prototype._getFilterTest=function(a){return i&&this.options.isJQueryFiltering?function(b){return i(b.element).is(a)}:"function"==typeof a?function(b){return a(b.element)}:function(b){return d(b.element,a)}},m.prototype.updateSortData=function(a){var b;a?(a=e.makeArray(a),b=this.getItems(a)):b=this.items,this._getSorters(),this._updateItemsSortData(b)},m.prototype._getSorters=function(){var a=this.options.getSortData;for(var b in a){var c=a[b];this._sorters[b]=n(c)}},m.prototype._updateItemsSortData=function(a){for(var b=a&&a.length,c=0;b&&b>c;c++){var d=a[c];d.updateSortData()}};var n=function(){function a(a){if("string"!=typeof a)return a;var c=j(a).split(" "),d=c[0],e=d.match(/^\[(.+)\]$/),f=e&&e[1],g=b(f,d),h=m.sortDataParsers[c[1]];return a=h?function(a){return a&&h(g(a))}:function(a){return a&&g(a)}}function b(a,b){var c;return c=a?function(b){return b.getAttribute(a)}:function(a){var c=a.querySelector(b);return c&&l(c)}}return a}();m.sortDataParsers={parseInt:function(a){return parseInt(a,10)},parseFloat:function(a){return parseFloat(a)}},m.prototype._sort=function(){var a=this.options.sortBy;if(a){var b=[].concat.apply(a,this.sortHistory),c=h(b,this.options.sortAscending);this.filteredItems.sort(c),a!=this.sortHistory[0]&&this.sortHistory.unshift(a)}},m.prototype._mode=function(){var a=this.options.layoutMode,b=this.modes[a];if(!b)throw new Error("No layout mode: "+a);return b.options=this.options[a],b},m.prototype._resetLayout=function(){b.prototype._resetLayout.call(this),this._mode()._resetLayout()},m.prototype._getItemLayoutPosition=function(a){return this._mode()._getItemLayoutPosition(a)},m.prototype._manageStamp=function(a){this._mode()._manageStamp(a)},m.prototype._getContainerSize=function(){return this._mode()._getContainerSize()},m.prototype.needsResizeLayout=function(){return this._mode().needsResizeLayout()},m.prototype.appended=function(a){var b=this.addItems(a);if(b.length){var c=this._filterRevealAdded(b);this.filteredItems=this.filteredItems.concat(c)}},m.prototype.prepended=function(a){var b=this._itemize(a);if(b.length){this._resetLayout(),this._manageStamps();var c=this._filterRevealAdded(b);this.layoutItems(this.filteredItems),this.filteredItems=c.concat(this.filteredItems),this.items=b.concat(this.items)}},m.prototype._filterRevealAdded=function(a){var b=this._filter(a);return this.hide(b.needHide),this.reveal(b.matches),this.layoutItems(b.matches,!0),b.matches},m.prototype.insert=function(a){var b=this.addItems(a);if(b.length){var c,d,e=b.length;for(c=0;e>c;c++)d=b[c],this.element.appendChild(d.element);var f=this._filter(b).matches;for(c=0;e>c;c++)b[c].isLayoutInstant=!0;for(this.arrange(),c=0;e>c;c++)delete b[c].isLayoutInstant;this.reveal(f)}};var o=m.prototype.remove;return m.prototype.remove=function(a){a=e.makeArray(a);var b=this.getItems(a);o.call(this,a);var c=b&&b.length;if(c)for(var d=0;c>d;d++){var f=b[d];e.removeFrom(this.filteredItems,f)}},m.prototype.shuffle=function(){for(var a=0,b=this.items.length;b>a;a++){var c=this.items[a];c.sortData.random=Math.random()}this.options.sortBy="random",this._sort(),this._layout()},m.prototype._noTransition=function(a){var b=this.options.transitionDuration;this.options.transitionDuration=0;var c=a.call(this);return this.options.transitionDuration=b,c},m.prototype.getFilteredItemElements=function(){for(var a=[],b=0,c=this.filteredItems.length;c>b;b++)a.push(this.filteredItems[b].element);return a},m});
